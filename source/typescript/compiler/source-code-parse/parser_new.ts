
import {
    ParserFramework,
    KernelParserCore2,
    fillByteBufferWithUTF8FromString
} from "@candlelib/hydrocarbon";


const {
    token_production,
    init_table,
    KernelStateIterator,
    run,
    compare
} = KernelParserCore2;

const token_sequence_lookup = new Uint8Array([
60,105,109,112,111,114,116,62,47,42,62,62,62,61,61,61,123,33,59,125,40,41,42,
42,61,45,45,58,39,34,33,105,109,112,111,114,116,97,110,116,44,95,36,123,92,47,
63,63,61,124,124,61,38,38,61,94,61,43,43,37,61,126,61,91,93,46,46,46,48,88,35,
96,64,107,101,121,102,114,97,109,101,115,102,117,110,99,116,105,111,110,105,
110,115,116,97,110,99,101,111,102,101,120,116,101,110,100,115,83,67,82,73,80,
84,115,117,112,112,111,114,116,115,106,115,97,115,121,110,99,100,101,98,117,
103,103,101,114,118,111,105,100,116,121,112,101,111,102,110,117,108,108,103,
101,116,99,111,110,116,105,110,117,101,98,114,101,97,107,114,101,116,117,114,
110,119,104,105,108,101,111,110,108,121,108,101,116,109,101,116,97,121,105,101,
108,100,117,114,108,69,70,65,66,68,55,49,50,51,52,53,54,60,99,111,109,109,97,
110,100,47,47,61,62,123,125,42,47,45,61,33,61,61,36,61,63,46,43,61,48,120,64,
115,117,112,112,111,114,116,115,102,105,110,97,108,108,121,101,120,112,111,114,
116,83,84,89,76,69,115,99,114,105,112,116,97,119,97,105,116,100,101,102,97,117,
108,116,118,97,114,116,97,114,103,101,116,110,101,119,99,111,110,115,116,119,
105,116,104,60,107,101,121,103,101,110,60,115,111,117,114,99,101,60,83,84,89,
76,69,60,115,116,121,108,101,60,105,110,112,117,116,60,101,109,98,101,100,60,
112,97,114,97,109,60,116,114,97,99,107,60,97,114,101,97,60,98,97,115,101,60,
108,105,110,107,60,109,101,116,97,60,99,111,108,60,105,109,103,60,119,98,114,
60,98,114,60,104,114,60,60,61,60,33,60,47,62,48,79,48,111,48,66,48,98,64,105,
109,112,111,114,116,64,109,101,100,105,97,102,97,108,115,101,102,114,111,109,
102,111,114,105,102,101,108,115,101,115,119,105,116,99,104,115,116,97,116,105,
99,115,117,112,101,114,115,101,116,100,101,108,101,116,101,100,111,116,104,114,
111,119,116,104,105,115,116,114,117,101,116,114,121,116,111,110,111,116,99,97,
116,99,104,99,108,97,115,115,99,97,115,101
])

const token_lookup = new Uint32Array([
537087360,768,0,0,0,0,0,384,0,0,0,0,0,0,3456,0,0,0,0,0,0,4992,2147450962,0,0,
0,0,0,2432,0,0,0,0,0,0,386,0,0,0,0,0,0,16768,0,0,0,0,0,0,33152,0,0,0,0,0,0,65920,
0,0,0,0,0,0,1180032,0,0,0,0,0,0,131456,0,0,0,0,0,0,786816,0,0,0,0,0,0,524672,
0,0,0,0,0,0,1048960,0,0,0,0,0,0,2097536,0,0,0,0,0,0,4194688,0,0,0,0,0,0,8388992,
0,0,0,0,0,0,17301888,0,0,0,0,0,0,67109292,0,0,0,0,0,268435456,128,0,0,0,0,0,
268435456,67109248,0,0,0,0,0,268435456,384,0,0,0,0,0,268435456,896,0,0,0,0,0,
0,268435840,0,0,0,0,0,0,268436352,2147450962,0,0,0,0,0,896,2147450962,0,0,0,
0,0,1610613120,0,0,0,0,0,0,1073742208,0,0,0,0,0,0,1073742252,0,0,0,0,0,0,536871296,
0,0,0,0,0,0,537084288,768,0,0,0,0,0,537087360,776,0,0,0,0,0,537120128,776,0,
0,0,0,0,538050976,1536,0,0,0,0,0,536871328,1024,0,0,0,0,0,384,1024,0,0,0,0,0,
416,0,0,0,0,0,0,536871296,768,0,0,0,0,0,384,256,0,0,0,0,0,536870912,0,0,0,0,
0,0,384,512,0,0,0,0,0,384,2147450962,0,0,0,0,0,384,2,0,0,0,0,0,537086336,776,
0,0,0,0,0,2432,8,0,0,0,0,0,269615532,2147450966,0,0,0,0,0,384,4,0,0,0,0,0,384,
16,0,0,0,0,0,537086336,768,0,0,0,0,0,384,5,8,33554592,131072,369168384,268435456,
384,160,0,0,0,0,0,384,64,0,0,0,0,0,3227665824,2147453778,536871041,2150620991,
138952721,0,0,384,0,128,0,0,0,0,392,0,0,0,0,0,0,388,0,0,0,0,0,0,128,0,0,0,0,
0,0,256,0,0,0,0,0,0,428,0,0,0,0,0,0,384,2147450880,0,0,0,0,0,384,32768,0,0,0,
0,0,384,65536,0,0,0,0,0,384,131072,0,0,0,0,0,384,262144,0,0,0,0,0,384,524288,
0,0,0,0,0,384,1048576,0,0,0,0,0,384,2097152,0,0,0,0,0,384,4194304,0,0,0,0,0,
384,8388608,0,0,0,0,0,384,16777216,0,0,0,0,0,384,33554432,0,0,0,0,0,384,67108864,
0,0,0,0,0,384,134217728,0,0,0,0,0,384,268435456,0,0,0,0,0,384,536870912,0,0,
0,0,0,384,1073741824,0,0,0,0,0,269615532,2147450962,0,0,0,0,0,536871296,28672,
0,0,0,0,0,3227927968,2147453782,536873089,4230995775,138956255,0,0,384,20480,
0,0,0,0,0,384,8192,0,0,0,0,0,2,0,0,0,0,0,0,3496429472,2147453778,536873089,4230995775,
138956255,0,0,384,0,128,256,0,0,0,4343200,2147451730,129,2150621088,4734977,
0,0,4343200,2147451730,129,2150620960,4734977,0,0,384,0,128,128,0,0,0,16768,
0,128,0,0,0,0,4325760,768,137,128,0,0,0,4325760,768,137,0,0,0,0,384,0,160,0,
0,0,0,262528,0,128,0,0,0,0,386,0,128,0,0,0,0,4194688,0,128,0,0,0,0,8388992,0,
128,0,0,0,0,384,0,129,0,0,0,0,3225718146,2147483651,4294963336,176,4127719424,
4095,0,3225718146,2147483650,4294963337,176,4127719424,4095,0,384,1,128,0,0,
0,0,384,0,128,0,524288,0,0,384,0,128,0,3670016,0,0,384,0,128,0,2621440,0,0,3496282016,
2147453778,536873088,2083511871,138415582,0,0,3233957280,2147453778,536871041,
2151669567,138952721,0,0,131456,0,129,2097184,0,0,0,384,0,129,1048576,0,0,0,
131456,0,128,3145760,0,0,0,3233957280,2147453778,536871041,2150620991,138952721,
0,0,8388992,2147483648,128,0,0,0,0,384,2147483648,128,0,0,0,0,8388992,0,128,
1048576,0,0,0,416,0,128,0,0,0,0,4194688,0,128,160,0,0,0,384,0,128,64,0,0,0,9175426,
2147483649,4224,64,67108864,0,0,3230567810,2147483651,4294963336,80,3858759712,
4095,0,3234762114,2147483651,4294963336,240,3859284000,4095,0,3234762114,2147483651,
4294963336,240,4127719456,4095,0,384,0,128,0,268435456,0,0,262528,2147483648,
128,0,0,0,0,3234762114,2147483651,4294963336,8432,3859284000,4095,48,416,0,129,
0,0,0,0,416,0,128,128,0,0,0,3234762114,2147483651,4294963336,112,3859284000,
4095,48,3234762114,2147483651,4294963336,8304,3859284000,4095,48,3234762114,
2147483651,4294963336,240,3859284000,4095,48,3230436738,2147483651,4294963336,
80,3825205248,4095,0,3225568672,2147453778,536871041,2150620991,138952721,0,
0,2156662146,2147483651,4294963336,64,67108864,0,0,2156662146,2147483651,2147479688,
64,67108864,0,0,2156661122,2147483651,1073737856,64,67108864,0,0,9177474,2147483651,
536866944,64,67108864,0,0,9177474,2147483651,67104896,64,67108864,0,0,9175426,
2147483649,4190336,64,67108864,0,0,9175426,2147483649,258176,64,67108864,0,0,
9175426,2147483649,127104,64,67108864,0,0,9175426,2147483649,61568,64,67108864,
0,0,9175426,2147483649,28800,64,0,0,0,9175426,2147483649,12416,64,0,0,0,9175426,
2147483649,4224,64,0,0,0,3227993506,2147453778,536873089,4230995775,138956255,
0,0,131456,0,137,0,0,0,0,384,2147483648,160,0,0,0,0,131456,0,136,0,0,0,0,384,
0,136,0,0,0,0,384,0,144,0,0,0,0,131456,0,128,0,0,0,0,524672,2147483648,129,0,
0,0,0,524672,2147483648,128,0,0,0,0,524672,0,128,0,0,0,0,524672,2147483648,176,
0,0,0,0,384,768,128,0,0,0,0,384,512,128,0,0,0,0,0,512,64,0,0,0,0,384,256,128,
0,0,0,0,0,256,256,0,0,0,0,384,0,640,0,0,0,0,428,0,128,0,0,0,0,0,0,128,0,0,0,
0,3227846048,2147453778,536873088,2083511871,138415582,0,0,384,0,176,0,0,0,0,
384,0,152,0,0,0,0,295296,2147483648,128,0,0,0,0,33152,0,128,0,0,0,0,131456,0,
3208,2147483648,16577,0,0,384,0,3208,2147483648,16577,0,0,4194688,0,128,128,
0,0,0,4211072,0,128,0,0,0,0,3225552288,2147453778,536871041,2150620735,4210705,
0,0,3230403970,2147483651,4294963336,80,67108864,0,0,3225552288,2147453778,536871041,
2150620735,138428433,0,0,4194688,0,129,0,1,0,0,384,0,128,0,1,0,0,4194688,0,137,
0,0,0,0,4194688,0,129,0,0,0,0,8520064,0,129,3145760,0,0,0,3228452256,2147453778,
536873089,4264550207,138956255,0,0,9175426,2147483649,61568,64,0,0,0,3227993504,
2147453778,536873089,4230995775,138956255,0,0,3225568672,2147453778,536871041,
2150620991,4734993,0,0,1078085024,2147451730,129,2150620976,4734977,0,0,1078068640,
2147451730,129,2150620720,4210689,0,0,4343200,2147451730,129,2150620704,4210689,
0,0,384,0,128,3072,0,0,0,384,0,128,1024,0,0,0,384,0,128,2048,0,0,0,4326816,2147451730,
129,2150620704,540673,0,0,4326816,2147451730,129,2150620704,16385,0,0,4326816,
2147451730,129,2150620704,4210689,0,0,3234762114,2147483651,4294963338,8432,
3859284000,4095,48,384,2147483648,128,64,0,0,0,384,0,128,196608,0,0,0,384,0,
128,65536,0,0,0,3234762114,2147483651,4294963338,240,3859284000,4095,0,384,0,
128,131072,0,0,0,384,0,128,786432,0,0,0,384,0,128,262144,0,0,0,384,0,128,524288,
0,0,0,131456,0,128,2097152,0,0,0,384,0,128,2097152,0,0,0,384,0,128,49152,0,0,
0,384,0,128,16384,0,0,0,384,0,128,32768,0,0,0,3225568672,4294937426,536871041,
2151669631,138952721,0,0,3225568672,4294937426,536871041,2151669567,138952721,
0,0,3225568672,2147453778,536871041,2151669631,138952721,0,0,416,768,129,1032224,
0,0,0,416,768,137,31440928,0,0,0,384,0,128,4194304,0,0,0,4751776,2147484417,
137,1032224,0,0,0,384,0,128,8388608,0,0,0,4751776,2147484417,129,1032224,0,0,
0,384,0,128,16777216,0,0,0,416,768,137,2080800,0,0,0,4194688,1,128,0,0,0,0,5013888,
2147483649,128,0,0,0,0,384,0,128,32,0,0,0,131456,0,129,3145760,0,0,0,384,0,128,
1048576,0,0,0,524704,768,137,31440928,0,0,0,131456,0,128,2097184,0,0,0,416,768,
129,2080800,0,0,0,524672,0,128,1048576,0,0,0,8946048,2147483648,128,64,0,0,0,
131456,2147483648,129,3145824,0,0,0,384,0,128,1048640,0,0,0,131456,2147483648,
129,2097184,0,0,0,384,2147483648,128,1048640,0,0,0,131456,0,129,3145824,0,0,
0,557440,2147483649,128,0,0,0,0,557440,2147483648,128,0,0,0,0,416,768,128,1032224,
0,0,0,524704,768,129,2080800,0,0,0,416,768,137,30392352,0,0,0,4194720,768,137,
1032224,0,0,0,416,768,137,1032224,0,0,0,4194720,768,129,1032224,0,0,0,3225552288,
4294937426,536871041,2151669311,138428433,0,0,3225568672,2147453778,536871041,
2151669567,138952721,0,0,3227927968,2147453778,536873089,4264550207,138956255,
0,0,3227780512,2147453778,536873088,2117066303,138415582,0,0,3228452256,2147453778,
536873089,4230995775,138956255,0,0,3227927968,2147453778,536873089,4230995775,
138956255,0,0,3227780512,2147453778,536873088,2083511871,138415582,0,0,262528,
0,129,0,0,0,0,3228452256,2147453782,536874113,4230995775,138956767,0,0,3227927968,
2147453782,536874113,4230995775,138956767,0,0,3225830816,2147453778,536871041,
2150620991,138952721,0,0,256,0,128,0,0,0,0,384,0,128,2147483648,1,0,0,384,0,
128,2147483648,0,0,0,384,0,137,0,0,0,0,3245295010,2147453782,536874113,4230995775,
138956767,0,0,3227927968,2147453778,536873089,4230995775,138956063,0,0,3227780512,
2147453778,536873088,4230995519,138431775,0,0,384,0,128,0,270,0,0,384,0,128,
0,192,0,0,384,0,128,0,64,0,0,384,0,128,0,128,0,0,384,0,128,0,256,0,0,524672,
0,1152,0,512,0,0,524672,0,128,0,512,0,0,3228452256,2147453778,536874113,4230995775,
138956767,0,0,3228452256,2147453778,536873089,4230995775,138956767,0,0,384,0,
128,2147483648,16577,0,0,384,0,128,0,12288,0,0,3245295010,2147453782,536874113,
4230995775,138964959,0,0,384,0,128,0,16384,0,0,131456,0,128,0,32768,0,0,786848,
768,137,30392352,196608,0,0,262560,768,137,30392352,196608,0,0,4489632,768,137,
1032224,0,0,0,4489632,768,129,1032224,0,0,0,262560,768,137,1032224,196608,0,
0,4489600,0,128,0,0,0,0,9175424,2147483649,128,64,0,0,0,806571436,2147451742,
0,0,3670016,0,0,8388992,1,128,64,0,0,0,131456,0,129,0,32768,0,0,1452,0,640,0,
0,0,16777216,1408,0,128,0,0,0,0,3234762114,2147483651,4294963336,240,3859546144,
4095,0,384,0,128,0,2097152,0,0,384,0,128,0,1572864,0,0,0,0,0,0,3145728,0,0,0,
0,0,0,3670016,0,0,524672,0,128,0,524288,0,0,524672,0,128,0,2097152,0,0,524288,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1572864,0,0,384,0,128,160,0,0,0,16768,0,128,
256,0,0,0,384,0,128,0,8388608,0,0,384,0,128,0,16777216,0,0,3233957280,4294937426,
536871041,2151669567,138952721,0,0,4194688,0,129,32,524288,0,0,3225552288,2147453778,
536871041,2151669311,138428433,0,0,3225568672,2147453778,536871049,2150620991,
138952721,0,0,384,0,128,0,3758096384,4095,0,384,0,128,0,536870912,0,0,384,0,
128,0,1073741824,0,0,384,0,128,0,2147483648,0,0,384,0,128,0,0,1,0,384,0,128,
0,0,2,0,384,0,128,0,0,4,0,384,0,128,0,0,8,0,384,0,128,0,0,16,0,384,0,128,0,0,
32,0,384,0,128,0,0,64,0,384,0,128,0,0,128,0,384,0,128,0,0,256,0,384,0,128,0,
0,512,0,384,0,128,0,0,1024,0,384,0,128,0,0,2048,0,384,1,8,33554592,131072,369168384,
268435456,128,1,0,0,0,0,268435456,384,1,0,0,0,65536,268435456,384,1,0,0,0,0,
268435456,384,0,0,32,0,0,268435456,384,0,8,33554592,131072,369168384,268435456,
8522114,2147483649,536911880,168,131072,65536,268435456,384,0,32768,0,0,0,268435456,
8554882,2147483649,536911880,232,537001984,458816,268435456,131456,2147483648,
0,0,0,0,268435456,524672,0,0,33554432,0,2097152,268435456,524672,0,0,0,0,0,268435456,
8522114,2147483649,536879112,168,131072,65536,268435456,130,0,0,0,0,0,0,384,
0,0,0,0,65536,0,8522114,2147483648,536879112,168,131072,65536,268435456,386,
5,8,160,131072,369164288,268435456,386,5,8,160,131072,369168384,268435456,386,
0,0,0,0,0,268435456,384,0,8,0,0,65536,268435456,384,0,0,0,0,65536,268435456,
384,0,0,0,0,4096,268435456,384,768,0,0,0,8192,268435456,4456832,0,0,0,0,16859136,
301989888,4456832,0,0,0,0,16859136,268435456,384,768,0,0,0,0,268435456,384,512,
0,0,0,0,268435456,428,512,0,0,0,0,268435456,384,256,0,0,0,0,268435456,428,256,
0,0,0,0,268435456,4194688,0,0,0,0,0,268435456,8388992,0,0,0,0,0,268435456,4194688,
0,0,0,0,114688,268435456,384,0,0,0,0,16384,268435456,8520064,0,0,0,0,0,469762048,
4194688,0,0,0,0,98304,268435456,4194688,0,0,0,0,2211840,268435456,384,0,0,0,
0,2097152,268435456,384,0,0,0,0,98304,268435456,4194688,0,0,0,0,32768,268435456,
384,0,0,0,0,32768,268435456,384,1,8,160,131072,65536,268435456,384,0,8,160,131072,
65536,268435456,384,0,8,0,0,0,268435456,384,1,0,160,131072,0,268435456,130,0,
0,0,0,0,268435456,384,0,0,0,131072,0,268435456,128,0,0,0,0,65536,268435456,384,
0,0,128,0,0,268435456,33152,0,0,64,536870912,393280,268435456,384,768,0,0,0,
65536,268435456,384,0,0,64,0,1572864,268435456,384,0,0,64,0,0,268435456,33152,
0,0,0,536870912,393280,268435456,384,0,0,0,0,131072,268435456,384,0,0,0,0,64,
268435456,384,0,0,0,0,262144,268435456,384,0,0,0,536870912,0,268435456,33152,
0,0,0,0,0,268435456,384,0,0,0,0,1572864,268435456,384,0,0,0,0,524288,268435456,
384,0,0,0,0,1048576,268435456,12716418,2147483649,536879112,168,131072,65536,
268435456,428,0,0,0,0,0,268435456,392,0,0,0,0,0,268435456,388,0,0,0,0,0,268435456,
416,0,0,0,0,0,268435456,8389036,0,0,0,0,0,268435456,2432,0,536879104,8,0,0,268435456,
2432,0,0,0,0,0,268435456,384,0,536870912,0,0,0,268435456,384,0,0,8,0,0,268435456,
384,0,8192,0,0,0,268435456,384,0,0,0,0,4194304,268435456,9175424,0,0,0,0,8388608,
268435456,8389004,0,0,0,0,0,268435456,4194688,0,0,0,0,16859136,268435456,4194720,
0,0,3072,0,81920,268435456,12618112,3,12582912,0,0,0,268435456,4587904,2147483648,
0,0,0,0,335544320,393600,2147483648,0,0,0,65536,335544320,384,0,0,0,0,16793600,
268435456,393600,2147483648,0,0,0,0,335544320,4194688,0,0,0,0,65536,268435456,
8782208,2147483648,0,0,0,0,469762048,4194688,0,0,0,0,81920,268435456,384,0,0,
0,0,81920,268435456,8782208,2147483648,0,0,0,0,335544320,4194720,0,0,3072,0,
0,268435456,416,768,137,30392352,196608,0,0,416,768,137,1032224,196608,0,0,131488,
768,137,30392352,131072,0,0,295296,0,128,0,0,0,0,131456,0,136,0,131072,0,0,416,
0,0,3072,0,65536,268435456,35200,3,12582912,0,0,0,268435456,35200,2,12582912,
0,0,0,268435456,416,0,0,3072,0,0,268435456,416,0,0,0,0,65536,268435456,8424840,
2,12582912,0,0,0,268435456,424,0,0,0,0,0,268435456,1440,0,0,0,0,0,268435456,
1408,0,0,0,0,0,268435456,384,0,0,3072,0,0,268435456,384,0,0,1024,0,0,268435456,
384,0,0,2048,0,0,268435456,8391040,0,8388608,0,0,0,268435456,2432,0,8388608,
0,0,0,268435456,8388992,0,0,0,0,65536,268435456,8388992,2,4194304,0,0,0,268435456,
384,2,4194304,0,0,0,268435456,8423808,2,12582912,0,0,0,268435456,384,2,0,0,0,
0,268435456,384,0,4194304,0,0,0,268435456,384,0,8388608,0,0,0,268435456,384,
0,0,33554432,0,2097152,268435456,786816,0,0,0,0,0,268435456,786816,0,0,0,0,2097152,
268435456,384,0,0,0,0,369098752,268435456,262530,5,8,160,131072,369164288,268435456,
384,0,0,0,0,33554432,268435456,131456,0,0,0,0,0,268435456,524672,1,8,160,131072,
65536,268435456,4325760,2147483648,0,0,0,0,335544320,131456,2147483648,0,0,0,
65536,335544320,384,0,0,0,0,67108864,268435456,392,768,0,0,0,0,268435456,416,
0,32,0,0,134217728,268435456,384,0,1073741824,0,0,0,268435456,384,0,32,0,0,0,
268435456,384,0,0,0,0,134217728,268435456,384,0,0,0,0,268435456,268435456,1180032,
512,0,0,0,0,0,524672,0,129,0,0,0,0,524672,2147483648,0,0,0,0,0,384,0,0,0,0,0,
48,384,0,0,0,0,0,16,2147484064,0,128,0,0,0,0,384,0,0,0,0,0,32,416,0,0,0,0,0,
65520,384,0,0,0,0,0,64,384,0,0,0,0,0,128,384,0,0,0,0,0,256,384,0,0,0,0,0,512,
384,0,0,0,0,0,1024,384,0,0,0,0,0,2048,384,0,0,0,0,0,4096,384,0,0,0,0,0,8192,
384,0,0,0,0,0,16384,384,0,0,0,0,0,32768,3234762146,2147483651,4294963338,240,
3859284000,4095,65520,384,0,0,0,0,0,16711680,384,0,0,0,0,0,65536,384,0,0,0,0,
0,131072,384,0,0,0,0,0,262144,384,0,0,0,0,0,524288,384,0,0,0,0,0,1048576,384,
0,0,0,0,0,2097152,384,0,0,0,0,0,4194304,384,0,0,0,0,0,8388608,3234762114,2147483651,
4294963338,240,3859284000,4095,16711680,384,0,0,0,0,0,393216,3234762114,2147483651,
4294963338,240,3859284000,4095,393216,428,0,640,0,0,0,16777216,384,0,0,0,0,0,
16777216,262528,0,0,0,0,0,0,393600,2147483648,0,0,0,0,268435456,428,768,0,0,
0,0,268435456,384,0,0,0,0,0,201326592,384,1,8,160,131072,369164288,268435456,
384,0,8,160,131072,369164288,268435456,396,0,0,0,0,0,0,2432,1,536879112,168,
131072,65536,268435456,2432,0,536879112,168,131072,65536,268435456,8782208,2147483648,
0,0,0,0,402653184,384,0,0,33554432,0,0,0,524704,0,32,0,0,134217728,268435456,
384,0,0,0,0,0,67108864,384,0,0,0,0,0,134217728,8,0,0,0,0,0,0,2147483688,1,0,
0,0,0,0,0,768,0,0,0,0,0,0,512,0,0,0,0,0,4194732,2560,0,0,0,0,0,0,256,0,0,0,0,
0,4194732,2304,0,0,0,0,0,4194732,2048,0,0,0,0,0,4,0,0,0,0,0,0,32,0,0,0,0,0,0,
0,2048,0,0,0,0,0,4194304,0,0,0,0,0,0,4194732,2816,0,0,0,0,0,8,0,6,0,0,0,0,0,
0,2,0,0,0,0,0,0,4,0,0,0,0,40,0,6,0,0,0,0,428,768,512,0,0,0,0,0,0,512,0,0,0,0,
428,256,512,0,0,0,0,167772160,0,0,0,0,0,0,33554432,0,0,0,0,0,0,67109292,0,0,
0,0,0,0,67108864,0,0,0,0,0,0,134217728,0,0,0,0,0,0,430,0,0,0,0,0,0,300,0,0,0,
0,0,0,428,512,512,0,0,0,0,428,0,512,0,0,0,0,428,0,512,0,2621440,0,0,2147483656,
0,0,0,0,0,0,2147483690,0,2,0,0,0,0,2147483648,0,0,0,0,0,0,4981164,0,0,0,0,8388608,
0,8388608,0,0,0,0,0,0,13369772,0,0,0,0,8388608,0,2,0,0,0,0,3221225472,0,2147483680,
0,0,0,0,0,0,0,0,0,32768,0,0,0,2,0,0,128,0,3221225472,0,0,0,0,524288,0,0,0,32,
0,0,0,0,0,65520,0,0,0,0,0,0,64,0,0,0,0,0,0,128,0,0,0,0,0,0,256,0,0,0,0,0,0,512,
0,0,0,0,0,0,1024,0,0,0,0,0,0,32,0,0,0,0,0,0,2048,0,0,0,0,0,0,4096,0,0,0,0,0,
0,8192,0,0,0,0,0,0,16384,0,0,0,0,0,0,32768,0,0,0,0,0,0,16,34,0,0,0,0,0,65520,
0,0,0,0,0,0,393216,0,0,0,0,0,0,262144,0,0,0,0,0,0,131072,2,0,0,0,0,0,393216,
0,0,0,196608,0,0,0,0,0,0,65536,0,0,0,0,0,0,131072,0,0,0,0,0,0,0,0,0,16711680,
0,0,0,0,0,0,65536,0,0,0,0,0,0,524288,0,0,0,0,0,0,1048576,0,0,0,0,0,0,2097152,
0,0,0,0,0,0,4194304,0,0,0,0,0,0,8388608,2,0,0,0,0,0,16711680,384,0,128,0,14,
0,0,384,0,128,0,2,0,0,384,0,128,0,4,0,0,384,0,128,0,8,0,0,4194688,0,128,0,16,
0,0,3225830816,2147453778,536873089,2150620991,138952913,0,0,384,0,2176,0,0,
0,0,384,0,33554560,0,32,0,0,3221488000,2048,536871040,31,134217744,0,0,4343200,
2147451730,2177,2150620960,4735169,0,0,384,0,128,0,32,0,0,3253718434,4294937431,
4294966409,4230995967,3997716479,4095,0,3762439584,2147453778,536871041,2150620991,
4734993,0,0,27380128,4294937429,3758095497,4230995919,3997192191,4095,0,524290,
0,0,0,0,0,0,786432,0,0,0,0,0,0
]);

const states_buffer = new Uint32Array([
0,4026531840,2164260864,4026531841,2852126729,1,196616,2164260880,2172649489,
2147495946,2147489803,2147483688,2147483677,2147483662,2147483689,603979802,
603980417,0,268435456,603979886,0,268435456,603979918,0,4026531840,0,2583691274,
131073,131075,4026531840,0,0,268435456,603979846,0,268435456,603979814,0,2852126727,
196609,262165,2147483696,2210398241,2147483698,2147483699,2202009636,2147483701,
2197815334,2147483703,2147483704,2189426697,2147483706,2147483707,2181044236,
2147483709,2147483710,2147483695,2147483697,2147483700,2147483702,2147483705,
2147483708,1073742616,805306371,0,268435456,1073742624,805306371,0,4026531840,
2852192259,262145,1,2147483659,268435456,603979854,0,4026531840,2852126727,196609,
262165,2147491888,2210406433,2147491890,2147491891,2202017828,2147491893,2197823526,
2147491895,2147491896,2189434889,2147491898,2147491899,2181038092,2147491901,
2147491902,2147491887,2147491889,2147491892,2147491894,2147491897,2147491900,
268435456,1073742632,805306371,0,1073742624,805306371,0,4026531840,2852126727,
196609,262165,2147491888,2210406433,2147491890,2147491891,2202017828,2147491893,
2197823526,2147491895,2147491896,2189434889,2147491898,2147491899,2181038092,
2147491901,2147491902,2147491887,2147491889,2147491892,2147491894,2147491897,
2147491900,268435456,1073742872,805306371,0,1073742864,805306371,0,4026531840,
2852192259,262145,1,2147483659,268435456,603979926,0,4026531840,2852126727,196609,
262165,2147491888,2210406433,2147491890,2147491891,2202017828,2147491893,2197823526,
2147491895,2147491896,2189434889,2147491898,2147491899,2181038092,2147491901,
2147491902,2147491887,2147491889,2147491892,2147491894,2147491897,2147491900,
268435456,1073742880,805306371,0,1073742872,805306371,0,4026531840,1073742352,
805306370,0,2852192260,393217,1,2147483662,2147483653,268435456,603979971,0,
4026531840,0,2852192260,458753,1,2147483663,268435456,603979981,603984341,0,
4026531840,0,1073743128,805306373,0,2852192260,524289,1,2147483664,2147483654,
268435456,603979994,0,4026531840,0,2852192260,458753,1,2147483663,268435456,
603980004,603984341,0,4026531840,0,1073743384,805306374,0,2852126726,589825,
65538,2147489812,2147483665,2147483655,603980019,0,2147483655,603980053,0,4026531840,
2852192260,655361,1,2147483665,268435456,603980029,603999593,0,4026531840,0,
2852126728,720897,65538,2147483666,2147491859,268435456,603980043,603999593,
0,268435456,1073743896,805306375,0,4026531840,2852192260,786433,1,2147483667,
268435456,1073743656,805306375,0,4026531840,0,2852192260,851969,1,2147483668,
268435456,603980029,603999593,0,4026531840,0,2852192260,786433,1,2147483667,
268435456,1073741848,805306376,0,4026531840,0,2852192260,917505,1,2147483669,
2147483657,268435456,603980083,0,4026531840,0,2852192260,983041,1,2147483670,
268435456,603980093,603999593,0,4026531840,0,2852192260,1048577,1,2147483671,
268435456,603980103,603980682,0,4026531840,0,2852126727,1114113,65538,2147483672,
2147491859,268435456,603980117,603980073,0,1073744424,805306377,0,4026531840,
0,1073744184,805306377,0,2852126727,1179667,131077,2147483656,2147483653,2155872258,
2147483651,2147489818,603980136,604006898,0,268435456,1073741840,805306379,0,
4026531840,2852192260,1310741,1,2147483674,268435456,1073741848,805306379,0,
4026531840,0,2852192260,1441793,1,2147483657,2147483651,268435456,603979780,
0,4026531840,0,2852192260,1507329,1,2147483676,2147483662,268435456,603980243,
0,4026531840,0,2852126728,1572865,262165,2147483696,2210398241,2147483698,2147483699,
2202009636,2147483701,2197815334,2147483703,2147483704,2189426697,2147483706,
2147483707,2181044252,2147483709,2147483710,2147483695,2147483697,2147483700,
2147483702,2147483705,2147483708,603980200,603980363,0,2147483662,268435456,
603980203,603980243,0,4026531840,0,1073744656,805306381,0,1073742352,805306653,
0,2852126730,1638401,262164,2147483696,2210398241,2147483698,2147483699,2202009636,
2147483701,2197815334,2147483703,2147483704,2189436937,2147483706,2147483707,
2147483708,2147483709,2147483710,2147483695,2147483697,2147483700,2147483702,
2147483705,2147483665,603980240,603980351,603980682,0,2147483651,268435456,603979958,
603979780,0,4026531840,1073746192,805306384,0,2583691293,1703937,131075,4026531840,
0,0,268435456,603980255,0,268435456,603980307,0,2852192259,1769473,1,2147483678,
268435456,603980263,0,4026531840,2852126726,1835008,131078,2147483656,2147483653,
2160066562,2151677955,2147483655,2147489822,603980279,604006990,0,268435456,
603980297,0,4026531840,2852192259,1769473,1,2147483678,268435456,603980287,0,
4026531840,2852192260,262145,1,2147483659,268435456,1073745200,805306382,0,4026531840,
0,2852192260,262145,1,2147483659,268435456,1073745704,805306382,0,4026531840,
0,2852126726,1835008,131078,2147483656,2147483653,2160066562,2151677955,2147483655,
2147489822,603980323,604006990,0,268435456,603980341,0,4026531840,2852192259,
1769473,1,2147483678,268435456,603980331,0,4026531840,2852192260,262145,1,2147483659,
268435456,1073745448,805306382,0,4026531840,0,2852192260,262145,1,2147483659,
268435456,1073745952,805306382,0,4026531840,0,805306385,0,2852192260,1900545,
1,2147483677,2147483667,268435456,805306387,0,4026531840,0,2852126730,1638401,
262164,2147483696,2210398241,2147483698,2147483699,2202009636,2147483701,2197815334,
2147483703,2147483704,2189438985,2147483706,2147483707,2147483708,2147483709,
2147483710,2147483695,2147483697,2147483700,2147483702,2147483705,2147483664,
2147483665,603980397,603980351,603980682,0,2147483664,603980397,603980146,0,
4026531840,2768240651,0,131076,2147504144,2147483665,2147497986,2147489795,805306384,
3221225481,0,1073742088,805306370,3221225485,0,603980397,603980206,0,0,4026531840,
0,2852126724,1966081,131078,2164260880,2155872273,2147483662,2155872285,2147483688,
2147483689,2147483668,603980448,603980468,0,4026531840,2852126723,2031617,131078,
2164260880,2155872273,2147483662,2155872285,2147483688,2147483689,603980445,
603980468,0,4026531840,0,1073742352,805306388,0,3087008430,2768240647,0,65538,
2147491860,2147483669,1073742088,805306388,3221225481,0,603980448,603980431,
0,4026531840,2499805204,0,65537,4026531840,0,0,2852126735,1966081,131078,2164277264,
2155896849,2147491854,2155872285,2147483688,2147483689,2147483669,603980494,
603980606,0,2147483669,603980542,603979961,0,2147483669,603980542,603979984,
0,2147483669,603980544,0,4026531840,0,2852126726,2097153,196618,2181044240,2181044241,
2147489802,2151684107,2147489827,2147489821,2147489806,2147483663,2147489832,
2147489833,268435456,603980514,0,1073749256,805306389,0,4026531840,2852126731,
2162689,131078,2147489812,2155872261,2147483690,2151684113,2151677981,2147495977,
603980536,603980564,0,603980539,603980007,0,2147483935,268435456,603980539,604007100,
0,4026531840,0,1073749016,805306389,0,1073749528,805306389,0,805306389,0,2852192260,
655361,1,2147483665,268435456,603980554,603989625,0,4026531840,0,2852192260,
786433,1,2147483667,268435456,1073749784,805306389,0,4026531840,0,2852126729,
2228225,65539,2147483690,2151690245,2147489821,2147483671,603980580,0,2147483671,
603980590,0,2147483671,603980598,0,4026531840,2852192260,2293761,1,2147483690,
268435456,1073750280,805306391,0,4026531840,0,2852192259,1900545,1,2147483677,
268435456,805306391,0,4026531840,2852192259,2359297,1,2147483653,268435456,805306391,
0,4026531840,2852126729,2424833,65539,2147483688,2151690269,2147489833,2147483670,
603980622,0,2147483670,603980648,0,2147483670,603980674,0,4026531840,2852192259,
2490369,1,2147483688,268435456,603980630,0,4026531840,2852192259,2555904,1,2147483677,
268435456,603980638,0,4026531840,2852192260,2490369,1,2147483688,268435456,1073750040,
805306390,0,4026531840,0,2852192259,2621441,1,2147483689,268435456,603980656,
0,4026531840,2852192259,2555904,1,2147483677,268435456,603980664,0,4026531840,
2852192260,2621441,1,2147483689,268435456,1073750040,805306390,0,4026531840,
0,2852192259,1900545,1,2147483677,268435456,805306390,0,4026531840,2852126733,
2686977,262163,2147489840,2210398241,2147489842,2147489843,2202023972,2147489845,
2197835814,2147489847,2147489848,2147489849,2147489850,2147489851,2147489852,
2147489853,2147489854,2147489839,2147489841,2147489844,2147489846,2147483666,
603980718,0,2147483666,603980904,603981602,0,2147483666,603980960,0,2147483666,
603981134,0,4026531840,2852192260,2752513,1,2147483681,268435456,603980728,603980353,
0,4026531840,0,2852126730,2818049,196616,2164260880,2172649489,2147495971,2143295499,
2147483688,2147483677,2147483662,2147483689,603980750,603980417,0,268435456,
603980834,0,268435456,1073747736,805306386,0,4026531840,2852126727,2883585,65538,
2147489827,2143289355,268435456,603980764,0,268435456,1073746720,805306386,0,
4026531840,0,2852126727,2949120,262172,2147483696,2210398225,2210398210,2222981123,
2206203924,2222981125,2222981158,2222981127,2222981128,2147483705,2147483706,
2147483707,2210398236,2147483709,2147483710,2147483695,2160066593,2160072738,
2164260900,2147483697,2147483698,2147483699,2147483700,2147483701,2147483702,
2147483703,2147483704,2147483708,603980804,603982422,0,268435456,603980824,603980353,
0,4026531840,0,2852192260,3014657,1,2147483682,268435456,603980814,603980353,
0,4026531840,0,2852192260,262145,1,2147483659,268435456,1073746496,805306386,
0,4026531840,0,2852192260,262145,1,2147483659,268435456,1073746744,805306386,
0,4026531840,0,2852126727,2949120,262172,2147483696,2210398225,2210398210,2222981123,
2206203924,2222981125,2222981158,2222981127,2222981128,2147483705,2147483706,
2147483707,2210398236,2147483709,2147483710,2147483695,2160066593,2160072738,
2164260900,2147483697,2147483698,2147483699,2147483700,2147483701,2147483702,
2147483703,2147483704,2147483708,603980874,603982422,0,268435456,603980894,603980353,
0,4026531840,0,2852192260,3014657,1,2147483682,268435456,603980884,603980353,
0,4026531840,0,2852192260,262145,1,2147483659,268435456,1073747512,805306386,
0,4026531840,0,2852192260,262145,1,2147483659,268435456,1073747760,805306386,
0,4026531840,0,2852126730,1,196616,2164260880,2172649489,2147489802,2147495947,
2147483688,2147483677,2147483662,2147483689,603980926,603980417,0,268435456,
603980950,0,268435456,1073747984,805306386,0,4026531840,2852126727,131073,65538,
2147483658,2147489803,268435456,603980940,0,268435456,1073746968,805306386,0,
4026531840,0,2852192260,262145,1,2147483659,268435456,1073746976,805306386,0,
4026531840,0,2852192260,262145,1,2147483659,268435456,1073747992,805306386,0,
4026531840,0,2852192259,3080193,1,2147483684,268435456,603980968,0,4026531840,
2852126726,3145729,131079,2168455184,2160066577,2147483662,2147489803,2155872285,
2147483688,2147483689,603980986,603980417,0,268435456,603981064,0,4026531840,
0,2852192259,262145,1,2147483659,268435456,603980994,0,4026531840,2852126726,
3211285,196620,2181038112,2168455289,2181044258,2147483715,2176843948,2147483749,
2160066705,2147483751,2147483824,2147483833,2147483834,2147483836,603981016,
604002836,0,268435456,603981044,0,4026531840,2852192259,3014657,1,2147483682,
268435456,603981024,0,4026531840,2852126723,3276801,65538,2147483687,2143289381,
268435456,603981034,0,4026531840,0,2852192260,262145,1,2147483659,268435456,
1073747256,805306386,0,4026531840,0,2852126723,3276801,65538,2147483687,2143289381,
268435456,603981054,0,4026531840,0,2852192260,262145,1,2147483659,268435456,
1073748528,805306386,0,4026531840,0,2852126726,3211285,196620,2181038112,2168455289,
2181044258,2147483715,2176843948,2147483749,2160066705,2147483751,2147483824,
2147483833,2147483834,2147483836,603981086,604002836,0,268435456,603981114,0,
4026531840,2852192259,3014657,1,2147483682,268435456,603981094,0,4026531840,
2852126723,3276801,65538,2147483687,2143289381,268435456,603981104,0,4026531840,
0,2852192260,262145,1,2147483659,268435456,1073748272,805306386,0,4026531840,
0,2852126723,3276801,65538,2147483687,2143289381,268435456,603981124,0,4026531840,
0,2852192260,262145,1,2147483659,268435456,1073748776,805306386,0,4026531840,
0,2852192259,3342337,1,2147483686,268435456,603980968,0,4026531840,2852192259,
655361,1,2147483665,268435456,603981150,0,4026531840,2852126728,3407925,327737,
2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,
2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,2298478645,
2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,
2113935381,2189426710,2147483703,2147483704,2147483705,2147483706,2269118523,
2147483708,2168455229,2160066590,2227175455,2243952694,2147483710,2147483741,
2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,
2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
2147483803,603980029,603999593,0,2147483657,268435456,603980063,603980083,0,
4026531840,0,2852126733,2949120,262172,2147504176,2210418705,2210406402,2222985219,
2206224404,2222981125,2223001638,2222997511,2222993416,2147504185,2147504186,
2147504187,2210418716,2147504189,2147504190,2147504175,2160087073,2160087074,
2164281380,2147504177,2147504178,2147504179,2147504180,2147504181,2147504182,
2147504183,2147504184,2147504188,603981266,0,603981310,0,603981354,0,603981398,
0,603981442,0,1073751560,805306397,0,4026531840,0,2785017858,2949120,262172,
2147483696,2210398225,2210398210,2222981123,2206203924,2222981125,2222981158,
2222981127,2222981128,2147483705,2147483706,2147483707,2210398236,2147483709,
2147483710,2147483695,2160066593,2160066594,2164260900,2147483697,2147483698,
2147483699,2147483700,2147483701,2147483702,2147483703,2147483704,2147483708,
603981300,0,4026531840,2852192260,2359297,1,2147483653,268435456,1073752080,
805306398,0,4026531840,0,2785017858,2949120,262172,2147483696,2210398225,2210398210,
2222981123,2206203924,2222981125,2222981158,2222981127,2222981128,2147483705,
2147483706,2147483707,2210398236,2147483709,2147483710,2147483695,2160066593,
2160066594,2164260900,2147483697,2147483698,2147483699,2147483700,2147483701,
2147483702,2147483703,2147483704,2147483708,603981344,0,4026531840,2852192260,
3538945,1,2147483651,268435456,1073752080,805306398,0,4026531840,0,2785017858,
2949120,262172,2147483696,2210398225,2210398210,2222981123,2206203924,2222981125,
2222981158,2222981127,2222981128,2147483705,2147483706,2147483707,2210398236,
2147483709,2147483710,2147483695,2160066593,2160066594,2164260900,2147483697,
2147483698,2147483699,2147483700,2147483701,2147483702,2147483703,2147483704,
2147483708,603981388,0,4026531840,2852192260,3604481,1,2147483650,268435456,
1073752080,805306398,0,4026531840,0,2785017858,2949120,262172,2147483696,2210398225,
2210398210,2222981123,2206203924,2222981125,2222981158,2222981127,2222981128,
2147483705,2147483706,2147483707,2210398236,2147483709,2147483710,2147483695,
2160066593,2160066594,2164260900,2147483697,2147483698,2147483699,2147483700,
2147483701,2147483702,2147483703,2147483704,2147483708,603981432,0,4026531840,
2852192260,65592,1,2147483656,268435456,1073752080,805306398,0,4026531840,0,
2785017858,2949120,262172,2147483696,2210398225,2210398210,2222981123,2206203924,
2222981125,2222981158,2222981127,2222981128,2147483705,2147483706,2147483707,
2210398236,2147483709,2147483710,2147483695,2160066593,2160066594,2164260900,
2147483697,2147483698,2147483699,2147483700,2147483701,2147483702,2147483703,
2147483704,2147483708,603981476,0,4026531840,2852192260,65593,1,2147483655,268435456,
1073752080,805306398,0,4026531840,0,2852126740,3801088,131077,2147508232,2147483653,
2147500034,2151686147,2147516423,2147483678,603981586,603981516,0,2147483678,
603981586,603981526,0,2147483678,603981586,603981536,0,2147483678,603981586,
603981546,0,2147483678,603981586,603981556,0,4026531840,0,2852192260,2359297,
1,2147483653,268435456,1073751816,805306398,0,4026531840,0,2852192260,3538945,
1,2147483651,268435456,1073751816,805306398,0,4026531840,0,2852192260,3604481,
1,2147483650,268435456,1073751816,805306398,0,4026531840,0,2852192260,65592,
1,2147483656,268435456,1073751816,805306398,0,4026531840,0,2852192260,65593,
1,2147483655,268435456,1073751816,805306398,0,4026531840,0,2852126730,2949120,
131077,2147495944,2147483653,2147491842,2151682051,2147500039,603981266,0,603981310,
0,603981354,0,603981398,0,603981442,0,4026531840,0,3087009564,2499805214,0,65539,
4026531840,0,0,603981586,603981566,0,2499805214,0,65537,4026531840,0,0,2583691311,
3866625,1048579,4026531840,0,0,2147483679,603981656,0,2147483679,603981664,0,
2147483679,603981672,0,2147483679,603981680,0,2147483679,603981688,0,2147483679,
603981696,0,2147483679,603981704,0,2147483679,603981712,0,2147483679,603981720,
0,2147483679,603981728,0,2147483679,603981736,0,2147483679,603981744,0,2147483679,
603981752,0,2147483679,603981760,0,2147483679,603981768,0,2147483679,603981776,
0,2852192259,3932161,1,2147483695,268435456,805306399,0,4026531840,2852192259,
3997697,1,2147483696,268435456,805306399,0,4026531840,2852192259,4063233,1,2147483697,
268435456,805306399,0,4026531840,2852192259,4128769,1,2147483698,268435456,805306399,
0,4026531840,2852192259,4194305,1,2147483699,268435456,805306399,0,4026531840,
2852192259,4259841,1,2147483700,268435456,805306399,0,4026531840,2852192259,
4325377,1,2147483701,268435456,805306399,0,4026531840,2852192259,4390913,1,2147483702,
268435456,805306399,0,4026531840,2852192259,4456449,1,2147483703,268435456,805306399,
0,4026531840,2852192259,4521985,1,2147483704,268435456,805306399,0,4026531840,
2852192259,4587521,1,2147483705,268435456,805306399,0,4026531840,2852192259,
4653057,1,2147483706,268435456,805306399,0,4026531840,2852192259,4718593,1,2147483707,
268435456,805306399,0,4026531840,2852192259,4784129,1,2147483708,268435456,805306399,
0,4026531840,2852192259,4849665,1,2147483709,268435456,805306399,0,4026531840,
2852192259,4915201,1,2147483710,268435456,805306399,0,4026531840,2852126744,
4980736,262171,2147516464,2210414609,2218786818,2218786819,2202034196,2218786821,
2218819622,2218786823,2218786824,2147516473,2147516474,2147516475,2206244892,
2147516477,2147516478,2147516463,2155880481,2164293668,2147516465,2147516466,
2147516467,2147516468,2147516469,2147516470,2147516471,2147516472,2147516476,
2147483676,603982400,603981486,0,2147483676,603982400,603981840,0,2147483676,
603982400,603981142,0,2147483676,603982400,603980007,0,2147483676,603982400,
603980682,0,2147483676,603982400,603980156,0,4026531840,0,2852192259,2752513,
1,2147483681,268435456,603981848,0,4026531840,2852126731,5046273,131076,2147483692,
2155884573,2147483694,2147489837,268435456,603981868,0,268435456,603982158,0,
2147483667,268435456,805306387,603980728,0,4026531840,0,2852126726,3145729,131079,
2168455184,2160066577,2147483662,2147489803,2155872285,2147483688,2147483689,
603981886,603980417,0,268435456,603982026,0,4026531840,0,2852192259,262145,1,
2147483659,268435456,603981894,0,4026531840,2852126726,5111861,393289,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483746,2147483748,2386558990,
2147483752,2147483753,2147483665,2147483666,2147483795,2147483755,2147483669,
2357198870,2147483759,2147483760,2147483761,2147483762,2147483803,2147483763,
2147483741,2147483678,2147483679,2147483744,2046820385,2055215138,2147483747,
2051014692,2147483749,2147483686,2147483765,2042626088,2042626089,2147483754,
2051014699,2147483756,2147483770,2147483758,2046820399,2046820400,2046820401,
2046820402,2051014707,2147483700,2088763445,2147483702,2147483703,2147483704,
2147483705,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483798,603981978,604007926,0,268435456,603982006,0,4026531840,
0,2852192259,3014657,1,2147483682,268435456,603981986,0,4026531840,2852126723,
5177345,65538,2151677996,2147483694,268435456,603981996,0,4026531840,0,2852192260,
262145,1,2147483659,268435456,1073750592,805306396,0,4026531840,0,2852126723,
5177345,65538,2151677996,2147483694,268435456,603982016,0,4026531840,0,2852192260,
262145,1,2147483659,268435456,1073751096,805306396,0,4026531840,0,2852126726,
5111861,393289,2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,
2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,2147483746,
2147483748,2386558990,2147483752,2147483753,2147483665,2147483666,2147483795,
2147483755,2147483669,2357198870,2147483759,2147483760,2147483761,2147483762,
2147483803,2147483763,2147483741,2147483678,2147483679,2147483744,2046820385,
2055215138,2147483747,2051014692,2147483749,2147483686,2147483765,2042626088,
2042626089,2147483754,2051014699,2147483756,2147483770,2147483758,2046820399,
2046820400,2046820401,2046820402,2051014707,2147483700,2088763445,2147483702,
2147483703,2147483704,2147483705,2092957754,2168455227,2168455228,2168455229,
2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,
2147483786,2147483787,2147483790,2147483798,603982110,604007926,0,268435456,
603982138,0,4026531840,0,2852192259,3014657,1,2147483682,268435456,603982118,
0,4026531840,2852126723,5177345,65538,2151677996,2147483694,268435456,603982128,
0,4026531840,0,2852192260,262145,1,2147483659,268435456,1073750840,805306396,
0,4026531840,0,2852126723,5177345,65538,2151677996,2147483694,268435456,603982148,
0,4026531840,0,2852192260,262145,1,2147483659,268435456,1073751344,805306396,
0,4026531840,0,2852126726,3145729,131079,2168455184,2160066577,2147483662,2147489803,
2155872285,2147483688,2147483689,603982176,603980417,0,268435456,603982292,0,
4026531840,0,2852192259,262145,1,2147483659,268435456,603982184,0,4026531840,
2852126726,5111861,393289,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483746,2147483748,2386558990,2147483752,2147483753,2147483665,2147483666,
2147483795,2147483755,2147483669,2357198870,2147483759,2147483760,2147483761,
2147483762,2147483803,2147483763,2147483741,2147483678,2147483679,2147483744,
2046820385,2055215138,2147483747,2051014692,2147483749,2147483686,2147483765,
2042626088,2042626089,2147483754,2051014699,2147483756,2147483770,2147483758,
2046820399,2046820400,2046820401,2046820402,2051014707,2147483700,2088763445,
2147483702,2147483703,2147483704,2147483705,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483798,603982268,604007926,0,
268435456,603982284,0,4026531840,0,2852192259,3014657,1,2147483682,268435456,
603982276,0,4026531840,2852192259,5242881,1,2147483693,268435456,603981996,0,
4026531840,2852192259,5242881,1,2147483693,268435456,603982016,0,4026531840,
2852126726,5111861,393289,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483746,2147483748,2386558990,2147483752,2147483753,2147483665,2147483666,
2147483795,2147483755,2147483669,2357198870,2147483759,2147483760,2147483761,
2147483762,2147483803,2147483763,2147483741,2147483678,2147483679,2147483744,
2046820385,2055215138,2147483747,2051014692,2147483749,2147483686,2147483765,
2042626088,2042626089,2147483754,2051014699,2147483756,2147483770,2147483758,
2046820399,2046820400,2046820401,2046820402,2051014707,2147483700,2088763445,
2147483702,2147483703,2147483704,2147483705,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483798,603982376,604007926,0,
268435456,603982392,0,4026531840,0,2852192259,3014657,1,2147483682,268435456,
603982384,0,4026531840,2852192259,5242881,1,2147483693,268435456,603982128,0,
4026531840,2852192259,5242881,1,2147483693,268435456,603982148,0,4026531840,
2768240650,0,131079,2168467464,2147489821,2155878414,2147495943,2155878418,2147502108,
2147483678,603982400,603981220,0,805306396,3221225487,0,805306397,3221225490,
0,0,4026531840,0,2852126744,4980736,262171,2147500080,2210422801,2218786818,
2218786819,2202042388,2218786821,2218803238,2218786823,2218786824,2147500089,
2147500090,2147500091,2206244892,2147500093,2147500094,2147500079,2155880481,
2164277284,2147500081,2147500082,2147500083,2147500084,2147500085,2147500086,
2147500087,2147500088,2147500092,2147483675,603982515,603981486,0,2147483675,
603982515,603981840,0,2147483675,603982515,603980682,0,2147483675,603982515,
603981142,0,2147483675,603982515,603980007,0,2147483675,603982515,603980156,
0,4026531840,0,2852126723,2949120,262171,2147483696,2210398225,2218786818,2218786819,
2202009620,2218786821,2218786854,2218786823,2218786824,2147483705,2147483706,
2147483707,2206203932,2147483709,2147483710,2147483695,2155872289,2164260900,
2147483697,2147483698,2147483699,2147483700,2147483701,2147483702,2147483703,
2147483704,2147483708,603982512,603981784,0,4026531840,1073742352,805306395,
0,3087010513,2768240656,0,196616,2147510280,2147483678,2147489810,2147504155,
2147495964,2147489821,2126518286,2147510279,603982515,603981220,0,805306396,
3221225489,0,1073742088,805306395,3221225493,0,603982515,603982478,0,805306397,
3221225499,0,4026531840,0,2499805211,0,65537,4026531840,0,0,2852126750,5374005,
393291,2441109568,2147537025,2147537026,2147537027,2147537028,2147536901,2147537030,
2147537031,2147537032,2147536905,2403389450,2403389515,2147536993,2147536996,
2394963982,2147483752,2147536912,2147516433,2147536914,2147528851,2147537001,
2147536917,2365640726,2147537003,2147537007,2147537008,2147537009,2147537051,
2147536924,2147536989,2147536926,2147536927,2147536992,2059456545,2147536994,
2147536995,2051067940,2147536997,2147536934,2147537010,2042679336,2059456553,
2147537002,2063650859,2147537004,2147537011,2147537006,2051067951,2051067952,
2051067953,2101399602,2122371123,2147536948,2193674293,2147536950,2147536951,
2147536952,2147536953,2176897082,2176897083,2176897084,2176897085,2176897086,
2147491967,2147537013,2147537018,2147537019,2147537020,2147537021,2147537022,
2147491968,2147537034,2147537035,2147491982,2147537046,2147483648,603983974,
603982661,0,2147483648,603983974,603999126,0,2147483648,603983974,603982727,
0,2147483648,603983974,603982823,0,2147483648,2147483772,603983974,603995185,
603995187,0,2147483648,603983974,603982853,0,2147483648,603983974,603982889,
0,4026531840,0,2583756904,5439541,65538,4026531840,0,603982669,0,0,2785017860,
5505077,327726,2323644480,2147483681,2298478641,2323644470,2147483684,2181038085,
2147483686,2147487847,2248146984,2248146985,2248146954,2147483755,2147483756,
2147483749,2235564046,2235564079,2235564080,2084569105,2235564082,2235564083,
2147483700,2231369781,2067791894,2147483703,2147483704,2147483705,2147483706,
2147483707,2147483708,2147483709,2147483710,2147483775,2147483752,2147483753,
2147483754,2181038190,2147483759,2147483760,2147483761,2147483762,2164260979,
2147483765,2147483776,2147483790,2147483795,2147483798,603982723,0,603982725,
0,4026531840,603989971,0,604000550,0,2583756814,5701685,65538,4026531840,0,603982735,
0,0,2785017860,5767221,131079,2168455208,2160066577,2147483670,2160066627,2147483689,
2147483712,2147487847,603982751,0,603982725,0,4026531840,0,2852192259,5701685,
1,2147483662,268435456,603982759,0,4026531840,2852126730,5832757,131078,2168461352,
2160066577,2147495958,2147483715,2147489833,2147483712,603982779,603984242,0,
603982797,603984459,0,268435456,603982813,603985244,0,4026531840,2852192262,
5898293,1,2147483717,2147483693,268435456,603982791,603984456,603984459,0,4026531840,
0,603982794,603984559,0,1073752864,805306404,0,603982800,603984559,0,1073753112,
805306404,0,2852192260,6094901,1,2147483670,268435456,603982813,603985244,0,
4026531840,0,2852192260,6160437,1,2147483671,268435456,1074006348,805306558,
0,4026531840,0,2583756864,6225973,65538,4026531840,0,603982831,0,0,2516582432,
6291509,65538,603982839,0,603982849,0,0,2852192261,6357045,1,2147483712,2147483726,
268435456,1073765640,805306446,0,4026531840,2147483783,603996809,603996283,0,
2583756947,6488117,65538,4026531840,0,603982861,0,0,2516582547,6553653,196610,
4026531840,0,603982881,0,603982873,0,603982881,0,0,2785017858,6619189,65538,
2147483797,2143289491,603982881,0,4026531840,2852192259,6619189,1,2147483795,
2147483817,604000255,0,4026531840,2852126833,6684725,393283,2147487841,2147659905,
2147659906,2147659907,2147696772,2147551237,2147637382,2147637383,2147659912,
2147502089,2374174730,2374019147,2147491940,2147483753,2147537003,2147559535,
2147518480,2147563632,2147641362,2147563633,2147567730,2147651605,2332045334,
2147567731,2147580021,2147592314,2147600507,2147707035,2147584028,2147487837,
2147491870,2147487775,2147487840,2009098273,2147487842,2147487843,2046847012,
2147571813,2147510310,2147608700,2147514408,2030073897,2147537002,2025852971,
2147541100,2147618941,2147559534,2013292591,2017486896,2021681201,2021681202,
2030069811,2147510324,2025875509,2147510326,2147510327,2147510328,2147510329,
2009098298,2009098299,2059429948,2080401469,2151704638,2147627134,2147664010,
2147672203,2147690646,603989769,0,603989051,0,603989366,0,268435456,603983073,
0,2147483651,268435456,603979780,0,603980682,0,603984459,0,2147483699,268435456,
603984915,0,2147483701,268435456,603984812,603984818,0,603989737,0,2147483729,
268435456,1073766152,805306449,0,2147483733,268435456,603990460,0,603990666,
0,603990509,0,603990558,0,2147483738,268435456,603990728,0,603990610,0,2147483662,
268435456,603980243,0,2147483776,268435456,603996259,0,2147483779,268435456,
603996293,0,2147483780,268435456,603996800,603999593,0,2147483781,268435456,
603996822,0,2147483782,268435456,603996806,603984559,0,603999126,0,2147483786,
268435456,1073789448,805306506,0,2147483787,268435456,603997977,0,603998486,
0,2147483800,268435456,603998964,0,2147483801,268435456,603999162,603995187,
0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,268435456,
604001864,603989051,0,2147483844,268435456,604002412,0,4026531840,2852126724,
6750261,327738,2294288448,2294288417,2147487842,2147487843,2285899812,2285899781,
2147487782,2311065649,2277511208,2277511209,2277511178,2277511211,2147487852,
2327842870,2269122574,2269122607,2269122608,2105544721,2269122610,2269122611,
2269122612,2269122613,2109739030,2185236503,2147487800,2147487801,2147487802,
2273316923,2147487804,2168459325,2160070686,2231373855,2147487799,2147487806,
2147487837,2218791008,2147487841,2214596708,2147487845,2147487848,2147487849,
2147487850,2147487851,2193625198,2147487855,2147487856,2147487857,2147487858,
2176847987,2147483764,2147487861,2147487871,2147487872,2147487876,2147487886,
2147487891,2147487894,2147487899,603983139,0,603983183,0,4026531840,2785017860,
6815797,131076,2147483712,2151682065,2151682149,2147487861,603983151,0,603983171,
0,4026531840,2852192261,6881333,1,2147483764,2147483954,268435456,603983161,
604008392,0,4026531840,2852192260,6160437,1,2147483671,268435456,1073940732,
805306567,0,4026531840,0,2852192262,6946869,1,2147483764,2147483955,268435456,
603983161,604008404,603991879,0,4026531840,0,2852126727,7012405,327737,2294292544,
2294292513,2147491938,2147491939,2285903908,2285903877,2147491878,2311069745,
2277515304,2277515305,2277515274,2277515307,2147491948,2323652662,2269126670,
2269126703,2269126704,2105548817,2269126706,2269126707,2147491892,2264932405,
2109743126,2185232407,2147491896,2147491897,2147491898,2269126715,2147491900,
2168463421,2160074782,2227183647,2147491895,2147491902,2147491933,2214600800,
2147491937,2210406500,2147491941,2147491944,2147491945,2147491946,2147491947,
2189434990,2147491951,2147491952,2147491953,2147491954,2172657779,2147491957,
2147491967,2147491968,2147491972,2147491982,2147491987,2147491990,2147491995,
268435456,1073875380,805306567,0,603983251,603999593,0,4026531840,2852126727,
7077941,65538,2147483711,2143295511,268435456,603983273,0,268435456,1073940732,
805306548,0,4026531840,0,2852192259,7143477,1,2147483711,268435456,603983273,
0,4026531840,2852126726,7209013,65538,2147483764,2147487767,603983285,0,268435456,
1074006268,805306567,0,4026531840,2785017860,6815797,131076,2147483712,2151682065,
2151682149,2147487861,603983297,0,603983317,0,4026531840,2852192261,6881333,
1,2147483764,2147483954,268435456,603983307,604008392,0,4026531840,2852192260,
6160437,1,2147483671,268435456,1074071996,805306567,0,4026531840,0,2852192262,
6946869,1,2147483764,2147483955,268435456,603983307,604008404,603991879,0,4026531840,
0,2852192260,6160437,1,2147483671,268435456,1073940732,805306548,0,4026531840,
0,2852192260,7274549,1,2147483653,2147483733,268435456,603990460,0,4026531840,
0,2852126733,7340085,65539,2147500054,2151686245,2147483751,268435456,603983369,
604000526,0,268435456,603983372,603999593,0,2147483834,268435456,603983382,604000622,
0,4026531840,1073940740,805306550,0,2852192260,7405621,1,2147483750,268435456,
1074006284,805306550,0,4026531840,0,1073875268,805306557,0,1073940892,805306565,
0,2852126724,7471157,1,2147483802,268435456,603983398,603987839,0,805306428,
0,1073940852,805306563,0,2852126726,7536693,1,2147483801,2147483841,268435456,
603983413,604001848,604001762,0,805306442,0,1073875292,805306560,0,2852126743,
7602229,131077,2147510419,2160085093,2147491862,2134900839,2147518617,268435456,
603983450,604000526,0,2147483834,268435456,603983453,604000622,0,268435456,603983456,
603999593,0,2147483817,603983466,604000255,0,2147483841,268435456,603983413,
604001848,604001762,0,805306442,0,0,1073764120,805306556,0,1073875252,805306556,
0,2852192260,7405621,1,2147483750,268435456,1073763872,805306556,0,4026531840,
0,1073875260,805306556,0,2583691420,7667765,65539,1073765384,805306445,0,805306567,
0,0,0,805306567,0,2583691327,7798837,65540,603983493,603984559,0,0,268435456,
603983506,603985244,0,0,1073782288,805306494,0,2852192260,7143477,1,2147483711,
268435456,603983506,603985244,0,4026531840,0,1073782552,805306495,0,2583691367,
7864373,65538,603983543,0,603983517,0,0,2785017860,7929909,65538,2147487808,
2147483653,603983527,0,603983540,0,4026531840,2852192261,7995445,1,2147483751,
2147483940,268435456,603983537,604007231,0,4026531840,1073752080,805306452,0,
1073744904,805306452,0,2583691373,8126517,65540,1073744904,805306452,0,0,268435456,
1073744912,805306454,0,0,2583691460,8192053,131075,1073744904,805306451,0,603983567,
604007181,0,603983567,604007181,0,1073752080,805306451,0,2583691420,7667765,
65539,805306445,0,0,1073809828,805306566,0,0,1073809828,805306566,0,2852126743,
7602229,131077,2147500179,2160066661,2147508246,2134909031,2147518617,268435456,
603983617,603999593,0,268435456,603983627,604000526,0,2147483817,603983630,604000255,
0,2147483834,268435456,603983633,604000622,0,2147483841,268435456,603983413,
604001848,604001762,0,805306443,0,0,2852192260,7405621,1,2147483750,268435456,
1073763872,805306444,0,4026531840,0,1073764120,805306444,0,1073764368,805306444,
0,1073875284,805306559,0,2852126731,8257589,262162,2147492000,2147492001,2147492002,
2147492003,2202024036,2147492005,2147492006,2147492007,2147492008,2147492009,
2147492010,2147492011,2147491998,2147491997,2139109406,2151677967,2147491999,
2147492004,268435456,603983670,603985244,0,603983673,604002664,0,268435456,1073763344,
805306441,0,805306441,0,1073758744,805306426,0,603983676,603985244,0,1073759000,
805306426,0,2852126724,8388661,1,2147483743,268435456,603983689,603988879,0,
805306440,0,1073761816,805306439,0,2852126724,8454197,65539,2155872266,2147483715,
2147483742,268435456,603983704,603988879,0,805306437,0,1073761560,805306438,
0,2852126724,8519733,65538,2147483741,2143289375,268435456,603983719,603988683,
0,805306436,0,0,1073761304,805306437,0,2852126724,8585269,65539,2155872346,2147483739,
2147483740,268435456,603983734,603988485,0,805306435,0,1073761048,805306436,
0,2852126732,8650805,131078,2147491928,2164260897,2147483734,2151677963,2147483735,
2147500121,268435456,603983761,603988281,0,268435456,603983764,603988281,0,268435456,
603983767,603988281,0,805306434,0,0,1073760280,805306435,0,1073760536,805306435,
0,1073760792,805306435,0,2852126724,8716341,131076,2147483732,2147483733,2147483730,
2147483731,268435456,603983784,603988063,0,805306433,0,0,1073760024,805306434,
0,2852126724,8781877,1,2147483729,268435456,603983797,603987627,0,805306432,
0,1073759768,805306433,0,2852126724,8847413,1,2147483728,268435456,603983810,
603987417,0,805306431,0,1073759768,805306432,0,2852126728,8912949,65538,2147491994,
2147483727,268435456,603983829,603987203,0,268435456,603983398,603987839,0,805306430,
0,0,1073759768,805306431,0,2852126724,8978485,1,2147483726,268435456,603983842,
603987839,0,805306429,0,1073759512,805306430,0,2852126724,9044021,1,2147483725,
268435456,603983855,603986981,0,805306428,0,1073759512,805306429,0,2852126724,
9109557,1,2147483724,268435456,603983868,603985244,0,805306427,0,2852192260,
6422581,1,2147483680,268435456,603983878,603985244,0,4026531840,0,1073759272,
805306427,0,2852126723,9175093,393289,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483664,2147483665,
2147483666,2147483795,2147483755,2147483669,2357198870,2147483759,2147483760,
2147483761,2147483762,2147483803,2147483763,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483765,2034237480,2038431785,2147483754,2051014699,2147483756,2147483770,
2147483758,2046820399,2046820400,2046820401,2046820402,2051014707,2147483700,
2088763445,2147483702,2147483703,2147483704,2147483705,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483798,603983963,
603986663,0,805306401,0,0,1073742352,805306402,0,2583691265,7602229,65538,805306445,
0,805306385,0,0,2768240815,0,393304,2261086208,2261080065,2269462530,2298814467,
2407733316,2407727173,2407721030,2407714887,2147661896,2147655753,2399307850,
2399301707,2265219084,2269448205,2269440014,2147565647,2265237520,2265231377,
2269419538,2147596371,2147618900,2147612757,2147604566,2147596375,2353117272,
2353117273,2147565658,2302900288,2147704897,2390841501,2147565662,2357413954,
2147778592,2147770401,2147764258,2147756067,2311325732,2147565733,2147565734,
2256744515,2281855052,2147565737,2147553357,2147631182,2147625040,2147625041,
2147625006,2147625042,2147590266,2147571835,2256629884,2147747891,2147559604,
2147577909,2147553462,2147553463,2239852670,2239858815,2105798714,2105573435,
2105792572,2214838333,2122557502,2122551359,2214686848,2218881155,2218881156,
2218881157,2218881158,2218881159,2147577994,2147577995,2147577996,2147578008,
2147578009,2147565732,2147547324,2147541181,2147541182,2147541183,2147535040,
2147528898,2147522755,2147516612,2147516613,2147498182,2147489991,2147483933,
603983974,603980166,0,1073809836,805306566,3221225569,0,2583691420,7733301,65537,
4026531840,268435456,603983974,603983385,604006139,0,805306426,3221225581,0,
603983974,603983388,0,805306440,3221225587,0,603983974,603983401,0,805306556,
3221225593,0,603983974,603983416,0,805306444,3221225599,0,603983974,603983469,
0,805306445,3221225605,0,805306490,3221225608,0,805306491,3221225611,0,603983974,
603983481,0,805306403,3221225617,0,1073766408,805306450,3221225621,0,1073766664,
805306450,3221225625,0,603983974,603983509,0,603983974,603983555,0,805306447,
3221225634,0,603983974,603983570,0,603983974,603983583,0,805306442,3221225643,
0,603983974,603983636,0,603983974,603983679,0,805306439,3221225652,0,805306438,
3221225655,0,603983974,603983692,0,603983974,603983707,0,603983974,603983722,
0,603983974,603983737,0,603983974,603983770,0,603983974,603983787,0,603983974,
603983800,0,603983974,603983813,0,603983974,603983832,0,603983974,603983845,
0,603983974,603983858,0,805306495,3221225691,0,1073752584,805306403,3221225695,
0,1073742088,805306402,3221225699,0,603983974,603983881,0,1073752328,805306400,
3221225706,0,805306369,3221225709,0,603983974,603983966,0,805306384,3221225715,
0,1073744904,805306381,3221225719,0,1073742088,805306653,3221225723,0,805306380,
3221225726,0,1073742088,805306370,3221225730,0,603983974,603980206,0,805306368,
3221225736,0,0,4026531840,0,2852126736,9240629,65539,2147483712,2151702545,2147500099,
2147483685,2147483686,2147483687,603984266,603984300,603984303,603984306,0,2147483685,
603984278,603984316,0,2147483685,603984278,603984341,0,4026531840,0,2852126726,
9306165,65538,2147483717,2143295551,1073753352,805306405,0,268435456,603984281,
0,4026531840,1073753352,805306405,0,2852126730,9371701,65538,2147483715,2143299601,
2147483690,268435456,603984297,603984326,0,2147483691,268435456,603984297,603984351,
0,4026531840,1073753624,805306405,0,1073753864,805306406,0,1073754120,805306407,
0,2852192261,6225973,1,2147483712,2147483688,268435456,1073754376,805306408,
0,4026531840,2852192260,9437237,1,2147483715,2147483690,268435456,603984326,
0,4026531840,0,2852192262,9502773,1,2147483716,268435456,2147483687,603984338,
603984303,603984306,0,4026531840,0,1073754648,805306410,0,2852192260,9568309,
1,2147483665,2147483691,268435456,603984351,0,4026531840,0,2852126734,9633845,
65539,2147483712,2151698451,2147498047,2147483936,268435456,1073754376,805306408,
603984373,604007147,0,268435456,603984397,0,268435456,1073755152,805306411,0,
4026531840,0,2852126727,9699381,65538,2147483711,2143295507,268435456,603984387,
0,268435456,1073754904,805306411,0,4026531840,0,2852192260,9764917,1,2147483667,
268435456,1073754912,805306411,0,4026531840,0,2852192260,9764917,1,2147483667,
268435456,1073755160,805306411,0,4026531840,0,2852192262,6225973,1,2147483712,
2147483692,268435456,1073754376,805306408,603984440,0,4026531840,0,2852126729,
9830453,131076,2147483716,2147496005,2147495999,2143301651,268435456,2147483687,
603984437,603984303,603984306,0,1073754120,805306407,0,4026531840,0,1073755672,
805306412,0,2768240648,0,65539,2155872296,2147489831,2147498028,603984440,603984419,
0,1073755400,805306412,3221225484,0,0,4026531840,0,1073755920,805306413,0,2583691304,
9895989,131075,4026531840,0,0,2147483694,603984503,0,2147483694,603984471,0,
2852192259,9961525,1,2147483689,268435456,603984479,0,4026531840,2852126727,
10027008,65538,2147483718,2147489833,268435456,603984493,0,268435456,1073756432,
805306414,0,4026531840,0,2852192260,9961525,1,2147483689,268435456,1073756184,
805306414,0,4026531840,0,2852192259,10092597,1,2147483688,268435456,603984511,
0,4026531840,2852126727,10158080,65538,2151684136,2147483720,268435456,603984525,
0,268435456,1073756432,805306414,0,4026531840,0,2852192260,10092597,1,2147483688,
268435456,1073756184,805306414,0,4026531840,0,2852192260,10223669,1,2147483721,
2147483696,268435456,603984545,0,4026531840,0,2852126724,10289310,131077,2147483656,
2147483653,2147483650,2151677955,2147483655,268435456,1073752080,805306416,0,
4026531840,0,2583691282,5963829,65539,2147483698,603984577,0,2147483698,603984569,
0,0,2852192259,5963829,1,2147483666,268435456,805306418,0,4026531840,3087045235,
1880096769,3473408,7,268435457,805306418,0,2852126825,10420277,393281,2147483745,
2147643521,2147643522,2147643523,2147680388,2147543045,2147620998,2147620999,
2147643528,2147487844,2294466570,2365622347,2147491945,2147528811,2147551343,
2147555440,2147510288,2147555441,2147624978,2147559538,2147559539,2147635221,
2323656726,2147571829,2147575930,2147584123,2147592316,2147690651,2147602557,
2147483741,2147487774,2147483679,2147483744,2009090081,2147483746,2147483747,
2034255908,2147563621,2147502118,2147610750,2147506216,2025871401,2147528810,
2021654571,2147532908,2147647626,2147551342,2009090095,2009090096,2013284401,
2017478706,2017478707,2147502132,2021673013,2147502134,2147502135,2147502136,
2147502137,2004895802,2004895803,2004895804,2009090109,2051033150,2147655819,
2147674262,603989051,0,603989366,0,603989769,0,268435456,603983073,0,603980682,
0,603984459,0,2147483699,268435456,603984915,0,2147483701,268435456,603984812,
603984818,0,603989737,0,2147483729,268435456,1073766152,805306449,0,2147483733,
268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,268435456,
603990728,0,603990610,0,2147483776,268435456,603996259,0,2147483779,268435456,
603996293,0,2147483780,268435456,603996800,603999593,0,2147483781,268435456,
603996822,0,2147483782,268435456,603996806,603984559,0,603999126,0,2147483786,
268435456,1073789448,805306506,0,2147483787,268435456,603997977,0,603998486,
0,2147483800,268435456,603998964,0,2147483801,268435456,603999162,603995187,
0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,268435456,
604001864,603989051,0,2147483844,268435456,604002412,0,4026531840,2852126727,
9371701,65538,2147483715,2143295505,2147483700,603984772,0,2147483700,603984800,
603984341,0,4026531840,0,2583756867,9437237,65538,4026531840,0,603984780,0,0,
2516582468,10485813,131074,4026531840,0,603984790,0,603984802,0,0,2852192261,
10551349,1,2147483715,2147483690,268435456,603984800,603984326,0,4026531840,
805306420,0,2852192260,9437237,1,2147483715,268435456,1073757448,805306420,0,
4026531840,0,603984815,603984559,0,1073757720,805306421,0,2852126724,6815797,
131076,2147483712,2151677969,2151678053,2147483765,2147483702,603984833,603984859,
0,4026531840,1073757976,805306422,0,3087012821,2768240653,0,65538,2147491894,
2147483703,1073742088,805306422,3221225481,0,2583691327,7798837,65537,4026531840,
268435456,603984833,603984830,603984859,0,4026531840,2499805238,0,65537,4026531840,
0,0,2852126728,6815797,131076,2147483712,2151686161,2151686245,2147491957,2147483703,
603984875,603984902,0,2147483703,603984890,603991879,0,4026531840,2852126726,
10616885,1,2147483663,2147483705,268435456,603984887,603984912,603985244,0,805306423,
0,1073758224,805306423,0,2852192262,10682421,1,2147483663,2147483705,268435456,
603984887,603984912,603985244,0,4026531840,0,2852192261,6225973,1,2147483712,
2147483704,268435456,1073758472,805306424,0,4026531840,1073750032,805306425,
0,2852126726,10747957,196617,2147491968,2147483665,2147491914,2151686211,2147491915,
2147491975,2155880582,2139103359,2147491982,1610612738,67114023,67114044,0,603984972,
0,4026531840,0,603984938,603984758,0,2852192262,5898293,1,2147483717,2147483693,
268435456,603984950,603984456,603984459,0,4026531840,0,603984953,603984559,0,
1073756704,805306419,0,2852192261,9568309,1,2147483665,2147483691,268435456,
603984966,603984351,0,4026531840,603984969,603984559,0,1073756952,805306419,
0,2852126735,10813493,196616,2147502208,2147489867,2147508298,2139095107,2147502215,
2147502222,2143307910,2134919295,603984938,603984758,0,2147483701,268435456,
603985000,603984812,603984818,0,603985000,603999126,0,268435456,603985003,0,
4026531840,0,1073756944,805306419,0,2852126734,8323125,327736,2290112576,2290112545,
2147506274,2147506275,2281723940,2281723909,2147506214,2306889777,2273335336,
2273335337,2273335306,2273335339,2147506284,2319472694,2264946702,2264946735,
2264946736,2105563153,2264946738,2264946739,2147506228,2260752437,2109757462,
2147506231,2147506232,2147506233,2147506234,2264946747,2147506236,2164283453,
2155894814,2223003679,2147506238,2147506269,2214615136,2147506273,2210420836,
2147506277,2147506280,2147506281,2147506282,2147506283,2189449326,2147506287,
2147506288,2147506289,2147506290,2172672115,2147506293,2147483775,2147483776,
2147506308,2147494030,2147506323,2147506326,2147506331,2147483810,603985077,
603999589,603996901,0,2147483806,268435456,603985077,603999213,603984902,0,603985080,
603985244,0,4026531840,1073757208,805306419,0,603985083,603984559,0,1073757216,
805306419,0,2583756814,5701685,65538,4026531840,0,603985094,0,0,2785017860,10879029,
65538,2147487766,2147483751,603982725,0,603985104,0,4026531840,2852192260,10944565,
1,2147483662,2147483838,268435456,603982803,0,4026531840,0,2852126781,11010101,
327732,2290110528,2290102305,2147483746,2147483747,2281713700,2281746437,2147495974,
2298490929,2147500072,2269134889,2269208586,2269118507,2147518572,2306879542,
2298531950,2256547887,2256547888,2105614353,2256547890,2256547891,2147495988,
2252353589,2109833238,2147495991,2147495992,2147495993,2147495994,2147495995,
2147495996,2164273213,2155876382,2214592543,2147495998,2147483741,2206204000,
2147483745,2202013796,2147549285,2147491945,2147514474,2147514475,2147537007,
2147541104,2147541105,2147545202,2147545203,2147557493,2147561599,2147561600,
2147598468,2147565710,2147592342,603989051,0,603989366,0,603989769,0,603980682,
0,603984459,0,2147483726,268435456,1073765640,805306446,0,603989737,0,2147483729,
268435456,1073766152,805306449,0,2147483733,268435456,603990460,0,603990666,
0,603990509,0,603990558,0,2147483738,268435456,603990728,0,603990610,0,604000730,
0,2147483813,268435456,603999991,0,2147483814,268435456,604000205,0,2147483828,
268435456,603983329,603999593,0,268435456,603983349,0,2147483842,268435456,604001864,
603989051,0,4026531840,0,2852126724,11075637,65538,2151677982,2147483748,268435456,
1073763344,805306441,0,805306441,0,0,2852126736,8323125,327736,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,
2147508279,2147508280,2147508281,2147508282,2264948795,2147508284,2164285501,
2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,
2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,
2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,
2147508356,2147508366,2147491987,2147508374,2147508379,2147483706,603986483,
603982661,0,2147483706,603986483,603982853,0,2147483706,603986483,603985086,
0,2147483706,603986483,603985320,0,4026531840,2852126786,11141173,327733,2290122816,
2290114593,2147483746,2147483747,2281725988,2281758725,2147508262,2298503217,
2147512360,2269147177,2269220874,2269118507,2147530860,2306891830,2298544238,
2256560175,2256560176,2105626641,2256560178,2256560179,2147508276,2252365877,
2109747222,2147508279,2147508280,2147508281,2147508282,2252365883,2147508284,
2164285501,2155876382,2214592543,2147508286,2147483741,2206204000,2147483745,
2202013796,2147561573,2147491945,2147526762,2147526763,2147549295,2147553392,
2147553393,2147557490,2147557491,2147569781,2147502207,2147573888,2147600516,
2147577998,2147594390,2147610779,603989051,0,603989366,0,603989769,0,268435456,
603983073,0,268435456,603985444,0,603980682,0,603984459,0,2147483726,268435456,
1073765640,805306446,0,603989737,0,2147483729,268435456,1073766152,805306449,
0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,
268435456,603990728,0,603990610,0,604000730,0,2147483813,268435456,603999991,
0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,268435456,
604001864,603989051,0,2147483844,268435456,604002412,0,4026531840,0,2852126726,
11206709,65539,2151677974,2151678016,2147489920,603985458,604002492,0,268435456,
603985479,0,4026531840,0,2852192260,7733301,1,2147483804,268435456,603985468,
604006139,0,4026531840,0,1074006420,805306565,0,2852192259,11272245,1,2147483776,
268435456,603985479,0,4026531840,2852126732,11337781,65539,2155890710,2147483715,
2147489856,268435456,603985499,0,2147483704,268435456,1073758472,805306424,603985999,
0,268435456,603986251,0,4026531840,0,2852126729,11403317,65538,2151690262,2147483712,
2147483704,268435456,1073758472,805306424,603985515,0,268435456,603985767,0,
4026531840,0,2852192259,6094901,1,2147483670,268435456,603985523,0,4026531840,
2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,2147483764,
2147483765,603985539,603991617,0,268435456,603985657,0,4026531840,2852192259,
6160437,1,2147483671,268435456,603985547,0,4026531840,2852192259,9568309,1,2147483665,
268435456,603985555,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,603985641,603994606,0,268435456,1073803592,805306532,0,
4026531840,0,2852192260,9764917,1,2147483667,268435456,1073802320,805306532,
0,4026531840,0,1073802320,805306532,0,1073803592,805306532,0,2852192259,9568309,
1,2147483665,268435456,603985665,0,4026531840,2852126727,11534389,393290,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,
2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,
2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,
2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,
2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,
2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,
2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,
2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483795,2147483798,603985751,603994606,0,268435456,1073806144,
805306532,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073803336,
805306532,0,4026531840,0,1073803336,805306532,0,1073806144,805306532,0,2852126726,
11468853,131078,2164260928,2151677969,2160066661,2147489815,2147483764,2147483765,
603985783,603991617,0,268435456,603985895,0,4026531840,2852192259,6160437,1,
2147483671,268435456,603985791,0,4026531840,2852192259,9568309,1,2147483665,
268435456,603985799,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,603985885,603994606,0,268435456,1073805888,805306532,0,
4026531840,0,2852192260,9764917,1,2147483667,268435456,1073803080,805306532,
0,4026531840,0,2852192259,9568309,1,2147483665,268435456,603985903,0,4026531840,
2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,603985989,
603994606,0,268435456,1074202668,805306532,0,4026531840,0,2852192260,9764917,
1,2147483667,268435456,1073805632,805306532,0,4026531840,0,2852192259,6094901,
1,2147483670,268435456,603986007,0,4026531840,2852126726,11468853,131078,2164260928,
2151677969,2160066661,2147489815,2147483764,2147483765,603986023,603991617,0,
268435456,603986141,0,4026531840,2852192259,6160437,1,2147483671,268435456,603986031,
0,4026531840,2852192259,9568309,1,2147483665,268435456,603986039,0,4026531840,
2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,603986125,
603994606,0,268435456,1073805376,805306532,0,4026531840,0,2852192260,9764917,
1,2147483667,268435456,1073802824,805306532,0,4026531840,0,1073802824,805306532,
0,1073805376,805306532,0,2852192259,9568309,1,2147483665,268435456,603986149,
0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
603986235,603994606,0,268435456,1074202660,805306532,0,4026531840,0,2852192260,
9764917,1,2147483667,268435456,1073805120,805306532,0,4026531840,0,1073805120,
805306532,0,1074202660,805306532,0,2852126726,11468853,131078,2164260928,2151677969,
2160066661,2147489815,2147483764,2147483765,603986267,603991617,0,268435456,
603986379,0,4026531840,2852192259,6160437,1,2147483671,268435456,603986275,0,
4026531840,2852192259,9568309,1,2147483665,268435456,603986283,0,4026531840,
2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,603986369,
603994606,0,268435456,1074202652,805306532,0,4026531840,0,2852192260,9764917,
1,2147483667,268435456,1073804864,805306532,0,4026531840,0,2852192259,9568309,
1,2147483665,268435456,603986387,0,4026531840,2852126727,11534389,393290,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,
2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,
2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,
2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,
2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,
2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,
2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,
2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483795,2147483798,603986473,603994606,0,268435456,1074137172,
805306532,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1074202644,
805306532,0,4026531840,0,2768240752,0,327734,2344812608,2147674177,2340606018,
2340599875,2281873476,2281867333,2281861190,2340575303,2147631176,2273454153,
2147618890,2147612747,2147606604,2147547213,2223091758,2147559503,2147594320,
2147594321,2210474002,2147565651,2231474260,2147582037,2227265622,2227257431,
2147565656,2147565657,2181265466,2147510331,2210619452,2210613309,2168664126,
2210601023,2147600462,2147594322,2147559514,2189502558,2206279844,2206279845,
2206279846,2147559593,2147553460,2147547318,2147547319,2147541180,2147535037,
2147535038,2147535039,2147528896,2147522754,2147516611,2147510468,2147510469,
2147492038,2147483847,1073809836,805306566,3221225532,0,2583691420,7733301,65537,
4026531840,268435456,603986483,603983385,604006139,0,805306426,3221225544,0,
603986483,603983388,0,805306440,3221225550,0,603986483,603983401,0,805306556,
3221225556,0,603986483,603983416,0,805306444,3221225562,0,603986483,603983469,
0,805306445,3221225568,0,1073766408,805306450,3221225572,0,1073766664,805306450,
3221225576,0,603986483,603983509,0,603986483,603983555,0,805306447,3221225585,
0,603986483,603983570,0,603986483,603983583,0,805306442,3221225594,0,603986483,
603983636,0,603986483,603983679,0,805306439,3221225603,0,805306438,3221225606,
0,603986483,603983692,0,603986483,603983707,0,603986483,603983722,0,603986483,
603983737,0,603986483,603983770,0,603986483,603983787,0,603986483,603983800,
0,603986483,603983813,0,603986483,603983832,0,603986483,603983845,0,603986483,
603983858,0,0,4026531840,2852126724,11599925,1,2147483727,268435456,603983829,
603987203,0,805306430,0,2852126750,11665461,393289,2432720960,2147537025,2147537026,
2147537027,2147537028,2147536901,2147537030,2147537031,2147537032,2147536993,
2395000842,2395000907,2147536996,2147483752,2386575374,2147537001,2147536912,
2147516433,2147536914,2147528851,2147537003,2147536917,2357252118,2147537007,
2147537008,2147537009,2147537010,2147537051,2147537011,2147536989,2147536926,
2147536927,2147536992,2046873633,2147536994,2147536995,2046873636,2147536997,
2147536934,2147537013,2034290728,2038485033,2147537002,2051067947,2147537004,
2147537018,2147537006,2046873647,2046873648,2046873649,2046873650,2051067955,
2147536948,2088816693,2147536950,2147536951,2147536952,2147536953,2093011002,
2168508475,2168508476,2168508477,2168508478,2147491967,2147537019,2147537020,
2147537021,2147537022,2147491968,2147537034,2147537035,2147491982,2147537046,
2147483683,603986771,603982661,0,2147483683,603986771,603999126,0,2147483683,
603986771,603982727,0,2147483683,603986771,603982823,0,2147483683,2147483772,
603986771,603995185,603995187,0,2147483683,603986771,603982853,0,2147483683,
603986771,603984584,0,4026531840,0,2768240771,0,393291,2311282752,2147698753,
2428710978,2302875715,2307063876,2307057733,2307051590,2307045447,2147655752,
2147649609,2302832714,2302826571,2302820428,2147547213,2147625038,2147559503,
2147618896,2147618897,2185308178,2147590227,2147612756,2147606613,2147598422,
2147590231,2256642136,2277613657,2147559514,2147618898,2147584122,2147565725,
2147559518,2147565691,2281789564,2285983870,2285990015,2147749923,2235822116,
2147559589,2147559590,2269206656,2273400963,2147559593,2269206660,2269206661,
2269206662,2269206663,2147618862,2147571850,2147571851,2147571852,2147571864,
2147741747,2147553460,2147571765,2147547318,2147547319,2147571865,2147559588,
2021906490,2030069819,2030288956,2164500541,2026082366,2026076223,2147541180,
2147535037,2147535038,2147535039,2147528896,2147522754,2147516611,2147510468,
2147510469,2147492038,2147483847,1073809836,805306566,3221225553,0,2583691420,
7733301,65537,4026531840,268435456,603986771,603983385,604006139,0,805306426,
3221225565,0,603986771,603983388,0,805306440,3221225571,0,603986771,603983401,
0,805306556,3221225577,0,603986771,603983416,0,805306444,3221225583,0,603986771,
603983469,0,805306445,3221225589,0,805306490,3221225592,0,805306491,3221225595,
0,603986771,603983481,0,805306403,3221225601,0,1073766408,805306450,3221225605,
0,1073766664,805306450,3221225609,0,603986771,603983509,0,603986771,603983555,
0,805306447,3221225618,0,603986771,603983570,0,603986771,603983583,0,805306442,
3221225627,0,603986771,603983636,0,603986771,603983679,0,805306439,3221225636,
0,805306438,3221225639,0,603986771,603983692,0,603986771,603983707,0,603986771,
603983722,0,603986771,603983737,0,603986771,603983770,0,603986771,603983787,
0,603986771,603983800,0,603986771,603983813,0,603986771,603983832,0,603986771,
603983845,0,603986771,603983858,0,805306495,3221225675,0,1073752584,805306403,
3221225679,0,0,4026531840,2852126736,11730997,327735,2290114624,2290114593,2147508322,
2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,2273337385,
2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,2264948784,
2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,2147508279,
2147508280,2147508281,2147508282,2147508283,2147508284,2164285501,2155896862,
2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,2147508325,
2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,2147508336,
2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,2147508356,
2147508366,2147491987,2147508374,2147483710,603987057,603982661,0,2147483710,
603987057,603982853,0,2147483710,603987057,603985086,0,2147483710,603987057,
603985114,0,4026531840,0,3087015165,2768240730,0,327725,2327992384,2147631169,
2323785794,2147618883,2273441860,2273435717,2273429574,2147594311,2147588168,
2265022537,2147575882,2147569739,2147563596,2147508301,2202083374,2147522639,
2147557456,2147557457,2206242834,2147528787,2223048788,2147545173,2218840150,
2218831959,2147528792,2147528793,2147522650,2147522638,2147502268,2147496125,
2160232510,2193780799,2147557458,2181077086,2147522724,2147522725,2147522726,
2147522729,2147514548,2147508406,2147508407,2147496126,2147496127,2147489984,
2147483842,805306440,3221225523,0,603987057,603983401,0,805306556,3221225529,
0,603987057,603983416,0,805306444,3221225535,0,1073765384,805306445,3221225539,
0,805306445,3221225542,0,1073766408,805306450,3221225546,0,1073766664,805306450,
3221225550,0,603987057,603983509,0,603987057,603983555,0,805306447,3221225559,
0,603987057,603983583,0,805306442,3221225565,0,603987057,603985232,0,603987057,
603983679,0,805306439,3221225574,0,805306438,3221225577,0,603987057,603983692,
0,603987057,603983707,0,603987057,603983722,0,603987057,603983737,0,603987057,
603983770,0,603987057,603983787,0,603987057,603983800,0,603987057,603986653,
0,2583691342,8978485,65537,4026531840,268435456,603987057,603983842,603987839,
0,4026531840,2499805246,0,65537,4026531840,0,0,2852126736,11730997,327735,2290114624,
2290114593,2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,
2273337384,2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,
2264948783,2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,
2109759510,2147508279,2147508280,2147508281,2147508282,2147508283,2147508284,
2164285501,2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,
2210422884,2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,
2147508335,2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,
2147508352,2147508356,2147508366,2147491987,2147508374,2147483712,603987279,
603982661,0,2147483712,603987279,603982853,0,2147483712,603987279,603985086,
0,2147483712,603987279,603985114,0,4026531840,0,3087015379,2768240724,0,327723,
2319603776,2147631169,2315397186,2147618883,2269247556,2269241413,2269235270,
2147594311,2147588168,2260828233,2147575882,2147569739,2147563596,2147508301,
2202083374,2147522639,2147557456,2147557457,2206242834,2147528787,2218854484,
2147545173,2214645846,2214637655,2147528792,2147528793,2147522650,2147522638,
2147502268,2147496125,2189465694,2147496127,2147557458,2147522724,2147522725,
2147522726,2147522729,2147514548,2147508406,2147508407,2147496126,2147489984,
2147483842,805306440,3221225521,0,603987279,603983401,0,805306556,3221225527,
0,603987279,603983416,0,805306444,3221225533,0,1073765384,805306445,3221225537,
0,805306445,3221225540,0,1073766408,805306450,3221225544,0,1073766664,805306450,
3221225548,0,603987279,603983509,0,603987279,603983555,0,805306447,3221225557,
0,603987279,603983583,0,805306442,3221225563,0,603987279,603985232,0,603987279,
603983679,0,805306439,3221225572,0,805306438,3221225575,0,603987279,603983692,
0,603987279,603983707,0,603987279,603983722,0,603987279,603983737,0,603987279,
603983770,0,603987279,603983787,0,2583691344,8847413,65537,4026531840,268435456,
603987279,603983810,603987417,0,4026531840,2499805248,0,65537,4026531840,0,0,
2852126736,11730997,327735,2290114624,2290114593,2147508322,2147508323,2281725988,
2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,2273337387,
2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,2264948786,
2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,2147508281,
2147508282,2147508283,2147508284,2164285501,2155896862,2223005727,2147508286,
2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,2147508329,
2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,2147508338,
2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,2147491987,
2147508374,2147483713,603987493,603982661,0,2147483713,603987493,603982853,0,
2147483713,603987493,603985086,0,2147483713,603987493,603985114,0,4026531840,
0,3087015589,2768240721,0,327722,2147489984,2147631169,2311202882,2147618883,
2269247556,2269241413,2269235270,2147594311,2147588168,2260828233,2147575882,
2147569739,2147563596,2147508301,2202083374,2147522639,2147557456,2147557457,
2206242834,2147528787,2218854484,2147545173,2214645846,2214637655,2147528792,
2147528793,2147522650,2147522638,2147502268,2147496125,2189465694,2147496127,
2147557458,2147522724,2147522725,2147522726,2147522729,2147514548,2147508406,
2147508407,2147496126,2147483842,805306440,3221225520,0,603987493,603983401,
0,805306556,3221225526,0,603987493,603983416,0,805306444,3221225532,0,1073765384,
805306445,3221225536,0,805306445,3221225539,0,1073766408,805306450,3221225543,
0,1073766664,805306450,3221225547,0,603987493,603983509,0,603987493,603983555,
0,805306447,3221225556,0,603987493,603983583,0,805306442,3221225562,0,603987493,
603985232,0,603987493,603983679,0,805306439,3221225571,0,805306438,3221225574,
0,603987493,603983692,0,603987493,603983707,0,603987493,603983722,0,603987493,
603983737,0,603987493,603983770,0,2583691345,8781877,65537,4026531840,268435456,
603987493,603983797,603987627,0,4026531840,2499805249,0,65537,4026531840,0,0,
2852126736,11730997,327735,2290114624,2290114593,2147508322,2147508323,2281725988,
2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,2273337387,
2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,2264948786,
2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,2147508281,
2147508282,2147508283,2147508284,2164285501,2155896862,2223005727,2147508286,
2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,2147508329,
2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,2147508338,
2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,2147491987,
2147508374,2147483714,603987715,603982661,0,2147483714,603987715,603982853,0,
2147483714,603987715,603985086,0,2147483714,603987715,603985114,0,4026531840,
0,2852126724,8716341,131076,2147483732,2147483733,2147483730,2147483731,268435456,
603983784,603988063,0,4026531840,3087015801,2768240712,0,327721,2147489984,2147522638,
2307008578,2147618883,2265053252,2265047109,2265040966,2147594311,2147588168,
2256633929,2147575882,2147569739,2147563596,2147508301,2093031470,2147522639,
2147557456,2147557457,2185271314,2147528787,2214660180,2147545173,2210451542,
2210443351,2147528792,2147528793,2147522650,2147557458,2147502268,2147496125,
2185271390,2147496127,2147522724,2147522725,2147522726,2147522729,2147514548,
2147508406,2147508407,2147496126,2147483842,805306440,3221225519,0,603987715,
603983401,0,805306556,3221225525,0,603987715,603983416,0,805306444,3221225531,
0,1073765384,805306445,3221225535,0,805306445,3221225538,0,1073766408,805306450,
3221225542,0,1073766664,805306450,3221225546,0,603987715,603983509,0,603987715,
603983555,0,805306447,3221225555,0,603987715,603983583,0,805306442,3221225561,
0,603987715,603985232,0,603987715,603983679,0,805306439,3221225570,0,805306438,
3221225573,0,603987715,603983692,0,603987715,603983707,0,603987715,603983722,
0,603987715,603983737,0,603987715,603987703,0,4026531840,2499805250,0,65537,
4026531840,0,0,2852126736,11730997,327735,2290114624,2290114593,2147508322,2147508323,
2281725988,2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,
2273337387,2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,
2264948786,2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,
2147508281,2147508282,2147508283,2147508284,2164285501,2155896862,2223005727,
2147508286,2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,
2147508329,2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,
2147508338,2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,
2147491987,2147508374,2147483711,603987927,603982661,0,2147483711,603987927,
603982853,0,2147483711,603987927,603985086,0,2147483711,603987927,603985114,
0,4026531840,0,603987917,0,2852126724,11599925,1,2147483727,268435456,603983829,
603987203,0,4026531840,0,3087016025,2768240721,0,327724,2323798080,2147631169,
2319591490,2147618883,2269247556,2269241413,2269235270,2147594311,2147588168,
2260828233,2147575882,2147569739,2147563596,2147508301,2202083374,2147522639,
2147557456,2147557457,2206242834,2147528787,2218854484,2147545173,2214645846,
2214637655,2147528792,2147528793,2147522650,2147522638,2147502268,2147496125,
2189465694,2189586495,2147557458,2147522724,2147522725,2147522726,2147522729,
2147514548,2147508406,2147508407,2147496126,2147496127,2147489984,2147483842,
805306440,3221225522,0,603987927,603983401,0,805306556,3221225528,0,603987927,
603983416,0,805306444,3221225534,0,1073765384,805306445,3221225538,0,805306445,
3221225541,0,1073766408,805306450,3221225545,0,1073766664,805306450,3221225549,
0,603987927,603983509,0,603987927,603983555,0,805306447,3221225558,0,603987927,
603983583,0,805306442,3221225564,0,603987927,603985232,0,603987927,603983679,
0,805306439,3221225573,0,805306438,3221225576,0,603987927,603983692,0,603987927,
603983707,0,603987927,603983722,0,603987927,603983737,0,603987927,603983770,
0,603987927,603983787,0,603987927,603983800,0,603987927,603987915,0,4026531840,
2499805247,0,65537,4026531840,0,0,2852126736,11730997,327735,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,
2147508279,2147508280,2147508281,2147508282,2147508283,2147508284,2164285501,
2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,
2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,
2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,
2147508356,2147508366,2147491987,2147508374,2147483715,603988161,603982661,0,
2147483715,603988161,603982853,0,2147483715,603988161,603985086,0,2147483715,
603988161,603985114,0,4026531840,0,2852126732,8650805,131078,2147491928,2164260897,
2147483734,2151677963,2147483735,2147500121,268435456,603983761,603988281,0,
268435456,603983764,603988281,0,268435456,603983767,603988281,0,4026531840,3087016243,
2768240709,0,327720,2147489984,2147522638,2147483842,2147618883,2265053252,2265047109,
2265040966,2147594311,2147588168,2256633929,2147575882,2147569739,2147563596,
2147508301,2093031470,2147522639,2147557456,2147557457,2185271314,2147528787,
2214660180,2147545173,2210451542,2210443351,2147528792,2147528793,2147522650,
2147557458,2147502268,2147496125,2185271390,2147496127,2147522724,2147522725,
2147522726,2147522729,2147514548,2147508406,2147508407,2147496126,805306440,
3221225518,0,603988161,603983401,0,805306556,3221225524,0,603988161,603983416,
0,805306444,3221225530,0,1073765384,805306445,3221225534,0,805306445,3221225537,
0,1073766408,805306450,3221225541,0,1073766664,805306450,3221225545,0,603988161,
603983509,0,603988161,603983555,0,805306447,3221225554,0,603988161,603983583,
0,805306442,3221225560,0,603988161,603985232,0,603988161,603983679,0,805306439,
3221225569,0,805306438,3221225572,0,603988161,603983692,0,603988161,603983707,
0,603988161,603983722,0,603988161,603988139,0,4026531840,2499805251,0,65537,
4026531840,0,0,2852126736,11730997,327735,2290114624,2290114593,2147508322,2147508323,
2281725988,2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,
2273337387,2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,
2264948786,2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,
2147508281,2147508282,2147508283,2147508284,2164285501,2155896862,2223005727,
2147508286,2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,
2147508329,2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,
2147508338,2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,
2147491987,2147508374,2147483716,603988369,603982661,0,2147483716,603988369,
603982853,0,2147483716,603988369,603985086,0,2147483716,603988369,603985114,
0,4026531840,0,2852126724,8585269,65539,2155872346,2147483739,2147483740,268435456,
603983734,603988485,0,4026531840,0,3087016447,2768240706,0,327719,2147489984,
2147522638,2147483842,2147557458,2244081732,2260852805,2260846662,2147594311,
2147588168,2252439625,2147575882,2147569739,2147563596,2147508301,2093031470,
2147522639,2147557456,2147557457,2084608018,2147528787,2210465876,2147545173,
2206257238,2206249047,2147528792,2147528793,2147522650,2147522724,2147502268,
2147496125,2181077086,2147496127,2147522725,2147522726,2147522729,2147514548,
2147508406,2147508407,2147496126,805306440,3221225517,0,603988369,603983401,
0,805306556,3221225523,0,603988369,603983416,0,805306444,3221225529,0,1073765384,
805306445,3221225533,0,805306445,3221225536,0,1073766408,805306450,3221225540,
0,1073766664,805306450,3221225544,0,603988369,603983509,0,603988369,603983555,
0,805306447,3221225553,0,603988369,603983583,0,805306442,3221225559,0,603988369,
603985232,0,603988369,603983679,0,805306439,3221225568,0,805306438,3221225571,
0,603988369,603983692,0,603988369,603983707,0,603988369,603988357,0,4026531840,
2499805252,0,65537,4026531840,0,0,2852126736,11730997,327735,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,
2147508279,2147508280,2147508281,2147508282,2147508283,2147508284,2164285501,
2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,
2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,
2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,
2147508356,2147508366,2147491987,2147508374,2147483717,603988571,603982661,0,
2147483717,603988571,603982853,0,2147483717,603988571,603985086,0,2147483717,
603988571,603985114,0,4026531840,0,2852126724,8519733,65538,2147483741,2143289375,
268435456,603983719,603988683,0,4026531840,3087016645,2768240703,0,327718,2147489984,
2147522638,2147483842,2147557458,2147522724,2239881285,2256652358,2147594311,
2147588168,2248245321,2147575882,2147569739,2147563596,2147508301,2093031470,
2147522639,2147557456,2147557457,2084608018,2147528787,2206271572,2147545173,
2202062934,2202054743,2147528792,2147528793,2147522650,2147522725,2147502268,
2147496125,2176882782,2147496127,2147522726,2147522729,2147514548,2147508406,
2147508407,2147496126,805306440,3221225516,0,603988571,603983401,0,805306556,
3221225522,0,603988571,603983416,0,805306444,3221225528,0,1073765384,805306445,
3221225532,0,805306445,3221225535,0,1073766408,805306450,3221225539,0,1073766664,
805306450,3221225543,0,603988571,603983509,0,603988571,603983555,0,805306447,
3221225552,0,603988571,603983583,0,805306442,3221225558,0,603988571,603985232,
0,603988571,603983679,0,805306439,3221225567,0,805306438,3221225570,0,603988571,
603983692,0,603988571,603988561,0,4026531840,2499805253,0,65537,4026531840,0,
0,2852126736,11730997,327735,2290114624,2290114593,2147508322,2147508323,2281725988,
2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,2273337387,
2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,2264948786,
2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,2147508281,
2147508282,2147508283,2147508284,2164285501,2155896862,2223005727,2147508286,
2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,2147508329,
2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,2147508338,
2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,2147491987,
2147508374,2147483718,603988771,603982661,0,2147483718,603988771,603982853,0,
2147483718,603988771,603985086,0,2147483718,603988771,603985114,0,4026531840,
0,2852126724,8454197,65539,2155872266,2147483715,2147483742,268435456,603983704,
603988879,0,4026531840,0,3087016841,2768240700,0,327717,2147489984,2147522638,
2147483842,2147557458,2147522724,2147522725,2235680838,2147594311,2147588168,
2244051017,2147575882,2147569739,2147563596,2147508301,2093031470,2147522639,
2147557456,2147557457,2084608018,2147528787,2202077268,2147545173,2197868630,
2197860439,2147528792,2147528793,2147522650,2147522726,2147502268,2147496125,
2172688478,2147496127,2147522729,2147514548,2147508406,2147508407,2147496126,
805306440,3221225515,0,603988771,603983401,0,805306556,3221225521,0,603988771,
603983416,0,805306444,3221225527,0,1073765384,805306445,3221225531,0,805306445,
3221225534,0,1073766408,805306450,3221225538,0,1073766664,805306450,3221225542,
0,603988771,603983509,0,603988771,603983555,0,805306447,3221225551,0,603988771,
603983583,0,805306442,3221225557,0,603988771,603985232,0,603988771,603983679,
0,805306439,3221225566,0,805306438,3221225569,0,603988771,603988759,0,4026531840,
2499805254,0,65537,4026531840,0,0,2852126736,11730997,327735,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,
2147508279,2147508280,2147508281,2147508282,2147508283,2147508284,2164285501,
2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,
2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,
2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,
2147508356,2147508366,2147491987,2147508374,2147483719,603988955,603982661,0,
2147483719,603988955,603982853,0,2147483719,603988955,603985086,0,2147483719,
603988955,603985114,0,4026531840,0,2768240695,0,327716,2147489984,2147522638,
2147483842,2147557458,2147522724,2147522725,2147522726,2147594311,2147588168,
2223079497,2147575882,2147569739,2147563596,2147508301,2093031470,2147522639,
2147557456,2147557457,2084608018,2147528787,2197882964,2147545173,2193674326,
2193666135,2147528792,2147528793,2147522650,2147522729,2147502268,2147496125,
2168494174,2147496127,2147514548,2147508406,2147508407,2147496126,805306440,
3221225513,0,603988955,603983401,0,805306556,3221225519,0,603988955,603983416,
0,805306444,3221225525,0,1073765384,805306445,3221225529,0,805306445,3221225532,
0,1073766408,805306450,3221225536,0,1073766664,805306450,3221225540,0,603988955,
603983509,0,603988955,603983555,0,805306447,3221225549,0,603988955,603983583,
0,805306442,3221225555,0,603988955,603985232,0,603988955,603983679,0,805306439,
3221225564,0,0,4026531840,0,2852126736,11730997,327735,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,
2147508279,2147508280,2147508281,2147508282,2147508283,2147508284,2164285501,
2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,
2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,
2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,
2147508356,2147508366,2147491987,2147508374,2147483720,603989278,603982661,0,
2147483720,603989278,603982853,0,2147483720,603989278,603985086,0,2147483720,
603989278,603989127,0,4026531840,0,2852126799,11010101,327732,2290147392,2290139169,
2147504226,2147512419,2281750564,2281783301,2147532838,2298527793,2147536936,
2269171753,2269245450,2269147179,2147555436,2306916406,2298568814,2256584751,
2256584752,2105651217,2256584754,2256584755,2147532852,2252390453,2109870102,
2147532855,2147532856,2147532857,2147532858,2147532859,2147532860,2164310077,
2155872286,2214629407,2147532862,2147512413,2206208096,2147496033,2202009700,
2147586149,2147528809,2147551338,2147551339,2147573871,2147577968,2147577969,
2147582066,2147582067,2147594357,2147598463,2147598464,2147635332,2147602574,
2147629206,603989366,0,268435456,603989263,603989051,0,268435456,603989266,603989051,
0,268435456,603989269,603989051,0,268435456,603989272,603989051,0,268435456,
603989275,603989051,0,603989769,0,603980682,0,603984459,0,2147483726,268435456,
1073765640,805306446,0,603989737,0,2147483729,268435456,1073766152,805306449,
0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,
268435456,603990728,0,603990610,0,604000730,0,2147483813,268435456,603999991,
0,2147483814,268435456,604000205,0,2147483828,268435456,603983329,603999593,
0,268435456,603983349,0,2147483842,268435456,604001864,603989051,0,4026531840,
0,1073762064,805306440,0,1073762320,805306440,0,1073762576,805306440,0,1073762832,
805306440,0,1073763088,805306440,0,2768240689,0,327715,2147489984,2147522638,
2147483842,2147557458,2147522724,2147522725,2147522726,2147522729,2147582024,
2139095113,2147575882,2147569739,2147563596,2147508301,2093031470,2147522639,
2147557456,2147557457,2084608018,2147528787,2176911444,2147545173,2189480022,
2189471831,2147528792,2147528793,2147522650,2147514548,2147502268,2147496125,
2164299870,2147496127,2147508406,2147508407,2147496126,805306440,3221225512,
0,603989278,603983401,0,805306556,3221225518,0,603989278,603983416,0,805306444,
3221225524,0,1073765384,805306445,3221225528,0,805306445,3221225531,0,1073766408,
805306450,3221225535,0,1073766664,805306450,3221225539,0,603989278,603983509,
0,603989278,603983555,0,805306447,3221225548,0,603989278,603983583,0,805306442,
3221225554,0,603989278,603985232,0,0,4026531840,2852126736,11796533,327727,2327863360,
2147508257,2302697521,2327863350,2185256996,2260754437,2147508262,2147508286,
2252365864,2252365865,2252365834,2147508331,2147508332,2147508324,2239774734,
2239782959,2239782960,2084593681,2239782962,2239782963,2147508276,2235588661,
2067816470,2147508279,2147508280,2147508281,2147508282,2147508283,2147508284,
2147508285,2051039262,2147508351,2147508325,2147483752,2147508329,2147508330,
2181062766,2147508335,2147508336,2147508337,2147508338,2164285555,2147508341,
2147508352,2147508366,2147491987,2147508374,2147483721,603989541,603982661,0,
2147483721,603989541,603982853,0,2147483721,603989541,603985086,0,2147483721,
603989541,603989434,0,4026531840,0,2852126776,11862069,327724,2319470656,2147495969,
2294296625,2315268150,2185244708,2260774917,2147495974,2147495998,2147500072,
2248163369,2248237066,2147514475,2147518572,2147483748,2264977518,2231382063,
2231382064,2084642833,2231382066,2231382067,2147495988,2227187765,2067890198,
2147495991,2147495992,2147495993,2147495994,2147495995,2147495996,2147495997,
2051014686,2147561599,2147549285,2147491945,2147514474,2147537007,2147541104,
2147541105,2147545202,2147545203,2147557493,2147561600,2147565710,2147592342,
268435456,603989538,603989051,0,603989769,0,603980682,0,603984459,0,2147483726,
268435456,1073765640,805306446,0,603989737,0,2147483729,268435456,1073766152,
805306449,0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,
0,2147483738,268435456,603990728,0,603990610,0,604000730,0,2147483813,268435456,
603999991,0,2147483814,268435456,604000205,0,2147483828,268435456,603983329,
603999593,0,268435456,603983349,0,4026531840,1073763600,805306441,0,2768240686,
0,327713,2147483840,2147516494,2147551314,2147516585,2147516580,2147516581,2147516582,
2147508404,2147502262,2122410057,2147569738,2147563595,2147557452,2147502157,
2093025326,2147516495,2147551312,2147551313,2080407570,2147522643,2093019220,
2147539029,2088810582,2164299863,2147522648,2147522649,2147516506,2147502263,
2147496124,2147489981,2155905118,2147489983,2147489982,603989541,603983401,0,
805306556,3221225513,0,603989541,603983416,0,805306444,3221225519,0,1073765384,
805306445,3221225523,0,805306445,3221225526,0,1073766408,805306450,3221225530,
0,1073766664,805306450,3221225534,0,603989541,603983509,0,603989541,603983555,
0,805306447,3221225543,0,603989541,603983583,0,805306442,3221225549,0,603989541,
603985232,0,0,4026531840,0,2852192261,6225973,1,2147483712,2147483726,268435456,
1073765640,805306446,0,4026531840,2852126775,11927605,327723,2315268160,2147487777,
2290094129,2311065654,2147487780,2155909125,2147487782,2147541093,2147491880,
2164269097,2239840266,2147506283,2147510380,2147483753,2227283982,2227179567,
2227179568,2084634641,2227179570,2227179571,2147487796,2222985269,2067882006,
2147487799,2147487800,2147487801,2147487802,2147487803,2147487804,2147487805,
2147487806,2147553407,2147506282,2181083246,2147528815,2147532912,2147532913,
2147537010,2147537011,2147549301,2147553408,2147557518,2147584150,603989769,
0,603980682,0,603984459,0,2147483726,268435456,1073765640,805306446,0,603989737,
0,2147483729,268435456,1073766152,805306449,0,2147483733,268435456,603990460,
0,603990666,0,603990509,0,603990558,0,2147483738,268435456,603990728,0,603990610,
0,604000730,0,2147483813,268435456,603999991,0,2147483814,268435456,604000205,
0,2147483828,268435456,603983329,603999593,0,2147483830,268435456,604000536,
0,604000550,0,4026531840,2583691370,11993141,131075,4026531840,0,0,2147483728,
603989749,0,2147483728,603989759,0,2852192260,12058677,1,2147483754,268435456,
1073765896,805306448,0,4026531840,0,2852192260,12124213,1,2147483755,268435456,
1073765896,805306448,0,4026531840,0,2852126728,12189749,327722,2311069760,2147491873,
2285903921,2147491894,2147491876,2155880453,2147491878,2147491941,2147491880,
2164269097,2239766538,2147491947,2147491948,2147491945,2256543854,2222989359,
2222989360,2084577297,2222989362,2222989363,2147491892,2218795061,2067800086,
2147491895,2147491896,2147491897,2147491898,2147491899,2147491900,2147491901,
2147491902,2147491967,2147491946,2147491951,2147491952,2147491953,2147491954,
2164269171,2147491957,2147491968,2147491982,2147483795,2147483725,603989919,
603982853,0,2147483725,603989919,603989823,0,4026531840,2852126771,12255285,
327721,2311069760,2147584033,2285996081,2147584054,2147584036,2155909125,2147584038,
2147541093,2147502120,2164279337,2239840266,2147506283,2147510380,2147483753,
2256580718,2223081519,2223081520,2084634641,2223081522,2223081523,2147584052,
2218887221,2067882006,2147584055,2147584056,2147584057,2147584058,2147584059,
2147584060,2147584061,2147584062,2147553407,2147506282,2147528815,2147532912,
2147532913,2147537010,2147537011,2147549301,2147553408,2147557518,268435456,
1073765128,805306445,0,2147483726,268435456,1073765640,805306446,0,603984459,
0,603989737,0,2147483729,268435456,1073766152,805306449,0,2147483733,268435456,
603990460,0,603990666,0,603990509,0,603990558,0,2147483738,268435456,603990728,
0,603990610,0,604000730,0,2147483813,268435456,603999991,0,2147483814,268435456,
604000205,0,2147483828,268435456,603983329,603999593,0,603980682,0,4026531840,
2768240665,0,262166,2147526736,2147526737,2189434898,2147498067,2202046548,2202040405,
2202032214,2147498071,2147498072,2193635417,2147491930,2168463438,2147526738,
2147532877,2134943790,2147491919,2147491934,2164269220,2147492005,2147492006,
2147492009,2147483828,1073765384,805306445,3221225500,0,805306445,3221225503,
0,1073766408,805306450,3221225507,0,1073766664,805306450,3221225511,0,603989919,
603983509,0,603989919,603983555,0,805306447,3221225520,0,0,4026531840,0,2852126732,
5570613,327725,2319466560,2147500065,2294300721,2319466550,2147500068,2155888645,
2147500070,2147500133,2168471592,2243969065,2243969034,2147500139,2147500140,
2147483752,2231386126,2231386159,2231386160,2084585489,2231386162,2231386163,
2147500084,2227191861,2067808278,2147500087,2147500088,2147500089,2147500090,
2147500091,2147500092,2147500093,2147500094,2147500159,2147500137,2147500138,
2181054574,2147500143,2147500144,2147500145,2147500146,2164277363,2147500149,
2147500160,2147500174,2147491987,2147500182,2147483724,603990140,603990033,0,
2147483724,603990140,603982853,0,2147483724,603990140,603989635,0,4026531840,
0,2583756904,5439541,65538,4026531840,0,603990041,0,0,2785017860,5505077,327726,
2323644480,2147483681,2298478641,2323644470,2147483684,2181038085,2147483686,
2147487847,2248146984,2248146985,2248146954,2147483755,2147483756,2147483749,
2235564046,2235564079,2235564080,2084569105,2235564082,2235564083,2147483700,
2231369781,2067791894,2147483703,2147483704,2147483705,2147483706,2147483707,
2147483708,2147483709,2147483710,2147483775,2147483752,2147483753,2147483754,
2181038190,2147483759,2147483760,2147483761,2147483762,2164260979,2147483765,
2147483776,2147483790,2147483795,2147483798,603990095,0,603982725,0,4026531840,
2852192260,5439541,1,2147483752,268435456,603990105,603989971,0,4026531840,0,
2852126725,7602229,1,2147483670,2147483834,268435456,603990117,604000622,0,1073764880,
805306444,0,1073764632,805306444,0,2852126732,7602229,65539,2155880551,2143289445,
2147500179,268435456,603983617,603999593,0,268435456,603983627,604000526,0,2147483817,
603983630,604000255,0,4026531840,0,3087018168,2768240670,0,262169,2147532880,
2147532881,2206218258,2147504211,2206246996,2206240853,2206232662,2218807383,
2147504216,2197835865,2147498074,2172663886,2147539020,2147483725,2134949934,
2147498063,2147532882,2147498078,2164275364,2147498149,2160081062,2147498153,
2147489972,2147483830,2147483831,805306444,3221225503,0,1073765384,805306445,
3221225507,0,805306445,3221225510,0,1073766408,805306450,3221225514,0,1073766664,
805306450,3221225518,0,603990140,603983509,0,603990140,603983555,0,805306447,
3221225527,0,603990140,603990120,0,4026531840,2499805260,0,65537,4026531840,
0,0,2852126736,5570613,327725,2319474752,2147508257,2294308913,2319474742,2147508260,
2155896837,2147508262,2147508325,2168479784,2243977257,2243977226,2147508331,
2147508332,2147483752,2231386126,2231394351,2231394352,2084593681,2231394354,
2231394355,2147508276,2227200053,2067816470,2147508279,2147508280,2147508281,
2147508282,2147508283,2147508284,2147508285,2147508286,2147508351,2147508329,
2147508330,2181062766,2147508335,2147508336,2147508337,2147508338,2164285555,
2147508341,2147508352,2147508366,2147491987,2147508374,2147483722,603990370,
603982661,0,2147483722,603990370,603982853,0,2147483722,603990370,603985086,
0,2147483722,603990370,603990272,0,4026531840,0,2852126772,12320821,327722,2311073856,
2147487777,2285899825,2306871350,2147487780,2155909125,2147487782,2147541093,
2147491880,2164269097,2239840266,2147506283,2147510380,2147483753,2256580718,
2222985263,2222985264,2084634641,2222985266,2222985267,2147487796,2218790965,
2067882006,2147487799,2147487800,2147487801,2147487802,2147487803,2147487804,
2147487805,2147487806,2147553407,2147506282,2147528815,2147532912,2147532913,
2147537010,2147537011,2147549301,2147553408,2147557518,2147584150,603989769,
0,603980682,0,603984459,0,2147483726,268435456,1073765640,805306446,0,603989737,
0,2147483729,268435456,1073766152,805306449,0,2147483733,268435456,603990460,
0,603990666,0,603990509,0,603990558,0,2147483738,268435456,603990728,0,603990610,
0,604000730,0,2147483813,268435456,603999991,0,2147483814,268435456,604000205,
0,2147483828,268435456,603983329,603999593,0,268435456,603983349,0,4026531840,
2768240683,0,327712,2147483840,2147516494,2147551314,2147508404,2147516580,2147516581,
2147516582,2147502262,2147502263,2147516585,2147569738,2147563595,2147557452,
2147502157,2093025326,2147516495,2147551312,2147551313,2080407570,2147522643,
2076242004,2147539029,2084616278,2084608087,2147522648,2147522649,2147516506,
2147489982,2147496124,2147489981,2134933598,2147489983,603990370,603983401,0,
805306556,3221225512,0,603990370,603983416,0,805306444,3221225518,0,1073765384,
805306445,3221225522,0,805306445,3221225525,0,1073766408,805306450,3221225529,
0,1073766664,805306450,3221225533,0,603990370,603983509,0,603990370,603983555,
0,805306447,3221225542,0,603990370,603983583,0,805306442,3221225548,0,0,4026531840,
0,2852192260,7274549,1,2147483653,2147483733,268435456,603990460,0,4026531840,
0,2852126726,12386357,1,2147483713,2147483941,268435456,603990474,604007254,
604007244,0,1073744904,805306453,0,0,1073752080,805306453,0,2852192262,7143477,
1,2147483711,2147483739,268435456,1073768456,805306459,603990489,0,4026531840,
0,3087018471,2768240648,0,1,2147483739,2583691327,12451893,65537,4026531840,
268435456,1073768720,3221225484,0,4026531840,2499805275,0,65537,4026531840,0,
0,2583691376,12517429,131075,4026531840,0,0,2147483736,603990521,0,2147483736,
603990548,0,2852192260,12582965,1,2147483760,268435456,603990531,604007558,0,
4026531840,0,2852126727,12648501,1,2147483713,2147483945,268435456,603990545,
604007716,604007710,604007558,0,1073752080,805306456,0,1073766936,805306456,
0,2852192260,12714037,1,2147483761,268435456,603990531,604007558,0,4026531840,
0,2583691378,12779573,131075,4026531840,0,0,2147483737,603990570,0,2147483737,
603990597,0,2852192260,12845109,1,2147483762,268435456,603990580,604007744,0,
4026531840,0,2852126727,12648501,1,2147483713,2147483947,268435456,603990594,
604007810,604007804,604007744,0,1073752080,805306457,0,1073766936,805306457,
0,2852192260,12910645,1,2147483763,268435456,603990580,604007744,0,4026531840,
0,1073769744,805306461,0,2852126726,12976181,65538,2147483765,2143295505,2147483742,
603990622,0,2147483742,603990632,0,4026531840,2852192260,13041717,1,2147483765,
268435456,1073769992,805306462,0,4026531840,0,2852192260,9568309,1,2147483665,
268435456,603990642,603991692,0,4026531840,0,2852126727,9699381,65538,2147483711,
2143295507,268435456,603990656,0,268435456,1073770264,805306462,0,4026531840,
0,2852192260,9764917,1,2147483667,268435456,1073770272,805306462,0,4026531840,
0,2583691374,13107253,131075,4026531840,0,0,2147483735,603990678,0,2147483735,
603990705,0,2852192260,13172789,1,2147483758,268435456,603990688,604007286,0,
4026531840,0,2852126727,12648501,1,2147483713,2147483943,268435456,603990702,
604007530,604007524,604007286,0,1073752080,805306455,0,1073766936,805306455,
0,2852192260,13238325,1,2147483759,268435456,603990688,604007286,0,4026531840,
0,1073771280,805306465,0,2852192261,6225973,1,2147483712,2147483746,268435456,
1073771528,805306466,0,4026531840,2852126726,13303861,327739,2294292544,2294292513,
2147491938,2147491939,2285903908,2285903877,2285903910,2315264049,2281709608,
2281709609,2281709578,2281709611,2147491948,2332041270,2273320974,2273321007,
2273321008,2105548817,2273321010,2273321011,2273321012,2273321013,2109743126,
2147491895,2147491896,2147491897,2147491898,2277515323,2147491900,2168463421,
2155880478,2155880479,2147491902,2227175487,2147491933,2222989408,2147491937,
2218795108,2147491941,2147491942,2147491944,2147491945,2147491946,2147491947,
2193629294,2147491951,2147491952,2147491953,2147491954,2176852083,2147491956,
2147491957,2147491967,2147491968,2147491972,2147491982,2147491987,2147491990,
2147491995,1610612738,67119886,67119908,0,603990865,0,4026531840,0,2852192263,
7143477,1,2147483711,2147483739,268435456,1073768456,805306459,603990810,603990489,
0,4026531840,2852192260,7405621,1,2147483750,268435456,1073767192,805306458,
0,4026531840,0,603990823,603993891,0,2852126727,12451893,65538,2147483750,2147491903,
268435456,1073767448,805306458,0,268435456,603990837,0,4026531840,0,2852126731,
12451893,65538,2147498086,2147483711,2147483739,268435456,1073768456,805306459,
603990855,603990489,0,268435456,1073768224,805306458,0,4026531840,0,2852192260,
7405621,1,2147483750,268435456,1073767720,805306458,0,4026531840,0,2852126727,
13434933,327738,2290090048,2290090017,2147483746,2147483747,2281701412,2281701381,
2281701414,2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,
2327838774,2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,
2269118516,2269118517,2109734934,2147483703,2147483704,2147483705,2147483706,
2273312827,2147483708,2164260925,2155872286,2231369759,2147483710,2147483741,
2222981216,2147483745,2218786916,2147483749,2147489894,2147483752,2147483753,
2147483754,2147483755,2193621102,2147483759,2147483760,2147483761,2147483762,
2176843891,2147483764,2147483765,2147483775,2147483776,2147483780,2147483790,
2147483795,2147483798,2147483803,603990823,603993891,0,268435456,1073767952,
805306458,0,4026531840,0,2852126748,13500469,196619,2164260904,2185232425,2147516530,
2147516531,2168496192,2160074757,2147500142,2147500143,2147532901,2147508336,
2147508337,2147483748,603990989,603984459,0,2147483748,603990989,603983339,0,
2147483748,603990989,603990666,0,2147483748,603990989,603990509,0,2147483748,
603990989,603990558,0,2147483748,603990989,603990718,0,2147483748,603990989,
603991509,0,4026531840,0,2852192261,6225973,1,2147483712,2147483746,268435456,
1073771528,805306466,0,4026531840,2768240662,0,196621,2147498072,2147498073,
2176852050,2147498067,2172686420,2172680277,2155880494,2147498071,2164283478,
2147491938,2147526756,2147483749,2147483750,1073770760,805306468,3221225491,
0,805306469,3221225494,0,1073766408,805306450,3221225498,0,1073766664,805306450,
3221225502,0,603990989,603983509,0,603990989,603983555,0,0,4026531840,0,2852126736,
13566005,262160,2193645632,2147508337,2147508338,2185257027,2147508340,2168479749,
2147483766,2147491959,2168479784,2147508265,2147508325,2147508336,2147508339,
2147500152,2147508334,2147508335,2147483744,603991457,603991065,0,2147483744,
603991457,603991101,0,2147483744,603991457,603991133,0,2147483744,603991457,
603991141,0,4026531840,2583756918,13631541,65538,4026531840,0,603991073,0,0,
2785017860,13697077,262161,2176847904,2147483761,2147483762,2176847891,2181042239,
2172649477,2147487766,2172649536,2147483688,2147483689,2172649539,2147483749,
2147483759,2147483760,2147483758,2101350415,2147483763,603991099,0,603990979,
0,4026531840,0,603992661,0,2583756919,13762613,65538,4026531840,0,603991109,
0,0,2785017860,13828149,262160,2176847904,2147483761,2147483762,2189430803,2176847935,
2168455173,2147487766,2168455232,2147483688,2147483689,2147483749,2147483759,
2147483760,2147483763,2147483758,2101350415,603991099,0,603990979,0,4026531840,
2583756920,13893685,65538,4026531840,0,603991109,0,0,2852126748,13959221,196621,
2181060648,2189449257,2147526770,2185240643,2147483764,2164287493,2147518574,
2147518575,2155884608,2147530853,2147522672,2147522673,2147526771,268435456,
603991187,603985244,0,603992661,0,2147483746,268435456,1073771528,805306466,
0,603984459,0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,
0,2147483750,268435456,603991519,603985244,0,4026531840,0,1073769744,805306464,
0,2852126727,14024757,65538,2151686166,2147483680,268435456,603991204,603985244,
0,268435456,603991207,0,4026531840,0,1073771032,805306464,0,2852126726,11468853,
131078,2164260928,2151677969,2160066661,2147489815,2147483764,2147483765,603991223,
603991529,0,268435456,603991335,0,4026531840,2852192259,6160437,1,2147483671,
268435456,603991231,0,4026531840,2852192259,9568309,1,2147483665,268435456,603991239,
0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
603991325,603994606,0,268435456,1073775920,805306467,0,4026531840,0,2852192260,
9764917,1,2147483667,268435456,1073774136,805306467,0,4026531840,0,2852192259,
9568309,1,2147483665,268435456,603991343,0,4026531840,2852126727,11534389,393290,
2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,
2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,
2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,
2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,
2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,
2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,
2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,
2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,
2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,
2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,
2147483787,2147483790,2147483795,2147483798,603991429,603994606,0,268435456,
1073776680,805306467,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,
1073775664,805306467,0,4026531840,0,2852126729,14090293,65539,2155872275,2143295503,
2147483711,1073770760,805306464,0,2147483705,268435456,603990715,603984912,603985244,
0,805306469,0,0,2768240671,0,262160,2147545184,2147498081,2181093458,2181064787,
2181087316,2181081173,2185267286,2147510359,2147510360,2147510361,2147504226,
2147498083,2147491940,2147483749,2147538990,2147483750,1073770760,805306468,
3221225494,0,603991457,603991190,0,805306464,3221225500,0,603991457,603991439,
0,1073766408,805306450,3221225507,0,1073766664,805306450,3221225511,0,603991457,
603983509,0,603991457,603983555,0,805306469,3221225520,0,0,4026531840,0,2852192261,
14155829,1,2147483749,2147483750,268435456,603991519,603985244,0,4026531840,
2852192260,7405621,1,2147483750,268435456,1073776920,805306470,0,4026531840,
0,2852126732,14221365,131077,2160066624,2151677969,2155872357,2147496052,2147483765,
2147483751,2147483766,603991593,603992581,603992027,0,2147483751,2147483753,
603991593,603991659,603991661,0,4026531840,0,2852126726,7077941,65538,2147483711,
2143295511,268435456,603991563,0,1073777416,805306472,0,4026531840,2852126733,
11468853,131078,2164277312,2151694353,2160083045,2147483671,2147489908,2147500149,
1073777424,805306472,0,2147483753,603991587,603991659,603991661,0,2147483766,
603991590,603992581,603992027,0,4026531840,0,1073777688,805306472,0,1073757976,
805306485,0,2768240655,0,131077,2147506280,2160081001,2147483766,2147512423,
2147491957,1073742088,805306485,3221225483,0,603991593,603991551,0,1073777160,
805306472,3221225490,0,805306471,3221225493,0,0,4026531840,2852126732,14221365,
131077,2160078912,2151690257,2155884645,2147483764,2147496053,2147483752,2147483753,
603991639,603991659,603991661,0,2147483752,2147483766,603991639,603992581,603992027,
0,4026531840,0,2768240652,0,131076,2147506280,2155886697,2147483766,2147491957,
1073742088,805306485,3221225482,0,603991639,603991551,0,1073777160,805306472,
3221225489,0,0,4026531840,805306473,0,2852192260,14286901,1,2147483764,2147483754,
268435456,603991671,0,4026531840,0,2852126729,6815797,131076,2147483712,2151690257,
2151690341,2147496053,2147483704,268435456,1073758472,1073769744,805306474,0,
603991689,603991879,0,4026531840,0,1073769744,805306474,0,2852126736,13566005,
262160,2193645632,2147508337,2147508338,2185257027,2147508340,2168479749,2147483766,
2147491959,2168479784,2147508265,2147508325,2147508336,2147508339,2147500152,
2147508334,2147508335,2147483743,603991809,603991065,0,2147483743,603991809,
603991101,0,2147483743,603991809,603991133,0,2147483743,603991809,603991728,
0,4026531840,2852126746,13959221,196621,2181046312,2189434921,2147512434,2185236547,
2147483764,2164273157,2147504238,2147504239,2155905088,2147526757,2147508336,
2147508337,2147512435,603991029,0,603992661,0,603984459,0,2147483733,268435456,
603990460,0,603990666,0,603990509,0,603990558,0,2147483746,268435456,1073771528,
805306466,0,2147483750,268435456,603991519,603985244,0,4026531840,0,2785017859,
14352437,262161,2197815360,2147483761,2147483762,2176847891,2147483764,2172649477,
2147483766,2147483767,2181038120,2147483689,2160066627,2147483749,2147483760,
2147483763,2147483758,2147483759,2147483768,603991796,0,4026531840,4026531840,
2852192260,9699381,1,2147483711,268435456,603991806,603991029,0,4026531840,0,
1073770520,805306463,0,3087019841,2768240681,0,262161,2147510368,2147498081,
2181115986,2181087315,2181109844,2181103701,2189484118,2147532887,2147532888,
2147532889,2147504226,2147498083,2147491940,2147483749,2147561518,2147518559,
2147483750,1073770760,805306468,3221225496,0,603991809,603991190,0,805306464,
3221225502,0,603991809,603991439,0,1073742088,805306463,3221225509,0,2583691327,
9699381,65537,4026531840,603991809,603991772,0,1073766408,805306450,3221225520,
0,1073766664,805306450,3221225524,0,603991809,603983509,0,603991809,603983555,
0,805306469,3221225533,0,4026531840,0,2499805279,0,65537,4026531840,0,0,2852126728,
14417973,65539,2155880549,2143289361,2147483765,2147483755,603991895,603991900,
0,2147483755,603991895,603992068,0,4026531840,0,805306475,0,1073769744,805306477,
0,2852126726,12976181,65538,2147483765,2143295505,2147483756,603991912,0,2147483756,
603991922,0,4026531840,2852192260,13041717,1,2147483765,268435456,1073777928,
805306476,0,4026531840,0,2852192259,9568309,1,2147483665,268435456,603991930,
0,4026531840,2852126729,14483509,196620,2181050408,2189439017,2147496050,2147496051,
2147483764,2164273157,2147496046,2147496047,2155884608,2147496037,2147496048,
2147496049,2147483757,268435456,603991956,603991897,603984902,0,603991966,603992359,
0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073778200,805306476,
0,4026531840,0,2852126727,9699381,65538,2147491903,2143289363,268435456,1073778456,
805306476,0,268435456,603991980,0,4026531840,0,2852126730,14549045,65538,2147483764,
2147495955,2147483757,268435456,603991996,603991897,603984902,0,268435456,1073778464,
805306476,0,4026531840,2852192260,9764917,1,2147483667,268435456,1073778728,
805306476,0,4026531840,0,2852126729,14614581,131077,2151690259,2160078871,2147496038,
2134900751,2147495999,2147483705,268435456,603992024,603984912,603985244,0,1073779208,
805306480,0,4026531840,1073778960,805306480,0,2852126730,6815797,131076,2147483712,
2151690257,2151690341,2147496053,2147483761,2147483760,603992045,603992006,603984902,
0,2147483761,603992047,603991879,0,4026531840,805306481,0,2852126729,14614581,
131077,2151690259,2160078871,2147496038,2134900751,2147495999,2147483705,268435456,
603992065,603984912,603985244,0,1073779208,805306481,0,4026531840,1073778960,
805306481,0,2852192260,14155829,1,2147483749,2147483762,268435456,603992078,
0,4026531840,0,2852126726,14680117,131079,2168463424,2160074769,2147491942,2147483711,
2155880549,2147491956,2147491957,1610612738,67121184,67121232,0,603992221,0,
4026531840,0,2852192263,7143477,1,2147483711,2147483739,268435456,1073768456,
805306459,603992108,603990489,0,4026531840,2852126729,14745653,65538,2151688294,
2147483764,2147483754,268435456,603992124,603991671,0,268435456,1073780248,805306482,
0,4026531840,0,2852192260,7405621,1,2147483750,268435456,1073779488,805306482,
0,4026531840,0,2852192260,7405621,1,2147483750,268435456,1073780248,805306482,
0,4026531840,0,603992147,603992243,0,2852126727,12451893,65538,2147483750,2147491903,
268435456,1073779736,805306482,0,268435456,603992161,0,4026531840,0,2852126736,
14876725,65539,2155896934,2147483711,2147498100,2147483739,268435456,1073768456,
805306459,603992185,603990489,0,2147483754,268435456,603992211,603991671,0,268435456,
1073779744,805306482,0,4026531840,0,2852126729,14745653,65538,2151688294,2147483764,
2147483754,268435456,603992201,603991671,0,268435456,1073780520,805306482,0,
4026531840,0,2852192260,7405621,1,2147483750,268435456,1073780016,805306482,
0,4026531840,0,2852192260,7405621,1,2147483750,268435456,1073780520,805306482,
0,4026531840,0,2852126732,14942261,131078,2164260928,2155872273,2147500134,2155872357,
2147489908,2147483765,603992147,603992243,0,2147483754,268435456,603992134,603991671,
0,268435456,1073780752,805306482,0,4026531840,2852126728,14811189,131077,2147491904,
2151686161,2155880549,2147483711,2147491957,2147483763,603992319,603990477,0,
2147483763,603992319,603992027,0,4026531840,0,2852192262,7143477,1,2147483711,
2147483739,268435456,1073768456,805306459,603990489,0,4026531840,0,2785017859,
14680117,131079,2168455232,2160066577,2147487846,2147483711,2155872357,2147487860,
2147483765,603992287,0,4026531840,4026531840,2852192260,12451893,1,2147483711,
268435456,603992297,603992547,0,4026531840,0,1073781016,805306483,0,2852126727,
14811189,131077,2147491904,2151686161,2155880549,2147483711,2147491957,268435456,
1073768720,805306459,0,603992316,603992027,0,4026531840,1073768976,805306484,
0,3087020321,2768240663,0,131078,2147483764,2147510385,2147504242,2151719003,
2151712875,2147489907,805306483,3221225484,0,2583691327,12451893,65537,4026531840,
603992319,603992273,0,805306475,3221225494,0,1073742088,805306484,3221225498,
0,603992319,603992047,0,603992319,603992300,0,4026531840,2499805299,0,65537,
4026531840,0,0,2852126728,13500469,196619,2164269096,2185240617,2147491954,2147491955,
2168455232,2160074757,2147491950,2147491951,2147491941,2147491952,2147491953,
2147483758,603992475,603992383,0,2147483758,603992475,603992407,0,4026531840,
0,2583756864,6225973,65538,4026531840,0,603992391,0,0,2785017860,15007797,131076,
2147487776,2151677971,2147483711,2139095055,603992403,0,603990979,0,4026531840,
2147483760,603992006,603984902,0,2852126737,15138869,196618,2181038120,2181038121,
2147504242,2147504243,2147508325,2143293445,2147496046,2147496047,2147500144,
2147500145,603984459,0,2147483733,268435456,603990460,0,603990666,0,603990509,
0,603990558,0,2147483750,268435456,603991519,603985244,0,4026531840,0,2785017859,
15204405,196621,2181038120,2189426729,2147483762,2185236499,2147487860,2164260869,
2147483758,2147483759,2155872320,2147483749,2147483760,2147483761,2147483763,
603992459,0,4026531840,4026531840,2852192260,9699381,1,2147483711,268435456,
603992469,603992583,0,4026531840,0,1073769496,805306478,0,1073771032,805306479,
0,3087020509,2768240684,0,262160,2147483760,2147539042,2143344722,2147545171,
2172733524,2172727381,2172719190,2147545175,2147545176,2147545177,2147520612,
2147512421,2147512422,2147498094,2143344686,2147489903,805306479,3221225494,
0,1073742088,805306478,3221225498,0,2583691327,9699381,65537,4026531840,603992475,
603992439,0,1073770760,805306468,3221225509,0,2583691296,6422581,65537,4026531840,
268435456,603992475,603992472,603992027,0,805306469,3221225521,0,1073766408,
805306450,3221225525,0,1073766664,805306450,3221225529,0,603992475,603983509,
0,603992475,603983555,0,4026531840,0,2499805294,0,65537,4026531840,0,0,2852126728,
14811189,131077,2147491904,2151686161,2155880549,2147483711,2147491957,2147483764,
603992565,603992261,0,2147483764,603992565,603992027,0,4026531840,0,2768240648,
0,65539,2147498100,2151686235,2147483761,1073742088,805306484,3221225481,0,603992565,
603992300,0,0,4026531840,0,805306486,0,2852126728,13500469,196619,2164269096,
2185240617,2147491954,2147491955,2168455232,2160074757,2147491950,2147491951,
2147491941,2147491952,2147491953,2147483759,603992607,603992383,0,2147483759,
603992607,603992407,0,4026531840,0,2768240674,0,196623,2206242904,2147522649,
2176876626,2147522643,2172710996,2172704853,2155905070,2172688471,2164308054,
2147516514,2147498084,2147489893,2147489894,2147551343,2147483760,805306479,
3221225492,0,1073770760,805306468,3221225496,0,2583691296,6422581,65537,4026531840,
268435456,603992607,603992472,603992027,0,805306469,3221225508,0,1073766408,
805306450,3221225512,0,1073766664,805306450,3221225516,0,603992607,603983509,
0,603992607,603983555,0,0,4026531840,0,2852126736,15269941,196623,2164285480,
2185257001,2147508338,2181062723,2168479808,2160091141,2172674158,2172674159,
2147508325,2168479856,2147508337,2147508339,2147483766,2147491959,2147500152,
2147483747,603993843,603992697,0,2147483747,603993843,603993239,0,2147483747,
603993843,603993397,0,2147483747,603993843,603993561,0,4026531840,0,2583756918,
13631541,65538,4026531840,0,603992705,0,0,2785017860,15335477,196621,2164260904,
2189426729,2147483762,2185232451,2172649536,2160066565,2160070678,2147483759,
2147483749,2147483758,2147483760,2147483761,2147483763,603992727,0,603990979,
0,4026531840,0,2852192259,13631541,1,2147483766,268435456,603992735,0,4026531840,
2852126727,15401013,196620,2164269096,2185240617,2147491954,2181038147,2168463424,
2160074757,2147491950,2147491951,2147491941,2147491952,2147491953,2147491955,
268435456,603992759,603990935,0,603992999,603990935,0,4026531840,0,2852192259,
6094901,1,2147483670,268435456,603992767,0,4026531840,2852126726,11468853,131078,
2164260928,2151677969,2160066661,2147489815,2147483764,2147483765,603992783,
603991529,0,268435456,603992895,0,4026531840,2852192259,6160437,1,2147483671,
268435456,603992791,0,4026531840,2852192259,9568309,1,2147483665,268435456,603992799,
0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
603992885,603994606,0,268435456,1073773376,805306467,0,4026531840,0,2852192260,
9764917,1,2147483667,268435456,1073771848,805306467,0,4026531840,0,2852192259,
9568309,1,2147483665,268435456,603992903,0,4026531840,2852126727,11534389,393290,
2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,
2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,
2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,
2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,
2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,
2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,
2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,
2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,
2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,
2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,
2147483787,2147483790,2147483795,2147483798,603992989,603994606,0,268435456,
1073775416,805306467,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,
1073773120,805306467,0,4026531840,0,2852192259,6094901,1,2147483670,268435456,
603993007,0,4026531840,2852126726,11468853,131078,2164260928,2151677969,2160066661,
2147489815,2147483764,2147483765,603993023,603991529,0,268435456,603993135,0,
4026531840,2852192259,6160437,1,2147483671,268435456,603993031,0,4026531840,
2852192259,9568309,1,2147483665,268435456,603993039,0,4026531840,2852126727,
11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,
2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,
2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,
2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,
2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,
2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,
2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,
2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,
2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,
2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,
2147483786,2147483787,2147483790,2147483795,2147483798,603993125,603994606,0,
268435456,1073775160,805306467,0,4026531840,0,2852192260,9764917,1,2147483667,
268435456,1073772864,805306467,0,4026531840,0,2852192259,9568309,1,2147483665,
268435456,603993143,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,603993229,603994606,0,268435456,1073776432,805306467,0,
4026531840,0,2852192260,9764917,1,2147483667,268435456,1073774904,805306467,
0,4026531840,0,2583756919,13762613,65538,4026531840,0,603993247,0,0,2785017860,
15466549,196620,2164260904,2189426729,2147483762,2147483763,2172649536,2160066565,
2160070678,2147483759,2147483749,2147483758,2147483760,2147483761,603993267,
0,603990979,0,4026531840,2852192260,13762613,1,2147483767,268435456,603993277,
603990935,0,4026531840,0,2852192259,6094901,1,2147483670,268435456,603993285,
0,4026531840,2852192259,6160437,1,2147483671,268435456,603993293,0,4026531840,
2852192259,9568309,1,2147483665,268435456,603993301,0,4026531840,2852126727,
11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,
2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,
2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,
2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,
2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,
2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,
2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,
2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,
2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,
2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,
2147483786,2147483787,2147483790,2147483795,2147483798,603993387,603994606,0,
268435456,1073773616,805306467,0,4026531840,0,2852192260,9764917,1,2147483667,
268435456,1073772088,805306467,0,4026531840,0,2583756920,13893685,65538,4026531840,
0,603993405,0,0,2785017860,15466549,196620,2164260904,2189426729,2147483762,
2147483763,2172649536,2160066565,2160070678,2147483759,2147483749,2147483758,
2147483760,2147483761,603993425,0,603990979,0,4026531840,2852192260,13893685,
1,2147483768,268435456,603993435,603990935,0,4026531840,0,2852192264,6094901,
1,2147483670,268435456,2147483811,2147483766,603993449,603999591,603992581,603992027,
0,4026531840,0,2852192259,6160437,1,2147483671,268435456,603993457,0,4026531840,
2852192259,9568309,1,2147483665,268435456,603993465,0,4026531840,2852126727,
11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,
2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,
2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,
2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,
2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,
2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,
2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,
2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,
2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,
2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,
2147483786,2147483787,2147483790,2147483795,2147483798,603993551,603994606,0,
268435456,1073773880,805306467,0,4026531840,0,2852192260,9764917,1,2147483667,
268435456,1073772352,805306467,0,4026531840,0,2852126746,15401013,196620,2164269096,
2185240617,2147512434,2181038147,2168488000,2160078853,2147504238,2147504239,
2147526757,2147508336,2147508337,2147512435,268435456,603993603,603990935,0,
603984459,0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,
0,2147483746,268435456,1073771528,805306466,0,2147483750,268435456,603991519,
603985244,0,4026531840,2852192259,6094901,1,2147483670,268435456,603993611,0,
4026531840,2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,
2147483764,2147483765,603993627,603991529,0,268435456,603993739,0,4026531840,
2852192259,6160437,1,2147483671,268435456,603993635,0,4026531840,2852192259,
9568309,1,2147483665,268435456,603993643,0,4026531840,2852126727,11534389,393290,
2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,
2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,
2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,
2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,
2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,
2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,
2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,
2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,
2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,
2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,
2147483787,2147483790,2147483795,2147483798,603993729,603994606,0,268435456,
1073774648,805306467,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,
1073772608,805306467,0,4026531840,0,2852192259,9568309,1,2147483665,268435456,
603993747,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,
2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,
2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,
2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,
2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,
2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,
2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,
2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,
2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,
2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,
2147483798,603993833,603994606,0,268435456,1073776176,805306467,0,4026531840,
0,2852192260,9764917,1,2147483667,268435456,1073774392,805306467,0,4026531840,
0,2768240670,0,196622,2147514456,2147514457,2176868434,2176874579,2176897108,
2176890965,2155896878,2147514455,2168494166,2147508322,2147543139,2147491940,
2147483749,2147483750,1073770760,805306468,3221225492,0,2583691286,6094901,65537,
4026531840,268435456,603993843,603991207,0,805306469,3221225503,0,1073766408,
805306450,3221225507,0,1073766664,805306450,3221225511,0,603993843,603983509,
0,603993843,603983555,0,0,4026531840,2852126736,13369397,327738,2294308928,2294308897,
2147508322,2147508323,2285920292,2285920261,2147508262,2311086129,2277531688,
2277531689,2277531658,2277531691,2147508332,2327863350,2269134862,2269143087,
2269143088,2105565201,2269143090,2269143091,2269143092,2269143093,2109759510,
2147508279,2147508280,2147508281,2147508282,2273337403,2147508284,2168479805,
2155896862,2155896863,2147508286,2223005759,2147508317,2218811488,2147508321,
2214617188,2147508325,2147483752,2147508329,2147508330,2147508331,2193645678,
2147508335,2147508336,2147508337,2147508338,2176868467,2147508340,2147508341,
2147508351,2147508352,2147508356,2147508366,2147491987,2147508374,2147508379,
2147483740,603994412,603982661,0,2147483740,603994412,603982853,0,2147483740,
603994412,603985086,0,2147483740,603994412,603993969,0,4026531840,2852126797,
15532085,327735,2294329408,2294321185,2147483746,2147483747,2285932580,2285965317,
2147520550,2302709809,2147524648,2273353769,2273437706,2273312811,2147543148,
2315292726,2306945134,2260766767,2260766768,2105649169,2260766770,2260766771,
2260766772,2260766773,2109759510,2147520567,2147520568,2147520569,2147520570,
2260766779,2147520572,2168492093,2155876382,2155872287,2147520574,2214604863,
2147483741,2210398304,2147483745,2206208100,2147573861,2147491945,2147539050,
2147539051,2147561583,2147565680,2147565681,2147569778,2147569779,2147582068,
2147592309,2147514495,2147596416,2147623044,2147600526,2147616918,2147633307,
603989051,0,603989366,0,603989769,0,2147483739,268435456,1073768456,805306459,
603990489,0,268435456,603983073,0,268435456,603985444,0,603980682,0,603984459,
0,2147483726,268435456,1073765640,805306446,0,603989737,0,2147483729,268435456,
1073766152,805306449,0,2147483733,268435456,603990460,0,603990666,0,603990509,
0,603990558,0,2147483738,268435456,603990728,0,2147483741,268435456,603990607,
603985244,0,603990610,0,604000730,0,2147483813,268435456,603999991,0,2147483814,
268435456,604000205,0,268435456,603983349,0,2147483842,268435456,604001864,603989051,
0,2147483844,268435456,604002412,0,4026531840,2785017859,13303861,327739,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2285895718,2315255857,
2281701416,2281701417,2281701386,2281701419,2147483756,2332033078,2273312782,
2273312815,2273312816,2105540625,2273312818,2273312819,2273312820,2273312821,
2109734934,2147483703,2147483704,2147483705,2147483706,2277507131,2147483708,
2168455229,2155872286,2155872287,2147483710,2227175487,2147483741,2222981216,
2147483745,2218786916,2147483749,2147487846,2147483752,2147483753,2147483754,
2147483755,2193621102,2147483759,2147483760,2147483761,2147483762,2176843891,
2147483764,2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,
2147483798,2147483803,603994171,0,4026531840,4026531840,2852192259,12451893,
1,2147483711,268435456,603994179,0,4026531840,2852126736,13369397,327738,2294298688,
2294298657,2147498082,2147498083,2285910052,2285910021,2147498022,2311075889,
2277521448,2277521449,2277521418,2277521451,2147498092,2327853110,2269132814,
2269132847,2269132848,2105554961,2269132850,2269132851,2269132852,2269132853,
2109749270,2147498039,2147498040,2147498041,2147498042,2273327163,2147498044,
2168469565,2155886622,2155886623,2147498046,2222981183,2147498077,2218801248,
2147498081,2214606948,2147498085,2147498088,2147498089,2147498090,2147498091,
2193635438,2147498095,2147498096,2147498097,2147498098,2176858227,2147504244,
2147498101,2147498111,2147498112,2147498116,2147498126,2147498131,2147498134,
2147498139,2147483739,268435456,1073768456,805306459,603994257,603990489,0,603994330,
603985244,0,2147483741,268435456,603994330,603990607,603985244,0,4026531840,
2852126729,15597621,327737,2290090048,2290090017,2147483746,2147483747,2281701412,
2281701381,2147483686,2306867249,2273312808,2273312809,2273312778,2273312811,
2147483756,2323644470,2264924174,2264924207,2264924208,2105540625,2264924210,
2264924211,2264924212,2264924213,2109734934,2147483703,2147483704,2147483705,
2147483706,2269118523,2147483708,2164260925,2155872286,2227175455,2147483710,
2147483741,2218786912,2147483745,2214592612,2147483749,2147483752,2147483753,
2147483754,2147483755,2193621102,2147483759,2147483760,2147483761,2147483762,
2176843891,2147489908,2147483765,2147483775,2147483776,2147483780,2147483790,
2147483795,2147483798,2147483803,603994327,603985244,0,2147483741,268435456,
603994327,603990607,603985244,0,4026531840,1073769248,805306460,0,1073769496,
805306460,0,2852126733,13369397,327738,2294284352,2294284321,2147483746,2147483747,
2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,2277507082,
2277507115,2147483756,2327838774,2269118478,2269118511,2269118512,2105540625,
2269118514,2269118515,2269118516,2269118517,2109734934,2147483703,2147483704,
2147483705,2147483706,2273312827,2147483708,2168455229,2155872286,2155872287,
2147483710,2222999615,2147483741,2218786912,2147483745,2214592612,2147483749,
2147483752,2147483753,2147483754,2147483755,2193621102,2147483759,2147483760,
2147483761,2147483762,2176843891,2147489908,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,2147483803,603994409,603985244,0,
2147483741,268435456,603994409,603990607,603985244,0,268435456,1073768720,805306459,
0,4026531840,0,1073768976,805306460,0,3087022568,2768240765,0,327737,2357424192,
2147702849,2353217602,2353211459,2294485060,2294478917,2294472774,2353186887,
2147659848,2286065737,2147647562,2147641419,2147635276,2147547213,2223120430,
2147559503,2147622992,2147622993,2210474002,2147594323,2244085844,2147610709,
2239877206,2239869015,2147594328,2147594329,2181120058,2181064763,2181287996,
2181281853,2181275710,2223212607,2147629134,2147622994,2147559514,2147588187,
2189516892,2189508701,2189502558,2206279844,2206279845,2206279846,2147559593,
2147553460,2147547318,2147547319,2147541180,2147535037,2147535038,2147535039,
2147528896,2147522754,2147516611,2147510468,2147510469,2147492038,2147483847,
1073809836,805306566,3221225536,0,2583691420,7733301,65537,4026531840,268435456,
603994412,603983385,604006139,0,805306426,3221225548,0,603994412,603983388,0,
805306440,3221225554,0,603994412,603983401,0,805306556,3221225560,0,603994412,
603983416,0,805306444,3221225566,0,603994412,603983469,0,805306445,3221225572,
0,1073742088,805306460,3221225576,0,2583691327,12451893,65537,4026531840,603994412,
603994105,0,603994412,603994333,0,1073766408,805306450,3221225590,0,1073766664,
805306450,3221225594,0,603994412,603983509,0,603994412,603983555,0,805306447,
3221225603,0,603994412,603983570,0,603994412,603983583,0,805306442,3221225612,
0,603994412,603983636,0,603994412,603983679,0,805306439,3221225621,0,805306438,
3221225624,0,603994412,603983692,0,603994412,603983707,0,603994412,603983722,
0,603994412,603983737,0,603994412,603983770,0,603994412,603983787,0,603994412,
603983800,0,603994412,603983813,0,603994412,603983832,0,603994412,603983845,
0,603994412,603983858,0,4026531840,0,2499805276,0,65537,4026531840,0,0,2852126750,
15663157,393289,2432712768,2147537025,2147537026,2147537027,2147537028,2147536901,
2147537030,2147537031,2147537032,2147536993,2395000842,2395000907,2147536996,
2147483752,2386604046,2147537001,2147537003,2147508241,2147536914,2147520659,
2147537007,2147536917,2357252118,2147537008,2147537009,2147537010,2147537011,
2147537051,2147537013,2147536989,2147536926,2147536927,2147536992,2046873633,
2147536994,2147536995,2046873636,2147536997,2147536934,2147537017,2034290728,
2038485033,2147537002,2034290731,2147537004,2147537018,2147537006,2034290735,
2042679344,2042679345,2042679346,2042679347,2147536948,2042679349,2147536950,
2147536951,2147536952,2072039481,2093011002,2168508475,2168508476,2168508477,
2168508478,2147491967,2147537019,2147537020,2147537021,2147537022,2147491968,
2147537034,2147537035,2147491982,2147537046,2147483767,603994971,603982661,0,
2147483767,603994971,603999126,0,2147483767,603994971,603982823,0,2147483767,
2147483772,603994971,603995185,603995187,0,2147483767,603994971,603982853,0,
2147483767,603994971,603985086,0,2147483767,603994971,603994714,0,4026531840,
0,2852126823,15728693,393281,2147483745,2147639425,2147639426,2147639427,2147676292,
2147538949,2147616902,2147616903,2147639432,2147487844,2294462474,2365618251,
2147491945,2147524715,2147547247,2147551344,2147551345,2147555442,2147620882,
2147555443,2147567733,2147631125,2323660822,2147496057,2147571834,2147580027,
2147588220,2147686555,2147598461,2147483741,2147487774,2147483679,2147483744,
2009094177,2147483746,2147483747,2034260004,2147559525,2147506214,2147606654,
2147510312,2025875497,2147524714,2021654571,2147528812,2147643530,2147547246,
2009094191,2009094192,2009094193,2009094194,2013288499,2147506228,2009094197,
2147506230,2147506231,2147506232,2004899897,2004899898,2004899899,2004899900,
2009094205,2051037246,2147651723,2147670166,603989051,0,603989366,0,603989769,
0,603995291,0,268435456,603983073,0,603980682,0,603984459,0,2147483701,268435456,
603984812,603984818,0,603989737,0,2147483729,268435456,1073766152,805306449,
0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,
268435456,603990728,0,603990610,0,2147483776,268435456,603996259,0,2147483779,
268435456,603996293,0,2147483780,268435456,603996800,603999593,0,2147483781,
268435456,603996822,0,2147483782,268435456,603996806,603984559,0,603999126,0,
2147483786,268435456,1073789448,805306506,0,2147483787,268435456,603997977,0,
603998486,0,2147483800,268435456,603998964,0,2147483801,268435456,603999162,
603995187,0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,
268435456,604001864,603989051,0,2147483844,268435456,604002412,0,4026531840,
2852126725,15794229,393289,2428506176,2147487873,2147487874,2147487875,2147487876,
2147487749,2147487878,2147487879,2147487880,2147487841,2390757386,2390757451,
2147487844,2147487848,2382368782,2147487849,2147487851,2147487761,2147487762,
2365587475,2147487855,2147487765,2357202966,2147487856,2147487857,2147487858,
2147487859,2147487899,2147487861,2147487837,2147487774,2147487775,2147487840,
2046824481,2147487842,2147487843,2046824484,2147487845,2147487782,2147487866,
2034241576,2038435881,2147487850,2034241579,2147487852,2147487867,2147487854,
2034241583,2042630192,2042630193,2042630194,2042630195,2147487796,2042630197,
2147487798,2147487799,2147487800,2147487801,2067796026,2088767547,2164265020,
2164265021,2164265022,2147487871,2147487868,2147487869,2147487870,2147487872,
2147487882,2147487883,2147487886,2147487891,2147487894,805306488,0,603994968,
603995783,0,4026531840,1073781520,805306489,0,2768240775,0,393291,2294521920,
2147715137,2428727362,2298697795,2298691652,2302879813,2302873670,2302867527,
2147672136,2147665993,2294460490,2298648651,2298642508,2147547213,2147641422,
2147559503,2147635280,2147635281,2185308178,2147606611,2147629140,2147622997,
2147614806,2147606615,2252464216,2252464217,2147559514,2147635282,2147584122,
2147565725,2147559518,2147565691,2281789564,2285983870,2285990015,2285983872,
2147559588,2147559589,2147559590,2277595267,2277595268,2147559593,2273400965,
2273400966,2273400967,2147571850,2147635246,2147571851,2147571852,2147571864,
2147571865,2147547319,2147553460,2147571765,2147547318,2130980983,2147598456,
2147592313,2021922874,2030069819,2030305340,2164516925,2026098750,2026092607,
2147541180,2147535037,2147535038,2147535039,2147528896,2147522754,2147516611,
2147510468,2147510469,2147492038,2147483847,1073809836,805306566,3221225553,
0,2583691420,7733301,65537,4026531840,268435456,603994971,603983385,604006139,
0,805306426,3221225565,0,603994971,603983388,0,805306440,3221225571,0,603994971,
603983401,0,805306556,3221225577,0,603994971,603983416,0,805306444,3221225583,
0,603994971,603983469,0,805306445,3221225589,0,805306490,3221225592,0,805306491,
3221225595,0,603994971,603983481,0,1073742088,805306489,3221225602,0,603994971,
603994886,0,1073781256,805306487,3221225609,0,1073766408,805306450,3221225613,
0,1073766664,805306450,3221225617,0,603994971,603983509,0,603994971,603983555,
0,805306447,3221225626,0,603994971,603983570,0,603994971,603983583,0,805306442,
3221225635,0,603994971,603983636,0,603994971,603983679,0,805306439,3221225644,
0,805306438,3221225647,0,603994971,603983692,0,603994971,603983707,0,603994971,
603983722,0,603994971,603983737,0,603994971,603983770,0,603994971,603983787,
0,603994971,603983800,0,603994971,603983813,0,603994971,603983832,0,603994971,
603983845,0,603994971,603983858,0,805306495,3221225683,0,0,4026531840,805306492,
0,2852192260,9568309,1,2147483665,2147483773,268435456,603995197,0,4026531840,
0,2852126727,15794229,393289,2428502080,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2390753290,2390753355,
2147483748,2147483752,2382364686,2147483753,2147483755,2147483665,2147483666,
2365593619,2147483759,2147483669,2357198870,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483770,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483771,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2147483705,2067791930,2088763451,2164260924,
2164260925,2164260926,2147483775,2147483772,2147483773,2147483774,2147483776,
2147483786,2147483787,2147483790,2147483795,2147483798,603995281,603996314,0,
268435456,1073782032,805306493,0,4026531840,2852192260,9764917,1,2147483667,
268435456,1073781784,805306493,0,4026531840,0,2852126750,15663157,393289,2432712768,
2147537025,2147537026,2147537027,2147537028,2147536901,2147537030,2147537031,
2147537032,2147536993,2395000842,2395000907,2147536996,2147483752,2386604046,
2147537001,2147537003,2147508241,2147536914,2147520659,2147537007,2147536917,
2357252118,2147537008,2147537009,2147537010,2147537011,2147537051,2147537013,
2147536989,2147536926,2147536927,2147536992,2046873633,2147536994,2147536995,
2046873636,2147536997,2147536934,2147537017,2034290728,2038485033,2147537002,
2034290731,2147537004,2147537018,2147537006,2034290735,2042679344,2042679345,
2042679346,2042679347,2147536948,2042679349,2147536950,2147536951,2147536952,
2072039481,2093011002,2168508475,2168508476,2168508477,2168508478,2147491967,
2147537019,2147537020,2147537021,2147537022,2147491968,2147537034,2147537035,
2147491982,2147537046,2147483768,603995573,603982661,0,2147483768,603995573,
603999126,0,2147483768,603995573,603982823,0,2147483768,2147483772,603995573,
603995185,603995187,0,2147483768,603995573,603982853,0,2147483768,603995573,
603985086,0,2147483768,603995573,603995399,0,4026531840,0,2852126824,15728693,
393281,2147483745,2147641473,2147641474,2147641475,2147678340,2147540997,2147618950,
2147618951,2147641480,2147487844,2294464522,2365620299,2147491945,2147526763,
2147549295,2147553392,2147553393,2147557490,2147622930,2147557491,2147569781,
2147633173,2323662870,2147496057,2147573882,2147582075,2147590268,2147688603,
2147600509,2147483741,2147487774,2147483679,2147483744,2009096225,2147483746,
2147483747,2034262052,2147561573,2147508262,2147608702,2147512360,2025877545,
2147526762,2021654571,2147530860,2147645578,2147549294,2009096239,2009096240,
2009096241,2009096242,2013290547,2147508276,2009096245,2147508278,2147508279,
2147508280,2004901945,2004901946,2004901947,2004901948,2009096253,2051039294,
2147653771,2147672214,603989051,0,603989366,0,603989769,0,268435456,805306488,
0,268435456,603983073,0,603980682,0,603984459,0,2147483701,268435456,603984812,
603984818,0,603989737,0,2147483729,268435456,1073766152,805306449,0,2147483733,
268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,268435456,
603990728,0,603990610,0,2147483776,268435456,603996259,0,2147483779,268435456,
603996293,0,2147483780,268435456,603996800,603999593,0,2147483781,268435456,
603996822,0,2147483782,268435456,603996806,603984559,0,603999126,0,2147483786,
268435456,1073789448,805306506,0,2147483787,268435456,603997977,0,603998486,
0,2147483800,268435456,603998964,0,2147483801,268435456,603999162,603995187,
0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,268435456,
604001864,603989051,0,2147483844,268435456,604002412,0,4026531840,0,2768240771,
0,393290,2294513728,2147706945,2424524866,2298689603,2298683460,2302871621,2302865478,
2302859335,2147663944,2147657801,2294452298,2298640459,2298634316,2147547213,
2147633230,2147559503,2147627088,2147627089,2185308178,2147598419,2147620948,
2147614805,2147606614,2147598423,2252456024,2252456025,2147559514,2147627090,
2147584122,2147565725,2147559518,2147565691,2227263612,2281789566,2281795711,
2281789568,2147559588,2147559589,2147559590,2273400963,2273400964,2147559593,
2269206661,2269206662,2269206663,2147571850,2147627054,2147571851,2147571852,
2147571864,2147571865,2147541180,2147553460,2147571765,2147547318,2147547319,
2147750008,2147592313,2021914682,2030069819,2030297148,2160314429,2026090558,
2026084415,2147535037,2147535038,2147535039,2147528896,2147522754,2147516611,
2147510468,2147510469,2147492038,2147483847,1073809836,805306566,3221225552,
0,2583691420,7733301,65537,4026531840,268435456,603995573,603983385,604006139,
0,805306426,3221225564,0,603995573,603983388,0,805306440,3221225570,0,603995573,
603983401,0,805306556,3221225576,0,603995573,603983416,0,805306444,3221225582,
0,603995573,603983469,0,805306445,3221225588,0,805306490,3221225591,0,805306491,
3221225594,0,603995573,603983481,0,1073742088,805306489,3221225601,0,603995573,
603994886,0,1073766408,805306450,3221225608,0,1073766664,805306450,3221225612,
0,603995573,603983509,0,603995573,603983555,0,805306447,3221225621,0,603995573,
603983570,0,603995573,603983583,0,805306442,3221225630,0,603995573,603983636,
0,603995573,603983679,0,805306439,3221225639,0,805306438,3221225642,0,603995573,
603983692,0,603995573,603983707,0,603995573,603983722,0,603995573,603983737,
0,603995573,603983770,0,603995573,603983787,0,603995573,603983800,0,603995573,
603983813,0,603995573,603983832,0,603995573,603983845,0,603995573,603983858,
0,805306495,3221225678,0,0,4026531840,0,2852126750,15859765,393288,2428518464,
2147537025,2147537026,2147537027,2147537028,2147536901,2147537030,2147537031,
2147537032,2147536993,2390806538,2390806603,2147536996,2147483752,2382409742,
2147537001,2147537003,2147508241,2147536914,2147520659,2147537007,2147536917,
2353057814,2147537008,2147537009,2147537010,2147537011,2147537051,2147537013,
2147536989,2147536926,2147536927,2147536992,2046873633,2147536994,2147536995,
2046873636,2147536997,2147536934,2147537018,2034290728,2038485033,2147537002,
2034290731,2147537004,2147537019,2147537006,2034290735,2042679344,2042679345,
2042679346,2042679347,2147536948,2042679349,2147536950,2147536951,2147536952,
2147536953,2067845178,2088816699,2164314172,2164314173,2164314174,2147491967,
2147537020,2147537021,2147537022,2147491968,2147537034,2147537035,2147491982,
2147537046,2147483770,603996059,603982661,0,2147483770,603996059,603999126,0,
2147483770,603996059,603982823,0,2147483770,2147483772,603996059,603995185,603995187,
0,2147483770,603996059,603982853,0,2147483770,603996059,603985086,0,2147483770,
603996059,603995889,0,4026531840,2852126821,15925301,393280,2147483745,2147631233,
2147631234,2147631235,2147668100,2147534853,2147686534,2147686535,2147631240,
2147487844,2269288458,2290116683,2147491945,2147520619,2147543151,2147547248,
2147547249,2147551346,2147612690,2147551347,2147563637,2147622933,2319462422,
2147567738,2147575931,2147584124,2147594365,2147678363,2147602558,2147483741,
2147487774,2147483679,2147483744,2009090081,2147483746,2147483747,2034255908,
2147555429,2147502118,2147635338,2147506216,2025871401,2147520618,2021654571,
2147524716,2147643531,2147543150,2009090095,2009090096,2009090097,2009090098,
2013284403,2147502132,2009090101,2147502134,2147502135,2147502136,2147502137,
2000701498,2000701499,2000701500,2000701501,2004895806,2147661974,603989051,
0,603989366,0,603989769,0,268435456,603983073,0,603980682,0,603984459,0,2147483701,
268435456,603984812,603984818,0,603989737,0,2147483729,268435456,1073766152,
805306449,0,2147483733,268435456,603990460,0,603990666,0,603990509,0,603990558,
0,2147483738,268435456,603990728,0,603990610,0,2147483776,268435456,603996259,
0,2147483779,268435456,603996293,0,2147483780,268435456,603996800,603999593,
0,2147483781,268435456,603996822,0,2147483782,268435456,603996806,603984559,
0,2147483786,268435456,1073789448,805306506,0,2147483787,268435456,603997977,
0,603998486,0,2147483800,268435456,603998964,0,2147483801,268435456,603999162,
603995187,0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,
268435456,604001864,603989051,0,2147483844,268435456,604002412,0,603999126,0,
4026531840,0,2768240764,0,393288,2294499392,2147692609,2416121922,2298675267,
2298669124,2302857285,2302851142,2302844999,2147649608,2147643465,2294437962,
2298626123,2298619980,2147547213,2147618894,2147559503,2147612752,2147612753,
2185308178,2147584083,2147606612,2147600469,2147592278,2147584087,2252441688,
2252441689,2147559514,2147612754,2147735674,2147565725,2147559518,2147565691,
2227263612,2248235134,2273407103,2273400960,2147559588,2147559589,2147559590,
2265012355,2265012356,2147559593,2260818053,2260818054,2260818055,2147571850,
2147612718,2147571851,2147571852,2147571864,2147571865,2147541180,2147553460,
2147571765,2147547318,2147547319,2147535037,2147535038,2021900346,2030069819,
2030282812,2126745661,2026076222,2026070079,2147535039,2147528896,2147522754,
2147516611,2147510468,2147510469,2147492038,2147483847,1073809836,805306566,
3221225550,0,2583691420,7733301,65537,4026531840,268435456,603996059,603983385,
604006139,0,805306426,3221225562,0,603996059,603983388,0,805306440,3221225568,
0,603996059,603983401,0,805306556,3221225574,0,603996059,603983416,0,805306444,
3221225580,0,603996059,603983469,0,805306445,3221225586,0,805306490,3221225589,
0,805306491,3221225592,0,603996059,603983481,0,1073766408,805306450,3221225599,
0,1073766664,805306450,3221225603,0,603996059,603983509,0,603996059,603983555,
0,805306447,3221225612,0,603996059,603983570,0,603996059,603983583,0,805306442,
3221225621,0,603996059,603983636,0,603996059,603983679,0,805306439,3221225630,
0,805306438,3221225633,0,603996059,603983692,0,603996059,603983707,0,603996059,
603983722,0,603996059,603983737,0,603996059,603983770,0,603996059,603983787,
0,603996059,603983800,0,603996059,603983813,0,603996059,603983832,0,603996059,
603983845,0,603996059,603983858,0,805306495,3221225669,0,0,4026531840,2852126725,
15990837,1,2147483712,2147483777,603996271,603996280,603996283,0,603996277,603984559,
0,603996274,603984559,0,1073782808,805306496,0,1073783056,805306496,0,1073783304,
805306497,0,2852192261,6225973,1,2147483712,2147483778,268435456,1073783304,
805306498,0,4026531840,2852126725,15990837,1,2147483712,2147483777,603996305,
603996280,603996283,0,603996311,603984559,0,603996308,603984559,0,1073783576,
805306499,0,1073783824,805306499,0,2852126750,15859765,393288,2428518464,2147537025,
2147537026,2147537027,2147537028,2147536901,2147537030,2147537031,2147537032,
2147536993,2390806538,2390806603,2147536996,2147483752,2382409742,2147537001,
2147537003,2147508241,2147536914,2147520659,2147537007,2147536917,2353057814,
2147537008,2147537009,2147537010,2147537011,2147537051,2147537013,2147536989,
2147536926,2147536927,2147536992,2046873633,2147536994,2147536995,2046873636,
2147536997,2147536934,2147537018,2034290728,2038485033,2147537002,2034290731,
2147537004,2147537019,2147537006,2034290735,2042679344,2042679345,2042679346,
2042679347,2147536948,2042679349,2147536950,2147536951,2147536952,2147536953,
2067845178,2088816699,2164314172,2164314173,2164314174,2147491967,2147537020,
2147537021,2147537022,2147491968,2147537034,2147537035,2147491982,2147537046,
2147483769,603996582,603982661,0,2147483769,603996582,603999126,0,2147483769,
603996582,603982823,0,2147483769,2147483772,603996582,603995185,603995187,0,
2147483769,603996582,603982853,0,2147483769,603996582,603985086,0,2147483769,
603996582,603995889,0,4026531840,2852126722,16056373,393291,2441084992,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483785,2155872266,2403336267,2394947658,2147483745,2394947598,2147483746,
2147483748,2147483665,2147483666,2147483795,2147483752,2147483669,2365587478,
2147483753,2147483755,2147483759,2147483760,2147483803,2147483761,2147483741,
2147483678,2147483679,2147483744,2063597601,2067791906,2147483747,2063597604,
2147483749,2147483686,2147483762,2063597608,2071986217,2147483754,2067791915,
2147483756,2147483763,2147483758,2055209007,2055209008,2059403313,2101346354,
2122317875,2147483700,2193621045,2147483702,2147483703,2147483704,2147483705,
2176843834,2176843835,2176843836,2176843837,2176843838,2147483775,2147483765,
2147483770,2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,
2147483787,2147483790,2147483798,603996502,0,4026531840,0,2852126723,16121909,
393288,2428502080,2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,
2147483783,2147483784,2147483745,2390753290,2390753355,2147483748,2147483752,
2382364686,2147483753,2147483755,2147483665,2147483666,2147483795,2147483759,
2147483669,2353004566,2147483760,2147483761,2147483762,2147483763,2147483803,
2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,
2147483747,2046820388,2147483749,2147483686,2147483770,2034237480,2038431785,
2147483754,2034237483,2147483756,2147483771,2147483758,2034237487,2042626096,
2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,
2147483704,2147483705,2067791930,2088763451,2164260924,2164260925,2164260926,
2147483775,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483798,603994968,603995783,0,4026531840,0,3087024762,2768240773,
0,393290,2311297088,2147713089,2424531010,2302890051,2307078212,2307072069,2307065926,
2307059783,2147670088,2147663945,2302847050,2302840907,2302834764,2147547213,
2147639374,2147559503,2147633232,2147633233,2185308178,2147604563,2147627092,
2147620949,2147612758,2147604567,2256656472,2256656473,2147559514,2147633234,
2147590266,2147565725,2147559518,2147565691,2248235132,2277607549,2277595262,
2277601407,2147559588,2147559589,2147559590,2265012352,2269206659,2147559593,
2265012356,2265012357,2265012358,2265012359,2147633198,2147571850,2147571851,
2147571852,2147571864,2147571865,2147553460,2147571765,2147547318,2147547319,
2147541180,2147598457,2021920826,2030069819,2030303292,2030297149,2030291006,
2030284863,2147535037,2147535038,2147535039,2147528896,2147522754,2147516611,
2147510468,2147510469,2147492038,2147483847,1073809836,805306566,3221225553,
0,2583691420,7733301,65537,4026531840,268435456,603996582,603983385,604006139,
0,805306426,3221225565,0,603996582,603983388,0,805306440,3221225571,0,603996582,
603983401,0,805306556,3221225577,0,603996582,603983416,0,805306444,3221225583,
0,603996582,603983469,0,805306445,3221225589,0,805306490,3221225592,0,805306491,
3221225595,0,603996582,603983481,0,805306492,3221225601,0,1073742088,805306489,
3221225605,0,603996582,603996420,0,1073766408,805306450,3221225612,0,1073766664,
805306450,3221225616,0,603996582,603983509,0,603996582,603983555,0,805306447,
3221225625,0,603996582,603983570,0,603996582,603983583,0,805306442,3221225634,
0,603996582,603983636,0,603996582,603983679,0,805306439,3221225643,0,805306438,
3221225646,0,603996582,603983692,0,603996582,603983707,0,603996582,603983722,
0,603996582,603983737,0,603996582,603983770,0,603996582,603983787,0,603996582,
603983800,0,603996582,603983813,0,603996582,603983832,0,603996582,603983845,
0,603996582,603983858,0,805306495,3221225682,0,4026531840,2499805305,0,65537,
4026531840,0,0,603996803,603984559,0,1073784088,805306500,0,1073784848,805306502,
0,2852192260,6422581,1,2147483680,268435456,603996819,604013151,0,4026531840,
0,1073785112,805306503,0,2852126727,16187640,327737,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2147489799,2277507112,2277507113,
2277507082,2277507115,2147483756,2285895729,2269118478,2269118511,2269118512,
2130706449,2269118514,2269118515,2147483700,2264924213,2189426710,2147483703,
2147483704,2147483705,2147483706,2269118523,2147483708,2168455229,2160066590,
2227175455,2243952694,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,2147483803,603996892,603999593,0,
268435456,1073784336,805306501,0,603996898,603984559,0,603996895,603984559,0,
1073784344,805306501,0,1073784592,805306501,0,2583691391,16318517,131075,4026531840,
0,0,2147483785,603996913,0,2147483785,603997449,0,2852192259,16384053,1,2147483775,
268435456,603996921,0,4026531840,2852192259,11272245,1,2147483776,268435456,
603996929,0,4026531840,2852126730,16449589,65538,2147491904,2147483715,268435456,
603996945,603984902,0,2147483704,268435456,1073758472,805306424,603997197,0,
4026531840,2852192259,6094901,1,2147483670,268435456,603996953,0,4026531840,
2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,2147483764,
2147483765,603996969,603991617,0,268435456,603997087,0,4026531840,2852192259,
6160437,1,2147483671,268435456,603996977,0,4026531840,2852192259,9568309,1,2147483665,
268435456,603996985,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,603997071,603994606,0,268435456,1073786440,805306505,0,
4026531840,0,2852192260,9764917,1,2147483667,268435456,1073785424,805306505,
0,4026531840,0,1073785424,805306505,0,1073786440,805306505,0,2852192259,9568309,
1,2147483665,268435456,603997095,0,4026531840,2852126727,11534389,393290,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,
2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,
2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,
2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,
2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,
2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,
2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,
2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483795,2147483798,603997181,603994606,0,268435456,1073787968,
805306505,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073786184,
805306505,0,4026531840,0,1073786184,805306505,0,1073787968,805306505,0,2852192259,
6094901,1,2147483670,268435456,603997205,0,4026531840,2852126726,11468853,131078,
2164260928,2151677969,2160066661,2147489815,2147483764,2147483765,603997221,
603991617,0,268435456,603997339,0,4026531840,2852192259,6160437,1,2147483671,
268435456,603997229,0,4026531840,2852192259,9568309,1,2147483665,268435456,603997237,
0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
603997323,603994606,0,268435456,1073787712,805306505,0,4026531840,0,2852192260,
9764917,1,2147483667,268435456,1073785928,805306505,0,4026531840,0,1073785928,
805306505,0,1073787712,805306505,0,2852192259,9568309,1,2147483665,268435456,
603997347,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,
2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,
2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,
2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,
2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,
2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,
2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,
2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,
2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,
2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,
2147483798,603997433,603994606,0,268435456,1073788984,805306505,0,4026531840,
0,2852192260,9764917,1,2147483667,268435456,1073787456,805306505,0,4026531840,
0,1073787456,805306505,0,1073788984,805306505,0,2852192259,11272245,1,2147483776,
268435456,603997457,0,4026531840,2852126730,16449589,65538,2147491904,2147483715,
268435456,603997473,603984902,0,2147483704,268435456,1073758472,805306424,603997725,
0,4026531840,2852192259,6094901,1,2147483670,268435456,603997481,0,4026531840,
2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,2147483764,
2147483765,603997497,603991617,0,268435456,603997615,0,4026531840,2852192259,
6160437,1,2147483671,268435456,603997505,0,4026531840,2852192259,9568309,1,2147483665,
268435456,603997513,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,603997599,603994606,0,268435456,1073787200,805306505,0,
4026531840,0,2852192260,9764917,1,2147483667,268435456,1073785672,805306505,
0,4026531840,0,1073785672,805306505,0,1073787200,805306505,0,2852192259,9568309,
1,2147483665,268435456,603997623,0,4026531840,2852126727,11534389,393290,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,
2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,
2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,
2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,
2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,
2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,
2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,
2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483795,2147483798,603997709,603994606,0,268435456,1073788728,
805306505,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073786944,
805306505,0,4026531840,0,1073786944,805306505,0,1073788728,805306505,0,2852192259,
6094901,1,2147483670,268435456,603997733,0,4026531840,2852126726,11468853,131078,
2164260928,2151677969,2160066661,2147489815,2147483764,2147483765,603997749,
603991617,0,268435456,603997867,0,4026531840,2852192259,6160437,1,2147483671,
268435456,603997757,0,4026531840,2852192259,9568309,1,2147483665,268435456,603997765,
0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
603997851,603994606,0,268435456,1073788472,805306505,0,4026531840,0,2852192260,
9764917,1,2147483667,268435456,1073786688,805306505,0,4026531840,0,1073786688,
805306505,0,1073788472,805306505,0,2852192259,9568309,1,2147483665,268435456,
603997875,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,
2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,
2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,
2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,
2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,
2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,
2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,
2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,
2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,
2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,
2147483798,603997961,603994606,0,268435456,1073789232,805306505,0,4026531840,
0,2852192260,9764917,1,2147483667,268435456,1073788216,805306505,0,4026531840,
0,1073788216,805306505,0,1073789232,805306505,0,2852192260,6094901,1,2147483670,
268435456,603997987,603999593,0,4026531840,0,2852192260,6160437,1,2147483671,
268435456,603997997,603998012,0,4026531840,0,2583691288,16515125,65540,1073789992,
805306507,0,0,268435456,603998009,603998012,0,0,1073789752,805306507,0,2852126746,
16580661,393286,2420133952,2147528833,2147528834,2147528835,2147528836,2147528709,
2147528801,2147528804,2147528840,2147483752,2382409738,2382409803,2147528809,
2147528811,2374012942,2147528815,2147528816,2147491857,2147528722,2147512467,
2147528817,2147528725,2344661014,2147528818,2147528819,2147528821,2147528826,
2147528859,2147528827,2147528797,2147528734,2147528735,2147528800,2034282529,
2147528802,2147528803,2025893924,2147528805,2147528742,2147528828,2017505320,
2025893929,2147528810,2021699627,2147528812,2147528829,2147528814,2013311023,
2013311024,2025893937,2034282546,2034282547,2147528756,2030088245,2147528758,
2147528759,2147528760,2147528761,2013311034,2017505339,2059448380,2080419901,
2155917374,2147528831,2147528830,2147528832,2147528842,2147528843,2147528846,
2147528854,2147483771,603998290,603982661,0,2147483771,2147483772,603998290,
603995185,603995187,0,2147483771,603998290,603982823,0,2147483771,603998290,
603982853,0,2147483771,603998290,603985086,0,2147483771,603998290,603998112,
0,4026531840,2852126828,16646197,393281,2147563648,2147682433,2147682434,2147682435,
2147590276,2147530757,2147483745,2147487844,2147682440,2147491945,2269210634,
2290214987,2147516523,2147539055,2147567758,2147543152,2147543153,2147547250,
2147663890,2147547251,2147559541,2147674133,2323656726,2147618938,2147627131,
2147635324,2147645565,2147600539,2147653758,2147483741,2147487774,2147483679,
2147483744,2034262049,2147483746,2147483747,2025873444,2147551333,2147508262,
2147686538,2147512360,2013294633,2147516522,2017460267,2147520620,2147694731,
2147539054,2004901935,2009096240,2009096241,2009096242,2013290547,2147508276,
2009096245,2147508278,2147508279,2147508280,2147508281,2000707642,2000707643,
2000707644,2000707645,2004901950,2147502207,2147584150,603989051,0,603989366,
0,603989769,0,268435456,603983073,0,268435456,603985444,0,603980682,0,603984459,
0,603989737,0,2147483729,268435456,1073766152,805306449,0,2147483733,268435456,
603990460,0,603990666,0,603990509,0,603990558,0,2147483738,268435456,603990728,
0,603990610,0,604000730,0,2147483813,268435456,603999991,0,2147483814,268435456,
604000205,0,268435456,603983349,0,2147483842,268435456,604001864,603989051,0,
2147483844,268435456,604002412,0,2147483701,268435456,603984812,603984818,0,
2147483776,268435456,603996259,0,2147483779,268435456,603996293,0,2147483780,
268435456,603996800,603999593,0,2147483781,268435456,603996822,0,2147483782,
268435456,603996806,603984559,0,2147483786,268435456,1073789448,805306506,0,
2147483787,268435456,603997977,0,603998486,0,2147483800,268435456,603998964,
0,2147483801,268435456,603999162,603995187,0,4026531840,0,2768240761,0,393286,
2286104640,2147686465,2407727170,2277697603,2277691460,2290268229,2290262086,
2294450247,2147643464,2147637321,2286043210,2286037067,2286030924,2147547213,
2147612750,2147559503,2147606608,2147606609,2185308178,2147577939,2147600468,
2147594325,2147586134,2147577943,2244046936,2244046937,2147559514,2147606610,
2147729531,2231451772,2147559518,2231451774,2248235135,2248228992,2277589123,
2277589124,2147559588,2147559589,2147559590,2265006213,2265006214,2147559593,
2260811911,2147565706,2147565707,2147565708,2147606574,2147565720,2147565721,
2147541180,2147535037,2147535038,2147553460,2147565621,2147547318,2147547319,
2147535039,2147528896,2147723322,2017486907,2017693756,2101573693,2017681470,
2017675327,2147522754,2147516611,2147510468,2147510469,2147492038,2147483847,
1073809836,805306566,3221225548,0,2583691420,7733301,65537,4026531840,268435456,
603998290,603983385,604006139,0,805306426,3221225560,0,603998290,603983388,0,
805306440,3221225566,0,603998290,603983401,0,805306556,3221225572,0,603998290,
603983416,0,805306444,3221225578,0,603998290,603983469,0,805306445,3221225584,
0,805306491,3221225587,0,603998290,603983481,0,1073766408,805306450,3221225594,
0,1073766664,805306450,3221225598,0,603998290,603983509,0,603998290,603983555,
0,805306447,3221225607,0,603998290,603983570,0,603998290,603983583,0,805306442,
3221225616,0,603998290,603983636,0,603998290,603983679,0,805306439,3221225625,
0,805306438,3221225628,0,603998290,603983692,0,603998290,603983707,0,603998290,
603983722,0,603998290,603983737,0,603998290,603983770,0,603998290,603983787,
0,603998290,603983800,0,603998290,603983813,0,603998290,603983832,0,603998290,
603983845,0,603998290,603983858,0,805306495,3221225664,0,0,4026531840,0,2852126728,
16711733,131076,2147491976,2147483777,2147483778,2147483779,2147483788,603998502,
604012032,0,2147483788,603998502,603998679,0,4026531840,805306508,0,2852126728,
6815797,131076,2147483712,2151686161,2151686245,2147491957,2147483790,603998520,
603984902,0,2147483790,603998520,603991879,0,4026531840,805306510,0,2583691398,
16777269,131075,4026531840,0,0,2147483791,603998534,0,2147483791,603998550,0,
2852192260,16842805,1,2147483782,268435456,603998544,603998560,0,4026531840,
0,603998547,603984559,0,1073794584,805306511,0,2852192260,16908341,1,2147483783,
268435456,603998544,603998560,0,4026531840,0,2852126724,6815797,131076,2147483712,
2151677969,2151678053,2147483765,2147483792,603998575,603998601,0,4026531840,
1073757976,805306512,0,3087026563,2768240653,0,65538,2147491984,2147483793,1073742088,
805306512,3221225481,0,2583691327,7798837,65537,4026531840,268435456,603998575,
603998572,603998601,0,4026531840,2499805328,0,65537,4026531840,0,0,2852126728,
6815797,131076,2147483712,2151686161,2151686245,2147491957,2147483793,603998617,
603984902,0,2147483793,603998632,603991879,0,4026531840,2852126726,10616885,
1,2147483663,2147483705,268435456,603998629,603984912,603985244,0,805306513,
0,1073758224,805306513,0,2852192262,10682421,1,2147483663,2147483705,268435456,
603998629,603984912,603985244,0,4026531840,0,2583691398,16777269,131075,4026531840,
0,0,2147483794,603998656,0,2147483794,603998669,0,2852192260,16842805,1,2147483782,
268435456,603998666,603998504,0,4026531840,0,1073794832,805306514,0,2852192260,
16908341,1,2147483783,268435456,603998666,603998504,0,4026531840,0,2852192260,
16973877,1,2147483784,2147483795,268435456,603998689,0,4026531840,0,2852192260,
6094901,1,2147483670,268435456,603998699,603999593,0,4026531840,0,2852192260,
6160437,1,2147483671,268435456,603998709,603998712,0,4026531840,0,1073795112,
805306515,0,2852192260,9568309,1,2147483665,2147483796,268435456,603998722,0,
4026531840,0,2852126736,17039413,65539,2147498058,2151702547,2147483785,2147483797,
268435456,603998746,603998936,603998836,603999593,0,2147483799,268435456,603998808,
603998987,0,268435456,1073796880,805306516,0,4026531840,0,2852126736,17039413,
65539,2147483722,2151702547,2147494025,2147483799,268435456,603998770,603998987,
0,2147483797,268435456,603998798,603998936,603998836,603999593,0,268435456,1073796376,
805306516,0,4026531840,0,2852126731,17104949,65538,2147483785,2143303699,2147483797,
268435456,603998788,603998936,603998836,603999593,0,268435456,1073796128,805306516,
0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073795368,805306516,
0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073795872,805306516,
0,4026531840,0,2852126731,17104949,65538,2147483785,2143303699,2147483797,268435456,
603998826,603998936,603998836,603999593,0,268435456,1073796632,805306516,0,4026531840,
0,2852192260,9764917,1,2147483667,268435456,1073795616,805306516,0,4026531840,
0,2852192259,6422581,1,2147483680,268435456,603998844,0,4026531840,2852126726,
17170485,393291,2436890688,2147483777,2147483778,2147483779,2147483780,2147483653,
2147483782,2147483783,2147483784,2147489929,2155872266,2399141963,2390759498,
2147483745,2390753294,2147483748,2147483752,2147483665,2147483666,2373982227,
2147483753,2147483669,2365587478,2147483755,2147483759,2147483760,2147483761,
2147483803,2147483762,2147483741,2147483678,2147483679,2147483744,2063597601,
2147483746,2147483747,2059403300,2147483749,2147483686,2147483763,2046820392,
2059403305,2147483754,2063597611,2147483756,2147483765,2147483758,2051014703,
2051014704,2051014705,2055209010,2097152051,2147483700,2113929269,2147483702,
2147483703,2147483704,2147483705,2172649530,2172649531,2172649532,2172649533,
2172649534,2147483775,2147483770,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,603998930,
603996314,0,1073797400,805306518,0,4026531840,0,1073797152,805306518,0,1073742352,
805306517,0,3087026926,2768240655,0,65538,2147483798,2147491989,1073742088,805306517,
3221225481,0,2583691401,17104949,65537,4026531840,2147483798,268435456,603998936,
603998933,603998836,603999593,0,4026531840,2499805333,0,65537,4026531840,0,0,
2852192260,6094901,1,2147483670,268435456,603998974,603999593,0,4026531840,0,
2852192260,6160437,1,2147483671,268435456,603998984,603998012,0,4026531840,0,
1073798184,805306520,0,2852192259,6422581,1,2147483680,268435456,603998995,0,
4026531840,2852126726,17236021,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147489929,2394947594,
2394947659,2147483745,2147483748,2386558990,2147483752,2147483753,2147483665,
2147483666,2369787923,2147483755,2147483669,2361393174,2147483759,2147483760,
2147483761,2147483762,2147483803,2147483763,2147483741,2147483678,2147483679,
2147483744,2059403297,2147483746,2147483747,2051014692,2147483749,2147483686,
2147483765,2042626088,2042626089,2147483754,2051014699,2147483756,2147483770,
2147483758,2046820399,2046820400,2046820401,2046820402,2051014707,2147483700,
2088763445,2147483702,2147483703,2147483704,2147483705,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
603999079,603996314,0,1073797904,805306519,0,4026531840,1073797656,805306519,
0,2852192260,6094901,1,2147483670,268435456,603999092,603999105,0,4026531840,
0,2852192260,6160437,1,2147483671,268435456,603999102,603995187,0,4026531840,
0,1073799208,805306522,0,2852126728,6815797,131076,2147483712,2151686161,2151686245,
2147491957,2147483803,603999121,603984902,0,2147483803,603999121,603991879,0,
4026531840,805306523,0,1073799440,805306524,0,2852126734,17301557,131077,2147491968,
2147504263,2155892870,2139103359,2147483790,2147483805,603999150,603999203,0,
2147483805,2147483810,603999150,603999589,603996901,0,2147483805,603999150,603998522,
0,4026531840,0,805306525,0,2852192261,9568309,1,2147483665,2147483773,268435456,
603999162,603995197,0,4026531840,2852126731,17367093,65538,2147483788,2147494029,
2147483802,268435456,603999180,603999082,0,2147483804,268435456,603999197,603999123,
603995187,0,4026531840,0,2852126726,17432629,1,2147483789,2147483804,268435456,
603999194,603999123,603995187,0,1073798424,805306521,0,0,1073798944,805306521,
0,1073798680,805306521,0,1073741840,805306527,0,2852192261,17498165,1,2147483790,
2147483806,268435456,603999213,603984902,0,4026531840,2852126729,17563701,65538,
2147483791,2143301649,2147483807,268435456,603999229,603999200,603990206,0,268435456,
603999277,0,4026531840,0,2852192259,9568309,1,2147483665,268435456,603999237,
0,4026531840,2852126727,17629237,262163,2193621056,2218786929,2189426706,2151684115,
2185232451,2168455173,2147483766,2147483767,2181038120,2147483689,2147483749,
2172649584,2147483762,2147483763,2147483758,2147483759,2147483768,2147483792,
2147483793,603999267,603999317,0,268435456,1073800232,805306526,0,4026531840,
2852192260,9764917,1,2147483667,268435456,1073799728,805306526,0,4026531840,
0,2852126727,17629237,262163,2193621056,2218786929,2189426706,2151684115,2185232451,
2168455173,2147483766,2147483767,2181038120,2147483689,2147483749,2172649584,
2147483762,2147483763,2147483758,2147483759,2147483768,2147483792,2147483793,
603999307,603999317,0,268435456,1073800480,805306526,0,4026531840,2852192260,
9764917,1,2147483667,268435456,1073799976,805306526,0,4026531840,0,2852126736,
17694773,262162,2189451328,2214617201,2185256978,2185257027,2147508325,2143313925,
2147483766,2147491959,2168479784,2147508265,2172674160,2147508338,2147508339,
2147500152,2147508334,2147508335,2147508368,2147508369,2147483808,603999527,
603999355,0,2147483808,603999527,603999383,0,2147483808,603999527,603999409,
0,2147483808,603999527,603999417,0,4026531840,2583756918,13631541,65538,4026531840,
0,603999363,0,0,2785017858,17760309,196620,2164260904,2185232425,2147483762,
2181038147,2168455232,2160066565,2147483758,2147483759,2147483749,2147483760,
2147483761,2147483763,603991099,0,603990979,0,0,2583756919,13762613,65538,4026531840,
0,603999391,0,0,2785017858,17825845,196619,2164260904,2185232425,2147483762,
2147483763,2168455232,2160066565,2147483758,2147483759,2147483749,2147483760,
2147483761,603991099,0,603990979,0,2583756920,13893685,65538,4026531840,0,603999391,
0,0,2852126750,17891381,196623,2164277288,2185248809,2185240594,2185232451,2168496192,
2160087045,2147512430,2147512431,2147534949,2164293744,2164293745,2147520626,
2147520627,2147487888,2147487889,603992661,0,604004979,0,268435456,1073800968,
805306528,0,603984459,0,2147483733,268435456,603990460,0,603990666,0,603990509,
0,603990558,0,2147483746,268435456,1073771528,805306466,0,2147483750,268435456,
603991519,603985244,0,4026531840,0,2852126727,17629237,262162,2189426752,2214592625,
2185238546,2185232451,2147483749,2143289349,2147483766,2147483767,2168455208,
2147483689,2172649584,2147483762,2147483763,2147483768,2147483758,2147483759,
2147483792,2147483793,603999497,604004979,0,268435456,1073744912,805306528,0,
4026531840,0,1073800720,805306528,0,2852126729,17956917,65538,2147483670,2147489807,
268435456,603991207,0,2147483705,268435456,603999518,603984912,603985244,0,603999524,
603984559,0,0,603999521,603984559,0,1073801752,805306529,0,1073801744,805306529,
0,3087027551,2768240675,0,262160,2147492000,2147483809,2181075026,2181081171,
2181103700,2181097557,2185283670,2147526743,2147526744,2147526745,2147520610,
2147512419,2147506276,2147498085,2147520558,2147498086,1073742088,805306528,
3221225495,0,603999527,603999467,0,1073770760,805306468,3221225502,0,603999527,
603999500,0,1073801736,805306529,3221225509,0,805306469,3221225512,0,1073766408,
805306450,3221225516,0,1073766664,805306450,3221225520,0,603999527,603983509,
0,603999527,603983555,0,4026531840,2499805344,0,65537,4026531840,0,0,805306530,
0,805306531,0,2852126736,8323125,327736,2290114624,2290114593,2147508322,2147508323,
2281725988,2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,
2273337387,2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,
2264948786,2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,
2147508281,2147508282,2264948795,2147508284,2164285501,2155896862,2223005727,
2147508286,2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,
2147508329,2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,
2147508338,2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,
2147491987,2147508374,2147508379,2147483775,603999803,603982661,0,2147483775,
603999803,603982853,0,2147483775,603999803,603985086,0,2147483775,603999803,
603985320,0,4026531840,805306537,0,2852126726,18022453,131077,2147491872,2160074775,
2147491942,2139099155,2147483711,603999687,0,603999753,0,603999797,0,4026531840,
0,2785017859,6750261,327738,2294284352,2294284321,2147483746,2147483747,2285895716,
2285895685,2147483686,2311061553,2277507112,2277507113,2277507082,2277507115,
2147483756,2327838774,2269118478,2269118511,2269118512,2105540625,2269118514,
2269118515,2269118516,2269118517,2109734934,2185236503,2147483704,2147483705,
2147483706,2273312827,2147483708,2168455229,2160066590,2231369759,2147483703,
2147483710,2147483741,2218786912,2147483745,2214592612,2147483749,2147483752,
2147483753,2147483754,2147483755,2193621102,2147483759,2147483760,2147483761,
2147483762,2176843891,2147487860,2147483765,2147483775,2147483776,2147483780,
2147483790,2147483795,2147483798,2147483803,603983496,0,4026531840,4026531840,
0,2785017857,18087936,327719,2147483682,2147483681,2139095042,2185232387,2147483684,
2147483653,2147483686,2147483655,2168455176,2147483689,2147483658,2147483659,
2147483683,2147483688,2147483662,2147483695,2210398224,2210398225,2147483698,
2218786867,2202009620,2218786869,2147483702,2147483703,2147483704,2147483705,
2147483706,2147483707,2172649500,2172649501,2147483710,2147483696,2147483697,
2164260916,2147483708,2147483709,2147483795,2147483796,2147483797,4026531840,
4026531840,2583691366,18153525,65537,4026531840,4026531840,0,3087027953,2768240760,
0,327736,2353213504,2147686465,2349006914,2349000771,2286080068,2286073925,2286067782,
2348976199,2147643464,2277660745,2147631178,2147625035,2147618892,2147547213,
2223104046,2147565647,2147606608,2147606609,2210480146,2147577939,2239875156,
2147594325,2235666518,2235658327,2147577944,2147577945,2181277754,2147510331,
2219020348,2219014205,2168676414,2168670271,2185361486,2147606610,2147565658,
2197897310,2197903487,2210480292,2210480293,2210480294,2147565737,2147559598,
2147553460,2147547318,2147547319,2147541180,2147535037,2147535038,2147535039,
2147528896,2147522754,2147516611,2147510468,2147510469,2147492038,2147483847,
1073809836,805306566,3221225535,0,2583691420,7733301,65537,4026531840,268435456,
603999803,603983385,604006139,0,805306426,3221225547,0,603999803,603983388,0,
805306440,3221225553,0,603999803,603983401,0,805306556,3221225559,0,603999803,
603983416,0,805306444,3221225565,0,603999803,603983469,0,805306537,3221225571,
0,805306445,3221225574,0,603999803,603999671,0,1073766408,805306450,3221225581,
0,1073766664,805306450,3221225585,0,603999803,603983509,0,603999803,603983555,
0,805306447,3221225594,0,603999803,603983570,0,603999803,603983583,0,805306442,
3221225603,0,603999803,603983636,0,603999803,603983679,0,805306439,3221225612,
0,805306438,3221225615,0,603999803,603983692,0,603999803,603983707,0,603999803,
603983722,0,603999803,603983737,0,603999803,603983770,0,603999803,603983787,
0,603999803,603983800,0,603999803,603983813,0,603999803,603983832,0,603999803,
603983845,0,603999803,603983858,0,805306495,3221225651,0,4026531840,0,2499805311,
0,65537,4026531840,0,0,2852126735,18219061,65539,2147483712,2151702545,2147496079,
2147483704,268435456,1073758472,805306424,604000013,0,2147483807,268435456,604000117,
603999200,603990206,0,268435456,604000165,0,4026531840,2852126729,17563701,65538,
2147483791,2143301649,2147483807,268435456,604000029,603999200,603990206,0,268435456,
604000077,0,4026531840,0,2852192259,9568309,1,2147483665,268435456,604000037,
0,4026531840,2852126727,17629237,262163,2193621056,2218786929,2189426706,2151684115,
2185232451,2168455173,2147483766,2147483767,2181038120,2147483689,2147483749,
2172649584,2147483762,2147483763,2147483758,2147483759,2147483768,2147483792,
2147483793,604000067,603999317,0,268435456,1073800232,805306533,0,4026531840,
2852192260,9764917,1,2147483667,268435456,1073799728,805306533,0,4026531840,
0,2852126727,17629237,262163,2193621056,2218786929,2189426706,2151684115,2185232451,
2168455173,2147483766,2147483767,2181038120,2147483689,2147483749,2172649584,
2147483762,2147483763,2147483758,2147483759,2147483768,2147483792,2147483793,
604000107,603999317,0,268435456,1073800480,805306533,0,4026531840,2852192260,
9764917,1,2147483667,268435456,1073799976,805306533,0,4026531840,0,2852192259,
9568309,1,2147483665,268435456,604000125,0,4026531840,2852126727,17629237,262163,
2193621056,2218786929,2189426706,2151684115,2185232451,2168455173,2147483766,
2147483767,2181038120,2147483689,2147483749,2172649584,2147483762,2147483763,
2147483758,2147483759,2147483768,2147483792,2147483793,604000155,603999317,0,
268435456,1074006132,805306533,0,4026531840,2852192260,9764917,1,2147483667,
268435456,1074071652,805306533,0,4026531840,0,2852126727,17629237,262163,2193621056,
2218786929,2189426706,2151684115,2185232451,2168455173,2147483766,2147483767,
2181038120,2147483689,2147483749,2172649584,2147483762,2147483763,2147483758,
2147483759,2147483768,2147483792,2147483793,604000195,603999317,0,268435456,
1073940604,805306533,0,4026531840,2852192260,9764917,1,2147483667,268435456,
1074006124,805306533,0,4026531840,0,2852126726,18284702,196616,2172649480,2147483721,
2155872258,2147483651,2147489802,2147483653,2147483864,2147483655,604000223,
604008246,0,268435456,604000243,0,4026531840,2852192259,18350133,1,2147483658,
268435456,604000231,0,4026531840,2852126725,18415669,1,2147483794,2147483815,
268435456,1074006148,805306534,0,1073940628,805306534,0,2852126725,18415669,
1,2147483794,2147483815,268435456,1073940620,805306534,0,1073875100,805306534,
0,2516582547,6553653,196610,4026531840,0,604000277,0,604000267,0,604000287,0,
0,2785017860,6619189,65538,2147487893,2143289491,604000277,0,604000287,0,4026531840,
2852192261,6488117,1,2147483795,2147483818,268435456,603999669,604000292,0,4026531840,
2147483822,603999669,604000316,604000334,0,2852126727,18546741,65538,2147483796,
2147489939,268435456,604000306,0,268435456,1073875116,805306538,0,4026531840,
0,2852192260,6488117,1,2147483795,268435456,1073940644,805306538,0,4026531840,
0,604000319,603999593,0,2852192262,9764917,1,2147483667,2147483824,268435456,
604000331,604000474,604000368,0,4026531840,0,1073940660,805306542,0,2852192260,
6488117,1,2147483795,2147483823,268435456,604000344,0,4026531840,0,2852126727,
18612224,65538,2147483796,2147489941,268435456,604000358,0,268435456,1073875140,
805306543,0,4026531840,0,2852192260,18481205,1,2147483797,268435456,1073940668,
805306543,0,4026531840,0,2852126731,18677760,65539,2147483796,2151684243,2147498133,
268435456,604000386,0,268435456,1073875164,805306545,0,268435456,1073875188,
805306547,0,4026531840,2852126728,6619189,65538,2147491989,2143289491,268435456,
1073940692,805306545,0,268435456,1073940716,805306547,0,4026531840,2852192260,
6488117,1,2147483795,268435456,1073940692,805306545,0,4026531840,0,2852192260,
18481205,1,2147483797,268435456,1073940716,805306547,0,4026531840,0,1073768976,
805306546,0,2516582547,6553653,196610,4026531840,0,604000445,0,604000435,0,604000458,
0,0,2785017860,6619189,65538,2147487893,2143289491,604000445,0,604000458,0,4026531840,
2852192261,18743349,1,2147483667,2147483825,268435456,604000455,604000498,0,
4026531840,1073875148,805306544,0,2852192261,18808885,1,2147483667,2147483827,
268435456,604000468,604000512,0,4026531840,604000471,603999593,0,1073940708,
805306546,0,2768240656,0,131076,2147514544,2147506353,2147492018,2147483827,
604000474,604000420,603999593,0,2583691283,18874657,65537,4026531840,604000474,
604000423,0,1073742088,805306544,3221225493,0,0,4026531840,2852126727,19005440,
65538,2147483796,2147489939,268435456,604000400,0,268435456,1073875164,805306545,
0,4026531840,0,2852126727,18612224,65538,2147483796,2147489941,268435456,604000410,
0,268435456,1073875188,805306547,0,4026531840,0,2852192261,6225973,1,2147483712,
2147483829,268435456,1073771528,805306549,0,4026531840,2852126728,19071029,65538,
2147483751,2143297637,268435456,603983369,604000526,0,268435456,603983372,603999593,
0,4026531840,2852126728,19136565,65538,2151686158,2147483752,2147483831,604000564,
604000566,0,2147483831,604000564,604000594,0,4026531840,805306551,0,2852192260,
5439541,1,2147483752,2147483832,268435456,604000576,0,4026531840,0,2852192259,
5636149,1,2147483751,268435456,604000584,0,4026531840,2852192260,19202101,1,
2147483799,268435456,1073940756,805306552,0,4026531840,0,2852192260,5701685,
1,2147483662,2147483833,268435456,604000604,0,4026531840,0,2852192259,5636149,
1,2147483751,268435456,604000612,0,4026531840,2852192260,19267637,1,2147483800,
268435456,1073940764,805306553,0,4026531840,0,2852126730,19333173,327739,2298478656,
2298478625,2147483746,2147483747,2290090020,2290089989,2147483686,2315255857,
2281701416,2281701417,2281701386,2281701419,2147483756,2332033078,2273312782,
2273312815,2273312816,2105540625,2273312818,2273312819,2273312820,2273312821,
2109734934,2185244695,2147483704,2147483705,2147483706,2277507131,2147483708,
2172649533,2160066590,2160066591,2147483703,2147483710,2222987327,2147483741,
2218786912,2147483745,2214592612,2147483749,2147483752,2147483753,2147483754,
2147483755,2193621102,2147483759,2147483760,2147483761,2147483762,2176843891,
2147483764,2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,
2147483798,2147483803,604000696,604001867,0,268435456,604000720,0,268435456,
1073875244,805306554,0,4026531840,0,2852126727,7077941,65538,2147483711,2143295511,
268435456,604000710,0,268435456,1073940772,805306554,0,4026531840,0,2852192260,
6160437,1,2147483671,268435456,1074006308,805306554,0,4026531840,0,2852192260,
6160437,1,2147483671,268435456,1073940780,805306554,0,4026531840,0,2583691391,
16318517,131075,4026531840,0,0,2147483812,604000742,0,2147483812,604000750,0,
2852192259,16384053,1,2147483775,268435456,603985471,0,4026531840,2852192259,
11272245,1,2147483776,268435456,604000758,0,4026531840,2852126732,11337781,65539,
2155890710,2147483715,2147489856,268435456,604000778,0,2147483704,268435456,
1073758472,805306424,604001278,0,268435456,604001530,0,4026531840,0,2852126729,
11403317,65538,2151690262,2147483712,2147483704,268435456,1073758472,805306424,
604000794,0,268435456,604001046,0,4026531840,0,2852192259,6094901,1,2147483670,
268435456,604000802,0,4026531840,2852126726,11468853,131078,2164260928,2151677969,
2160066661,2147489815,2147483764,2147483765,604000818,603991617,0,268435456,
604000936,0,4026531840,2852192259,6160437,1,2147483671,268435456,604000826,0,
4026531840,2852192259,9568309,1,2147483665,268435456,604000834,0,4026531840,
2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,604000920,
603994606,0,268435456,1073804608,805306532,0,4026531840,0,2852192260,9764917,
1,2147483667,268435456,1073802568,805306532,0,4026531840,0,1073802568,805306532,
0,1073804608,805306532,0,2852192259,9568309,1,2147483665,268435456,604000944,
0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
604001030,603994606,0,268435456,1074202636,805306532,0,4026531840,0,2852192260,
9764917,1,2147483667,268435456,1073804352,805306532,0,4026531840,0,1073804352,
805306532,0,1074202636,805306532,0,2852126726,11468853,131078,2164260928,2151677969,
2160066661,2147489815,2147483764,2147483765,604001062,603991617,0,268435456,
604001174,0,4026531840,2852192259,6160437,1,2147483671,268435456,604001070,0,
4026531840,2852192259,9568309,1,2147483665,268435456,604001078,0,4026531840,
2852126727,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,604001164,
603994606,0,268435456,1074202628,805306532,0,4026531840,0,2852192260,9764917,
1,2147483667,268435456,1073804096,805306532,0,4026531840,0,2852192259,9568309,
1,2147483665,268435456,604001182,0,4026531840,2852126727,11534389,393290,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,
2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,
2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,
2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,
2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,
2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,
2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,
2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483795,2147483798,604001268,603994606,0,268435456,1074137164,
805306532,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073807160,
805306532,0,4026531840,0,2852192259,6094901,1,2147483670,268435456,604001286,
0,4026531840,2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,
2147483764,2147483765,604001302,603991617,0,268435456,604001420,0,4026531840,
2852192259,6160437,1,2147483671,268435456,604001310,0,4026531840,2852192259,
9568309,1,2147483665,268435456,604001318,0,4026531840,2852126727,11534389,393290,
2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,
2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,
2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,
2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,
2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,
2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,
2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,
2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,
2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,
2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,
2147483787,2147483790,2147483795,2147483798,604001404,603994606,0,268435456,
1073806904,805306532,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,
1073803840,805306532,0,4026531840,0,1073803840,805306532,0,1073806904,805306532,
0,2852192259,9568309,1,2147483665,268435456,604001428,0,4026531840,2852126727,
11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,
2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,
2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,
2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,
2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,
2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,
2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,
2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,
2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,
2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,
2147483786,2147483787,2147483790,2147483795,2147483798,604001514,603994606,0,
268435456,1074137156,805306532,0,4026531840,0,2852192260,9764917,1,2147483667,
268435456,1073806648,805306532,0,4026531840,0,1073806648,805306532,0,1074137156,
805306532,0,2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,
2147483764,2147483765,604001546,603991617,0,268435456,604001658,0,4026531840,
2852192259,6160437,1,2147483671,268435456,604001554,0,4026531840,2852192259,
9568309,1,2147483665,268435456,604001562,0,4026531840,2852126727,11534389,393290,
2432696384,2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,
2147483783,2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,
2386558990,2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,
2147483669,2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,
2147483765,2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,
2147483747,2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,
2147483754,2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,
2042626097,2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,
2147483704,2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,
2147483775,2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,
2147483787,2147483790,2147483795,2147483798,604001648,603994606,0,268435456,
1074137148,805306532,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,
1073806392,805306532,0,4026531840,0,2852192259,9568309,1,2147483665,268435456,
604001666,0,4026531840,2852126727,11534389,393290,2432696384,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,
2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,
2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,
2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,
2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,
2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,
2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,
2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,
2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,
2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,
2147483798,604001752,603994606,0,268435456,1074071644,805306532,0,4026531840,
0,2852192260,9764917,1,2147483667,268435456,1074137140,805306532,0,4026531840,
0,2852126739,19398709,131076,2147502144,2147493989,2147483670,2147514515,2147483834,
268435456,604001790,604000622,0,268435456,604001793,603999593,0,2147483829,268435456,
1073771528,1073741840,805306561,0,2147483817,604001790,604000255,0,4026531840,
0,1073741840,805306561,0,2852192260,7405621,1,2147483750,268435456,1074006372,
805306561,0,4026531840,0,2852126737,7602229,131076,2147510419,2147493989,2147483670,
2134919271,2147483834,268435456,604001829,604000622,0,268435456,604001832,603999593,
0,268435456,604001842,604000526,0,2147483817,604001845,604000255,0,4026531840,
0,1073875252,805306561,0,2852192260,7405621,1,2147483750,268435456,1073763872,
805306561,0,4026531840,0,1073764120,805306561,0,1073764368,805306561,0,3087029826,
2499805377,0,65539,4026531840,0,0,604001848,604001803,0,2499805377,0,65537,4026531840,
0,0,1073875308,805306562,0,2852126736,15597621,327737,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2323669046,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2264948788,2264948789,2109759510,
2147508279,2147508280,2147508281,2147508282,2269143099,2147508284,2164285501,
2155896862,2227200031,2147508286,2147508317,2218811488,2147508321,2214617188,
2147508325,2147483752,2147508329,2147508330,2147508331,2193645678,2147508335,
2147508336,2147508337,2147508338,2176868467,2147508340,2147508341,2147508351,
2147508352,2147508356,2147508366,2147491987,2147508374,2147508379,2147483835,
604002222,603982661,0,2147483835,604002222,603982853,0,2147483835,604002222,
603985086,0,2147483835,604002222,604001945,0,4026531840,0,2852126791,19464245,
327734,2290133056,2290124833,2147483746,2147483747,2281736228,2281768965,2147518502,
2298513457,2147522600,2269157417,2269231114,2269118507,2147541100,2311096374,
2302748782,2256570415,2256570416,2105636881,2256570418,2256570419,2256570420,
2256570421,2109747222,2147518519,2147518520,2147518521,2147518522,2256570427,
2147518524,2164295741,2155876382,2218786847,2147518526,2147483741,2210398304,
2147483745,2206208100,2147571813,2147491945,2147537002,2147537003,2147559535,
2147563632,2147563633,2147567730,2147567731,2147508340,2147580021,2147502207,
2147584128,2147610756,2147588238,2147604630,2147621019,603989051,0,603989366,
0,603989769,0,268435456,603983073,0,268435456,603985444,0,2147483953,268435456,
604008389,603985244,0,603980682,0,603984459,0,2147483726,268435456,1073765640,
805306446,0,603989737,0,2147483729,268435456,1073766152,805306449,0,2147483733,
268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,268435456,
603990728,0,603990610,0,604000730,0,2147483813,268435456,603999991,0,2147483814,
268435456,604000205,0,268435456,603983349,0,2147483842,268435456,604001864,603989051,
0,2147483844,268435456,604002412,0,4026531840,0,2785017859,6750261,327738,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,
2277507112,2277507113,2277507082,2277507115,2147483756,2327838774,2269118478,
2269118511,2269118512,2105540625,2269118514,2269118515,2269118516,2269118517,
2109734934,2185236503,2147483704,2147483705,2147483706,2273312827,2147483708,
2168455229,2160066590,2231369759,2147483703,2147483710,2147483741,2218786912,
2147483745,2214592612,2147483749,2147483752,2147483753,2147483754,2147483755,
2193621102,2147483759,2147483760,2147483761,2147483762,2176843891,2147483764,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
2147483803,604002141,0,4026531840,4026531840,0,2852192259,7077941,1,2147483711,
268435456,604002149,0,4026531840,2852126729,15597621,327737,2290102336,2290102305,
2147496034,2147496035,2281713700,2281713669,2147495974,2306879537,2273325096,
2273325097,2273325066,2273325099,2147496044,2323656758,2264936462,2264936495,
2264936496,2105552913,2264936498,2264936499,2264936500,2264936501,2109747222,
2147495991,2147495992,2147495993,2147495994,2269130811,2147495996,2164273213,
2155884574,2227187743,2147495998,2147496029,2218799200,2147496033,2214604900,
2147496037,2147496040,2147496041,2147496042,2147496043,2193633390,2147496047,
2147496048,2147496049,2147496050,2176856179,2147483764,2147496053,2147496063,
2147496064,2147496068,2147496078,2147496083,2147496086,2147496091,2147483953,
268435456,604002219,604008389,603985244,0,604002219,603985244,0,4026531840,1073757976,
805306555,0,3087030374,2768240762,0,327736,2349029440,2147696705,2344822850,
2344816707,2281896004,2281889861,2281883718,2344792135,2147653704,2273476681,
2147641418,2147635275,2147629132,2147569741,2223114286,2147582031,2147616848,
2307000401,2210496530,2147588179,2231496788,2147604565,2227288150,2227279959,
2147588184,2147588185,2181038138,2214627387,2214836284,2214830141,2168686654,
2214817855,2147622990,2147616850,2147582042,2193719390,2210496676,2210496677,
2210496678,2147582121,2147575988,2147569846,2147569847,2147555515,2147549372,
2147543229,2147543230,2147543231,2147537088,2147530946,2147524803,2147518660,
2147518661,2147500230,2147492039,2147483953,1073742088,805306555,3221225535,
0,1073809836,805306566,3221225539,0,2583691420,7733301,65537,4026531840,268435456,
604002222,603983385,604006139,0,805306426,3221225551,0,604002222,603983388,0,
805306440,3221225557,0,604002222,603983401,0,805306556,3221225563,0,604002222,
603983416,0,2583691327,7077941,65537,4026531840,604002222,604002075,0,805306444,
3221225576,0,604002222,603983469,0,805306445,3221225582,0,1073766408,805306450,
3221225586,0,1073766664,805306450,3221225590,0,604002222,603983509,0,604002222,
603983555,0,805306447,3221225599,0,604002222,603983570,0,604002222,603983583,
0,805306442,3221225608,0,604002222,603983636,0,604002222,603983679,0,805306439,
3221225617,0,805306438,3221225620,0,604002222,603983692,0,604002222,603983707,
0,604002222,603983722,0,604002222,603983737,0,604002222,603983770,0,604002222,
603983787,0,604002222,603983800,0,604002222,603983813,0,604002222,603983832,
0,604002222,603983845,0,604002222,603983858,0,4026531840,0,2499805371,0,65537,
4026531840,0,0,2852126731,19529976,327738,2294300736,2294300705,2147500130,2290098243,
2290106404,2290106373,2147500070,2147483655,2281717800,2281717801,2281717770,
2281717803,2147500140,2290106417,2273329166,2273329199,2273329200,2130722833,
2273329202,2273329203,2147500084,2269134901,2189443094,2147500087,2147500088,
2147500089,2147500090,2273329211,2147500092,2168471613,2160082974,2231386143,
2248163382,2147500094,2147500125,2218803296,2147500129,2147500131,2210414692,
2147500133,2147500136,2147500137,2147500138,2147500139,2189443182,2147500143,
2147500144,2147500145,2147500146,2172665971,2147500149,2147500159,2147500160,
2147500164,2147500174,2147500179,2147500182,2147500187,268435456,1073875324,
805306564,0,268435456,604002486,603985244,0,604002489,603985244,0,4026531840,
0,1073940868,805306564,0,1073875340,805306564,0,2852126731,11403317,65538,2151686166,
2147483712,2147483846,603983580,603989625,0,2147483846,1610612738,67131598,67131740,
1073809836,805306566,0,4026531840,0,2852192259,6094901,1,2147483670,268435456,
604002518,0,4026531840,2852126724,6750261,327738,2294288448,2294288417,2147487842,
2147487843,2285899812,2285899781,2147487782,2311065649,2277511208,2277511209,
2277511178,2277511211,2147487852,2327842870,2269122574,2269122607,2269122608,
2105544721,2269122610,2269122611,2269122612,2269122613,2109739030,2185236503,
2147487800,2147487801,2147487802,2273316923,2147487804,2168459325,2160070686,
2231373855,2147487799,2147487806,2147487837,2218791008,2147487841,2214596708,
2147487845,2147487848,2147487849,2147487850,2147487851,2193625198,2147487855,
2147487856,2147487857,2147487858,2176847987,2147483764,2147487861,2147487871,
2147487872,2147487876,2147487886,2147487891,2147487894,2147487899,603983139,
0,604002584,0,4026531840,2852126727,7012405,327737,2294292544,2294292513,2147491938,
2147491939,2285903908,2285903877,2147491878,2311069745,2277515304,2277515305,
2277515274,2277515307,2147491948,2323652662,2269126670,2269126703,2269126704,
2105548817,2269126706,2269126707,2147491892,2264932405,2109743126,2185232407,
2147491896,2147491897,2147491898,2269126715,2147491900,2168463421,2160074782,
2227183647,2147491895,2147491902,2147491933,2214600800,2147491937,2210406500,
2147491941,2147491944,2147491945,2147491946,2147491947,2189434990,2147491951,
2147491952,2147491953,2147491954,2172657779,2147491957,2147491967,2147491968,
2147491972,2147491982,2147491987,2147491990,2147491995,268435456,1073875380,
805306567,0,603983265,603999593,0,4026531840,2852192262,6094901,1,2147483670,
2147483828,268435456,603983479,603983329,603999593,0,4026531840,0,2583691421,
19595317,983043,4026531840,0,0,2147483849,604002716,0,2147483849,604002724,0,
2147483849,604002732,0,2147483849,604002740,0,2147483849,604002748,0,2147483849,
604002756,0,2147483849,604002764,0,2147483849,604002772,0,2147483849,604002780,
0,2147483849,604002788,0,2147483849,604002796,0,2147483849,604002804,0,2147483849,
604002812,0,2147483849,604002820,0,2147483849,604002828,0,0,2852192259,19660853,
1,2147483805,268435456,805306569,0,4026531840,2852192259,19726389,1,2147483806,
268435456,805306569,0,4026531840,2852192259,19791925,1,2147483807,268435456,
805306569,0,4026531840,2852192259,19857461,1,2147483808,268435456,805306569,
0,4026531840,2852192259,19922997,1,2147483809,268435456,805306569,0,4026531840,
2852192259,19988533,1,2147483810,268435456,805306569,0,4026531840,2852192259,
20054069,1,2147483811,268435456,805306569,0,4026531840,2852192259,20119605,1,
2147483812,268435456,805306569,0,4026531840,2852192259,20185141,1,2147483813,
268435456,805306569,0,4026531840,2852192259,20250677,1,2147483814,268435456,
805306569,0,4026531840,2852192259,20316213,1,2147483815,268435456,805306569,
0,4026531840,2852192259,20381749,1,2147483816,268435456,805306569,0,4026531840,
2852192259,20447285,1,2147483817,268435456,805306569,0,4026531840,2852192259,
20512821,1,2147483818,268435456,805306569,0,4026531840,2852192259,20578357,1,
2147483819,268435456,805306569,0,4026531840,2852126728,20643861,196619,2181038112,
2168463481,2147492026,2147491907,2172657836,2147491941,2160074897,2147491943,
2147492016,2147492025,2147492028,2147483850,604003259,604002860,0,2147483850,
604003259,604002884,0,4026531840,0,2583756832,20709395,65538,4026531840,0,604002868,
0,0,2785017860,20774933,65538,2151677984,2147487920,604002878,0,604002882,0,
4026531840,2147483988,604008861,604004354,0,604004003,0,2852126736,20971541,
196618,2147489968,2168467577,2147512506,2147483715,2168471724,2147508325,2155896977,
2147508327,2147512505,2147512508,268435456,604002914,0,268435456,604002936,0,
604003333,0,2147483984,604008407,604003459,0,604004003,0,604005820,0,4026531840,
2583691343,21037075,65540,1073810060,805306581,0,0,268435456,1073744912,805306583,
0,0,2852192260,21102613,1,2147483727,268435456,1073744912,805306583,0,4026531840,
0,2583691343,21168147,65540,1073810076,805306582,0,0,268435456,1073744912,805306583,
0,0,2852126727,21233685,65538,2147483711,2143297553,268435456,604002962,604003798,
0,268435456,604002965,0,4026531840,0,1073757976,805306691,0,2852126727,21299221,
65539,2155872377,2143295507,2147483829,604002979,604005761,0,268435456,1073941372,
805306620,0,4026531840,2852192260,21364757,1,2147483667,268435456,1074006900,
805306620,0,4026531840,0,2852126729,21430291,65538,2151688200,2147483680,2147483988,
604003007,604008861,604004354,0,268435456,1073875556,805306580,0,1073810020,
805306580,0,0,1073742352,805306685,0,2583691296,21430291,65538,604003052,0,604003018,
0,0,2785017860,20774933,65538,2151682080,2147483824,604003028,0,604003034,0,
4026531840,604003031,604004003,0,1073742352,805306684,0,2147483965,604003040,
604008878,604008861,604004354,0,2583691272,21430291,65540,1073875532,805306580,
0,0,268435456,1073941068,805306580,0,0,2852126727,21626899,131076,2147489800,
2151678053,2147483793,2147483751,604003031,604004003,0,268435456,1073875564,
805306580,0,1073810028,805306580,0,0,2852126726,21692437,196617,2172655648,2176850065,
2147483834,2147489859,2147483836,2147489893,2147489968,2147489895,2147483833,
604003092,604005820,0,604003092,604005898,0,1073809876,805306571,0,0,1073742352,
805306677,0,2852126728,21757973,196618,2172659744,2176854161,2147494074,2147493955,
2168455340,2147493989,2147494064,2147493991,2147494073,2147494076,2147483984,
604003119,604008407,604003459,0,604003122,604008687,0,1073809884,805306571,0,
1073742352,805306676,0,1073875404,805306571,0,2852126728,21889045,65538,2147492016,
2147483715,268435456,1073875588,805306581,0,268435456,1073875604,805306582,0,
4026531840,2852192260,21954581,1,2147483824,268435456,1073875604,805306582,0,
4026531840,0,2583691296,21430291,65538,604003218,0,604003157,0,0,2785017860,
20774933,65538,2151682080,2147483824,604003167,0,604003200,0,4026531840,604003170,
604008817,0,2852126730,21430291,65538,2151690248,2147483680,2147483965,604003188,
604008878,604008861,604004354,0,268435456,1073941084,805306580,0,1073875548,
805306580,0,2583691272,21430291,65540,1073941060,805306580,0,0,268435456,1074006596,
805306580,0,0,2147483965,604003206,604008878,604008861,604004354,0,2583691272,
21430291,65540,1073875540,805306580,0,0,268435456,1073941076,805306580,0,0,2852126727,
21626899,131076,2147489800,2151678053,2147483793,2147483751,604003170,604008817,
0,268435456,1073875572,805306580,0,1073810036,805306580,0,0,2852126723,21430293,
196618,2185232416,2147483793,2164260931,2143289355,2164260957,2143289421,2147483747,
2147483751,2147483749,2147483824,604003256,604009015,0,1073809980,805306579,
0,0,1073875508,805306579,0,2768240692,0,262161,2147492176,2147539162,2206245172,
2197905619,2139179220,2160144597,2147553494,2147547351,2147518773,2147512636,
2109839562,2147582155,2134948092,2147506493,2147531006,2147500355,2147483988,
1073742088,805306685,3221225495,0,1073742088,805306676,3221225499,0,604003259,
604002948,0,604003259,604002989,0,604003259,604003010,0,604003259,604003070,
0,604003259,604003095,0,1073742088,805306677,3221225518,0,1073742088,805306684,
3221225522,0,604003259,604003125,0,1073810044,805306581,3221225529,0,604003259,
604003149,0,604003259,604003236,0,1073742088,805306691,3221225539,0,805306570,
3221225542,0,0,4026531840,0,2852126728,20643861,196619,2181038112,2168463481,
2147492026,2147491907,2172657836,2147491941,2160074897,2147491943,2147492016,
2147492025,2147492028,2147483851,604003389,604002860,0,2147483851,604003389,
604003357,0,4026531840,0,2852126738,20971541,196618,2147489968,2168467577,2147516602,
2147483715,2168475820,2147512421,2155901073,2147512423,2147516601,2147516604,
268435456,604002914,0,268435456,604002936,0,268435456,1073809892,805306571,0,
2147483984,604008407,604003459,0,604004003,0,604005820,0,4026531840,2768240689,
0,262160,2147492176,2206245172,2147518773,2172739795,2134984916,2134978773,2147553494,
2147547351,2147512636,2147500355,2147539162,2147582155,2130753788,2147506493,
2147531006,2147483988,1073742088,805306685,3221225494,0,1073742088,805306676,
3221225498,0,604003389,604002948,0,604003389,604002989,0,604003389,604003010,
0,604003389,604003070,0,604003389,604003095,0,1073742088,805306677,3221225517,
0,1073742088,805306684,3221225521,0,604003389,604003125,0,1073810044,805306581,
3221225528,0,604003389,604003149,0,604003389,604003236,0,1073742088,805306691,
3221225538,0,0,4026531840,0,2852192260,22020117,1,2147483820,2147483852,268435456,
604003469,0,4026531840,0,2852126730,22085653,65539,2147493928,2151688233,2147483821,
2147483854,268435456,604003487,604003611,0,2147483958,604003487,604008417,604003531,
0,4026531840,0,2852126731,22151189,131078,2168465584,2147483865,2151694354,2151688214,
2147494062,2147494072,2147483959,268435456,604003509,604008420,0,604003528,604008456,
0,1073875460,805306572,0,4026531840,0,2852126726,22216725,131077,2164261040,
2155872278,2143295506,2147483822,2147483832,604003525,604008456,0,1073940988,
805306572,0,4026531840,0,1074006508,805306572,0,1073940980,805306572,0,2583691304,
22282261,131075,4026531840,0,0,2147483853,604003577,0,2147483853,604003543,0,
2852192259,22347797,1,2147483689,268435456,604003551,0,4026531840,2852126727,
22413331,131077,2147483656,2160066565,2147483650,2147483651,2147489833,604003567,
604008538,0,268435456,1073741840,805306573,0,4026531840,2852192260,22347797,
1,2147483689,268435456,1073750040,805306573,0,4026531840,0,2852192259,22478869,
1,2147483688,268435456,604003585,0,4026531840,2852126727,22544403,131077,2164260872,
2147483653,2147483650,2147483651,2147489832,604003601,604008538,0,268435456,
1073741840,805306573,0,4026531840,2852192260,22478869,1,2147483688,268435456,
1073750040,805306573,0,4026531840,0,2852192260,22609941,1,2147483670,268435456,
604003621,604003531,0,4026531840,0,2852192260,22675477,1,2147483671,268435456,
1074006540,805306574,0,4026531840,0,2852126727,22741013,131076,2147489968,2147483822,
2143295510,2147489967,2147483855,604003647,0,2147483855,604003660,604003677,
0,4026531840,0,2852192260,22806549,1,2147483822,268435456,604003657,604003677,
0,4026531840,0,1073875476,805306575,0,2852126726,22872085,131076,2147483867,
2147489809,2147483866,2134906903,604003674,604008630,0,1073742088,805306575,
0,4026531840,1073875484,805306575,0,2852126726,22937621,65539,2155872278,2147489967,
2147489968,2147483856,604003691,0,2147483856,604003738,0,4026531840,0,2583756822,
22609941,65538,4026531840,0,604003699,0,0,2785017860,23003157,131077,2147483824,
2147487925,2155872278,2147483823,2147483822,604003713,0,604003733,0,4026531840,
0,2852192260,22609941,1,2147483670,268435456,604003723,604003631,0,4026531840,
0,2852192260,22675477,1,2147483671,268435456,1073941028,805306576,0,4026531840,
0,604003736,604003752,0,805306576,0,2852126728,23134229,65538,2147489968,2147483823,
604003736,604003752,0,2147483882,268435456,604003736,604004495,0,4026531840,
2852126728,23199765,65538,2147491862,2147483823,2147483857,604003766,604003768,
0,2147483857,604003766,604004419,0,4026531840,805306577,0,2852192260,23265301,
1,2147483823,2147483858,268435456,604003778,0,4026531840,0,2852192260,22609941,
1,2147483670,268435456,604003788,604003798,0,4026531840,0,2852192260,22675477,
1,2147483671,268435456,1074006572,805306578,0,4026531840,0,2852126728,23330837,
131078,2168455200,2160074853,2147491943,2143297603,2147491985,2147492016,2147483859,
604003834,604002860,0,2147483859,604003834,604003816,0,4026531840,2852126728,
23396373,131077,2147489968,2160078949,2147496039,2143289411,2147496081,268435456,
604002914,0,268435456,604002936,0,604004003,0,4026531840,0,2768240668,0,196617,
2181052732,2147492157,2147504346,2147539155,2130755796,2130749653,2147518678,
2147512535,2147483988,1073742088,805306685,3221225487,0,604003834,604002989,
0,604003834,604003010,0,1073742088,805306684,3221225497,0,604003834,604003125,
0,1073810044,805306581,3221225504,0,604003834,604003149,0,604003834,604003236,
0,0,4026531840,0,2852126728,23330837,131078,2168455200,2160074853,2147491943,
2143297603,2147491985,2147492016,2147483860,604003894,604002860,0,2147483860,
604003894,604003816,0,4026531840,2768240665,0,196616,2160081212,2147492157,2147504346,
2147483988,2130755796,2130749653,2147518678,2147512535,1073742088,805306685,
3221225486,0,604003894,604002989,0,604003894,604003010,0,1073742088,805306684,
3221225496,0,604003894,604003125,0,1073810044,805306581,3221225503,0,604003894,
604003149,0,0,4026531840,0,2852126727,21889045,65538,2147483824,2147489859,2147483862,
604003946,0,2147483862,604003139,604003975,0,4026531840,0,2583756976,21954581,
65538,4026531840,0,604003954,0,0,2516582479,21168147,65538,604003965,0,604003962,
0,0,604003139,604003975,0,2852192260,21954581,1,2147483824,268435456,1073810076,
805306582,0,4026531840,0,2852126726,21889045,65538,2147489968,2147483715,2147483863,
604003987,0,2147483863,604003995,0,4026531840,2852192259,23461909,1,2147483715,
268435456,604002926,0,4026531840,2852192259,21954581,1,2147483824,268435456,
604002926,0,4026531840,2852126736,23527445,131076,2147508256,2151694437,2147483793,
2147491943,2147483866,604004027,604004029,0,2147483866,604004027,604004049,0,
2147483866,604004027,604004069,0,2147483866,604004027,604004227,0,4026531840,
805306586,0,2852192260,23658517,1,2147483793,2147483867,268435456,604004039,
0,4026531840,0,2852192260,23724051,1,2147483824,268435456,1073875620,805306587,
0,4026531840,0,2852192260,23789589,1,2147483751,2147483868,268435456,604004059,
0,4026531840,0,2852192260,23724051,1,2147483824,268435456,1073875628,805306588,
0,4026531840,0,2852192261,20906005,1,2147483749,2147483869,268435456,604004079,
604003932,0,4026531840,2852126727,23855125,131078,2168463526,2160074909,2139095142,
2147491855,2147492017,2147492018,268435456,1073941172,805306589,0,604004097,
604004135,0,4026531840,0,2852126726,23920661,65539,2155872296,2147483689,2147489968,
604004111,604003531,0,268435456,604004111,0,4026531840,0,2852126727,23986197,
65539,2155878502,2147483827,2147483828,604004125,604004199,0,268435456,1074072260,
805306589,0,4026531840,2852192260,24051733,1,2147483750,268435456,1074137788,
805306589,0,4026531840,0,2852126735,24117269,131077,2147483825,2143307933,2155878566,
2147508239,2147496114,2147483870,604004159,0,2147483870,604004167,0,2147483870,
604004175,0,2147483870,604004183,0,2147483870,604004191,0,4026531840,2852192259,
24182805,1,2147483825,268435456,805306590,0,4026531840,2852192259,24248341,1,
2147483814,268435456,805306590,0,4026531840,2852192259,24313877,1,2147483826,
268435456,805306590,0,4026531840,2852192259,24379413,1,2147483805,268435456,
805306590,0,4026531840,2852192259,24444949,1,2147483663,268435456,805306590,
0,4026531840,2583691443,24510485,131075,4026531840,0,0,2147483871,604004211,
0,2147483871,604004219,0,2852192259,24576021,1,2147483827,268435456,805306591,
0,4026531840,2852192259,24641557,1,2147483828,268435456,805306591,0,4026531840,
2852192260,20840469,1,2147483680,2147483872,268435456,604004237,0,4026531840,
0,2852192259,23724051,1,2147483824,268435456,604004245,0,4026531840,2852126726,
24707091,1,2147483670,2147483966,268435456,604004259,604008924,604004262,0,1073875668,
805306592,0,0,1073941196,805306592,0,2852126736,24772627,131076,2147483656,2147508229,
2147500034,2147491843,2147483873,604004338,604004286,0,2147483873,604004338,
604004296,0,2147483873,604004338,604004306,0,2147483873,604004338,604004316,
0,4026531840,2852192260,1376275,1,2147483656,268435456,1073751816,805306593,
0,4026531840,0,2852192260,24838165,1,2147483651,268435456,1073751816,805306593,
0,4026531840,0,2852192260,24903701,1,2147483650,268435456,1073751816,805306593,
0,4026531840,0,2852192260,24969237,1,2147483653,268435456,1073751816,805306593,
0,4026531840,0,2852126724,25034771,131076,2147483656,2147483653,2147483650,2147483651,
268435456,1073752080,805306593,0,4026531840,3087032316,2499805409,0,65539,4026531840,
0,0,604004338,604004326,0,2499805409,0,65537,4026531840,0,0,2852192261,20840469,
1,2147483680,2147483874,268435456,604004364,604004227,0,4026531840,1073875676,
805306594,0,2852126732,25100309,131076,2147489885,2143307853,2147496035,2143289355,
2147483875,604004387,0,2147483875,604004395,0,2147483875,604004403,0,2147483875,
604004411,0,4026531840,2852192259,25165845,1,2147483659,268435456,805306595,
0,4026531840,2852192259,25231381,1,2147483741,268435456,805306595,0,4026531840,
2852192259,25296917,1,2147483747,268435456,805306595,0,4026531840,2852192259,
25362453,1,2147483725,268435456,805306595,0,4026531840,2852192261,22609941,1,
2147483670,2147483876,268435456,604004429,604004439,0,4026531840,2852192260,
22675477,1,2147483671,268435456,1073941028,805306596,0,4026531840,0,3087045242,
2852192261,23068693,1,2147483829,2147483877,268435456,604004483,604004451,0,
4026531840,0,2852192259,20840469,1,2147483680,268435456,604004459,0,4026531840,
2852192259,25427989,1,2147483830,268435456,604004467,0,4026531840,2852126727,
25493525,131076,2151686167,2147483831,2147491858,2134908947,268435456,1074006756,
805306597,0,1073941220,805306597,0,4026531840,0,4026531841,0,2852192260,21954581,
1,2147483824,2147483882,268435456,604004495,0,4026531840,0,2852192259,22609941,
1,2147483670,268435456,604004503,0,4026531840,2852126727,25559059,131076,2147483656,
2147489815,2147483650,2139095043,604004519,604008934,0,268435456,1073941236,
805306602,0,4026531840,0,2852192260,22675477,1,2147483671,268435456,1074006764,
805306602,0,4026531840,0,805306603,0,2852126732,25624597,131076,2160074928,2147500206,
2143289366,2147500216,2147483884,604004753,604004551,0,2147483884,604004753,
604004589,0,2147483884,604004753,604004621,0,4026531840,2583756822,22609941,
65538,4026531840,0,604004559,0,0,2785017860,25690133,131078,2147483824,2147487749,
2155876374,2147487851,2151682154,2147487918,604004573,0,604004587,0,4026531840,
2785017858,25755669,196616,2147483680,2147483681,2160066583,2147483659,2147483734,
2147483735,2139095062,2126512143,604004587,0,4026531840,604004883,0,2583756976,
21954581,65538,4026531840,0,604004597,0,0,2785017860,25821205,131077,2164260886,
2147487761,2139099154,2147487807,2147487962,604004587,0,604004611,0,4026531840,
0,2852192261,25886741,1,2147483824,2147483899,268435456,1073810284,805306619,
0,4026531840,2852126727,25952277,65538,2151686318,2147483832,268435456,604004635,
604005460,0,268435456,604004656,0,4026531840,0,2852126729,26017813,131076,2147483866,
2147495953,2139107346,2147495999,2147483968,268435456,604004653,604009012,604004833,
0,1073875732,805306604,0,4026531840,0,1073941252,805306604,0,2852126725,26083349,
65538,2151682070,2147483824,604004668,0,604004697,604004883,0,4026531840,0,2785017860,
25821205,131077,2164264982,2147483665,2139095058,2147483711,2147483866,604004682,
0,604004694,0,4026531840,0,2852192262,25886741,1,2147483824,2147483899,268435456,
1073810284,805306619,604004635,0,4026531840,0,604004697,604004883,0,1073875740,
805306607,0,2852126729,26017813,131076,2147483866,2147495953,2139107346,2147495999,
2147483968,268435456,604004718,604009012,604004833,0,1073810172,805306604,0,
4026531840,0,1073875724,805306604,0,2852126736,26148885,131078,2168455231,2147483665,
2155872274,2134900759,2147487962,2147502299,805306606,0,2147483969,268435456,
604004747,604009189,604009183,604004883,0,2147483970,268435456,604004750,604009155,
604009149,604004883,0,4026531840,1073875484,805306617,0,1073875484,805306618,
0,2768240657,0,196616,2147502320,2147496185,2147490042,2147483899,2147516652,
2147508461,2147490030,2147496175,604004753,604004700,0,805306605,3221225488,
0,805306606,3221225491,0,604004753,604004721,0,1073810172,805306604,3221225498,
0,0,4026531840,0,2852126728,26214421,65539,2151677974,2151686318,2147492016,
2147483885,604004813,604004551,0,2147483885,604004813,604004799,0,4026531840,
0,2852126727,26279957,65538,2151682222,2147483824,604004883,0,2147483887,268435456,
604004697,604004883,0,4026531840,0,2768240650,0,131078,2147496176,2160085229,
2160066798,2147490031,2147490041,2147483898,805306605,3221225483,0,805306606,
3221225486,0,604004813,604004721,0,0,4026531840,2852126728,26214421,65539,2151677974,
2151686318,2147492016,2147483886,604004867,604004551,0,2147483886,604004867,
604004799,0,4026531840,0,2852126729,26345493,131077,2147483711,2147483665,2155872274,
2134900759,2147487962,805306606,0,2147483969,268435456,604004747,604009189,604009183,
604004883,0,4026531840,2768240647,0,131076,2147490032,2147483897,2147496174,
2147483887,805306606,3221225481,0,604004867,604004849,0,0,4026531840,0,2852126727,
26083349,65538,2151677974,2147489968,2147483888,604004897,0,2147483888,604004967,
604004485,0,4026531840,0,2583756822,22609941,65538,4026531840,0,604004905,0,
0,2785017862,25690133,131078,2147483824,2147491845,2155876374,2147491947,2151686250,
2147487918,604004921,0,604004937,0,604004969,0,4026531840,2785017860,25755669,
196616,2147487776,2147487777,2160070679,2147487755,2147487830,2147487831,2139095062,
2126516239,604004937,0,604004957,0,4026531840,2852192260,22609941,1,2147483670,
268435456,604004947,604004783,0,4026531840,0,2852192260,22675477,1,2147483671,
268435456,1073941028,805306608,0,4026531840,0,2852192261,25755669,1,2147483670,
2147483889,268435456,604004967,604005262,0,4026531840,805306608,0,2852192261,
26411029,1,2147483670,2147483889,268435456,604004967,604005262,0,4026531840,
2852126736,26476597,262161,2189451328,2210422897,2147508338,2181062723,2147508325,
2143313925,2147483766,2147491959,2164285480,2147508265,2160091248,2147508339,
2147500152,2147508368,2147508334,2147508335,2147508369,2147483809,604005201,
603999355,0,2147483809,604005201,603999383,0,2147483809,604005201,603999409,
0,2147483809,604005201,604005017,0,4026531840,0,2852126751,26542133,196622,2164279336,
2185250857,2147522674,2181052483,2168498240,2160089093,2147514478,2147514479,
2147536997,2160101488,2160101489,2147522675,2147483792,2147489937,268435456,
604005067,0,268435456,604005178,603990935,0,603992661,0,603984459,0,2147483733,
268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483746,268435456,
1073771528,805306466,0,2147483750,268435456,603991519,603985244,0,4026531840,
0,2852126726,26607669,262161,2189426752,2189434897,2147483762,2185240643,2147483749,
2143289349,2147483766,2147483767,2168455208,2147483689,2147483760,2168455281,
2147483763,2147483768,2147483758,2147483759,2147491985,1610612738,67134183,67134189,
0,604005127,0,4026531840,0,604005098,603992661,0,1073801232,805306529,0,604005104,
603990935,0,2852126726,26673205,1,2147483663,2147483705,268435456,604005118,
603984912,603985244,0,604005124,603984559,0,0,604005121,603984559,0,1073801248,
805306529,0,1073801240,805306529,0,2852126731,26738741,65539,2155872323,2143295505,
2147498129,604005098,603992661,0,268435456,604005145,603996314,0,268435456,604005155,
603990935,0,4026531840,2852192260,9764917,1,2147483667,268435456,1073741856,
805306529,0,4026531840,0,2852126726,26673205,1,2147483663,2147483705,268435456,
604005169,603984912,603985244,0,604005175,603984559,0,0,604005172,603984559,
0,1073801512,805306529,0,1073801504,805306529,0,2852126726,26673205,1,2147483663,
2147483705,268435456,604005192,603984912,603985244,0,604005198,603984559,0,0,
604005195,603984559,0,1073802016,805306529,0,1073802008,805306529,0,2768240669,
0,196623,2147512408,2202038361,2176866386,2176872531,2176895060,2176888917,2155894830,
2147512407,2168492118,2147506274,2147498083,2147491940,2147483749,2147483750,
2147541153,1073770760,805306468,3221225493,0,604005201,603999500,0,1073801736,
805306529,3221225500,0,805306469,3221225503,0,1073766408,805306450,3221225507,
0,1073766664,805306450,3221225511,0,604005201,603983509,0,604005201,603983555,
0,0,4026531840,2852192260,20840469,1,2147483680,268435456,604005259,604005330,
0,4026531840,0,1073941292,805306610,0,2852126724,26804245,131076,2147483824,
2147487749,2147487850,2147487851,604005274,0,604005306,0,4026531840,2785017860,
26869781,131078,2147487776,2147483681,2147483734,2151677963,2151677967,2147483735,
604005288,0,604005301,0,4026531840,604005291,604005470,0,2852192260,22675477,
1,2147483671,268435456,1073941284,805306609,0,4026531840,0,2147483890,604005291,
604005249,604005320,0,2852126726,27000853,65539,2147489898,2151677957,2147489899,
604005291,604005470,0,604005291,604005428,0,4026531840,0,2852192260,21954581,
1,2147483824,2147483891,268435456,805306611,0,4026531840,0,2852126727,27066389,
65538,2147489968,2147483653,2147483892,604005344,0,2147483892,604005378,604005320,
0,4026531840,0,2583756805,24969237,65538,4026531840,0,604005352,0,0,2785017862,
27131925,196616,2147483659,2147483681,2147491850,2134904835,2151677975,2147483735,
2147483734,2134900751,604005370,0,604005380,0,604005390,0,4026531840,2852192259,
24969237,1,2147483653,268435456,805306612,0,4026531840,805306612,0,2852192261,
27197461,1,2147483653,2147483893,268435456,604005378,604005418,0,4026531840,
2852192261,27262997,1,2147483653,2147483894,268435456,604005378,604005400,0,
4026531840,2852192259,27328533,1,2147483658,268435456,604005408,0,4026531840,
2852192260,24969237,1,2147483653,268435456,1073941308,805306614,0,4026531840,
0,2852192260,24838165,1,2147483651,268435456,1073875764,805306613,0,4026531840,
0,2583691370,27394069,131075,4026531840,0,0,2147483895,604005440,0,2147483895,
604005450,0,2852192260,27459605,1,2147483754,268435456,1073810244,805306615,
0,4026531840,0,2852192260,27525141,1,2147483755,268435456,1073810252,805306615,
0,4026531840,0,2852192261,21954581,1,2147483824,2147483899,268435456,1073810284,
805306619,0,4026531840,2852126728,27066389,65538,2147492016,2147483653,2147483896,
604005741,604005484,0,2147483896,604005741,604005320,0,4026531840,2852192259,
24969237,1,2147483653,268435456,604005492,0,4026531840,2852126729,27131925,196616,
2147483659,2147483681,2147495946,2134904835,2151677975,2147483735,2147483734,
2134900751,805306612,0,268435456,1073875764,805306613,0,268435456,604005408,
0,4026531840,0,2852126730,26935317,131077,2164260879,2147498017,2147498070,2134908939,
2147491927,268435456,604005534,604005320,0,268435456,604005537,0,268435456,604005588,
0,4026531840,0,1073941332,805306616,0,2583756976,21954581,65538,4026531840,0,
604005545,0,0,2785017860,27590677,65539,2155872279,2143293451,2147487831,604005578,
0,604005557,0,4026531840,0,2852192259,21954581,1,2147483824,268435456,604005565,
0,4026531840,2852126724,27656213,65538,2147483735,2143289355,268435456,604005575,
604005330,0,4026531840,1074072412,805306616,0,2852192261,27721749,1,2147483824,
2147483891,268435456,1073941332,805306616,0,4026531840,2583756976,21954581,65538,
4026531840,0,604005596,0,0,2785017860,27787285,65539,2147487830,2151677975,2147487777,
604005578,0,604005608,0,4026531840,0,2852192259,21954581,1,2147483824,268435456,
604005616,0,4026531840,2852126724,27852821,65538,2147483734,2147483681,268435456,
604005626,604005330,0,4026531840,1074072420,805306616,0,2852126732,27918357,
131078,2164260879,2147487777,2147491926,2134913035,2151698455,2147500119,604005651,
0,604005669,0,604005687,0,604005705,0,604005723,0,805306612,0,4026531840,2785017858,
27066389,65538,2147483824,2147483653,604005659,0,4026531840,2852192260,24444949,
1,2147483663,268435456,604005534,604005330,0,4026531840,0,2785017858,27066389,
65538,2147483824,2147483653,604005677,0,4026531840,2852192260,27983893,1,2147483681,
268435456,604005534,604005330,0,4026531840,0,2785017858,27066389,65538,2147483824,
2147483653,604005695,0,4026531840,2852192260,28049429,1,2147483734,268435456,
604005534,604005330,0,4026531840,0,2785017858,27066389,65538,2147483824,2147483653,
604005713,0,4026531840,2852192260,25165845,1,2147483659,268435456,604005534,
604005330,0,4026531840,0,2785017858,27066389,65538,2147483824,2147483653,604005731,
0,4026531840,2852192260,28114965,1,2147483735,268435456,604005534,604005330,
0,4026531840,0,2768240650,0,131077,2164267252,2147483893,2147483894,2147496179,
2147502328,805306612,3221225482,0,604005741,604005514,0,604005741,604005629,
0,0,4026531840,0,2852126728,28180501,65538,2147492021,2143289465,2147483901,
604005804,604009217,0,2147483901,604005804,604004439,0,4026531840,2583691282,
28246037,131075,4026531840,0,0,268435456,604005787,0,1073810308,805306621,0,
2852126726,28311573,65539,2147489810,2151684115,2147483829,604005801,604004439,
0,1073742352,805306692,0,4026531840,0,1073757976,805306692,0,2768240648,0,65539,
2147483972,2151684325,2147498237,604005804,604005775,0,1073742088,805306692,
3221225484,0,0,4026531840,0,2852126732,28377109,65539,2155880634,2147483833,
2147500220,2147483902,604005840,604005852,0,2147483902,604005840,604006109,0,
2147483902,604005840,604006751,0,4026531840,0,2583691282,28442645,65540,1073744904,
805306622,0,0,268435456,1073744912,805306622,0,0,2852192261,28508181,1,2147483833,
2147483903,268435456,604005862,604005966,0,4026531840,2852192259,28573717,1,
2147483665,268435456,604005870,0,4026531840,2852126727,28639253,131079,2172649504,
2164260965,2155872323,2143295507,2147483751,2147483793,2147483824,604005888,
604006799,0,268435456,1074006932,805306623,0,4026531840,2852192260,21364757,
1,2147483667,268435456,1074072460,805306623,0,4026531840,0,2852126728,23330837,
131078,2168455200,2160074853,2147491943,2143297603,2147491985,2147492016,2147483900,
604005916,604002860,0,2147483900,604005916,604003816,0,4026531840,2768240675,
0,196619,2151747836,2185253180,2147510490,2172711123,2130761940,2160115925,2147524822,
2147518679,2147498301,2147492163,2147483988,1073742088,805306685,3221225489,
0,604005916,604002948,0,604005916,604002989,0,604005916,604003010,0,1073742088,
805306684,3221225502,0,604005916,604003125,0,1073810044,805306581,3221225509,
0,604005916,604003149,0,604005916,604003236,0,1073742088,805306691,3221225519,
0,0,4026531840,2852126732,25624597,131076,2160074928,2147500206,2143289366,2147500216,
2147483904,604006071,604004551,0,2147483904,604006071,604005986,0,2147483904,
604006071,604006006,0,4026531840,2583756976,21954581,65538,4026531840,0,604005994,
0,0,2785017860,28704789,131076,2147487962,2147487761,2139095062,2147487807,604004587,
0,604004611,0,4026531840,2852126725,25952277,65538,2151682222,2147483832,604004531,
0,268435456,604006018,0,4026531840,0,2852126725,26083349,65538,2151682070,2147483824,
604006030,0,604004697,604004883,0,4026531840,0,2785017860,28704789,131076,2147483866,
2147483665,2139099158,2147483711,604006042,0,604004694,0,4026531840,2852192262,
28770325,1,2147483824,2147483899,268435456,1073810284,805306619,604004635,0,
4026531840,0,2852126727,21233685,65538,2147489855,2143289361,1073810332,805306624,
0,268435456,604006068,604004531,0,4026531840,0,1073757976,805306680,0,2768240664,
0,196618,2181062896,2147502329,2147496186,2147490043,2147522796,2147514605,2147496174,
2147502319,2151725312,2147483960,604006071,604006054,0,604006071,604004700,0,
805306605,3221225493,0,805306606,3221225496,0,604006071,604004721,0,1073810172,
805306604,3221225503,0,1073742088,805306680,3221225507,0,0,4026531840,2852192261,
28835861,1,2147483834,2147483906,268435456,604006119,604006611,0,4026531840,
2852192260,28573717,1,2147483665,268435456,604006129,604009267,0,4026531840,
0,2852192260,21364757,1,2147483667,268435456,1074072484,805306626,0,4026531840,
0,2852126736,8323125,327736,2290114624,2290114593,2147508322,2147508323,2281725988,
2281725957,2147508262,2306891825,2273337384,2273337385,2273337354,2273337387,
2147508332,2319474742,2264940558,2264948783,2264948784,2105565201,2264948786,
2264948787,2147508276,2260754485,2109759510,2147508279,2147508280,2147508281,
2147508282,2264948795,2147508284,2164285501,2155896862,2223005727,2147508286,
2147508317,2214617184,2147508321,2210422884,2147508325,2147483752,2147508329,
2147508330,2147508331,2189451374,2147508335,2147508336,2147508337,2147508338,
2172674163,2147508341,2147508351,2147508352,2147508356,2147508366,2147491987,
2147508374,2147508379,2147483848,604006437,603982661,0,2147483848,604006437,
603982853,0,2147483848,604006437,603985086,0,2147483848,604006437,604006215,
0,4026531840,2852126789,11141173,327733,2290128960,2290120737,2147483746,2147483747,
2281732132,2281764869,2147514406,2298509361,2147518504,2269153321,2269227018,
2269118507,2147537004,2306897974,2298550382,2256566319,2256566320,2105559057,
2256566322,2256566323,2147514420,2252372021,2109747222,2147514423,2147514424,
2147514425,2147514426,2252372027,2147514428,2164291645,2155876382,2214592543,
2147514430,2147483741,2206204000,2147483745,2202013796,2147567717,2147491945,
2147532906,2147532907,2147555439,2147559536,2147559537,2147563634,2147563635,
2147575925,2147508351,2147580032,2147606660,2147584142,2147600534,2147616923,
603989051,0,603989366,0,603989769,0,268435456,603983073,0,268435456,604006341,
0,268435456,603985444,0,603980682,0,603984459,0,2147483726,268435456,1073765640,
805306446,0,603989737,0,2147483729,268435456,1073766152,805306449,0,2147483733,
268435456,603990460,0,603990666,0,603990509,0,603990558,0,2147483738,268435456,
603990728,0,603990610,0,604000730,0,2147483813,268435456,603999991,0,2147483814,
268435456,604000205,0,268435456,603983349,0,2147483842,268435456,604001864,603989051,
0,2147483844,268435456,604002412,0,4026531840,2852126727,11534389,393290,2432696384,
2147483777,2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,
2147483784,2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,
2147483753,2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,
2361393174,2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,
2147483741,2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,
2046820388,2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,
2034237483,2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,
2042626098,2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,
2071986233,2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,
2147483771,2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,
2147483790,2147483795,2147483798,604006427,603995291,0,268435456,1073875396,
805306568,0,4026531840,0,2852192260,9764917,1,2147483667,268435456,1073781784,
805306568,0,4026531840,0,2768240755,0,327735,2344812608,2147674177,2340606018,
2340599875,2281873476,2281867333,2281861190,2340575303,2340569160,2273454153,
2147618890,2147612747,2147606604,2147547213,2223091758,2147559503,2147594320,
2147594321,2210474002,2147565651,2231474260,2147582037,2227265622,2227257431,
2147565656,2147565657,2181265466,2147510331,2210619452,2210613309,2168664126,
2210601023,2147600462,2147594322,2147559514,2189502558,2206279844,2206279845,
2206279846,2147559593,2147553460,2147547318,2147547319,2147541180,2147535037,
2147535038,2147535039,2147528896,2147522754,2147516611,2147510468,2147510469,
2147492038,2147483847,2147717320,1073809836,805306566,3221225533,0,2583691420,
7733301,65537,4026531840,268435456,604006437,603983385,604006139,0,805306426,
3221225545,0,604006437,603983388,0,805306440,3221225551,0,604006437,603983401,
0,805306556,3221225557,0,604006437,603983416,0,805306444,3221225563,0,604006437,
603983469,0,805306445,3221225569,0,1073766408,805306450,3221225573,0,1073766664,
805306450,3221225577,0,604006437,603983509,0,604006437,603983555,0,805306447,
3221225586,0,604006437,603983570,0,604006437,603983583,0,805306442,3221225595,
0,604006437,603983636,0,604006437,603983679,0,805306439,3221225604,0,805306438,
3221225607,0,604006437,603983692,0,604006437,603983707,0,604006437,603983722,
0,604006437,603983737,0,604006437,603983770,0,604006437,603983787,0,604006437,
603983800,0,604006437,603983813,0,604006437,603983832,0,604006437,603983845,
0,604006437,603983858,0,805306568,3221225643,0,0,4026531840,2852126727,28901397,
65539,2147489832,2151677955,2147489833,2147483907,604006625,0,2147483907,604006633,
604003531,0,4026531840,2852192259,24838165,1,2147483651,268435456,805306627,
0,4026531840,805306627,0,2852126724,28966933,65539,2155872325,2143289349,2147483835,
2147483908,604006674,604006710,0,4026531840,0,2852126728,21233685,65538,2147491903,
2143289361,268435456,604006661,604005761,0,268435456,604006671,604006710,0,4026531840,
2852192260,21364757,1,2147483667,268435456,1074006956,805306628,0,4026531840,
0,1073757976,805306694,0,2768240648,0,65539,2155886852,2147490053,2147483974,
604006674,604006647,0,1073742088,805306694,3221225484,0,0,4026531840,0,2852192260,
24969237,1,2147483653,2147483910,268435456,604006700,0,4026531840,0,2852192260,
29032469,1,2147483742,268435456,1073875900,805306630,0,4026531840,0,2852126730,
28966933,65539,2155872325,2143301637,2147489979,2147483909,604006728,0,2147483909,
604006741,0,2147483909,604006738,604006690,0,4026531840,0,2852192260,29098005,
1,2147483717,268435456,1073810356,805306629,0,4026531840,0,1073810356,805306629,
0,2852192260,29163541,1,2147483835,268435456,1073810356,805306629,0,4026531840,
0,2852192263,29229077,1,2147483836,2147483911,268435456,2147483975,604006763,
604009322,604003631,0,4026531840,2852192259,28573717,1,2147483665,268435456,
604006771,0,4026531840,2852126727,28639253,131079,2172649504,2164260965,2155872323,
2143295507,2147483751,2147483793,2147483824,604006789,604006799,0,268435456,
1074006980,805306631,0,4026531840,2852192260,21364757,1,2147483667,268435456,
1074072516,805306631,0,4026531840,0,2852126728,23330837,131078,2168455200,2160074853,
2147491943,2143297603,2147491985,2147492016,2147483905,604006834,604002860,0,
2147483905,604006834,604003816,0,4026531840,2852126723,28639253,131078,2168455200,
2160066661,2147483751,2143289411,2147483793,2147483824,604006831,604005898,0,
4026531840,0,1073742352,805306625,0,3087034860,2768240681,0,196620,2181071100,
2147510529,2147524826,2176919763,2130776276,2164324565,2147539158,2147533015,
2160087356,2147498301,2147492163,2147483988,1073742088,805306685,3221225491,
0,604006834,604002948,0,604006834,604002989,0,604006834,604003010,0,604006834,
604006817,0,1073742088,805306625,3221225507,0,1073742088,805306684,3221225511,
0,604006834,604003125,0,1073810044,805306581,3221225518,0,604006834,604003149,
0,604006834,604003236,0,1073742088,805306691,3221225528,0,4026531840,2499805441,
0,65537,4026531840,0,0,2852126736,3801144,131076,2147483656,2147508229,2147500034,
2147491843,2147483932,604006974,604006922,0,2147483932,604006974,604006932,0,
2147483932,604006974,604006942,0,2147483932,604006974,604006952,0,4026531840,
2852192260,65592,1,2147483656,268435456,1073742088,805306652,0,4026531840,0,
2852192260,3538945,1,2147483651,268435456,1073742088,805306652,0,4026531840,
0,2852192260,3604481,1,2147483650,268435456,1073742088,805306652,0,4026531840,
0,2852192260,2359297,1,2147483653,268435456,1073742088,805306652,0,4026531840,
0,2852126724,1179667,131076,2147483656,2147483653,2147483650,2147483651,268435456,
1073742352,805306652,0,4026531840,3087034952,2499805468,0,65539,4026531840,0,
0,604006974,604006962,0,2499805468,0,65537,4026531840,0,0,2852126740,3801088,
131077,2147508232,2147483653,2147500034,2151686147,2147516423,2147483934,604007084,
604007020,0,2147483934,604007084,604007030,0,2147483934,604007084,604007040,
0,2147483934,604007084,604007050,0,2147483934,604007084,604007060,0,4026531840,
0,2852192260,2359297,1,2147483653,268435456,1073751816,805306654,0,4026531840,
0,2852192260,3538945,1,2147483651,268435456,1073751816,805306654,0,4026531840,
0,2852192260,3604481,1,2147483650,268435456,1073751816,805306654,0,4026531840,
0,2852192260,65592,1,2147483656,268435456,1073751816,805306654,0,4026531840,
0,2852192260,65593,1,2147483655,268435456,1073751816,805306654,0,4026531840,
0,2852126724,1835008,131077,2147483656,2147483653,2147483650,2151677955,2147483655,
268435456,1073752080,805306654,0,4026531840,0,3087035062,2499805470,0,65539,
4026531840,0,0,604007084,604007070,0,2499805470,0,65537,4026531840,0,0,2852126727,
29294593,65539,2147483668,2151677969,2147489833,604007114,603980007,0,268435456,
1073757456,805306655,0,4026531840,2852192260,2621441,1,2147483689,268435456,
1073750040,805306655,0,4026531840,0,2785017859,29360181,65538,2147483712,2147487763,
604007134,0,4026531840,4026531840,0,2852192260,29425665,1,2147483711,268435456,
604007144,603984407,0,4026531840,0,1073757976,805306656,0,3087035143,2768240658,
0,131076,2151700520,2151692332,2147483936,2147512359,2583691327,9699381,65537,
4026531840,604007147,604007124,0,1073742088,805306656,3221225490,0,604007147,
603984419,0,1073755400,805306412,3221225497,0,4026531840,0,2499805472,0,65537,
4026531840,0,0,2583691460,29491201,131075,4026531840,0,0,2147483939,604007193,
0,2147483939,604007223,0,2852192259,29556737,1,2147483844,268435456,604007201,
0,4026531840,2852126729,29622325,65538,2147483679,2143297541,268435456,604007217,
603990450,0,2147483733,268435456,604007220,603990460,0,4026531840,0,1073766936,
805306659,0,1073752080,805306659,0,2852192259,29687809,1,2147483845,268435456,
604007201,0,4026531840,2852192261,7274549,1,2147483653,2147483733,268435456,
604007241,603990460,0,4026531840,1073752080,805306660,0,2852192260,2359297,1,
2147483653,268435456,1073752080,805306699,0,4026531840,0,3087035248,2768240659,
0,65538,2147483979,2143297829,1073751816,805306661,3221225481,0,2583691329,12386357,
65537,4026531840,2147483979,268435456,2583691269,2359297,65537,4026531840,268435456,
1073752080,1073752080,3221225496,0,4026531840,2499805477,0,65537,4026531840,
0,0,2852126772,29753345,196621,2147508424,2147516617,2147524810,2147541195,2168553668,
2160074757,2168455366,2168471751,2155921605,2147549388,2147557581,2147565774,
2147573967,2147483942,604007508,604007356,0,2147483942,604007508,604007366,0,
2147483942,604007508,604007376,0,2147483942,604007508,604007386,0,2147483942,
604007508,604007396,0,2147483942,604007508,604007406,0,2147483942,604007508,
604007416,0,2147483942,604007508,604007426,0,2147483942,604007508,604007436,
0,2147483942,604007508,604007446,0,2147483942,604007508,604007456,0,2147483942,
604007508,604007466,0,2147483942,604007508,604007476,0,4026531840,0,2852192260,
29818881,1,2147483846,268435456,1073751816,805306662,0,4026531840,0,2852192260,
2359297,1,2147483653,268435456,1073751816,805306662,0,4026531840,0,2852192260,
29884417,1,2147483847,268435456,1073751816,805306662,0,4026531840,0,2852192260,
29949953,1,2147483848,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30015489,1,2147483849,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30081025,1,2147483850,268435456,1073751816,805306662,0,4026531840,0,2852192260,
29687809,1,2147483845,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30146561,1,2147483851,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30212097,1,2147483852,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30277633,1,2147483853,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30343169,1,2147483854,268435456,1073751816,805306662,0,4026531840,0,2852192260,
30408705,1,2147483855,268435456,1073751816,805306662,0,4026531840,0,2852192260,
29556737,1,2147483844,268435456,1073751816,805306662,0,4026531840,0,2852126724,
30474293,196621,2147483848,2147483849,2147483850,2147483851,2168455364,2160066565,
2168455366,2168455367,2155872453,2147483852,2147483853,2147483854,2147483855,
268435456,1073752080,805306662,0,4026531840,0,3087035486,2499805478,0,65539,
4026531840,0,0,604007508,604007486,0,2499805478,0,65537,4026531840,0,0,1073752080,
805306700,0,1073752080,805306663,0,3087035520,2768240655,0,65538,2147483980,
2147492135,1073751816,805306663,3221225481,0,2583691329,12648501,65537,4026531840,
2147483980,268435456,604007530,604007527,604007524,604007286,0,4026531840,2499805479,
0,65537,4026531840,0,0,2583691472,30539777,524292,4026531840,0,0,0,2147483944,
604007694,604007598,0,2147483944,604007694,604007608,0,2147483944,604007694,
604007618,0,2147483944,604007694,604007628,0,2147483944,604007694,604007638,
0,2147483944,604007694,604007648,0,2147483944,604007694,604007658,0,2147483944,
604007694,604007668,0,0,2852192260,30605313,1,2147483856,268435456,1073751816,
805306664,0,4026531840,0,2852192260,30670849,1,2147483857,268435456,1073751816,
805306664,0,4026531840,0,2852192260,30736385,1,2147483858,268435456,1073751816,
805306664,0,4026531840,0,2852192260,30801921,1,2147483859,268435456,1073751816,
805306664,0,4026531840,0,2852192260,30867457,1,2147483860,268435456,1073751816,
805306664,0,4026531840,0,2852192260,30932993,1,2147483861,268435456,1073751816,
805306664,0,4026531840,0,2852192260,30998529,1,2147483862,268435456,1073751816,
805306664,0,4026531840,0,2852192260,31064065,1,2147483863,268435456,1073751816,
805306664,0,4026531840,0,2852126724,31129653,196616,2147483856,2147483857,2147483858,
2147483859,2147483860,2147483861,2147483862,2147483863,268435456,1073752080,
805306664,0,4026531840,3087035672,2499805480,0,65539,4026531840,0,0,604007694,
604007678,0,2499805480,0,65537,4026531840,0,0,1073752080,805306701,0,1073752080,
805306665,0,3087035706,2768240655,0,65538,2147483981,2143297833,1073751816,805306665,
3221225481,0,2583691329,12648501,65537,4026531840,2147483981,268435456,604007716,
604007713,604007710,604007558,0,4026531840,2499805481,0,65537,4026531840,0,0,
2852126728,31195137,65538,2147483858,2147492049,2147483946,604007788,604007758,
0,2147483946,604007788,604007768,0,4026531840,2852192260,30736385,1,2147483858,
268435456,1073751816,805306666,0,4026531840,0,2852192260,30670849,1,2147483857,
268435456,1073751816,805306666,0,4026531840,0,2852126724,31260725,65538,2147483858,
2147483857,268435456,1073752080,805306666,0,4026531840,3087035766,2499805482,
0,65539,4026531840,0,0,604007788,604007778,0,2499805482,0,65537,4026531840,0,
0,1073752080,805306702,0,1073752080,805306667,0,3087035800,2768240655,0,65538,
2147483982,2147492139,1073751816,805306667,3221225481,0,2583691329,12648501,
65537,4026531840,2147483982,268435456,604007810,604007807,604007804,604007744,
0,4026531840,2499805483,0,65537,4026531840,0,0,2852126725,5111861,393289,2432700480,
2147487873,2147487874,2147487875,2147487876,2147487749,2147487878,2147487879,
2147487880,2147487841,2394951690,2394951755,2147487842,2147487844,2386563086,
2147487848,2147487849,2147487761,2147487762,2147487891,2147487851,2147487765,
2357202966,2147487855,2147487856,2147487857,2147487858,2147487899,2147487859,
2147487837,2147487774,2147487775,2147487840,2046824481,2055208994,2147487843,
2051018788,2147487845,2147487782,2147487861,2042630184,2042630185,2147487850,
2051018795,2147487852,2147487866,2147487854,2046824495,2046824496,2046824497,
2046824498,2051018803,2147487796,2088767541,2147487798,2147487799,2147487800,
2147487801,2092961850,2168459323,2168459324,2168459325,2168459326,2147487871,
2147487867,2147487868,2147487869,2147487870,2147487872,2147487882,2147487883,
2147487886,2147487894,805306633,0,603994968,603995783,0,4026531840,1073875932,
805306669,0,1073875940,805306670,0,2852126750,15859765,393288,2428518464,2147537025,
2147537026,2147537027,2147537028,2147536901,2147537030,2147537031,2147537032,
2147536993,2390806538,2390806603,2147536996,2147483752,2382409742,2147537001,
2147537003,2147508241,2147536914,2147520659,2147537007,2147536917,2353057814,
2147537008,2147537009,2147537010,2147537011,2147537051,2147537013,2147536989,
2147536926,2147536927,2147536992,2046873633,2147536994,2147536995,2046873636,
2147536997,2147536934,2147537018,2034290728,2038485033,2147537002,2034290731,
2147537004,2147537019,2147537006,2034290735,2042679344,2042679345,2042679346,
2042679347,2147536948,2042679349,2147536950,2147536951,2147536952,2147536953,
2067845178,2088816699,2164314172,2164314173,2164314174,2147491967,2147537020,
2147537021,2147537022,2147491968,2147537034,2147537035,2147491982,2147537046,
2147483912,604008032,603982661,0,2147483912,604008032,603999126,0,2147483912,
604008032,603982823,0,2147483912,2147483772,604008032,603995185,603995187,0,
2147483912,604008032,603982853,0,2147483912,604008032,603985086,0,2147483912,
604008032,603995889,0,4026531840,2768240775,0,393291,2294521920,2147715137,2420338754,
2298697795,2298691652,2302879813,2302873670,2302867527,2420301896,2420295753,
2294460490,2298648651,2298642508,2147555405,2147641422,2147567695,2147635280,
2147635281,2185316370,2147606611,2147629140,2147622997,2147614806,2147606615,
2252464216,2252464217,2147567706,2147635282,2147592314,2147573917,2147567710,
2147573883,2227271804,2277603454,2277609599,2277603456,2147567780,2147567781,
2147567782,2269214851,2269214852,2147567785,2265020549,2265020550,2265020551,
2147580042,2147635246,2147580043,2147580044,2147580056,2147580057,2147549372,
2147561652,2147579957,2147555510,2147555511,2147543229,2147600505,2021922874,
2030078011,2030305340,2126768189,2026098750,2026092607,2147543230,2147543231,
2147537088,2147530946,2147524803,2147518660,2147518661,2147500230,2147492039,
2147758344,2147483913,1073810380,805306632,3221225553,0,1073809836,805306566,
3221225557,0,2583691420,7733301,65537,4026531840,268435456,604008032,603983385,
604006139,0,805306426,3221225569,0,604008032,603983388,0,805306440,3221225575,
0,604008032,603983401,0,805306556,3221225581,0,604008032,603983416,0,805306444,
3221225587,0,604008032,603983469,0,805306445,3221225593,0,805306490,3221225596,
0,805306491,3221225599,0,604008032,603983481,0,1073742088,805306489,3221225606,
0,604008032,604007838,0,1073766408,805306450,3221225613,0,1073766664,805306450,
3221225617,0,604008032,603983509,0,604008032,603983555,0,805306447,3221225626,
0,604008032,603983570,0,604008032,603983583,0,805306442,3221225635,0,604008032,
603983636,0,604008032,603983679,0,805306439,3221225644,0,805306438,3221225647,
0,604008032,603983692,0,604008032,603983707,0,604008032,603983722,0,604008032,
603983737,0,604008032,603983770,0,604008032,603983787,0,604008032,603983800,
0,604008032,603983813,0,604008032,603983832,0,604008032,603983845,0,604008032,
603983858,0,805306495,3221225683,0,0,4026531840,2852126748,31326366,131079,2172665864,
2164293637,2147508226,2151718915,2147491847,2147532873,2147483864,2147483951,
604008369,604008286,0,2147483951,604008369,604008296,0,2147483951,604008369,
604008306,0,2147483951,604008369,604008316,0,2147483951,604008369,604008326,
0,2147483951,604008369,604008336,0,2147483951,604008369,603984535,0,4026531840,
0,2852192260,31391745,1,2147483864,268435456,1073751816,805306671,0,4026531840,
0,2852192260,65593,1,2147483655,268435456,1073751816,805306671,0,4026531840,
0,2852192260,65592,1,2147483656,268435456,1073751816,805306671,0,4026531840,
0,2852192260,3604481,1,2147483650,268435456,1073751816,805306671,0,4026531840,
0,2852192260,2359297,1,2147483653,268435456,1073751816,805306671,0,4026531840,
0,2852192260,3538945,1,2147483651,268435456,1073751816,805306671,0,4026531840,
0,2852126729,18284702,131079,2172649480,2164260869,2147483650,2151677955,2147483655,
2147491913,2147483864,268435456,1073752080,805306671,0,2147483696,268435456,
604008366,603984545,0,4026531840,1073752080,805306671,0,3087036351,2768240647,
0,65538,2147489840,2147483951,604008369,604008346,0,1073751816,805306671,3221225484,
0,4026531840,2499805487,0,65537,4026531840,0,0,1073769744,805306673,0,2852192262,
6225973,1,2147483712,2147483704,268435456,1073758472,1073769744,805306674,0,
4026531840,0,1073769744,805306675,0,2852192260,31457281,1,2147483666,268435456,
1073744912,805306704,0,4026531840,0,1073810412,805306678,0,2852192259,983041,
1,2147483670,268435456,604008428,0,4026531840,2852126728,23003157,131077,2147494064,
2147483829,2155882518,2147494063,2147494062,2147483883,604008446,604004529,604004439,
0,604008446,604003631,0,4026531840,0,2852192260,1048577,1,2147483671,268435456,
1074007028,805306679,0,4026531840,0,2852126732,25624597,131076,2160074928,2147500206,
2143289366,2147500216,2147483960,604008488,604004551,0,2147483960,604008488,
604004589,0,2147483960,604008488,604008476,0,4026531840,2852126725,25952277,
65538,2151682222,2147483832,604004531,0,268435456,604004656,0,4026531840,0,3087036500,
2768240669,0,196617,2181075184,2147514617,2147508474,2147502331,2147535084,2147526893,
2147508462,2147514607,2147483960,2583691327,31522837,65537,4026531840,268435456,
604008488,604006068,604004531,0,604008488,604004700,0,805306605,3221225499,0,
805306606,3221225502,0,604008488,604004721,0,1073810172,805306604,3221225509,
0,1073742088,805306680,3221225513,0,4026531840,0,2499805496,0,65537,4026531840,
0,0,2852126736,3801144,131076,2147483656,2147508229,2147500034,2147491843,2147483961,
604008614,604008562,0,2147483961,604008614,604008572,0,2147483961,604008614,
604008582,0,2147483961,604008614,604008592,0,4026531840,2852192260,65592,1,2147483656,
268435456,1073751816,805306681,0,4026531840,0,2852192260,3538945,1,2147483651,
268435456,1073751816,805306681,0,4026531840,0,2852192260,3604481,1,2147483650,
268435456,1073751816,805306681,0,4026531840,0,2852192260,2359297,1,2147483653,
268435456,1073751816,805306681,0,4026531840,0,2852126724,31588371,131076,2147483656,
2147483653,2147483650,2147483651,268435456,1073752080,805306681,0,4026531840,
3087036592,2499805497,0,65539,4026531840,0,0,604008614,604008602,0,2499805497,
0,65537,4026531840,0,0,2852126728,31653889,65538,2147492058,2147483867,2147483962,
604008665,604009379,0,2147483962,604008665,604009366,0,4026531840,2852126732,
22872085,65538,2147496154,2147483867,2147483986,268435456,604008662,604009389,
604003677,0,2147483985,268435456,604008662,604009376,604003677,0,4026531840,
1073742352,805306682,0,3087036649,2768240647,0,65539,2155880762,2147483985,2147483986,
1073742088,805306682,3221225482,0,604008665,604008644,0,4026531840,0,2499805498,
0,65537,4026531840,0,0,2852126728,31719445,196617,2172649504,2176852113,2147492026,
2147491907,2147492028,2147491941,2147492016,2147491943,2147492025,2147483957,
604008751,604002860,0,2147483957,604008751,604008709,0,4026531840,0,2852126730,
31784981,196616,2147489968,2168471697,2147496122,2147483715,2147496124,2147500133,
2147496121,2147500135,268435456,604002914,0,268435456,604002936,0,604005820,
0,604004003,0,4026531840,2852126726,21692437,196617,2172655648,2176850065,2147483834,
2147489859,2147483836,2147489893,2147489968,2147489895,2147483833,604003092,
604005820,0,604003092,604005898,0,4026531840,0,3087036779,2768240681,0,196621,
2185265404,2147516670,2147524826,2181114067,2130776276,2160130261,2126567638,
2147533015,2155899189,2160087356,2147498301,2147492163,2147483988,1073742088,
805306685,3221225492,0,604008751,604002948,0,604008751,604002989,0,604008751,
604003010,0,604008751,604008731,0,1073742088,805306677,3221225508,0,1073742088,
805306684,3221225512,0,604008751,604003125,0,1073810044,805306581,3221225519,
0,604008751,604003149,0,604008751,604003236,0,1073742088,805306691,3221225529,
0,4026531840,0,2499805493,0,65537,4026531840,0,0,2852126724,23527445,131076,
2147483680,2151678053,2147483793,2147483751,2147483964,604008841,604004003,0,
4026531840,2852126723,21430291,131076,2147483680,2151678053,2147483793,2147483751,
604003031,604004003,0,4026531840,0,3087036823,2768240647,0,65538,2151684314,
2147483964,604008841,604008829,0,1073742088,805306684,3221225484,0,4026531840,
2499805500,0,65537,4026531840,0,0,2852126726,21430291,1,2147483680,2147483992,
268435456,604008875,604009468,604004237,0,1073810460,805306708,0,0,1073875988,
805306708,0,3087036886,2768240672,0,65538,2147483988,2147492157,1073742088,805306685,
3221225481,0,2583691296,21430291,65537,4026531840,2147483988,2583691296,20840469,
65537,4026531840,2147483874,268435456,2583691296,20840469,65537,4026531840,2147483872,
268435456,2583691440,23724051,65537,4026531840,268435456,604008878,604003007,
604008861,604004364,604004245,0,4026531840,0,2499805501,0,65537,4026531840,0,
0,2852192260,1048577,1,2147483671,268435456,1073750040,805306686,0,4026531840,
0,2852126732,31850552,65539,2155880450,2147500035,2147483656,2147483967,604008996,
604008954,0,2147483967,604008996,604008964,0,2147483967,604008996,604008974,
0,4026531840,0,2852192260,65592,1,2147483656,268435456,1073751816,805306687,
0,4026531840,0,2852192260,3604481,1,2147483650,268435456,1073751816,805306687,
0,4026531840,0,2852192260,3538945,1,2147483651,268435456,1073751816,805306687,
0,4026531840,0,2852126724,25559059,65539,2155872258,2147483651,2147483656,268435456,
1073752080,805306687,0,4026531840,0,3087036974,2499805503,0,65539,4026531840,
0,0,604008996,604008984,0,2499805503,0,65537,4026531840,0,0,1073875964,805306688,
0,2852126728,31916053,196618,2185232416,2147491985,2164269123,2143297547,2164269149,
2143297613,2147491939,2147491943,2147491941,2147492016,2147483963,604009087,
604002860,0,2147483963,604009087,604009037,0,4026531840,2852126732,31981589,
196617,2147489968,2147504273,2164260931,2143301643,2164273245,2143301709,2147496035,
2147504231,2147504229,268435456,604002914,0,268435456,604002936,0,2147483991,
604009392,604004367,0,604004003,0,4026531840,0,1073768976,805306707,0,2852126723,
21430293,196618,2185232416,2147483793,2164260931,2143289355,2164260957,2143289421,
2147483747,2147483751,2147483749,2147483824,604009084,604009395,0,4026531840,
0,1073742352,805306683,0,3087037111,2768240679,0,196619,2185263420,2147508541,
2147526874,2168492347,2130778324,2130772181,2147541206,2160117975,2147500371,
2147492180,2147483991,604009087,604009063,604003876,0,1073742088,805306685,3221225494,
0,1073742088,805306683,3221225498,0,604009087,604002989,0,604009087,604003010,
0,604009087,604009066,0,1073742088,805306684,3221225511,0,604009087,604003125,
0,1073810044,805306581,3221225518,0,604009087,604003149,0,1073742088,805306707,
3221225525,0,4026531840,0,2499805499,0,65537,4026531840,0,0,1073875964,805306710,
0,1073742352,805306690,0,3087037145,2768240655,0,65538,2151686466,2147483990,
1073742088,805306690,3221225481,0,2583691483,32047125,65537,4026531840,2147483990,
268435456,604009155,604009152,604009149,604004883,0,4026531840,2499805506,0,
65537,4026531840,0,0,1073875964,805306709,0,1073742352,805306689,0,3087037179,
2768240655,0,65538,2147483989,2143297857,1073742088,805306689,3221225481,0,2583691482,
26345493,65537,4026531840,2147483989,268435456,604009189,604009186,604009183,
604004883,0,4026531840,2499805505,0,65537,4026531840,0,0,2852126728,28180501,
65538,2147492021,2143289465,2147483972,604009241,604009231,0,2147483972,604009241,
604004439,0,4026531840,2852192260,32112641,1,2147483769,268435456,1073742088,
805306692,0,4026531840,0,3087037229,2768240652,0,65538,2147483972,2147500261,
2583691282,28246037,65537,4026531840,268435456,604009241,604005787,0,1073742088,
805306692,3221225489,0,4026531840,0,2499805508,0,65537,4026531840,0,0,2852126724,
28966933,65539,2155872325,2143289349,2147483835,2147483973,604009292,604006710,
0,4026531840,0,2852126723,32178197,65539,2155872325,2143289349,2147483835,604009289,
604006635,0,4026531840,1073742352,805306693,0,3087037284,2768240654,0,131076,
2147504388,2155884805,2147483974,2147490117,604009292,604006647,0,604009292,
604009279,0,1073742088,805306694,3221225489,0,1073742088,805306693,3221225493,
0,4026531840,0,2499805509,0,65537,4026531840,0,0,1073810436,805306695,0,2852126724,
6815797,131076,2147483712,2151677969,2151678053,2147483765,2147483983,604009340,
603998504,0,4026531840,1073757976,805306703,0,3087037328,2768240653,0,65538,
2147502222,2147483983,2583691327,7798837,65537,4026531840,268435456,604009340,
604009337,603998504,0,1073742088,805306703,3221225490,0,4026531840,2499805519,
0,65537,4026531840,0,0,2852192261,32243713,1,2147483866,2147483985,268435456,
604009376,604003677,0,4026531840,1073875964,805306705,0,2852192261,32309249,
1,2147483867,2147483986,268435456,604009389,604003677,0,4026531840,1073875980,
805306706,0,1073810468,805306711,0,2852126728,31916053,196618,2185232416,2147491985,
2164269123,2143297547,2164269149,2143297613,2147491939,2147491943,2147491941,
2147492016,2147483987,604009417,604002860,0,2147483987,604009417,604009037,0,
4026531840,2768240673,0,196618,2181060924,2147500349,2147512538,2147549523,2130763988,
2130757845,2147526870,2155909335,2147492180,2147483991,604009417,604009063,604003876,
0,1073742088,805306685,3221225492,0,604009417,604002989,0,604009417,604003010,
0,1073742088,805306684,3221225502,0,604009417,604003125,0,1073810044,805306581,
3221225509,0,604009417,604003149,0,1073742088,805306707,3221225516,0,0,4026531840,
0,1073742352,805306712,0,3087037462,2768240659,0,65538,2151708896,2147483992,
2583691296,21430291,65537,4026531840,2147483872,268435456,2583691440,23724051,
65537,4026531840,268435456,604009468,604009465,604004245,0,1073742088,805306712,
3221225496,0,4026531840,2499805528,0,65537,4026531840,0,0,2852192261,32374784,
1,2147483651,2147483993,268435456,805306713,604009522,0,4026531840,2852126724,
32440320,131076,2147483680,2147483653,2147483679,2143289347,268435456,1073741840,
805306713,0,4026531840,3087037500,2499805529,0,65539,4026531840,0,0,604009522,
604009510,0,2499805529,0,65537,4026531840,0,0,2583691304,32505856,131075,4026531840,
0,0,2147483994,604009588,0,2147483994,604009550,0,2852192259,32571392,1,2147483689,
268435456,604009558,0,4026531840,2852126727,32636928,196616,2147483656,2147489833,
2147483650,2151677955,2147483691,2147483653,2147483670,2147483655,604009578,
604009714,0,268435456,1073741840,805306714,0,4026531840,0,2852192260,32571392,
1,2147483689,268435456,1073741848,805306714,0,4026531840,0,2852192259,32702464,
1,2147483688,268435456,604009596,0,4026531840,2852126727,32768000,196616,2151677960,
2147489832,2147483650,2151677955,2147483691,2147483653,2147483670,2147483655,
604009616,604009714,0,268435456,1073741840,805306714,0,4026531840,0,2852192260,
32702464,1,2147483688,268435456,1073741848,805306714,0,4026531840,0,2852126741,
32833536,131079,2147495944,2147508229,2160084994,2151677955,2155878407,2147520534,
2147514411,2147483996,604009658,0,2147483996,604009666,0,2147483996,604009674,
0,2147483996,604009682,0,2147483996,604009690,0,2147483996,604009698,0,2147483996,
604009706,0,4026531840,2852192259,32374784,1,2147483651,268435456,805306716,
0,4026531840,2852192259,3670016,1,2147483655,268435456,805306716,0,4026531840,
2852192259,3735552,1,2147483656,268435456,805306716,0,4026531840,2852192259,
32899072,1,2147483650,268435456,805306716,0,4026531840,2852192259,32964608,1,
2147483653,268435456,805306716,0,4026531840,2852192259,33030144,1,2147483691,
268435456,805306716,0,4026531840,2852192259,33095680,1,2147483670,268435456,
805306716,0,4026531840,2852126724,32833536,131079,2147483656,2147483653,2160066562,
2151677955,2155872263,2147483670,2147483691,2147483995,604009747,604009626,0,
4026531840,0,2852126723,33161216,131079,2147483656,2147483653,2160066562,2151677955,
2155872263,2147483670,2147483691,604009744,604009626,0,4026531840,1073741840,
805306715,0,3087037729,2499805531,0,131075,4026531840,0,0,604009747,604009730,
0,805306715,3221225484,0,0,2499805531,0,65537,4026531840,0,0,2852126732,33226752,
65539,2147491906,2151694339,2147483713,2147483997,604009823,604009787,0,2147483997,
604009823,604009795,0,2147483997,604009823,604009803,0,4026531840,0,2852192259,
33292288,1,2147483713,268435456,805306717,0,4026531840,2852192259,33357824,1,
2147483714,268435456,805306717,0,4026531840,2852192259,32374784,1,2147483651,
268435456,805306717,0,4026531840,2852126724,33423360,131076,2147483713,2143289349,
2147483714,2147483651,268435456,1073741840,805306717,0,4026531840,3087037801,
2499805533,0,65539,4026531840,0,0,604009823,604009811,0,2499805533,0,65537,4026531840,
0,0,2852126732,33488896,196616,2164269064,2168455209,2147491842,2147491843,2147491880,
2147491845,2147500105,2147491847,2147483998,604009910,604009863,0,2147483998,
604009910,604009950,0,2147483998,604009910,604009926,0,4026531840,2852192259,
32571392,1,2147483689,268435457,805306718,0,4026531840,2852192260,33554432,1,
2147483721,2147484000,268435456,604009936,0,4026531840,0,2852126733,33488896,
196616,2164279304,2168455209,2147502082,2147502083,2147502120,2147502085,2147491913,
2147502087,268435457,1073741840,805306718,0,2147484000,268435456,604009907,604009936,
0,268435456,1073752080,805306719,0,4026531840,0,1073752080,805306719,0,2768240648,
0,65539,2155886942,2147492191,2147484000,1073751816,805306719,3221225481,0,604009910,
604009881,0,0,4026531840,0,2852192260,33554432,1,2147483721,2147484000,268435456,
604009936,0,4026531840,0,2852126724,3801088,131077,2147483656,2147483653,2147483650,
2151677955,2147483655,268435456,1073752080,805306720,0,4026531840,0,2852126748,
33619968,131079,2168471560,2168487941,2147508226,2151718915,2147491847,2147483688,
2147532873,2147483999,604010070,604009990,0,2147483999,604010070,604010000,0,
2147483999,604010070,604010010,0,2147483999,604010070,604010020,0,2147483999,
604010070,604010030,0,2147483999,604010070,604010040,0,2147483999,604010070,
604009871,0,4026531840,0,2852192260,32702464,1,2147483688,268435456,1073751816,
805306719,0,4026531840,0,2852192260,3670016,1,2147483655,268435456,1073751816,
805306719,0,4026531840,0,2852192260,3735552,1,2147483656,268435456,1073751816,
805306719,0,4026531840,0,2852192260,32899072,1,2147483650,268435456,1073751816,
805306719,0,4026531840,0,2852192260,32964608,1,2147483653,268435456,1073751816,
805306719,0,4026531840,0,2852192260,32374784,1,2147483651,268435456,1073751816,
805306719,0,4026531840,0,2852126729,33488896,131079,2168465416,2168465413,2147493890,
2151688195,2147493895,2147493928,2147483721,2147484000,268435456,604009907,604009936,
0,268435456,1073752080,805306719,0,4026531840,3087038052,2768240647,0,65538,
2147484000,2147492191,1073751816,805306719,3221225481,0,604010070,604010050,
0,4026531840,2499805535,0,65537,4026531840,0,0,2852126726,33685504,65538,2147489819,
2143289369,2147484001,604010102,0,2147484001,604010138,0,4026531840,2852192259,
33751040,1,2147483673,268435456,604010110,0,4026531840,2852126727,33816576,131078,
2147483656,2147483653,2160066562,2151677955,2147483655,2147489818,604010128,
604010176,0,268435456,1073741840,805306721,0,4026531840,0,2852192260,33882112,
1,2147483674,268435456,1073741848,805306721,0,4026531840,0,2852192259,33947648,
1,2147483675,268435456,604010146,0,4026531840,2852126727,34013184,131077,2147483656,
2147483653,2147483650,2151677955,2147489799,604010164,604010286,0,268435456,
1073741840,805306721,0,268435457,805306721,0,2583691271,21495808,65540,268435457,
1073741840,805306721,0,268435456,1073741848,805306721,0,0,2852126740,3801088,
131077,2147491848,2147516421,2147483650,2151702531,2147500039,2147484002,604010270,
604010206,0,2147484002,604010270,604010216,0,2147484002,604010270,604010226,
0,2147484002,604010270,604010236,0,2147484002,604010270,604010246,0,4026531840,
0,2852192260,32899072,1,2147483650,268435456,1073742088,805306722,0,4026531840,
0,2852192260,3735552,1,2147483656,268435456,1073742088,805306722,0,4026531840,
0,2852192260,3670016,1,2147483655,268435456,1073742088,805306722,0,4026531840,
0,2852192260,32374784,1,2147483651,268435456,1073742088,805306722,0,4026531840,
0,2852192260,32964608,1,2147483653,268435456,1073742088,805306722,0,4026531840,
0,2852126724,33816576,131077,2147483656,2147483653,2147483650,2151677955,2147483655,
268435456,1073742352,805306722,0,4026531840,0,3087038248,2499805538,0,65539,
4026531840,0,0,604010270,604010256,0,2499805538,0,65537,4026531840,0,0,2852126736,
34078720,131076,2147491848,2147508229,2147483650,2147500035,2147484003,604010362,
604010310,0,2147484003,604010362,604010320,0,2147484003,604010362,604010330,
0,2147484003,604010362,604010340,0,4026531840,2852192260,32899072,1,2147483650,
268435456,1073742088,805306723,0,4026531840,0,2852192260,3735552,1,2147483656,
268435456,1073742088,805306723,0,4026531840,0,2852192260,32374784,1,2147483651,
268435456,1073742088,805306723,0,4026531840,0,2852192260,32964608,1,2147483653,
268435456,1073742088,805306723,0,4026531840,0,2852126724,34013184,131076,2147483656,
2147483653,2147483650,2147483651,268435456,1073742352,805306723,0,4026531840,
3087038340,2499805539,0,65539,4026531840,0,0,604010362,604010350,0,2499805539,
0,65537,4026531840,0,0,2852126732,33488896,196616,2164269064,2168463401,2147491842,
2147491843,2147483688,2147491845,2147500105,2147491847,2147484004,604010439,
604010402,0,2147484004,604010439,604010455,0,2147484004,604010439,604009871,
0,4026531840,2852192259,32702464,1,2147483688,268435457,805306724,0,4026531840,
2852126733,33488896,196616,2164279304,2168473641,2147502082,2147502083,2147483688,
2147502085,2147491913,2147502087,268435457,1073741840,805306724,0,2147484000,
268435456,604010436,604009936,0,268435456,1073752080,805306725,0,4026531840,
0,1073752080,805306725,0,2768240648,0,65539,2155878752,2147484005,2147498340,
604010439,604010410,0,1073751816,805306725,3221225484,0,0,4026531840,0,2852126748,
34144256,131079,2147500040,2164293637,2147508226,2151718915,2147491847,2151677993,
2147532873,2147484005,604010575,604010495,0,2147484005,604010575,604010505,0,
2147484005,604010575,604010515,0,2147484005,604010575,604010525,0,2147484005,
604010575,604010535,0,2147484005,604010575,604010545,0,2147484005,604010575,
604009871,0,4026531840,0,2852192260,32571392,1,2147483689,268435456,1073751816,
805306725,0,4026531840,0,2852192260,3670016,1,2147483655,268435456,1073751816,
805306725,0,4026531840,0,2852192260,3735552,1,2147483656,268435456,1073751816,
805306725,0,4026531840,0,2852192260,32899072,1,2147483650,268435456,1073751816,
805306725,0,4026531840,0,2852192260,32964608,1,2147483653,268435456,1073751816,
805306725,0,4026531840,0,2852192260,32374784,1,2147483651,268435456,1073751816,
805306725,0,4026531840,0,2852126729,33488896,131079,2147493896,2164271109,2147493890,
2151688195,2147493895,2151688233,2147483721,2147484000,268435456,604010436,604009936,
0,268435456,1073752080,805306725,0,4026531840,3087038557,2768240647,0,65538,
2147490144,2147484005,604010575,604010555,0,1073751816,805306725,3221225484,
0,4026531840,2499805541,0,65537,4026531840,0,0,2852126732,33226752,65539,2147491906,
2151694339,2147483713,2147484006,604010651,604010615,0,2147484006,604010651,
604010623,0,2147484006,604010651,604010631,0,4026531840,0,2852192259,33292288,
1,2147483713,268435456,805306726,0,4026531840,2852192259,33357824,1,2147483714,
268435456,805306726,0,4026531840,2852192259,32374784,1,2147483651,268435456,
805306726,0,4026531840,2852126724,33423360,131076,2147483713,2143289349,2147483714,
2147483651,268435456,1073752080,805306726,0,4026531840,3087038629,2499805542,
0,65539,4026531840,0,0,604010651,604010639,0,2499805542,0,65537,4026531840,0,
0,2852126724,34209792,131078,2147483656,2164260869,2147483650,2151677955,2147483655,
2147483721,2147484007,604010704,604010720,0,4026531840,2852126727,34275328,196616,
2147491848,2147491913,2147491842,2151686147,2147483795,2151686149,2147483797,
2147491847,268435457,1073741840,805306727,0,604010701,604010720,0,4026531840,
0,1073752080,805306728,0,2768240648,0,65539,2147492200,2151692647,2147484009,
1073751816,805306728,3221225481,0,604010704,604010681,0,0,4026531840,0,2852126739,
34209792,131078,2147489800,2164279301,2147495938,2151702531,2147483655,2147514441,
2147484009,604010750,0,2147484009,604010760,0,2147484009,604010768,0,2147484009,
604010776,0,2147484009,604010784,0,2147484009,604010758,604010792,0,4026531840,
0,2852192259,3670016,1,2147483655,268435456,805306729,0,4026531840,805306729,
0,2852192259,3735552,1,2147483656,268435456,805306729,0,4026531840,2852192259,
32899072,1,2147483650,268435456,805306729,0,4026531840,2852192259,32964608,1,
2147483653,268435456,805306729,0,4026531840,2852192259,32374784,1,2147483651,
268435456,805306729,0,4026531840,2852192260,33554432,1,2147483721,2147484010,
268435456,604010802,0,4026531840,0,2852126724,34078720,131076,2147483656,2147483653,
2147483650,2147483651,268435456,1073752080,805306730,0,4026531840,2852126724,
34340864,65538,2147483679,2143289347,2147484011,604010838,604010848,0,4026531840,
2852126724,34406400,131076,2147483679,2151677957,2147483713,2134900739,268435456,
1073741840,805306732,0,805306731,0,0,2768240644,0,65538,2147484012,2147490155,
604010838,604010824,0,0,4026531840,2852126728,34340864,65538,2147491871,2143289347,
2147484012,604010890,604010862,0,2147484012,604010890,604010870,0,4026531840,
2852192259,32374784,1,2147483651,268435456,805306732,0,4026531840,2852192259,
34471936,1,2147483679,268435456,805306732,0,4026531840,2852126724,34406400,131076,
2147483679,2151677957,2147483713,2134900739,268435456,1073741840,805306732,0,
4026531840,3087038868,2499805548,0,65539,4026531840,0,0,604010890,604010878,
0,2499805548,0,65537,4026531840,0,0,2852126724,34078720,131076,2147483656,2147483653,
2147483650,2147483651,2147484014,604010955,604011051,0,4026531840,2852126731,
34537472,196617,2147500040,2147483666,2143305730,2151694339,2147483667,2147500037,
2147491862,2151677959,2147483831,268435457,1073741840,805306734,0,268435456,
604010942,604011003,0,604010952,604011051,0,4026531840,2852192260,34603008,1,
2147483671,268435456,1073741856,805306735,0,4026531840,0,1073741840,805306735,
0,2768240647,0,65539,2155884910,2147490159,2147484016,805306735,3221225480,0,
604010955,604010918,0,0,4026531840,2852126724,34340864,65538,2147483679,2143289347,
2147484013,604010993,604010848,0,4026531840,2852126724,34406400,131076,2147483679,
2151677957,2147483713,2134900739,268435456,1073741840,805306732,0,805306733,
0,0,2768240644,0,65538,2147484012,2147490157,604010993,604010979,0,0,4026531840,
2852126724,34078720,131076,2147483656,2147483653,2147483650,2147483651,2147484015,
604011031,604011051,0,4026531840,2852126727,34668544,131077,2147491848,2147491845,
2155880450,2147491843,2147483670,268435456,604010942,604011003,0,604010952,604011051,
0,4026531840,3087039013,2499805551,0,131075,4026531840,0,0,604011031,604011015,
0,805306735,3221225484,0,0,2499805551,0,65537,4026531840,0,0,2852126732,34078720,
131076,2147502088,2147495941,2147489794,2147483651,2147484016,604011071,0,2147484016,
604011079,0,2147484016,604011087,0,2147484016,604011095,0,4026531840,2852192259,
32374784,1,2147483651,268435456,805306736,0,4026531840,2852192259,32899072,1,
2147483650,268435456,805306736,0,4026531840,2852192259,32964608,1,2147483653,
268435456,805306736,0,4026531840,2852192259,3735552,1,2147483656,268435456,805306736,
0,4026531840,2147484017,604011107,604011154,0,2852126723,34734080,65538,2147483838,
2147483839,268435456,604011117,0,805306737,0,2852126727,34799616,65538,2147483679,
2143295493,268435456,604011131,0,268435456,1073741848,805306737,0,4026531840,
0,2852192260,32964608,1,2147483653,268435456,1073741856,805306737,0,4026531840,
0,2852192261,34865152,1,2147483759,2147484019,268435456,604011151,604011197,
0,4026531840,1073741840,805306739,0,2852192260,32964608,1,2147483653,2147484018,
268435456,604011164,0,4026531840,0,2583691367,34930688,65539,805306738,0,0,268435456,
604011174,0,0,2852192260,32964608,1,2147483653,268435456,1073741848,805306738,
0,4026531840,0,2852192261,34996224,1,2147483763,2147484021,268435456,604011194,
604011435,0,4026531840,1073741840,805306741,0,2852126772,35061760,196621,2147508424,
2147516617,2147524810,2147541195,2168553668,2160074757,2168455366,2168471751,
2155921605,2147549388,2147557581,2147565774,2147573967,2147484020,604011419,
604011267,0,2147484020,604011419,604011277,0,2147484020,604011419,604011287,
0,2147484020,604011419,604011297,0,2147484020,604011419,604011307,0,2147484020,
604011419,604011317,0,2147484020,604011419,604011327,0,2147484020,604011419,
604011337,0,2147484020,604011419,604011347,0,2147484020,604011419,604011357,
0,2147484020,604011419,604011367,0,2147484020,604011419,604011377,0,2147484020,
604011419,604011387,0,4026531840,0,2852192260,35127296,1,2147483846,268435456,
1073742088,805306740,0,4026531840,0,2852192260,32964608,1,2147483653,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35192832,1,2147483847,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35258368,1,2147483848,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35323904,1,2147483849,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35389440,1,2147483850,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35454976,1,2147483845,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35520512,1,2147483851,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35586048,1,2147483852,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35651584,1,2147483853,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35717120,1,2147483854,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35782656,1,2147483855,268435456,
1073742088,805306740,0,4026531840,0,2852192260,35848192,1,2147483844,268435456,
1073742088,805306740,0,4026531840,0,2852126724,35913728,196621,2147483848,2147483849,
2147483850,2147483851,2168455364,2160066565,2168455366,2168455367,2155872453,
2147483852,2147483853,2147483854,2147483855,268435456,1073742352,805306740,0,
4026531840,0,3087039397,2499805556,0,65539,4026531840,0,0,604011419,604011397,
0,2499805556,0,65537,4026531840,0,0,2852126728,35979264,65538,2147483858,2147492049,
2147484022,604011479,604011449,0,2147484022,604011479,604011459,0,4026531840,
2852192260,36044800,1,2147483858,268435456,1073742088,805306742,0,4026531840,
0,2852192260,36110336,1,2147483857,268435456,1073742088,805306742,0,4026531840,
0,2852126724,36175872,65538,2147483858,2147483857,268435456,1073742352,805306742,
0,4026531840,3087039457,2499805558,0,65539,4026531840,0,0,604011479,604011469,
0,2499805558,0,65537,4026531840,0,0,2583691376,36241408,131075,4026531840,0,
0,2147484023,604011507,0,2147484023,604011520,0,2852192260,36306944,1,2147483760,
268435456,604011517,604011530,0,4026531840,0,1073741840,805306743,0,2852192260,
36372480,1,2147483761,268435456,604011517,604011530,0,4026531840,0,2583691472,
36438016,524292,4026531840,0,0,0,2147484024,604011666,604011570,0,2147484024,
604011666,604011580,0,2147484024,604011666,604011590,0,2147484024,604011666,
604011600,0,2147484024,604011666,604011610,0,2147484024,604011666,604011620,
0,2147484024,604011666,604011630,0,2147484024,604011666,604011640,0,0,2852192260,
36503552,1,2147483856,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36110336,1,2147483857,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36044800,1,2147483858,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36569088,1,2147483859,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36634624,1,2147483860,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36700160,1,2147483861,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36765696,1,2147483862,268435456,1073742088,805306744,0,4026531840,0,2852192260,
36831232,1,2147483863,268435456,1073742088,805306744,0,4026531840,0,2852126724,
36896768,196616,2147483856,2147483857,2147483858,2147483859,2147483860,2147483861,
2147483862,2147483863,268435456,1073742352,805306744,0,4026531840,3087039644,
2499805560,0,65539,4026531840,0,0,604011666,604011650,0,2499805560,0,65537,4026531840,
0,0,2852192260,33751040,1,2147483673,2147484026,268435456,603980120,0,4026531840,
0,2852126732,33226752,65539,2147491906,2151694339,2147483713,2147484025,604011748,
604011712,0,2147484025,604011748,604011720,0,2147484025,604011748,604011728,
0,4026531840,0,2852192259,33292288,1,2147483713,268435456,805306745,0,4026531840,
2852192259,33357824,1,2147483714,268435456,805306745,0,4026531840,2852192259,
32374784,1,2147483651,268435456,805306745,0,4026531840,2852126724,33423360,131076,
2147483713,2143289349,2147483714,2147483651,268435456,1073752080,805306745,0,
4026531840,3087039726,2499805561,0,65539,4026531840,0,0,604011748,604011736,
0,2499805561,0,65537,4026531840,0,0,2852126736,8323125,327736,2290114624,2290114593,
2147508322,2147508323,2281725988,2281725957,2147508262,2306891825,2273337384,
2273337385,2273337354,2273337387,2147508332,2319474742,2264940558,2264948783,
2264948784,2105565201,2264948786,2264948787,2147508276,2260754485,2109759510,
2147508279,2147508280,2147508281,2147508282,2264948795,2147508284,2164285501,
2155896862,2223005727,2147508286,2147508317,2214617184,2147508321,2210422884,
2147508325,2147483752,2147508329,2147508330,2147508331,2189451374,2147508335,
2147508336,2147508337,2147508338,2172674163,2147508341,2147508351,2147508352,
2147508356,2147508366,2147491987,2147508374,2147508379,2147483948,604011854,
603982661,0,2147483948,604011854,603982853,0,2147483948,604011854,603985086,
0,2147483948,604011854,603985320,0,4026531840,2852126727,7798837,65538,2147483666,
2147489855,1073782280,805306668,0,268435456,603983506,603985244,0,4026531840,
0,2768240758,0,327736,2349013056,2147680321,2344806466,2344800323,2286073924,
2286067781,2286061638,2344775751,2147637320,2277654601,2147625034,2147618891,
2327967820,2147547213,2223097902,2147559503,2147600464,2147600465,2210474002,
2147571795,2235674708,2147588181,2231466070,2231457879,2147571800,2147571801,
2181271610,2147510331,2214819900,2214813757,2168670270,2168664127,2147606606,
2147600466,2147559514,2193696862,2193703039,2206279844,2206279845,2206279846,
2147559593,2147553460,2147547318,2147547319,2147541180,2147535037,2147535038,
2147535039,2147528896,2147522754,2147516611,2147510468,2147510469,2147492038,
2147483847,2147723564,1073809836,805306566,3221225534,0,2583691420,7733301,65537,
4026531840,268435456,604011854,603983385,604006139,0,805306426,3221225546,0,
604011854,603983388,0,805306440,3221225552,0,604011854,603983401,0,805306556,
3221225558,0,604011854,603983416,0,805306444,3221225564,0,604011854,603983469,
0,805306445,3221225570,0,604011854,604011840,0,1073766408,805306450,3221225577,
0,1073766664,805306450,3221225581,0,604011854,603983509,0,604011854,603983555,
0,805306447,3221225590,0,604011854,603983570,0,604011854,603983583,0,805306442,
3221225599,0,604011854,603983636,0,604011854,603983679,0,805306439,3221225608,
0,805306438,3221225611,0,604011854,603983692,0,604011854,603983707,0,604011854,
603983722,0,604011854,603983737,0,604011854,603983770,0,604011854,603983787,
0,604011854,603983800,0,604011854,603983813,0,604011854,603983832,0,604011854,
603983845,0,604011854,603983858,0,805306495,3221225647,0,0,4026531840,2583691393,
36962357,196611,4026531840,0,0,2147483789,604012048,0,2147483789,604012089,0,
2147483789,604012120,0,0,2852192260,37027893,1,2147483777,268435456,604012058,
603998012,0,4026531840,0,2852192259,37093429,1,2147483778,268435456,604012066,
0,4026531840,2852192260,6094901,1,2147483670,268435456,604012076,603999593,0,
4026531840,0,2852192260,6160437,1,2147483671,268435456,604012086,603984559,0,
4026531840,0,1073790264,805306509,0,2852192259,37093429,1,2147483778,268435456,
604012097,0,4026531840,2852192260,6094901,1,2147483670,268435456,604012107,603999593,
0,4026531840,0,2852192260,6160437,1,2147483671,268435456,604012117,603998012,
0,4026531840,0,1073790504,805306509,0,2852192259,37158965,1,2147483779,268435456,
604012128,0,4026531840,2852126726,37224501,65538,2151677974,2147489924,268435456,
604012140,0,268435456,604013056,0,4026531840,2852126734,37290037,327740,2302689344,
2302689313,2147508322,2147508323,2294300708,2294300677,2353020966,2147491975,
2285912104,2285912105,2285912074,2248171563,2147500140,2294300721,2277523470,
2277523503,2277523504,2130722833,2206228498,2277523507,2147500084,2273329205,
2193637398,2147500087,2147500088,2147500089,2147500090,2281717819,2147500092,
2176860221,2164285470,2235588639,2218803250,2252357686,2147500094,2185232459,
2147508317,2214617184,2147508321,2210422884,2147500133,2147500136,2147500137,
2147500138,2147500139,2193637486,2147500143,2147500144,2147500145,2147500146,
2176860275,2147500149,2147500159,2147500160,2147508356,2147491974,2147500174,
2147500179,2147500182,2147508379,1610612738,67141306,67141570,0,1610612738,67141622,
67141869,0,1610612738,67141872,67141875,0,604012790,0,4026531840,2852192262,
37355573,1,2147483723,2147483949,268435456,604012230,604007920,604009325,0,4026531840,
0,2852192259,5963829,1,2147483666,268435456,604012238,0,4026531840,2852126726,
16187445,327737,2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,
2147483686,2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,
2290090034,2269118478,2269118511,2269118512,2105540625,2126518290,2269118515,
2147483700,2264924213,2189426710,2147483703,2147483704,2147483705,2147483706,
2269118523,2147483708,2168455229,2160066590,2227175455,2243952694,2147483710,
2147483741,2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,
2147483754,2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,
2172649587,2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,
2147483798,2147483803,604012306,603999593,0,268435456,604012398,0,4026531840,
0,2852192259,5963829,1,2147483666,268435456,604012314,0,4026531840,2852126727,
7012405,327737,2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,
2147483686,2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,
2323644470,2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,
2147483700,2264924213,2109734934,2185238551,2147483704,2147483705,2147483706,
2269118523,2147483708,2168455229,2160066590,2227175455,2147483703,2147483710,
2147483741,2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,
2147483754,2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,
2172649587,2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,
2147483798,2147483803,604012382,603999593,0,268435456,604012395,603998012,0,
4026531840,2852192260,6160437,1,2147483671,268435456,604012392,603998012,0,4026531840,
0,1073790792,805306509,0,1073792320,805306509,0,2852126727,7012405,327737,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,
2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,
2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,
2109734934,2185238551,2147483704,2147483705,2147483706,2269118523,2147483708,
2168455229,2160066590,2227175455,2147483703,2147483710,2147483741,2214592608,
2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,
2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,
2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,2147483803,
604012466,603999593,0,268435456,604012479,603998012,0,4026531840,2852192260,
6160437,1,2147483671,268435456,604012476,603998012,0,4026531840,0,1073792064,
805306509,0,1073793848,805306509,0,2852192262,37355573,1,2147483723,2147483950,
268435456,604012494,604007923,603998504,0,4026531840,0,2852126728,37421109,65538,
2147491973,2143289433,268435456,604012508,603999593,0,268435456,604012521,603999593,
0,4026531840,2852192260,6160437,1,2147483671,268435456,604012518,603998012,0,
4026531840,0,1073791288,805306509,0,2852192260,6160437,1,2147483671,268435456,
604012531,603998012,0,4026531840,0,1073793080,805306509,0,604012537,603998522,
0,2852126726,16187445,327737,2294284352,2294284321,2147483746,2147483747,2285895716,
2285895685,2147483686,2311061553,2277507112,2277507113,2277507082,2277507115,
2147483756,2290090034,2269118478,2269118511,2269118512,2105540625,2126518290,
2269118515,2147483700,2264924213,2189426710,2147483703,2147483704,2147483705,
2147483706,2269118523,2147483708,2168455229,2160066590,2227175455,2243952694,
2147483710,2147483741,2214592608,2147483745,2210398308,2147483749,2147483752,
2147483753,2147483754,2147483755,2189426798,2147483759,2147483760,2147483761,
2147483762,2172649587,2147483765,2147483775,2147483776,2147483780,2147483790,
2147483795,2147483798,2147483803,604012605,603999593,0,268435456,604012697,0,
4026531840,0,2852192259,5963829,1,2147483666,268435456,604012613,0,4026531840,
2852126727,7012405,327737,2294284352,2294284321,2147483746,2147483747,2285895716,
2285895685,2147483686,2311061553,2277507112,2277507113,2277507082,2277507115,
2147483756,2323644470,2269118478,2269118511,2269118512,2105540625,2269118514,
2269118515,2147483700,2264924213,2109734934,2185238551,2147483704,2147483705,
2147483706,2269118523,2147483708,2168455229,2160066590,2227175455,2147483703,
2147483710,2147483741,2214592608,2147483745,2210398308,2147483749,2147483752,
2147483753,2147483754,2147483755,2189426798,2147483759,2147483760,2147483761,
2147483762,2172649587,2147483765,2147483775,2147483776,2147483780,2147483790,
2147483795,2147483798,2147483803,604012681,603999593,0,268435456,604012694,603998012,
0,4026531840,2852192260,6160437,1,2147483671,268435456,604012691,603998012,0,
4026531840,0,1073791040,805306509,0,1073792824,805306509,0,2852126727,7012405,
327737,2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,
2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,
2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,
2264924213,2109734934,2185238551,2147483704,2147483705,2147483706,2269118523,
2147483708,2168455229,2160066590,2227175455,2147483703,2147483710,2147483741,
2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,
2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
2147483803,604012765,603999593,0,268435456,604012778,603998012,0,4026531840,
2852192260,6160437,1,2147483671,268435456,604012775,603998012,0,4026531840,0,
1073792568,805306509,0,1073794096,805306509,0,604012494,603998644,0,604012230,
604011764,0,604012494,603990206,0,2852126726,37486645,196620,2147489888,2147489889,
2172649490,2172655659,2172655716,2147489885,2147489822,2147489823,2147489890,
2155878499,2147489924,2147489947,268435456,604012812,0,604012230,604011764,0,
4026531840,2852126726,16187445,327737,2294284352,2294284321,2147483746,2147483747,
2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,2277507082,
2277507115,2147483756,2290090034,2269118478,2269118511,2269118512,2105540625,
2126518290,2269118515,2147483700,2264924213,2189426710,2147483703,2147483704,
2147483705,2147483706,2269118523,2147483708,2168455229,2160066590,2227175455,
2243952694,2147483710,2147483741,2214592608,2147483745,2210398308,2147483749,
2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,2147483760,
2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,2147483780,
2147483790,2147483795,2147483798,2147483803,604012880,603999593,0,268435456,
604012972,0,4026531840,0,2852192259,5963829,1,2147483666,268435456,604012888,
0,4026531840,2852126727,7012405,327737,2294284352,2294284321,2147483746,2147483747,
2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,2277507082,
2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,2105540625,
2269118514,2269118515,2147483700,2264924213,2109734934,2185238551,2147483704,
2147483705,2147483706,2269118523,2147483708,2168455229,2160066590,2227175455,
2147483703,2147483710,2147483741,2214592608,2147483745,2210398308,2147483749,
2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,2147483760,
2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,2147483780,
2147483790,2147483795,2147483798,2147483803,604012956,603999593,0,268435456,
604012969,603998012,0,4026531840,2852192260,6160437,1,2147483671,268435456,604012966,
603998012,0,4026531840,0,1073791808,805306509,0,1073793592,805306509,0,2852126727,
7012405,327737,2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,
2147483686,2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,
2323644470,2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,
2147483700,2264924213,2109734934,2185238551,2147483704,2147483705,2147483706,
2269118523,2147483708,2168455229,2160066590,2227175455,2147483703,2147483710,
2147483741,2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,
2147483754,2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,
2172649587,2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,
2147483798,2147483803,604013040,603999593,0,268435456,604013053,603998012,0,
4026531840,2852192260,6160437,1,2147483671,268435456,604013050,603998012,0,4026531840,
0,1073793336,805306509,0,1073794352,805306509,0,2852192259,6094901,1,2147483670,
268435456,604013064,0,4026531840,2852126732,37552181,327728,2327844928,2147489825,
2302679089,2332039222,2147489828,2181044229,2306873382,2147483783,2248153128,
2248153129,2248153098,2248159307,2147489900,2147489893,2239764494,2239764527,
2239764528,2084575249,2239764530,2239764531,2147489844,2235570229,2067798038,
2147489847,2147489848,2147489849,2147489850,2147489851,2147489852,2147489853,
2147489854,2147489919,2147489896,2147489897,2147489898,2147489899,2185238638,
2147489903,2147489904,2147489905,2147489906,2168461427,2147489909,2147489920,
2147483782,2147489934,2147489939,2147489942,604013128,603998644,0,604013128,
603990206,0,2147483950,268435456,604013128,604007923,603998504,0,4026531840,
2852192260,37617717,1,2147483781,268435456,604013138,603999593,0,4026531840,
0,2852192260,6160437,1,2147483671,268435456,604013148,603998012,0,4026531840,
0,1073791552,805306509,0,2852126746,16580661,393286,2420121664,2147528833,2147528834,
2147528835,2147528836,2147528709,2147528801,2147528804,2147528840,2147483752,
2382409738,2382409803,2147528809,2147528811,2374012942,2147528815,2147528816,
2147500049,2147528722,2147512467,2147528817,2147528725,2344661014,2147528818,
2147528819,2147528821,2147528826,2147528859,2147528827,2147528797,2147528734,
2147528735,2147528800,2034282529,2147528802,2147528803,2025893924,2147528805,
2147528742,2147528828,2017505320,2025893929,2147528810,2021699627,2147528812,
2147528829,2147528814,2013311023,2013311024,2025893937,2034282546,2034282547,
2147528756,2030088245,2147528758,2147528759,2147528760,2147528761,2013311034,
2017505339,2059448380,2080419901,2155917374,2147528831,2147528830,2147528832,
2147528842,2147528843,2147528846,2147528854,2147483784,604017067,603982661,0,
2147483784,604017067,603982823,0,2147483784,2147483772,604017067,603995185,603995187,
0,2147483784,604017067,603982853,0,2147483784,604017067,603985086,0,2147483784,
604017067,604013251,0,4026531840,2852126828,16646197,393281,2147657856,2147637377,
2147637378,2147637379,2147686532,2147540997,2147483745,2147487844,2147637384,
2147491945,2269306890,2290122827,2147526763,2147549295,2147664014,2147553392,
2147553393,2147557490,2147618834,2147557491,2147569781,2147629077,2323656726,
2147573882,2147582075,2147590268,2147600509,2147696795,2147608702,2147483741,
2147487774,2147483679,2147483744,2034262049,2147483746,2147483747,2025873444,
2147561573,2147508262,2147641482,2147512360,2013294633,2147526762,2017460267,
2147530860,2147649675,2147549294,2004901935,2009096240,2009096241,2009096242,
2013290547,2147508276,2009096245,2147508278,2147508279,2147508280,2147508281,
2000707642,2000707643,2000707644,2000707645,2004901950,2147502207,2147680406,
603989051,0,603989366,0,603989769,0,268435456,603983073,0,268435456,604013429,
0,603980682,0,603984459,0,2147483701,268435456,603984812,603984818,0,603989737,
0,2147483729,268435456,1073766152,805306449,0,2147483733,268435456,603990460,
0,603990666,0,603990509,0,603990558,0,2147483738,268435456,603990728,0,603990610,
0,2147483776,268435456,603996259,0,2147483779,268435456,603996293,0,2147483780,
268435456,603996800,603999593,0,2147483781,268435456,603996822,0,2147483782,
268435456,603996806,603984559,0,2147483786,268435456,1073789448,805306506,0,
2147483787,268435456,603997977,0,603998486,0,2147483800,268435456,603998964,
0,2147483801,268435456,603999152,0,268435456,604015255,0,2147483813,268435456,
603999991,0,2147483814,268435456,604000205,0,268435456,603983349,0,2147483842,
268435456,604001864,603989051,0,2147483844,268435456,604002412,0,4026531840,
0,2852126726,11206709,65539,2151677974,2151678016,2147489920,603985458,604002492,
0,268435456,604013443,0,4026531840,0,2852126732,11337781,65539,2155890710,2147483715,
2147489856,268435456,604013463,0,2147483704,268435456,1073758472,805306424,604014367,
0,268435456,603986251,0,4026531840,0,2852126729,11403317,65538,2151690262,2147483712,
2147483704,268435456,1073758472,805306424,604013479,0,268435456,603985767,0,
4026531840,0,2852192259,6094901,1,2147483670,268435456,604013487,0,4026531840,
2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,2147483764,
2147483765,604013503,603991617,0,268435456,604013939,0,4026531840,2852192259,
6160437,1,2147483671,268435456,604013511,0,4026531840,2852192259,9568309,1,2147483665,
268435456,604013519,0,4026531840,2852126726,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,604013603,603994606,0,268435456,604013775,0,4026531840,
2852192259,9764917,1,2147483667,268435456,604013611,0,4026531840,2852126725,
37683253,196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,
2160066582,2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,
1073785424,805306505,0,604013635,0,604013699,0,0,2785017860,37748789,327736,
2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,
2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,
2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,
2264924213,2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,
2147483708,2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,
2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,
2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
603985651,0,603997081,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483785,2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,
2147483664,2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,
2147483762,2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,
2147483772,2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,
2147483774,2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,
2147483756,2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,
2038431795,2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,
2021654586,2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,
2147483790,1073785424,805306505,0,1073802320,805306532,0,0,2852126725,37683253,
196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,2160066582,
2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,1073786440,
805306505,0,604013799,0,604013863,0,0,2785017860,37748789,327736,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,
2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,
2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,
2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,2147483708,
2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,2214592608,
2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,
2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,
2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,603985654,
0,603997084,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483785,
2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,2147483664,
2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,2147483762,
2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,2147483772,
2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,2147483774,
2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,2147483756,
2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,2038431795,
2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,2021654586,
2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,2147483790,
1073786440,805306505,0,1073803592,805306532,0,0,2852192259,9568309,1,2147483665,
268435456,604013947,0,4026531840,2852126726,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,604014031,603994606,0,268435456,604014203,0,4026531840,
2852192259,9764917,1,2147483667,268435456,604014039,0,4026531840,2852126725,
37683253,196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,
2160066582,2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,
1073786184,805306505,0,604014063,0,604014127,0,0,2785017860,37748789,327736,
2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,
2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,
2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,
2264924213,2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,
2147483708,2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,
2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,
2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
603985761,0,603997191,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483785,2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,
2147483664,2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,
2147483762,2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,
2147483772,2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,
2147483774,2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,
2147483756,2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,
2038431795,2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,
2021654586,2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,
2147483790,1073786184,805306505,0,1073803336,805306532,0,0,2852126725,37683253,
196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,2160066582,
2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,1073787968,
805306505,0,604014227,0,604014291,0,0,2785017860,37748789,327736,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,
2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,
2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,
2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,2147483708,
2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,2214592608,
2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,
2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,
2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,603985764,
0,603997194,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483785,
2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,2147483664,
2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,2147483762,
2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,2147483772,
2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,2147483774,
2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,2147483756,
2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,2038431795,
2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,2021654586,
2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,2147483790,
1073787968,805306505,0,1073806144,805306532,0,0,2852192259,6094901,1,2147483670,
268435456,604014375,0,4026531840,2852126726,11468853,131078,2164260928,2151677969,
2160066661,2147489815,2147483764,2147483765,604014391,603991617,0,268435456,
604014827,0,4026531840,2852192259,6160437,1,2147483671,268435456,604014399,0,
4026531840,2852192259,9568309,1,2147483665,268435456,604014407,0,4026531840,
2852126726,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,604014491,
603994606,0,268435456,604014663,0,4026531840,2852192259,9764917,1,2147483667,
268435456,604014499,0,4026531840,2852126725,37683253,196621,2189426705,2143289345,
2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,2147483666,
2147483678,2147489825,2147483749,2147483795,1073785928,805306505,0,604014523,
0,604014587,0,0,2785017860,37748789,327736,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,
2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,
2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,2147483703,
2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,2160066590,
2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,603986135,0,603997333,0,4026531840,
2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,2369781835,
2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,2147483759,
2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,2147483763,
2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,2147483744,
2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,2147483776,
2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,2147483758,
2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,2034237493,
2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,2021654588,
2021654589,2042626110,2147483775,2147483787,2147483790,1073785928,805306505,
0,1073802824,805306532,0,0,2852126725,37683253,196621,2189426705,2143289345,
2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,2147483666,
2147483678,2147489825,2147483749,2147483795,1073787712,805306505,0,604014687,
0,604014751,0,0,2785017860,37748789,327736,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,
2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,
2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,2147483703,
2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,2160066590,
2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,603986138,0,603997336,0,4026531840,
2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,2369781835,
2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,2147483759,
2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,2147483763,
2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,2147483744,
2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,2147483776,
2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,2147483758,
2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,2034237493,
2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,2021654588,
2021654589,2042626110,2147483775,2147483787,2147483790,1073787712,805306505,
0,1073805376,805306532,0,0,2852192259,9568309,1,2147483665,268435456,604014835,
0,4026531840,2852126726,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
604014919,603994606,0,268435456,604015091,0,4026531840,2852192259,9764917,1,
2147483667,268435456,604014927,0,4026531840,2852126725,37683253,196621,2189426705,
2143289345,2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,
2147483666,2147483678,2147489825,2147483749,2147483795,1073787456,805306505,
0,604014951,0,604015015,0,0,2785017860,37748789,327736,2294284352,2294284321,
2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,
2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,
2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,
2147483703,2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,
2160066590,2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,
2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,
2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,
2147483776,2147483780,2147483790,2147483795,2147483798,603986245,0,603997443,
0,4026531840,2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,
2369781835,2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,
2147483759,2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,
2147483763,2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,
2147483744,2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,
2147483776,2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,
2147483758,2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,
2034237493,2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,
2021654588,2021654589,2042626110,2147483775,2147483787,2147483790,1073787456,
805306505,0,1073805120,805306532,0,0,2852126725,37683253,196621,2189426705,2143289345,
2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,2147483666,
2147483678,2147489825,2147483749,2147483795,1073788984,805306505,0,604015115,
0,604015179,0,0,2785017860,37748789,327736,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,
2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,
2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,2147483703,
2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,2160066590,
2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,603986248,0,603997446,0,4026531840,
2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,2369781835,
2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,2147483759,
2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,2147483763,
2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,2147483744,
2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,2147483776,
2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,2147483758,
2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,2034237493,
2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,2021654588,
2021654589,2042626110,2147483775,2147483787,2147483790,1073788984,805306505,
0,1074202660,805306532,0,0,2852126732,11337781,65539,2155890710,2147483715,2147489856,
268435456,604015275,0,2147483704,268435456,1073758472,805306424,604016179,0,
268435456,604001530,0,4026531840,0,2852126729,11403317,65538,2151690262,2147483712,
2147483704,268435456,1073758472,805306424,604015291,0,268435456,604001046,0,
4026531840,0,2852192259,6094901,1,2147483670,268435456,604015299,0,4026531840,
2852126726,11468853,131078,2164260928,2151677969,2160066661,2147489815,2147483764,
2147483765,604015315,603991617,0,268435456,604015751,0,4026531840,2852192259,
6160437,1,2147483671,268435456,604015323,0,4026531840,2852192259,9568309,1,2147483665,
268435456,604015331,0,4026531840,2852126726,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,604015415,603994606,0,268435456,604015587,0,4026531840,
2852192259,9764917,1,2147483667,268435456,604015423,0,4026531840,2852126725,
37683253,196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,
2160066582,2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,
1073785672,805306505,0,604015447,0,604015511,0,0,2785017860,37748789,327736,
2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,
2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,
2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,
2264924213,2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,
2147483708,2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,
2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,
2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
604000930,0,603997609,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483785,2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,
2147483664,2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,
2147483762,2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,
2147483772,2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,
2147483774,2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,
2147483756,2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,
2038431795,2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,
2021654586,2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,
2147483790,1073785672,805306505,0,1073802568,805306532,0,0,2852126725,37683253,
196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,2160066582,
2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,1073787200,
805306505,0,604015611,0,604015675,0,0,2785017860,37748789,327736,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,
2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,
2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,
2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,2147483708,
2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,2214592608,
2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,
2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,
2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,604000933,
0,603997612,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483785,
2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,2147483664,
2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,2147483762,
2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,2147483772,
2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,2147483774,
2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,2147483756,
2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,2038431795,
2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,2021654586,
2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,2147483790,
1073787200,805306505,0,1073804608,805306532,0,0,2852192259,9568309,1,2147483665,
268435456,604015759,0,4026531840,2852126726,11534389,393290,2432696384,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483745,2394947594,2394947659,2147483748,2147483752,2386558990,2147483753,
2147483755,2147483665,2147483666,2369787923,2147483759,2147483669,2361393174,
2147483760,2147483761,2147483762,2147483763,2147483803,2147483765,2147483741,
2147483678,2147483679,2147483744,2046820385,2147483746,2147483747,2046820388,
2147483749,2147483686,2147483769,2034237480,2038431785,2147483754,2034237483,
2147483756,2147483770,2147483758,2034237487,2042626096,2042626097,2042626098,
2042626099,2147483700,2042626101,2147483702,2147483703,2147483704,2071986233,
2092957754,2168455227,2168455228,2168455229,2168455230,2147483775,2147483771,
2147483772,2147483773,2147483774,2147483776,2147483786,2147483787,2147483790,
2147483795,2147483798,604015843,603994606,0,268435456,604016015,0,4026531840,
2852192259,9764917,1,2147483667,268435456,604015851,0,4026531840,2852126725,
37683253,196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,
2160066582,2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,
1073786944,805306505,0,604015875,0,604015939,0,0,2785017860,37748789,327736,
2294284352,2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,
2311061553,2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,
2269118478,2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,
2264924213,2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,
2147483708,2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,
2214592608,2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,
2147483755,2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,
2147483765,2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,
604001040,0,603997719,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,
2147483778,2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,
2147483785,2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,
2147483664,2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,
2147483762,2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,
2147483772,2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,
2147483774,2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,
2147483756,2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,
2038431795,2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,
2021654586,2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,
2147483790,1073786944,805306505,0,1073804352,805306532,0,0,2852126725,37683253,
196621,2189426705,2143289345,2172649482,2185232403,2147483748,2172649565,2160066582,
2147483679,2147483666,2147483678,2147489825,2147483749,2147483795,1073788728,
805306505,0,604016039,0,604016103,0,0,2785017860,37748789,327736,2294284352,
2294284321,2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,
2277507112,2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,
2269118511,2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,
2109734934,2147483703,2147483704,2147483705,2147483706,2147483707,2147483708,
2160070685,2160066590,2227175455,2155872317,2147483710,2147483741,2214592608,
2147483745,2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,
2189426798,2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,
2147483775,2147483776,2147483780,2147483790,2147483795,2147483798,604001043,
0,603997722,0,4026531840,2852126723,37814325,393282,2311061568,2147483777,2147483778,
2147483779,2147483780,2147483653,2147483782,2147483783,2147483784,2147483785,
2294284362,2369781835,2147483746,2147483752,2361393166,2147483753,2147483664,
2147483755,2147483759,2147483760,2147483761,2147483669,2147483798,2147483762,
2147483672,2147483763,2147483765,2147483803,2147483770,2147483771,2147483772,
2147483773,2147483744,2147483745,2055208994,2147483747,2147483684,2147483774,
2147483686,2147483776,2034237480,2038431785,2147483754,2038431787,2147483756,
2147483786,2147483758,2025848879,2025848880,2025848881,2034237490,2038431795,
2147483700,2034237493,2147483702,2147483703,2147483704,2147483705,2021654586,
2021654587,2021654588,2021654589,2042626110,2147483775,2147483787,2147483790,
1073788728,805306505,0,1074202636,805306532,0,0,2852192259,6094901,1,2147483670,
268435456,604016187,0,4026531840,2852126726,11468853,131078,2164260928,2151677969,
2160066661,2147489815,2147483764,2147483765,604016203,603991617,0,268435456,
604016639,0,4026531840,2852192259,6160437,1,2147483671,268435456,604016211,0,
4026531840,2852192259,9568309,1,2147483665,268435456,604016219,0,4026531840,
2852126726,11534389,393290,2432696384,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,2394947659,
2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,2147483666,
2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,2147483762,
2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,2147483744,
2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,2147483769,
2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,2147483758,
2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,2042626101,
2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,2168455228,
2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,2147483774,
2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,604016303,
603994606,0,268435456,604016475,0,4026531840,2852192259,9764917,1,2147483667,
268435456,604016311,0,4026531840,2852126725,37683253,196621,2189426705,2143289345,
2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,2147483666,
2147483678,2147489825,2147483749,2147483795,1073786688,805306505,0,604016335,
0,604016399,0,0,2785017860,37748789,327736,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,
2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,
2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,2147483703,
2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,2160066590,
2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,604001414,0,603997861,0,4026531840,
2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,2369781835,
2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,2147483759,
2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,2147483763,
2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,2147483744,
2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,2147483776,
2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,2147483758,
2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,2034237493,
2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,2021654588,
2021654589,2042626110,2147483775,2147483787,2147483790,1073786688,805306505,
0,1073803840,805306532,0,0,2852126725,37683253,196621,2189426705,2143289345,
2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,2147483666,
2147483678,2147489825,2147483749,2147483795,1073788472,805306505,0,604016499,
0,604016563,0,0,2785017860,37748789,327736,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,
2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,
2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,2147483703,
2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,2160066590,
2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,604001417,0,603997864,0,4026531840,
2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,2369781835,
2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,2147483759,
2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,2147483763,
2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,2147483744,
2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,2147483776,
2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,2147483758,
2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,2034237493,
2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,2021654588,
2021654589,2042626110,2147483775,2147483787,2147483790,1073788472,805306505,
0,1073806904,805306532,0,0,2852192259,9568309,1,2147483665,268435456,604016647,
0,4026531840,2852126726,11534389,393290,2432696384,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483745,2394947594,
2394947659,2147483748,2147483752,2386558990,2147483753,2147483755,2147483665,
2147483666,2369787923,2147483759,2147483669,2361393174,2147483760,2147483761,
2147483762,2147483763,2147483803,2147483765,2147483741,2147483678,2147483679,
2147483744,2046820385,2147483746,2147483747,2046820388,2147483749,2147483686,
2147483769,2034237480,2038431785,2147483754,2034237483,2147483756,2147483770,
2147483758,2034237487,2042626096,2042626097,2042626098,2042626099,2147483700,
2042626101,2147483702,2147483703,2147483704,2071986233,2092957754,2168455227,
2168455228,2168455229,2168455230,2147483775,2147483771,2147483772,2147483773,
2147483774,2147483776,2147483786,2147483787,2147483790,2147483795,2147483798,
604016731,603994606,0,268435456,604016903,0,4026531840,2852192259,9764917,1,
2147483667,268435456,604016739,0,4026531840,2852126725,37683253,196621,2189426705,
2143289345,2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,
2147483666,2147483678,2147489825,2147483749,2147483795,1073788216,805306505,
0,604016763,0,604016827,0,0,2785017860,37748789,327736,2294284352,2294284321,
2147483746,2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,
2277507113,2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,
2269118512,2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,
2147483703,2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,
2160066590,2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,
2210398308,2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,
2147483759,2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,
2147483776,2147483780,2147483790,2147483795,2147483798,604001524,0,603997971,
0,4026531840,2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,
2147483780,2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,
2369781835,2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,
2147483759,2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,
2147483763,2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,
2147483744,2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,
2147483776,2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,
2147483758,2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,
2034237493,2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,
2021654588,2021654589,2042626110,2147483775,2147483787,2147483790,1073788216,
805306505,0,1073806648,805306532,0,0,2852126725,37683253,196621,2189426705,2143289345,
2172649482,2185232403,2147483748,2172649565,2160066582,2147483679,2147483666,
2147483678,2147489825,2147483749,2147483795,1073789232,805306505,0,604016927,
0,604016991,0,0,2785017860,37748789,327736,2294284352,2294284321,2147483746,
2147483747,2285895716,2285895685,2147483686,2311061553,2277507112,2277507113,
2277507082,2277507115,2147483756,2323644470,2269118478,2269118511,2269118512,
2105540625,2269118514,2269118515,2147483700,2264924213,2109734934,2147483703,
2147483704,2147483705,2147483706,2147483707,2147483708,2160070685,2160066590,
2227175455,2155872317,2147483710,2147483741,2214592608,2147483745,2210398308,
2147483749,2147483752,2147483753,2147483754,2147483755,2189426798,2147483759,
2147483760,2147483761,2147483762,2172649587,2147483765,2147483775,2147483776,
2147483780,2147483790,2147483795,2147483798,604001527,0,603997974,0,4026531840,
2852126723,37814325,393282,2311061568,2147483777,2147483778,2147483779,2147483780,
2147483653,2147483782,2147483783,2147483784,2147483785,2294284362,2369781835,
2147483746,2147483752,2361393166,2147483753,2147483664,2147483755,2147483759,
2147483760,2147483761,2147483669,2147483798,2147483762,2147483672,2147483763,
2147483765,2147483803,2147483770,2147483771,2147483772,2147483773,2147483744,
2147483745,2055208994,2147483747,2147483684,2147483774,2147483686,2147483776,
2034237480,2038431785,2147483754,2038431787,2147483756,2147483786,2147483758,
2025848879,2025848880,2025848881,2034237490,2038431795,2147483700,2034237493,
2147483702,2147483703,2147483704,2147483705,2021654586,2021654587,2021654588,
2021654589,2042626110,2147483775,2147483787,2147483790,1073789232,805306505,
0,1074137156,805306532,0,0,2768240764,0,393288,2286110784,2147692609,2416121922,
2277703747,2277697604,2290274373,2290268230,2294456391,2294450248,2294444105,
2294437962,2298626123,2298619980,2147547213,2147618894,2147559503,2147612752,
2147612753,2185308178,2147584083,2147606612,2147600469,2147592278,2147584087,
2252441688,2252441689,2147559514,2147612754,2147571835,2239840380,2147559518,
2256617598,2281795711,2281783424,2285977731,2285977732,2147559588,2147559589,
2147559590,2273394821,2273394822,2147559593,2269200519,2147735688,2147571849,
2147565706,2147612718,2147565707,2147565708,2147565720,2147565721,2147541180,
2147553460,2147565621,2147547318,2147547319,2147535037,2147535038,2147729466,
2017486907,2017699900,2126745661,2017687614,2017681471,2147535039,2147528896,
2147522754,2147516611,2147510468,2147510469,2147492038,2147483847,1073809836,
805306566,3221225550,0,2583691420,7733301,65537,4026531840,268435456,604017067,
603983385,604006139,0,805306426,3221225562,0,604017067,603983388,0,805306440,
3221225568,0,604017067,603983401,0,805306556,3221225574,0,604017067,603983416,
0,805306444,3221225580,0,604017067,603983469,0,805306445,3221225586,0,805306491,
3221225589,0,805306504,3221225592,0,604017067,603983481,0,1073766408,805306450,
3221225599,0,1073766664,805306450,3221225603,0,604017067,603983509,0,604017067,
603983555,0,805306447,3221225612,0,604017067,603983570,0,604017067,603983583,
0,805306442,3221225621,0,604017067,603983636,0,604017067,603983679,0,805306439,
3221225630,0,805306438,3221225633,0,604017067,603983692,0,604017067,603983707,
0,604017067,603983722,0,604017067,603983737,0,604017067,603983770,0,604017067,
603983787,0,604017067,603983800,0,604017067,603983813,0,604017067,603983832,
0,604017067,603983845,0,604017067,603983858,0,805306495,3221225669,0,0,4026531840,
1879048194,37879808,19,1,268435457,805306418,0,1879048194,37945344,19,18,1099300863,
805306597,0
]);

function isTokenActive(token_id, row){
    var index  = ( row  * 7 ) + ( token_id  >> 5 );;
    var shift  = 1 << ( 31 & ( token_id ) );;
    return ( token_lookup[index] & shift ) != 0
}

function pre_scan(l, token){
    var tk_length = l.token_length;;
    var bt_length = l.byte_length;;
    var type_cache = l._type;;
    scan( l, token, 0 );
    var type_out = l._type;;
    l._type  = type_cache;
    l.token_length  = tk_length;
    l.byte_length  = bt_length;
    return type_out  > 0
}

function scan_core(l, tk_row){
    switch(( l.get_byte_at( l.byte_offset ) & 127 )){
    case 33: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 33 ){
            if( isTokenActive( 43, tk_row ) ){
                l.setToken( 43, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( isTokenActive( 183, tk_row ) && 8 == compare( l, l.byte_offset  + 2, 32, 8, token_sequence_lookup ) ){
                    l.setToken( 183, 10, 10 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 83, tk_row ) ){
                    l.setToken( 83, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 85, tk_row ) ){
                        l.setToken( 85, 3, 3 )
                    }
                }
            }
        }
    }
    break;
    case 34: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 34 ){
            if( isTokenActive( 41, tk_row ) ){
                l.setToken( 41, 1, 1 )
            };
            if( isTokenActive( 42, tk_row ) && token_production( l, 67138626, 24, 42, 2, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 42, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            }
        }
    }
    break;
    case 35: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 35 ){
            if( isTokenActive( 145, tk_row ) ){
                l.setToken( 145, 1, 1 )
            }
        }
    }
    break;
    case 36: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 36 ){
            if( isTokenActive( 66, tk_row ) ){
                l.setToken( 66, 1, 1 )
            };
            if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 123 ){
                if( isTokenActive( 149, tk_row ) ){
                    l.setToken( 149, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 178, tk_row ) ){
                    l.setToken( 178, 2, 2 )
                }
            }
        }
    }
    break;
    case 37: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 37 ){
            if( isTokenActive( 94, tk_row ) ){
                l.setToken( 94, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 159, tk_row ) ){
                    l.setToken( 159, 2, 2 )
                }
            }
        }
    }
    break;
    case 38: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 38 ){
            if( isTokenActive( 81, tk_row ) ){
                l.setToken( 81, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 38 ){
                if( isTokenActive( 78, tk_row ) ){
                    l.setToken( 78, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 170, tk_row ) ){
                        l.setToken( 170, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 165, tk_row ) ){
                    l.setToken( 165, 2, 2 )
                }
            }
        }
    }
    break;
    case 39: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 39 ){
            if( isTokenActive( 40, tk_row ) ){
                l.setToken( 40, 1, 1 )
            };
            if( isTokenActive( 42, tk_row ) && token_production( l, 67138626, 24, 42, 2, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 42, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            }
        }
    }
    break;
    case 40: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 40 ){
            if( isTokenActive( 22, tk_row ) ){
                l.setToken( 22, 1, 1 )
            }
        }
    }
    break;
    case 41: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 41 ){
            if( isTokenActive( 23, tk_row ) ){
                l.setToken( 23, 1, 1 )
            }
        }
    }
    break;
    case 42: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 42 ){
            if( isTokenActive( 67, tk_row ) ){
                l.setToken( 67, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 42 ){
                if( isTokenActive( 95, tk_row ) ){
                    l.setToken( 95, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 168, tk_row ) ){
                        l.setToken( 168, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 26, tk_row ) ){
                    l.setToken( 26, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 157, tk_row ) ){
                    l.setToken( 157, 2, 2 )
                }
            }
        }
    }
    break;
    case 43: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 43 ){
            if( isTokenActive( 93, tk_row ) ){
                l.setToken( 93, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 43 ){
                if( isTokenActive( 100, tk_row ) ){
                    l.setToken( 100, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 160, tk_row ) ){
                    l.setToken( 160, 2, 2 )
                }
            }
        }
    }
    break;
    case 44: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 44 ){
            if( isTokenActive( 63, tk_row ) ){
                l.setToken( 63, 1, 1 )
            }
        }
    }
    break;
    case 45: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 45 ){
            if( isTokenActive( 31, tk_row ) ){
                l.setToken( 31, 1, 1 )
            };
            if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 45 ){
                if( isTokenActive( 30, tk_row ) ){
                    l.setToken( 30, 2, 2 )
                };
                if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 161, tk_row ) ){
                    l.setToken( 161, 2, 2 )
                }
            }
        }
    }
    break;
    case 46: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 46 ){
            if( isTokenActive( 103, tk_row ) ){
                l.setToken( 103, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 116, tk_row ) && l.get_byte_at( l.byte_offset  + 2 ) == 46 ){
                    l.setToken( 116, 3, 3 )
                }
            }
        }
    }
    break;
    case 47: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 47 ){
            if( isTokenActive( 10, tk_row ) ){
                l.setToken( 10, 1, 1 )
            };
            if( isTokenActive( 71, tk_row ) && token_production( l, 67139178, 10, 71, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 71, l.byte_length, l.token_length )
            } else if( isTokenActive( 220, tk_row ) && token_production( l, 67140770, 11, 220, 65536, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 220, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 42 ){
                if( isTokenActive( 25, tk_row ) ){
                    l.setToken( 25, 2, 2 )
                };
                if( isTokenActive( 71, tk_row ) && token_production( l, 67139178, 10, 71, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 71, l.byte_length, l.token_length )
                } else if( isTokenActive( 220, tk_row ) && token_production( l, 67140770, 11, 220, 65536, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 220, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 27, tk_row ) ){
                    l.setToken( 27, 2, 2 )
                };
                if( isTokenActive( 71, tk_row ) && token_production( l, 67139178, 10, 71, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 71, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 35, tk_row ) ){
                    l.setToken( 35, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 158, tk_row ) ){
                    l.setToken( 158, 2, 2 )
                }
            }
        }
    }
    break;
    case 48: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 48 ){
            if( isTokenActive( 209, tk_row ) ){
                l.setToken( 209, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 192, tk_row ) && token_production( l, 67140229, 272, 192, 4096, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 192, l.byte_length, l.token_length )
            } else if( isTokenActive( 193, tk_row ) && token_production( l, 67140272, 274, 193, 8192, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 193, l.byte_length, l.token_length )
            } else if( isTokenActive( 194, tk_row ) && token_production( l, 67140583, 276, 194, 16384, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 194, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 88 ){
                if( isTokenActive( 110, tk_row ) ){
                    l.setToken( 110, 2, 2 )
                };
                if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 120 ){
                if( isTokenActive( 111, tk_row ) ){
                    l.setToken( 111, 2, 2 )
                };
                if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 192, tk_row ) && token_production( l, 67140229, 272, 192, 4096, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 192, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 79 ){
                if( isTokenActive( 112, tk_row ) ){
                    l.setToken( 112, 2, 2 )
                };
                if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 194, tk_row ) && token_production( l, 67140583, 276, 194, 16384, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 194, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 113, tk_row ) ){
                    l.setToken( 113, 2, 2 )
                };
                if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 194, tk_row ) && token_production( l, 67140583, 276, 194, 16384, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 194, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 66 ){
                if( isTokenActive( 114, tk_row ) ){
                    l.setToken( 114, 2, 2 )
                };
                if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 98 ){
                if( isTokenActive( 115, tk_row ) ){
                    l.setToken( 115, 2, 2 )
                };
                if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 193, tk_row ) && token_production( l, 67140272, 274, 193, 8192, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 193, l.byte_length, l.token_length )
                }
            }
        }
    }
    break;
    case 49: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 49 ){
            if( isTokenActive( 210, tk_row ) ){
                l.setToken( 210, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 50: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 50 ){
            if( isTokenActive( 211, tk_row ) ){
                l.setToken( 211, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 51: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 51 ){
            if( isTokenActive( 212, tk_row ) ){
                l.setToken( 212, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 52: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 52 ){
            if( isTokenActive( 213, tk_row ) ){
                l.setToken( 213, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 53: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 53 ){
            if( isTokenActive( 214, tk_row ) ){
                l.setToken( 214, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 54: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 54 ){
            if( isTokenActive( 215, tk_row ) ){
                l.setToken( 215, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 55: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 55 ){
            if( isTokenActive( 208, tk_row ) ){
                l.setToken( 208, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 189, tk_row ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 189, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 58: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 58 ){
            if( isTokenActive( 32, tk_row ) ){
                l.setToken( 32, 1, 1 )
            }
        }
    }
    break;
    case 59: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 59 ){
            if( isTokenActive( 18, tk_row ) ){
                l.setToken( 18, 1, 1 )
            }
        }
    }
    break;
    case 60: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 60 ){
            if( isTokenActive( 33, tk_row ) ){
                l.setToken( 33, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 109 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 112 ){
                        if( 3 == compare( l, l.byte_offset  + 4, 4, 3, token_sequence_lookup ) ){
                            if( isTokenActive( 9, tk_row ) ){
                                l.setToken( 9, 7, 7 )
                            };
                            if( l.get_byte_at( l.byte_offset  + 7 ) == 62 ){
                                if( isTokenActive( 12, tk_row ) ){
                                    l.setToken( 12, 8, 8 )
                                }
                            }
                        }
                    } else if( l.get_byte_at( l.byte_offset  + 3 ) == 103 ){
                        if( isTokenActive( 55, tk_row ) ){
                            l.setToken( 55, 4, 4 )
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 110 ){
                    if( isTokenActive( 47, tk_row ) && 3 == compare( l, l.byte_offset  + 3, 332, 3, token_sequence_lookup ) ){
                        l.setToken( 47, 6, 6 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 99 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 111 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 109 ){
                        if( isTokenActive( 52, tk_row ) && 4 == compare( l, l.byte_offset  + 4, 212, 4, token_sequence_lookup ) ){
                            l.setToken( 52, 8, 8 )
                        }
                    } else if( l.get_byte_at( l.byte_offset  + 3 ) == 108 ){
                        if( isTokenActive( 51, tk_row ) ){
                            l.setToken( 51, 4, 4 )
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 107 ){
                if( isTokenActive( 56, tk_row ) && 5 == compare( l, l.byte_offset  + 2, 305, 5, token_sequence_lookup ) ){
                    l.setToken( 56, 7, 7 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 115 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 111 ){
                    if( isTokenActive( 60, tk_row ) && 4 == compare( l, l.byte_offset  + 3, 313, 4, token_sequence_lookup ) ){
                        l.setToken( 60, 7, 7 )
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 38, tk_row ) && 3 == compare( l, l.byte_offset  + 3, 326, 3, token_sequence_lookup ) ){
                        l.setToken( 38, 6, 6 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 83 ){
                if( isTokenActive( 36, tk_row ) && 4 == compare( l, l.byte_offset  + 2, 319, 4, token_sequence_lookup ) ){
                    l.setToken( 36, 6, 6 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( isTokenActive( 53, tk_row ) && 4 == compare( l, l.byte_offset  + 2, 337, 4, token_sequence_lookup ) ){
                    l.setToken( 53, 6, 6 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 112 ){
                if( isTokenActive( 59, tk_row ) && 4 == compare( l, l.byte_offset  + 2, 343, 4, token_sequence_lookup ) ){
                    l.setToken( 59, 6, 6 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 116 ){
                if( isTokenActive( 61, tk_row ) && 4 == compare( l, l.byte_offset  + 2, 349, 4, token_sequence_lookup ) ){
                    l.setToken( 61, 6, 6 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( isTokenActive( 48, tk_row ) && 3 == compare( l, l.byte_offset  + 2, 355, 3, token_sequence_lookup ) ){
                    l.setToken( 48, 5, 5 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 98 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 97 ){
                    if( isTokenActive( 49, tk_row ) && 2 == compare( l, l.byte_offset  + 3, 361, 2, token_sequence_lookup ) ){
                        l.setToken( 49, 5, 5 )
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 50, tk_row ) ){
                        l.setToken( 50, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 108 ){
                if( isTokenActive( 57, tk_row ) && 3 == compare( l, l.byte_offset  + 2, 365, 3, token_sequence_lookup ) ){
                    l.setToken( 57, 5, 5 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 109 ){
                if( isTokenActive( 58, tk_row ) && 3 == compare( l, l.byte_offset  + 2, 370, 3, token_sequence_lookup ) ){
                    l.setToken( 58, 5, 5 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 119 ){
                if( isTokenActive( 62, tk_row ) && 2 == compare( l, l.byte_offset  + 2, 383, 2, token_sequence_lookup ) ){
                    l.setToken( 62, 4, 4 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 104 ){
                if( isTokenActive( 54, tk_row ) && l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    l.setToken( 54, 3, 3 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 60 ){
                if( isTokenActive( 90, tk_row ) ){
                    l.setToken( 90, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 162, tk_row ) ){
                        l.setToken( 162, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 33 ){
                if( isTokenActive( 28, tk_row ) ){
                    l.setToken( 28, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 34, tk_row ) ){
                    l.setToken( 34, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 86, tk_row ) ){
                    l.setToken( 86, 2, 2 )
                }
            }
        }
    }
    break;
    case 61: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 61 ){
            if( isTokenActive( 15, tk_row ) ){
                l.setToken( 15, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 82, tk_row ) ){
                    l.setToken( 82, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 84, tk_row ) ){
                        l.setToken( 84, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 156, tk_row ) ){
                    l.setToken( 156, 2, 2 )
                }
            }
        }
    }
    break;
    case 62: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 62 ){
            if( isTokenActive( 11, tk_row ) ){
                l.setToken( 11, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 91, tk_row ) ){
                    l.setToken( 91, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 62 ){
                    if( isTokenActive( 92, tk_row ) ){
                        l.setToken( 92, 3, 3 )
                    };
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 61 ){
                        if( isTokenActive( 164, tk_row ) ){
                            l.setToken( 164, 4, 4 )
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 163, tk_row ) ){
                        l.setToken( 163, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 87, tk_row ) ){
                    l.setToken( 87, 2, 2 )
                }
            }
        }
    }
    break;
    case 63: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 63 ){
            if( isTokenActive( 76, tk_row ) ){
                l.setToken( 76, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 63 ){
                if( isTokenActive( 154, tk_row ) ){
                    l.setToken( 154, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 169, tk_row ) ){
                        l.setToken( 169, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 153, tk_row ) ){
                    l.setToken( 153, 2, 2 )
                }
            }
        }
    }
    break;
    case 64: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 64 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 107 ){
                if( isTokenActive( 186, tk_row ) && 8 == compare( l, l.byte_offset  + 2, 74, 8, token_sequence_lookup ) ){
                    l.setToken( 186, 10, 10 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 188, tk_row ) && 7 == compare( l, l.byte_offset  + 2, 239, 7, token_sequence_lookup ) ){
                    l.setToken( 188, 9, 9 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( isTokenActive( 172, tk_row ) && 5 == compare( l, l.byte_offset  + 2, 409, 5, token_sequence_lookup ) ){
                    l.setToken( 172, 7, 7 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 109 ){
                if( isTokenActive( 185, tk_row ) && 4 == compare( l, l.byte_offset  + 2, 416, 4, token_sequence_lookup ) ){
                    l.setToken( 185, 6, 6 )
                }
            }
        }
    }
    break;
    case 65: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 65 ){
            if( isTokenActive( 204, tk_row ) ){
                l.setToken( 204, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 66: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 66 ){
            if( isTokenActive( 205, tk_row ) ){
                l.setToken( 205, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 67: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 67 ){
            if( isTokenActive( 206, tk_row ) ){
                l.setToken( 206, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 68: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 68 ){
            if( isTokenActive( 207, tk_row ) ){
                l.setToken( 207, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 69: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 69 ){
            if( isTokenActive( 190, tk_row ) ){
                l.setToken( 190, 1, 1 )
            };
            if( isTokenActive( 196, tk_row ) ){
                l.setToken( 196, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 70: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 70 ){
            if( isTokenActive( 198, tk_row ) ){
                l.setToken( 198, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 83: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 83 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 67 ){
                if( 4 == compare( l, l.byte_offset  + 2, 109, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 44, tk_row ) ){
                        l.setToken( 44, 6, 6 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 84 ){
                if( 3 == compare( l, l.byte_offset  + 2, 261, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 37, tk_row ) ){
                        l.setToken( 37, 5, 5 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 91: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 91 ){
            if( isTokenActive( 101, tk_row ) ){
                l.setToken( 101, 1, 1 )
            }
        }
    }
    break;
    case 92: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 92 ){
            if( isTokenActive( 73, tk_row ) ){
                l.setToken( 73, 1, 1 )
            };
            if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 216, tk_row ) ){
                    l.setToken( 216, 2, 2 )
                }
            }
        }
    }
    break;
    case 93: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 93 ){
            if( isTokenActive( 102, tk_row ) ){
                l.setToken( 102, 1, 1 )
            }
        }
    }
    break;
    case 94: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 94 ){
            if( isTokenActive( 80, tk_row ) ){
                l.setToken( 80, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 166, tk_row ) ){
                    l.setToken( 166, 2, 2 )
                }
            }
        }
    }
    break;
    case 95: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 95 ){
            if( isTokenActive( 65, tk_row ) ){
                l.setToken( 65, 1, 1 )
            };
            if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            }
        }
    }
    break;
    case 96: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 96 ){
            if( isTokenActive( 147, tk_row ) ){
                l.setToken( 147, 1, 1 )
            }
        }
    }
    break;
    case 97: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 97 ){
            if( isTokenActive( 199, tk_row ) ){
                l.setToken( 199, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 68, tk_row ) ){
                    l.setToken( 68, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 126, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 127, tk_row ) ){
                            l.setToken( 127, 5, 5 )
                        };
                        if( isTokenActive( 118, tk_row ) ){
                            l.setToken( 118, 5, 5 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 119 ){
                if( 3 == compare( l, l.byte_offset  + 2, 272, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 132, tk_row ) ){
                        l.setToken( 132, 5, 5 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 110 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 100 ){
                    if( isTokenActive( 218, tk_row ) ){
                        l.setToken( 218, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 98: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 98 ){
            if( isTokenActive( 200, tk_row ) ){
                l.setToken( 200, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( 3 == compare( l, l.byte_offset  + 2, 163, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 123, tk_row ) ){
                        l.setToken( 123, 5, 5 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 99: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 99 ){
            if( isTokenActive( 201, tk_row ) ){
                l.setToken( 201, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 110 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 116 ){
                        if( 4 == compare( l, l.byte_offset  + 4, 157, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 122, tk_row ) ){
                                l.setToken( 122, 8, 8 )
                            };
                            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 29, l.byte_length, l.token_length )
                            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 64, l.byte_length, l.token_length )
                            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 70, l.byte_length, l.token_length )
                            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 72, l.byte_length, l.token_length )
                            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 146, l.byte_length, l.token_length )
                            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 148, l.byte_length, l.token_length )
                            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 176, l.byte_length, l.token_length )
                            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 181, l.byte_length, l.token_length )
                            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 182, l.byte_length, l.token_length )
                            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 195, l.byte_length, l.token_length )
                            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                                l._type  = 3
                            }
                        }
                    } else if( l.get_byte_at( l.byte_offset  + 3 ) == 115 ){
                        if( l.get_byte_at( l.byte_offset  + 4 ) == 116 ){
                            if( isTokenActive( 134, tk_row ) ){
                                l.setToken( 134, 5, 5 )
                            };
                            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 29, l.byte_length, l.token_length )
                            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 64, l.byte_length, l.token_length )
                            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 70, l.byte_length, l.token_length )
                            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 72, l.byte_length, l.token_length )
                            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 146, l.byte_length, l.token_length )
                            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 148, l.byte_length, l.token_length )
                            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 176, l.byte_length, l.token_length )
                            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 181, l.byte_length, l.token_length )
                            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 182, l.byte_length, l.token_length )
                            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 195, l.byte_length, l.token_length )
                            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                                l._type  = 3
                            }
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 490, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 140, tk_row ) ){
                            l.setToken( 140, 5, 5 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 115 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 137, tk_row ) ){
                            l.setToken( 137, 4, 4 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 108 ){
                if( 3 == compare( l, l.byte_offset  + 2, 494, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 142, tk_row ) ){
                        l.setToken( 142, 5, 5 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 100: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 100 ){
            if( isTokenActive( 202, tk_row ) ){
                l.setToken( 202, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 98 ){
                    if( 5 == compare( l, l.byte_offset  + 3, 131, 5, token_sequence_lookup ) ){
                        if( isTokenActive( 126, tk_row ) ){
                            l.setToken( 126, 8, 8 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 102 ){
                    if( 4 == compare( l, l.byte_offset  + 3, 278, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 74, tk_row ) ){
                            l.setToken( 74, 7, 7 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 7 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 108 ){
                    if( 3 == compare( l, l.byte_offset  + 3, 461, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 96, tk_row ) ){
                            l.setToken( 96, 6, 6 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 129, tk_row ) ){
                    l.setToken( 129, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 101: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 101 ){
            if( isTokenActive( 191, tk_row ) ){
                l.setToken( 191, 1, 1 )
            };
            if( isTokenActive( 197, tk_row ) ){
                l.setToken( 197, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 120 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( 4 == compare( l, l.byte_offset  + 3, 103, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 143, tk_row ) ){
                            l.setToken( 143, 7, 7 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 7 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 112 ){
                    if( 3 == compare( l, l.byte_offset  + 3, 256, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 16, tk_row ) ){
                            l.setToken( 16, 6, 6 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 108 ){
                if( 2 == compare( l, l.byte_offset  + 2, 436, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 24, tk_row ) ){
                        l.setToken( 24, 4, 4 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 102: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 102 ){
            if( isTokenActive( 13, tk_row ) ){
                l.setToken( 13, 1, 1 )
            };
            if( isTokenActive( 203, tk_row ) ){
                l.setToken( 203, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 117 ){
                if( 6 == compare( l, l.byte_offset  + 2, 84, 6, token_sequence_lookup ) ){
                    if( isTokenActive( 128, tk_row ) ){
                        l.setToken( 128, 8, 8 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( 5 == compare( l, l.byte_offset  + 2, 248, 5, token_sequence_lookup ) ){
                    if( isTokenActive( 141, tk_row ) ){
                        l.setToken( 141, 7, 7 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 7 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( 3 == compare( l, l.byte_offset  + 2, 422, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 107, tk_row ) ){
                        l.setToken( 107, 5, 5 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( 2 == compare( l, l.byte_offset  + 2, 427, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 69, tk_row ) ){
                        l.setToken( 69, 4, 4 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 131, tk_row ) ){
                        l.setToken( 131, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 103: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 103 ){
            if( 2 == compare( l, l.byte_offset  + 1, 151, 2, token_sequence_lookup ) ){
                if( isTokenActive( 119, tk_row ) ){
                    l.setToken( 119, 3, 3 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 105: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 105 ){
            if( isTokenActive( 179, tk_row ) ){
                l.setToken( 179, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 110 ){
                if( isTokenActive( 89, tk_row ) ){
                    l.setToken( 89, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 115 ){
                    if( 7 == compare( l, l.byte_offset  + 3, 93, 7, token_sequence_lookup ) ){
                        if( isTokenActive( 88, tk_row ) ){
                            l.setToken( 88, 10, 10 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 10 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 109 ){
                if( 4 == compare( l, l.byte_offset  + 2, 3, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 14, tk_row ) ){
                        l.setToken( 14, 6, 6 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 21, tk_row ) ){
                    l.setToken( 21, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 106: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 106 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 45, tk_row ) ){
                    l.setToken( 45, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 108: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 108 ){
            if( 2 == compare( l, l.byte_offset  + 1, 182, 2, token_sequence_lookup ) ){
                if( isTokenActive( 135, tk_row ) ){
                    l.setToken( 135, 3, 3 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 109: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 109 ){
            if( 3 == compare( l, l.byte_offset  + 1, 185, 3, token_sequence_lookup ) ){
                if( isTokenActive( 152, tk_row ) ){
                    l.setToken( 152, 4, 4 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 110: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 110 ){
            if( isTokenActive( 109, tk_row ) ){
                l.setToken( 109, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 117 ){
                if( 2 == compare( l, l.byte_offset  + 2, 148, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 108, tk_row ) ){
                        l.setToken( 108, 4, 4 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 119 ){
                    if( isTokenActive( 104, tk_row ) ){
                        l.setToken( 104, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 174, tk_row ) ){
                        l.setToken( 174, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 111: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 111 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 110 ){
                if( 2 == compare( l, l.byte_offset  + 2, 179, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 184, tk_row ) ){
                        l.setToken( 184, 4, 4 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 133, tk_row ) ){
                    l.setToken( 133, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( isTokenActive( 219, tk_row ) ){
                    l.setToken( 219, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 114: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 114 ){
            if( 5 == compare( l, l.byte_offset  + 1, 167, 5, token_sequence_lookup ) ){
                if( isTokenActive( 125, tk_row ) ){
                    l.setToken( 125, 6, 6 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 115: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 115 ){
            if( isTokenActive( 180, tk_row ) ){
                l.setToken( 180, 1, 1 )
            };
            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 29, l.byte_length, l.token_length )
            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 64, l.byte_length, l.token_length )
            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 70, l.byte_length, l.token_length )
            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 72, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 148, l.byte_length, l.token_length )
            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 176, l.byte_length, l.token_length )
            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 181, l.byte_length, l.token_length )
            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 182, l.byte_length, l.token_length )
            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 195, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 117 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 112 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 112 ){
                        if( 4 == compare( l, l.byte_offset  + 4, 117, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 217, tk_row ) ){
                                l.setToken( 217, 8, 8 )
                            };
                            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 29, l.byte_length, l.token_length )
                            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 64, l.byte_length, l.token_length )
                            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 70, l.byte_length, l.token_length )
                            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 72, l.byte_length, l.token_length )
                            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 146, l.byte_length, l.token_length )
                            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 148, l.byte_length, l.token_length )
                            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 176, l.byte_length, l.token_length )
                            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 181, l.byte_length, l.token_length )
                            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 182, l.byte_length, l.token_length )
                            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 195, l.byte_length, l.token_length )
                            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                                l._type  = 3
                            }
                        }
                    } else if( l.get_byte_at( l.byte_offset  + 3 ) == 101 ){
                        if( l.get_byte_at( l.byte_offset  + 4 ) == 114 ){
                            if( isTokenActive( 150, tk_row ) ){
                                l.setToken( 150, 5, 5 )
                            };
                            if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 29, l.byte_length, l.token_length )
                            } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 64, l.byte_length, l.token_length )
                            } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 70, l.byte_length, l.token_length )
                            } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 72, l.byte_length, l.token_length )
                            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 146, l.byte_length, l.token_length )
                            } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 148, l.byte_length, l.token_length )
                            } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 176, l.byte_length, l.token_length )
                            } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 181, l.byte_length, l.token_length )
                            } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 182, l.byte_length, l.token_length )
                            } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 195, l.byte_length, l.token_length )
                            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                                l._type  = 3
                            }
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 99 ){
                if( 4 == compare( l, l.byte_offset  + 2, 266, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 46, tk_row ) ){
                        l.setToken( 46, 6, 6 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 119 ){
                if( 4 == compare( l, l.byte_offset  + 2, 440, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 136, tk_row ) ){
                        l.setToken( 136, 6, 6 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 116 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 97 ){
                    if( 3 == compare( l, l.byte_offset  + 3, 447, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 144, tk_row ) ){
                            l.setToken( 144, 6, 6 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 327, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 39, tk_row ) ){
                            l.setToken( 39, 5, 5 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 120, tk_row ) ){
                        l.setToken( 120, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 116: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 116 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 121 ){
                if( 4 == compare( l, l.byte_offset  + 2, 142, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 98, tk_row ) ){
                        l.setToken( 98, 6, 6 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( 4 == compare( l, l.byte_offset  + 2, 287, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 151, tk_row ) ){
                        l.setToken( 151, 6, 6 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 104 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 469, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 124, tk_row ) ){
                            l.setToken( 124, 5, 5 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 105 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 115 ){
                        if( isTokenActive( 105, tk_row ) ){
                            l.setToken( 105, 4, 4 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 117 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 106, tk_row ) ){
                            l.setToken( 106, 4, 4 )
                        };
                        if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 29, l.byte_length, l.token_length )
                        } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 64, l.byte_length, l.token_length )
                        } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 70, l.byte_length, l.token_length )
                        } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 72, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 148, l.byte_length, l.token_length )
                        } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 176, l.byte_length, l.token_length )
                        } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 181, l.byte_length, l.token_length )
                        } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 182, l.byte_length, l.token_length )
                        } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 195, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 121 ){
                    if( isTokenActive( 139, tk_row ) ){
                        l.setToken( 139, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 187, tk_row ) ){
                    l.setToken( 187, 2, 2 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 117: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 117 ){
            if( 2 == compare( l, l.byte_offset  + 1, 194, 2, token_sequence_lookup ) ){
                if( isTokenActive( 173, tk_row ) ){
                    l.setToken( 173, 3, 3 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 118: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 118 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( 2 == compare( l, l.byte_offset  + 2, 138, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 97, tk_row ) ){
                        l.setToken( 97, 4, 4 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 75, tk_row ) ){
                        l.setToken( 75, 3, 3 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 119: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 119 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 104 ){
                if( 3 == compare( l, l.byte_offset  + 2, 174, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 130, tk_row ) ){
                        l.setToken( 130, 5, 5 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( 2 == compare( l, l.byte_offset  + 2, 301, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 138, tk_row ) ){
                        l.setToken( 138, 4, 4 )
                    };
                    if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 29, l.byte_length, l.token_length )
                    } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 64, l.byte_length, l.token_length )
                    } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 70, l.byte_length, l.token_length )
                    } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 72, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 148, l.byte_length, l.token_length )
                    } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 176, l.byte_length, l.token_length )
                    } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 181, l.byte_length, l.token_length )
                    } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 182, l.byte_length, l.token_length )
                    } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 195, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 121: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 121 ){
            if( 4 == compare( l, l.byte_offset  + 1, 189, 4, token_sequence_lookup ) ){
                if( isTokenActive( 155, tk_row ) ){
                    l.setToken( 155, 5, 5 )
                };
                if( isTokenActive( 29, tk_row ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 29, l.byte_length, l.token_length )
                } else if( isTokenActive( 64, tk_row ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 64, l.byte_length, l.token_length )
                } else if( isTokenActive( 70, tk_row ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 70, l.byte_length, l.token_length )
                } else if( isTokenActive( 72, tk_row ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 72, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 148, tk_row ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 148, l.byte_length, l.token_length )
                } else if( isTokenActive( 176, tk_row ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 176, l.byte_length, l.token_length )
                } else if( isTokenActive( 181, tk_row ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 181, l.byte_length, l.token_length )
                } else if( isTokenActive( 182, tk_row ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 182, l.byte_length, l.token_length )
                } else if( isTokenActive( 195, tk_row ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 195, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 123: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 123 ){
            if( isTokenActive( 17, tk_row ) ){
                l.setToken( 17, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 33 ){
                if( isTokenActive( 20, tk_row ) ){
                    l.setToken( 20, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 125 ){
                if( isTokenActive( 117, tk_row ) ){
                    l.setToken( 117, 2, 2 )
                }
            }
        }
    }
    break;
    case 124: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 124 ){
            if( isTokenActive( 79, tk_row ) ){
                l.setToken( 79, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 124 ){
                if( isTokenActive( 77, tk_row ) ){
                    l.setToken( 77, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 171, tk_row ) ){
                        l.setToken( 171, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 167, tk_row ) ){
                    l.setToken( 167, 2, 2 )
                }
            }
        }
    }
    break;
    case 125: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 125 ){
            if( isTokenActive( 19, tk_row ) ){
                l.setToken( 19, 1, 1 )
            }
        }
    }
    break;
    case 126: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 126 ){
            if( isTokenActive( 99, tk_row ) ){
                l.setToken( 99, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 177, tk_row ) ){
                    l.setToken( 177, 2, 2 )
                }
            }
        }
    }
    break;
    default: 
    break
};
    if( ( ( l._type ) > 0 ) )return;;
    if( isTokenActive( 29, tk_row ) && pre_scan( l, 494 ) && token_production( l, 67138588, 15, 29, 1, states_buffer, scan ) ){
    l.setToken( 29, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 42, tk_row ) && pre_scan( l, 496 ) && token_production( l, 67138626, 24, 42, 2, states_buffer, scan ) ){
    l.setToken( 42, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 64, tk_row ) && pre_scan( l, 507 ) && token_production( l, 67138855, 41, 64, 4, states_buffer, scan ) ){
    l.setToken( 64, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 70, tk_row ) && pre_scan( l, 511 ) && token_production( l, 67138927, 47, 70, 8, states_buffer, scan ) ){
    l.setToken( 70, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 71, tk_row ) && pre_scan( l, 514 ) && token_production( l, 67139178, 10, 71, 16, states_buffer, scan ) ){
    l.setToken( 71, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 72, tk_row ) && pre_scan( l, 511 ) && token_production( l, 67139466, 49, 72, 32, states_buffer, scan ) ){
    l.setToken( 72, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 146, tk_row ) && pre_scan( l, 507 ) && token_production( l, 67139683, 168, 146, 64, states_buffer, scan ) ){
    l.setToken( 146, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 148, tk_row ) && pre_scan( l, 522 ) && token_production( l, 67139755, 171, 148, 128, states_buffer, scan ) ){
    l.setToken( 148, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 176, tk_row ) && pre_scan( l, 524 ) && token_production( l, 67139902, 216, 176, 256, states_buffer, scan ) ){
    l.setToken( 176, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 181, tk_row ) && pre_scan( l, 524 ) && token_production( l, 67140057, 230, 181, 512, states_buffer, scan ) ){
    l.setToken( 181, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 182, tk_row ) && pre_scan( l, 520 ) && token_production( l, 67139994, 231, 182, 1024, states_buffer, scan ) ){
    l.setToken( 182, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 189, tk_row ) && pre_scan( l, 503 ) && token_production( l, 67140191, 269, 189, 2048, states_buffer, scan ) ){
    l.setToken( 189, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 192, tk_row ) && pre_scan( l, 532 ) && token_production( l, 67140229, 272, 192, 4096, states_buffer, scan ) ){
    l.setToken( 192, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 193, tk_row ) && pre_scan( l, 534 ) && token_production( l, 67140272, 274, 193, 8192, states_buffer, scan ) ){
    l.setToken( 193, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 194, tk_row ) && pre_scan( l, 553 ) && token_production( l, 67140583, 276, 194, 16384, states_buffer, scan ) ){
    l.setToken( 194, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 195, tk_row ) && pre_scan( l, 507 ) && token_production( l, 67140780, 278, 195, 32768, states_buffer, scan ) ){
    l.setToken( 195, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 220, tk_row ) && pre_scan( l, 515 ) && token_production( l, 67140770, 11, 220, 65536, states_buffer, scan ) ){
    l.setToken( 220, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 0, tk_row ) && false ){
    l._type  = 0;
    return
} else if( isTokenActive( 8, tk_row ) && l.isSP( true ) ){
    l._type  = 8;
    return
} else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) ){
    l._type  = 3;
    return
} else if( isTokenActive( 2, tk_row ) && l.isSym( true ) ){
    l._type  = 2;
    return
} else if( isTokenActive( 7, tk_row ) && l.isNL(  ) ){
    l._type  = 7;
    return
} else if( isTokenActive( 5, tk_row ) && l.isNum(  ) ){
    l._type  = 5;
    return
} else if( isTokenActive( 175, tk_row ) && false ){
    l._type  = 175;
    return
}
}

function scan(l, token, skip){
    if( ( ( l._type ) <= 0 ) )scan_core( l, token );;
    if( ( skip  > 0 && isTokenActive( l._type, skip ) ) ){
    while( ( isTokenActive( l._type, skip ) ) ) {
            l.next(  );
            scan_core( l, token )
        }
}
}

const js_parser_pack = {

    init_table: () => {
        const table = new Uint8Array(382976);
        init_table(table);
        return table;
    },

    create_iterator: (data) => {
        return new KernelStateIterator(data);
    },

    recognize: (string, entry_index) => {

        const temp_buffer = new Uint8Array((string.length+1) * 4);

        const actual_length = fillByteBufferWithUTF8FromString(string, temp_buffer, temp_buffer.length);

        const input_buffer = new Uint8Array(temp_buffer.buffer, 0, actual_length);

        let entry_pointer = 0;

        switch(entry_index){

            case 0: default:  entry_pointer = 67111639; break;

            case 1:  entry_pointer = 67109770; break;

            case 2:  entry_pointer = 67127100; break;

            case 3:  entry_pointer = 67128681; break;

            case 4:  entry_pointer = 67132421; break;

            case 5:  entry_pointer = 67132886; break;
        }
        
        return run(
            states_buffer,
            input_buffer,
            input_buffer.length,
            entry_pointer,
            scan,
            false
        );
    }
};


const reduce_functions = [(_,s)=>s[s.length-1], (env, sym, pos)=> ([sym[0]]) /*0*/,
(env, sym, pos)=> ((sym[0].push(sym[1]),sym[0])) /*1*/,
(env, sym, pos)=> ({type:env.typ.HTML_IMPORT,tag:"IMPORT",attributes:sym[1]||[],nodes:[],VOID:true,pos}) /*2*/,
(env, sym, pos)=> ({type:env.typ.HTML_IMPORT,tag:"IMPORT",attributes:null||[],nodes:[],VOID:true,pos}) /*3*/,
(env, sym, pos)=> ({type:env.typ.HTMLImportAttribute,name:sym[0],value:sym[2],pos}) /*4*/,
(env, sym, pos)=> ({type:env.typ.HTMLExportAttribute,name:sym[0],value:sym[2],pos}) /*5*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:sym[1],secondary_ast:sym[3],DEBUG:sym[1].length==2,pos}) /*6*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:sym[1],secondary_ast:null,DEBUG:sym[1].length==2,pos}) /*7*/,
(env, sym, pos)=> ({type:env.typ.WickIfBinding,expresion:sym[2],node:sym[4],else:sym[6],pos}) /*8*/,
(env, sym, pos)=> ({type:env.typ.WickIfBinding,expresion:sym[2],node:sym[4],else:null,pos}) /*9*/,
(env, sym, pos)=> (sym[1].DTD=sym[0],sym[1]) /*10*/,
(env, sym, pos)=> (sym[0]) /*11*/,
(env, sym, pos)=> ({type:"DTD",tag:sym[1]||"",value:sym[3]}) /*12*/,
(env, sym, pos)=> ({type:"DTD",tag:null||"",value:sym[2]}) /*13*/,
(env, sym, pos)=> ({type:"DTD",tag:sym[1]||"",value:null}) /*14*/,
(env, sym, pos)=> ({type:"DTD",tag:null||"",value:null}) /*15*/,
(env, sym, pos)=> ((sym[1].import_list=sym[0],sym[1])) /*16*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:sym[4]||[],VOID:false,pos}) /*17*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:[],VOID:false,pos}) /*18*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[0].slice(1).toUpperCase()]||env.typ.HTML_Element,tag:sym[0].slice(1).toUpperCase(),attributes:sym[1]||[],nodes:[],VOID:true,pos}) /*19*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:sym[1]||[],nodes:[sym[3]],pos}) /*20*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:sym[3]||[],VOID:false,pos}) /*21*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:[],VOID:false,pos}) /*22*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[0].slice(1).toUpperCase()]||env.typ.HTML_Element,tag:sym[0].slice(1).toUpperCase(),attributes:null||[],nodes:[],VOID:true,pos}) /*23*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:null||[],nodes:[sym[2]],pos}) /*24*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:sym[1]||[],nodes:[null],pos}) /*25*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:null||[],nodes:[null],pos}) /*26*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:sym[2],IS_BINDING:false,pos}) /*27*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:"",IS_BINDING:false,pos}) /*28*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:sym[2]||"",IS_BINDING:!!sym[2],pos}) /*29*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[1].value,value:{type:env.typ.WickBinding,primary_ast:sym[1],DEBUG:false,pos},IS_BINDING:true,pos}) /*30*/,
(env, sym, pos)=> (sym[1]) /*31*/,
(env, sym, pos)=> (sym[0].slice(1,-1)) /*32*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:sym[2]||[],nodes:[sym[4]],pos}) /*33*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:null||[],nodes:[sym[3]],pos}) /*34*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:sym[2]||[],nodes:[null],pos}) /*35*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:null||[],nodes:[null],pos}) /*36*/,
(env, sym, pos)=> ({type:env.typ.HTMLText,data:sym[0],IS_BINDING:false,pos}) /*37*/,
(env, sym, pos)=> (sym[0]+"") /*38*/,
(env, sym, pos)=> (sym[0]+sym[1]) /*39*/,
(env, sym, pos)=> ({type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:sym[0]||[],pos}) /*40*/,
(env, sym, pos)=> (env.IS_MODULE=true,sym[0]) /*41*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1],sym[2]],pos}) /*42*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1]],pos}) /*43*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0]],pos}) /*44*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0],sym[2]],pos}) /*45*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierDefault,sym[0]) /*46*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierModule,sym[0]) /*47*/,
(env, sym, pos)=> ({type:env.typ.Identifier,value:sym[0],pos}) /*48*/,
(env, sym, pos)=> ({type:env.typ.NameSpace,nodes:[sym[2]],pos}) /*49*/,
(env, sym, pos)=> ({type:env.typ.Specifiers,nodes:sym[1]||[],pos}) /*50*/,
(env, sym, pos)=> ({type:env.typ.Specifiers,nodes:null||[],pos}) /*51*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0]],pos}) /*52*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0],sym[2]],pos}) /*53*/,
(env, sym, pos)=> ({type:env.typ.FromClause,nodes:[sym[1]],pos}) /*54*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:sym[1]||"",pos}) /*55*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:null||"",pos}) /*56*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1],sym[2]],DEFAULT:false,pos}) /*57*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1]],DEFAULT:false,pos}) /*58*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[2]],DEFAULT:true,pos}) /*59*/,
(env, sym, pos)=> (null) /*60*/,
(env, sym, pos)=> ({type:env.typ.VariableStatement,nodes:sym[1],pos}) /*61*/,
(env, sym, pos)=> ((sym[0].push(sym[2]),sym[0])) /*62*/,
(env, sym, pos)=> ({type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*63*/,
(env, sym, pos)=> ({type:env.typ.IdentifierBinding,value:sym[0]}) /*64*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:"=",nodes:[sym[0],sym[2]],pos}) /*65*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*66*/,
(env, sym, pos)=> ({type:env.typ.ConditionalExpression,nodes:[sym[0],sym[2],sym[4]],pos}) /*67*/,
(env, sym, pos)=> ({type:env.typ.LogicalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*68*/,
(env, sym, pos)=> ({type:env.typ.BitwiseExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*69*/,
(env, sym, pos)=> ({type:env.typ.EqualityExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*70*/,
(env, sym, pos)=> ({type:env.typ.RelationalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*71*/,
(env, sym, pos)=> ({type:env.typ.InstanceOfExpression,nodes:[sym[0],sym[2]],pos}) /*72*/,
(env, sym, pos)=> ({type:env.typ.InExpression,nodes:[sym[0],sym[2]],pos}) /*73*/,
(env, sym, pos)=> ({type:env.typ.ShiftExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*74*/,
(env, sym, pos)=> ({type:env.typ.AdditiveExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*75*/,
(env, sym, pos)=> ({type:env.typ.MultiplicativeExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*76*/,
(env, sym, pos)=> ({type:env.typ.ExponentiationExpression,nodes:[sym[0],sym[2]],pos}) /*77*/,
(env, sym, pos)=> ({type:env.typ.DeleteExpression,nodes:[sym[1]],pos}) /*78*/,
(env, sym, pos)=> ({type:env.typ.VoidExpression,nodes:[sym[1]],pos}) /*79*/,
(env, sym, pos)=> ({type:env.typ.TypeofExpression,nodes:[sym[1]],pos}) /*80*/,
(env, sym, pos)=> ({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*81*/,
(env, sym, pos)=> ((sym[1].type==env.typ.NumericLiteral||sym[1].type==env.typ.BigIntLiteral)?(sym[1].NEGATIVE=true,sym[1]):({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos})) /*82*/,
(env, sym, pos)=> ({type:env.typ.PostExpression,symbol:sym[1],nodes:[sym[0]],pos}) /*83*/,
(env, sym, pos)=> ({type:env.typ.PreExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*84*/,
(env, sym, pos)=> ({type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:true}) /*85*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:false})) /*86*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:true}) /*87*/,
(env, sym, pos)=> ({type:env.typ.NewInstanceExpression,nodes:[sym[1],sym[2]],pos}) /*88*/,
(env, sym, pos)=> ({type:env.typ.NewExpression,nodes:[sym[1]],pos}) /*89*/,
(env, sym, pos)=> ({type:env.typ.ThisLiteral,pos}) /*90*/,
(env, sym, pos)=> env.functions.reinterpretParenthesized (env, sym, pos)/*91*/,
(env, sym, pos)=> ({type:env.typ.IdentifierReference,value:sym[0]}) /*92*/,
(env, sym, pos)=> ({type:env.typ.BooleanLiteral,value:sym[0],pos}) /*93*/,
(env, sym, pos)=> ({type:env.typ.NullLiteral,pos}) /*94*/,
(env, sym, pos)=> ({type:env.typ.NumericLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*95*/,
(env, sym, pos)=> ({type:env.typ.BigIntLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*96*/,
(env, sym, pos)=> (sym[0]+sym[1]+sym[2]) /*97*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[sym[1]],pos}) /*98*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:sym[1],pos}) /*99*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1],sym[3]],pos}) /*100*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[],pos}) /*101*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1]],pos}) /*102*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:0,pos}) /*103*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:sym[0].count+1,pos}) /*104*/,
(env, sym, pos)=> ([sym[0],sym[1]]) /*105*/,
(env, sym, pos)=> ([...sym[0],sym[2],sym[3]]) /*106*/,
(env, sym, pos)=> ([...sym[0],sym[2]]) /*107*/,
(env, sym, pos)=> ({type:env.typ.Spread,nodes:[sym[1]],pos}) /*108*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:[],pos}) /*109*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:sym[1],pos}) /*110*/,
(env, sym, pos)=> (sym[0].push(sym[2]),sym[0]) /*111*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,sym[0]) /*112*/,
(env, sym, pos)=> ({type:env.typ.PropertyBinding,nodes:[sym[0],sym[2]],pos}) /*113*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*114*/,
(env, sym, pos)=> ({type:env.typ.IdentifierName,value:sym[0],pos}) /*115*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*116*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1],sym[5]],pos}) /*117*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3],sym[6]],pos}) /*118*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],sym[6]],pos}) /*119*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*120*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*121*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*122*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1]],pos}) /*123*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3]],pos}) /*124*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],sym[5]],pos}) /*125*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,sym[5]],pos}) /*126*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],null],pos}) /*127*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*128*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*129*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*130*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,sym[4]],pos}) /*131*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],null],pos}) /*132*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,null],pos}) /*133*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*134*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,null],pos}) /*135*/,
(env, sym, pos)=> ({type:env.typ.ComputedProperty,nodes:[sym[1]],pos}) /*136*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[sym[0]],pos}) /*137*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:sym[0],pos}) /*138*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[...sym[0],sym[2]],pos}) /*139*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[],pos}) /*140*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[sym[1]],pos}) /*141*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1]],pos}) /*142*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1],sym[3]],pos}) /*143*/,
(env, sym, pos)=> (sym[1]?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}:sym[0]) /*144*/,
(env, sym, pos)=> (null?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0]],pos}:sym[0]) /*145*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1],sym[2]],pos}) /*146*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1]],pos}) /*147*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3],sym[4]],pos}) /*148*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1]],pos}) /*149*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3]],pos}) /*150*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[],pos}) /*151*/,
(env, sym, pos)=> ([...sym[0],...sym[2]]) /*152*/,
(env, sym, pos)=> ({type:env.typ.FunctionBody,nodes:sym[0]||[],pos}) /*153*/,
(env, sym, pos)=> ([...sym[0],sym[1]]) /*154*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:sym[1]||[],pos}) /*155*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:null||[],pos}) /*156*/,
(env, sym, pos)=> ({type:env.typ.ExpressionStatement,nodes:[sym[0]],pos}) /*157*/,
(env, sym, pos)=> ((sym[0].type==env.typ.ExpressionList?(sym[0].nodes.push(sym[2]),sym[0]):{type:env.typ.ExpressionList,nodes:[sym[0],sym[2]],pos})) /*158*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:sym[1]?[sym[1]]:[],pos}) /*159*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:null?[null]:[],pos}) /*160*/,
(env, sym, pos)=> ({type:env.typ.IdentifierLabel,value:sym[0]}) /*161*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[sym[1]],pos}) /*162*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[null],pos}) /*163*/,
(env, sym, pos)=> ({type:env.typ.ThrowStatement,nodes:[sym[1]],pos}) /*164*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[sym[1]],pos}) /*165*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[],pos}) /*166*/,
(env, sym, pos)=> ({type:env.typ.DebuggerStatement,pos}) /*167*/,
(env, sym, pos)=> ({type:env.typ.LabeledStatement,nodes:[sym[0],sym[2]],pos}) /*168*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos}) /*169*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*170*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos}) /*171*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos}) /*172*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],null],pos}) /*173*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*174*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*175*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*176*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos}) /*177*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],null],pos}) /*178*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,null],pos}) /*179*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*180*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*181*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*182*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,null],pos}) /*183*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*184*/,
(env, sym, pos)=> ({type:env.typ.EmptyStatement,pos}) /*185*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*186*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],null],pos}) /*187*/,
(env, sym, pos)=> ({type:env.typ.DoStatement,nodes:[sym[1],sym[4]],pos}) /*188*/,
(env, sym, pos)=> ({type:env.typ.WhileStatement,nodes:[sym[2],sym[4]],pos}) /*189*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],sym[6],sym[8]],LEX:false,pos}) /*190*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],sym[5],sym[7]],LEX:true,pos}) /*191*/,
(env, sym, pos)=> ({type:env.typ.ForInStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*192*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[3],sym[5],sym[7]],pos,AWAIT:!!sym[1]}) /*193*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],sym[5],sym[7]],LEX:false,pos}) /*194*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[5],sym[7]],LEX:false,pos}) /*195*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],null,sym[7]],LEX:false,pos}) /*196*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[4],sym[6]],LEX:true,pos}) /*197*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],null,sym[6]],LEX:true,pos}) /*198*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[2],sym[4],sym[6]],pos,AWAIT:!!null}) /*199*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,sym[4],sym[6]],LEX:false,pos}) /*200*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],null,sym[6]],LEX:false,pos}) /*201*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[6]],LEX:false,pos}) /*202*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[5]],LEX:true,pos}) /*203*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,null,sym[5]],LEX:false,pos}) /*204*/,
(env, sym, pos)=> ({type:env.typ.LexicalDeclaration,symbol:sym[0],nodes:sym[1],pos}) /*205*/,
(env, sym, pos)=> ({type:env.typ.LexicalBinding,nodes:[sym[1]],symbol:sym[0],pos}) /*206*/,
(env, sym, pos)=> ({type:env.typ.SwitchStatement,nodes:[sym[2],sym[4]],pos}) /*207*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2],...sym[3]],pos}) /*208*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1],...sym[2]],pos}) /*209*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],...sym[2]],pos}) /*210*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2]],pos}) /*211*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1]],pos}) /*212*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1]],pos}) /*213*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[],pos}) /*214*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1],...sym[3]],pos}) /*215*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1]],pos}) /*216*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[...sym[2]],pos}) /*217*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[],pos}) /*218*/,
(env, sym, pos)=> ({type:env.typ.WithStatement,nodes:[sym[2],sym[4]],pos}) /*219*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],null],pos}) /*220*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],null,sym[2]],pos}) /*221*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],sym[3]],pos}) /*222*/,
(env, sym, pos)=> ({type:env.typ.CatchClause,nodes:[sym[2],sym[4]],pos}) /*223*/,
(env, sym, pos)=> ({type:env.typ.FinallyClause,nodes:[sym[1]],pos}) /*224*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2],...sym[4]],pos}) /*225*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null,...sym[3]],pos}) /*226*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2]],pos}) /*227*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null],pos}) /*228*/,
(env, sym, pos)=> (sym[0].concat(sym[1])) /*229*/,
(env, sym, pos)=> ([]) /*230*/,
(env, sym, pos)=> ((sym[1].STATIC=!!sym[0],sym[1])) /*231*/,
(env, sym, pos)=> ((sym[2].STATIC=!!sym[0],sym[2])) /*232*/,
(env, sym, pos)=> ((sym[0])) /*233*/,
(env, sym, pos)=> ((sym[1])) /*234*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos}) /*235*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*236*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos}) /*237*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],sym[7]],pos}) /*238*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos}) /*239*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],null],pos}) /*240*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*241*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],sym[6]],pos}) /*242*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*243*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*244*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],sym[6]],pos}) /*245*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos}) /*246*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],null],pos}) /*247*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,sym[6]],pos}) /*248*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],null],pos}) /*249*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,null],pos}) /*250*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],sym[5]],pos}) /*251*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*252*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*253*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,sym[5]],pos}) /*254*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],null],pos}) /*255*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*256*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,sym[5]],pos}) /*257*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],null],pos}) /*258*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,null],pos}) /*259*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,null],pos}) /*260*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,sym[4]],pos}) /*261*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],null],pos}) /*262*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*263*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,null],pos}) /*264*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,null],pos}) /*265*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,null],pos}) /*266*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1],...sym[3]],pos}) /*267*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null,...sym[2]],pos}) /*268*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1]],pos}) /*269*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null],pos}) /*270*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],flags:sym[3],pos}) /*271*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,flags:sym[2],pos}) /*272*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],pos}) /*273*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,pos}) /*274*/,
(env, sym, pos)=> ({type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,value:sym[1],pos}],NO_SUBSTITUTE:true,pos}) /*275*/,
(env, sym, pos)=> ({type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,pos}],NO_SUBSTITUTE:true,pos}) /*276*/,
(env, sym, pos)=> (sym[2].unshift(sym[0],sym[1]),{type:env.typ.Template,nodes:sym[2],pos}) /*277*/,
(env, sym, pos)=> ({type:env.typ.TemplateHead,value:sym[1]||"",pos}) /*278*/,
(env, sym, pos)=> ({type:env.typ.TemplateHead,value:"",pos}) /*279*/,
(env, sym, pos)=> (sym[0].push(sym[1]),sym[0]) /*280*/,
(env, sym, pos)=> ({type:env.typ.TemplateTail,value:sym[1]||"",pos}) /*281*/,
(env, sym, pos)=> ({type:env.typ.TemplateTail,value:"",pos}) /*282*/,
(env, sym, pos)=> (sym[0].push(sym[1],sym[2]),sym[0]) /*283*/,
(env, sym, pos)=> ({type:env.typ.TemplateMiddle,value:sym[1]||"",pos}) /*284*/,
(env, sym, pos)=> ({type:env.typ.TemplateMiddle,value:"",pos}) /*285*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1]],pos}) /*286*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:false})) /*287*/,
(env, sym, pos)=> ({type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:true}) /*288*/,
(env, sym, pos)=> ({type:env.typ.NewTarget,pos}) /*289*/,
(env, sym, pos)=> ({type:env.typ.ImportMeta,pos}) /*290*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:sym[1]||[],pos}) /*291*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:null||[],pos}) /*292*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:false}) /*293*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[2]],pos,TEMPLATE:true}) /*294*/,
(env, sym, pos)=> ({type:env.typ.SuperCall,nodes:[sym[1]],pos}) /*295*/,
(env, sym, pos)=> ({type:env.typ.ImportCall,nodes:[sym[2]],pos}) /*296*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos}) /*297*/,
(env, sym, pos)=> ({type:env.typ.OptionalMemberExpression,nodes:[sym[0],sym[1].type=="computed"?sym[1].val:sym[1]],pos,COMPUTED:sym[1].type=="computed"}) /*298*/,
(env, sym, pos)=> ({type:"computed",val:sym[2]}) /*299*/,
(env, sym, pos)=> ({type:env.typ.AwaitExpression,nodes:[sym[1]],pos}) /*300*/,
(env, sym, pos)=> ({type:env.typ.CoalesceExpression,nodes:[sym[0],sym[2]],pos}) /*301*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[],pos}) /*302*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[2]],pos,GENERATOR:!!sym[1]}) /*303*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[1]],pos,GENERATOR:!!null}) /*304*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!sym[0],nodes:[sym[1],sym[3]],pos}) /*305*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!null,nodes:[sym[0],sym[2]],pos}) /*306*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierBinding,sym[0]) /*307*/,
(env, sym, pos)=> env.functions.reinterpretArrowParameters (env, sym, pos)/*308*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[],pos}) /*309*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1],sym[3]],pos}) /*310*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:[],pos}) /*311*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:sym[0],nodes:sym[1],pos}) /*312*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:null,nodes:sym[0],pos}) /*313*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:sym[0],nodes:null,pos}) /*314*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:null,nodes:null,pos}) /*315*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],sym[2],...(sym[3]||[])],pos}) /*316*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],null,...(sym[2]||[])],pos}) /*317*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],sym[2],...(null||[])],pos}) /*318*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],null,...(null||[])],pos}) /*319*/,
(env, sym, pos)=> (new env.fn.url(sym[2])) /*320*/,
(env, sym, pos)=> ([{type:env.typ.Not,nodes:[sym[1]],pos}]) /*321*/,
(env, sym, pos)=> ([sym[0],...sym[1]]) /*322*/,
(env, sym, pos)=> ({type:env.typ.Parenthesis,nodes:[sym[1]],pos}) /*323*/,
(env, sym, pos)=> ({type:env.typ.Function,nodes:[sym[2]],pos}) /*324*/,
(env, sym, pos)=> ((sym[0]&&sym[1])?{type:env.typ.ComplexSelector,nodes:[sym[0],...((sym[1]).flat(2))],pos}:sym[0]) /*325*/,
(env, sym, pos)=> ((sym[0]&&null)?{type:env.typ.ComplexSelector,nodes:[sym[0]],pos}:sym[0]) /*326*/,
(env, sym, pos)=> ((sym[0]&&!(sym[1]||sym[2]))?sym[0]:(sym[1]&&sym[1].length==1&&!(sym[0]||sym[2]))?sym[1][0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1],...sym[2]],pos}) /*327*/,
(env, sym, pos)=> ((null&&!(sym[0]||sym[1]))?null:(sym[0]&&sym[0].length==1&&!(null||sym[1]))?sym[0][0]:{type:env.typ.CompoundSelector,nodes:[...sym[0],...sym[1]],pos}) /*328*/,
(env, sym, pos)=> ((sym[0]&&!(null||sym[1]))?sym[0]:(null&&null.length==1&&!(sym[0]||sym[1]))?null[0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1]],pos}) /*329*/,
(env, sym, pos)=> ((sym[0]&&!(sym[1]||null))?sym[0]:(sym[1]&&sym[1].length==1&&!(sym[0]||null))?sym[1][0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1]],pos}) /*330*/,
(env, sym, pos)=> ((null&&!(null||sym[0]))?null:(null&&null.length==1&&!(null||sym[0]))?null[0]:{type:env.typ.CompoundSelector,nodes:[...sym[0]],pos}) /*331*/,
(env, sym, pos)=> ((null&&!(sym[0]||null))?null:(sym[0]&&sym[0].length==1&&!(null||null))?sym[0][0]:{type:env.typ.CompoundSelector,nodes:[...sym[0]],pos}) /*332*/,
(env, sym, pos)=> ((sym[0]&&!(null||null))?sym[0]:(null&&null.length==1&&!(sym[0]||null))?null[0]:{type:env.typ.CompoundSelector,nodes:[sym[0]],pos}) /*333*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[sym[0]],pos,precedence:env.typ.D_SPECIFIER}) /*334*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[{type:env.typ.QualifiedName,ns:sym[0]||"",val:"*",pos,precedence:0}],pos}) /*335*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[{type:env.typ.QualifiedName,ns:"",val:"*",pos,precedence:0}],pos}) /*336*/,
(env, sym, pos)=> ({type:env.typ.QualifiedName,ns:sym[0]||"",val:sym[1],pos}) /*337*/,
(env, sym, pos)=> ({type:env.typ.QualifiedName,ns:"",val:sym[0],pos}) /*338*/,
(env, sym, pos)=> ({type:env.typ.IdSelector,val:sym[1],pos,precedence:env.typ.B_SPECIFIER}) /*339*/,
(env, sym, pos)=> ({type:env.typ.ClassSelector,val:sym[1],pos,precedence:env.typ.C_SPECIFIER}) /*340*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],pos,precedence:env.typ.C_SPECIFIER}) /*341*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],match_type:sym[2],match_val:sym[3],mod:sym[4],pos,precedence:env.typ.C_SPECIFIER}) /*342*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],match_type:sym[2],match_val:sym[3],pos,precedence:env.typ.C_SPECIFIER}) /*343*/,
(env, sym, pos)=> ({type:env.typ.PseudoClassSelector,id:sym[1],val:sym[2],pos,precedence:env.typ.C_SPECIFIER}) /*344*/,
(env, sym, pos)=> ({type:env.typ.PseudoClassSelector,id:sym[1],pos,precedence:env.typ.C_SPECIFIER}) /*345*/,
(env, sym, pos)=> (sym[1].type=env.typ.PseudoElementSelector,sym[1].precedence=env.typ.D_SPECIFIER,sym[1]) /*346*/,
(env, sym, pos)=> env.functions.parseDeclaration (env, sym, pos)/*347*/,
(env, sym, pos)=> ({type:env.typ.MediaFunction,nodes:[sym[2]],pos}) /*348*/,
(env, sym, pos)=> ({type:env.typ.MediaFunction,nodes:[],pos}) /*349*/,
(env, sym, pos)=> ({type:env.typ.Query,nodes:[sym[0]],pos}) /*350*/,
(env, sym, pos)=> ({type:env.typ.Query,condition:sym[0],nodes:[sym[1],sym[2]],pos}) /*351*/,
(env, sym, pos)=> ({type:env.typ.Query,nodes:[sym[0],sym[1]],pos}) /*352*/,
(env, sym, pos)=> ({type:env.typ.Query,condition:sym[0],nodes:[sym[1]],pos}) /*353*/,
(env, sym, pos)=> ({type:env.typ.Not,nodes:[sym[1]],pos}) /*354*/,
(env, sym, pos)=> ({type:env.typ.MediaFeature,nodes:[sym[1]],pos}) /*355*/,
(env, sym, pos)=> ({type:env.typ.MediaValue,key:sym[0],val:sym[2],pos}) /*356*/,
(env, sym, pos)=> (new env.fn.length(sym[0]+sym[1])) /*357*/,
(env, sym, pos)=> ({type:"ratio",num:sym[0],den:sym[2]}) /*358*/,
(env, sym, pos)=> ({type:env.typ.Boolean,val:true,pos}) /*359*/,
(env, sym, pos)=> ({type:env.typ.Boolean,val:false,pos}) /*360*/,
(env, sym, pos)=> ({type:env.typ.MediaEquality,sym:sym[1],left:sym[0],right:sym[2],pos}) /*361*/,
(env, sym, pos)=> ({type:env.typ.MediaRangeDescending,sym:sym[1],max:sym[0],id:sym[2],min:sym[4],pos}) /*362*/,
(env, sym, pos)=> ({type:env.typ.MediaRangeAscending,sym:sym[1],min:sym[0],id:sym[2],max:sym[4],pos}) /*363*/,
(env, sym, pos)=> ({type:env.typ.MediaType,val:sym[0],pos}) /*364*/,
(env, sym, pos)=> ({type:env.typ.Rule,selectors:sym[0],props:new Map((sym[2]||[]).map(s=>[s.name,s])),pos,precedence:0}) /*365*/,
(env, sym, pos)=> ({type:env.typ.Rule,selectors:sym[0],props:new Map((null||[]).map(s=>[s.name,s])),pos,precedence:0}) /*366*/,
(env, sym, pos)=> (sym[0].filter(i=>i!=";")) /*367*/,
(env, sym, pos)=> ({media:"@media",type:env.typ.Media,nodes:[sym[1],...sym[3]],pos}) /*368*/,
(env, sym, pos)=> ({media:"@media",type:env.typ.Media,nodes:[sym[1]],pos}) /*369*/,
(env, sym, pos)=> ({queries:true,type:env.typ.MediaQueries,nodes:sym[0],pos}) /*370*/,
(env, sym, pos)=> ({keyframes:"@keyframes",type:env.typ.Keyframes,name:sym[1],nodes:[sym[3]],pos}) /*371*/,
(env, sym, pos)=> ({type:env.typ.KeyframeBlock,nodes:[{type:env.type.KeyframeSelectors,nodes:sym[0],pos},sym[2]],pos}) /*372*/,
(env, sym, pos)=> ({type:env.typ.KeyframeSelector,val:sym[0],pos}) /*373*/,
(env, sym, pos)=> (new env.fn.percentage(sym[0]+sym[1])) /*374*/,
(env, sym, pos)=> ({type:env.typ.Supports,nodes:[sym[1],sym[2]],pos}) /*375*/,
(env, sym, pos)=> ({type:env.typ.Script,nodes:sym[0],pos}) /*376*/,
(env, sym, pos)=> (sym[0]+sym[2]) /*377*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:sym[1],pos}) /*378*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:[sym[1]],pos}) /*379*/,
(env, sym, pos)=> (new env.fn.url(sym[0])) /*380*/,
(env, sym, pos)=> (sym[2]) /*381*/,
(env, sym, pos)=> ({type:env.typ.And,nodes:[sym[1]],pos}) /*382*/,
(env, sym, pos)=> ({type:env.typ.SupportConditions,nodes:sym[0],pos}) /*383*/,
(env, sym, pos)=> ({type:env.typ.Or,nodes:[sym[1]],pos}) /*384*/,
(env, sym, pos)=> ({type:env.typ.PseudoSelector,nodes:[sym[0],...sym[1]],pos}) /*385*/,
(env, sym, pos)=> ({type:env.typ.PseudoSelector,nodes:[sym[0]],pos}) /*386*/,
(env, sym, pos)=> ({type:env.typ.Combinator,val:sym[0]}) /*387*/,
(env, sym, pos)=> ({name:"invalid",pos,val:sym,VALID:false}) /*388*/];

export default ParserFramework(
    reduce_functions,
    {
        wick:0,
        html:1,
        js_statement:2,
        js_expression:3,
        css_stylesheet:4,
        css_selector:5,
    },
    js_parser_pack,

);

