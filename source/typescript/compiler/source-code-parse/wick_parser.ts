
    import { 
        ParserFactoryGamma as ParserFactory, 
        fillByteBufferWithUTF8FromString,
        ParserCore
    } from "@candlelib/hydrocarbon";

    const recognizer_initializer = (()=>{
        
        const {
            add_reduce,
            add_skip,
            compare,
            token_production,
            is_output_enabled,
            consume,
            recognize,
            init_table,
            set_production,
            ParserStateIterator
        } = ParserCore;
    

        var token_lookup = new Uint32Array([300,0,0,0,0,0,0,8,0,0,0,0,0,0,0,3,0,0,0,0,0,8,805306368,0,0,0,0,0,428,0,2,0,81920,0,0,8,536870912,16777216,0,0,0,0,5242880,0,0,0,0,0,0,1048576,0,0,0,0,0,0,2432,0,0,0,0,0,0,384,0,0,0,0,0,0,384,16,0,0,0,0,524288,384,0,0,0,0,0,524288,65920,134217728,0,163841,0,0,524288,65920,0,0,0,0,0,524288,262528,0,0,0,0,0,524288,384,0,64,0,0,0,524288,384,67108864,0,131072,0,0,524288,384,0,0,131072,0,0,524288,131456,0,0,0,0,0,524288,201532832,134217755,4185915392,137395961,2245632,0,0,201401376,134217755,4185915392,137395961,2245632,0,0,201401760,134217755,4185915392,137395961,2245632,0,524288,201401760,134217755,4185915392,137527033,2245632,0,0,384,0,0,0,0,1024,1048576,384,0,0,0,0,0,1048576,384,0,65536,0,0,0,1048576,268435840,1107296256,64,5,0,11537472,0,0,1107296256,64,5,0,11537472,0,384,1107296256,64,5,0,11537472,0,3221225856,0,0,0,0,0,0,268435840,0,0,0,0,0,0,393632,1207959555,0,884225,4096,0,524288,131104,1207959555,0,884225,4096,0,0,131488,1207959555,0,884225,4096,0,524288,201739650,1140850704,2281701284,5,4288167936,63,524288,384,0,524288,268435456,0,0,524288,262528,67108864,0,0,0,0,524288,384,0,0,131072,0,0,1048576,268566912,1073741824,64,5,0,11537408,1048576,131456,16,0,0,0,525568,32768,201794976,167772187,4185915408,4017127161,2246270,0,0,201532448,167772187,4185915408,4017127161,2246270,0,0,65920,0,0,0,0,0,1048576,262528,0,8,0,1,0,524288,384,0,8,0,0,0,524288,384,0,0,0,1,0,524288,384,0,0,2,0,0,1048576,393600,0,0,0,0,0,0,201401760,201326619,4185915392,137428729,2245632,0,524288,65920,201326592,0,1,0,0,524288,131456,0,0,0,0,65536,1048576,393602,0,5,0,0,0,524288,262528,0,0,0,0,0,0,65920,16,0,131072,0,1536,393216,409986,201326592,4,0,0,0,524288,384,0,0,2,0,0,524288,201813410,1275068435,2281701348,271744767,4288300032,63,0,201401760,201326619,4185915392,137559801,2245632,0,0,201401376,201326619,4185915392,137559801,2245632,0,0,201805186,1409286160,2281701348,268566535,4288167936,63,16320,131456,16,0,0,0,525696,32768,384,0,0,0,0,0,1081344,67968,1140850688,1082130624,131077,0,3072,1048576,128,0,0,0,0,0,1048576,384,67108864,0,2,0,0,524288,384,2,0,0,0,0,0,2432,0,0,0,0,0,1048576,65920,134217728,0,32769,0,0,524288,256,0,0,0,0,0,524288,384,0,16,0,0,0,524288,393600,0,0,0,0,0,1048576,262528,0,0,0,0,0,1048576,384,64,0,0,0,0,0,65920,0,0,0,2048,0,524288,384,0,0,0,2048,0,524288,278912,201326592,0,131074,0,0,524288,384,201326592,1,0,0,0,524288,65920,1073741824,0,0,0,0,524288,384,0,0,268435456,0,0,524288,201532832,134217755,4185915408,4017127161,2246270,0,0,67314720,134217755,4185915408,4017127161,2246270,0,0,3254781312,33554176,0,0,0,0,0,3254779904,33554176,0,0,0,0,0,1408,0,0,0,0,0,0,384,160,0,0,0,0,0,536873344,0,0,0,0,0,0,420020652,0,0,0,0,0,0,151585196,0,0,0,0,0,0,67968,1140850688,1082130624,131077,0,3072,0,128,0,0,0,0,0,0,128,0,0,0,0,1024,1048576,384,0,64,5,0,2048,1048576,128,0,64,0,0,1024,1048576,384,0,64,0,0,0,1048576,384,0,0,0,4194304,0,524288,393600,0,0,0,0,65536,0,384,0,131072,0,0,0,1048576,262528,1073741824,64,5,0,3072,1048576,0,1073741824,64,5,0,3072,0,201813410,1275068435,2281701348,271744767,4288300032,63,524288,384,67108864,0,0,0,0,524288,384,0,0,163840,0,0,524288,201805186,1409286160,2281701348,268566535,4288167936,63,384,469968288,134217755,4185915408,4017127161,2246270,0,0,201532448,134217755,4185915408,4017127161,2246270,0,0,201401760,134217755,4185915392,137428729,2245632,0,0,384,0,0,32770,0,0,524288,134218112,0,0,0,0,0,1048576,384,0,0,1610612736,0,0,524288,262528,0,0,0,1,0,524288,201805218,1140850704,2281701348,268566535,4288167936,201326655,0,134218112,0,0,0,0,0,0,384,0,0,0,384,0,524288,384,0,0,0,128,0,524288,268435840,1073741824,64,5,0,11537472,0,0,1073741824,64,5,0,11537408,0,131456,19,0,0,0,525568,32768,134236544,0,196608,0,0,0,1048576,134236544,0,196608,131072,0,1024,1048576,570468736,3,0,0,0,0,0,33595392,3,0,0,0,0,0,33595776,3,0,0,0,0,0,201797026,1275068435,2281701348,3309307,1197056,0,0,201794978,201326619,4185915492,137527035,148480,0,0,1408,0,0,0,0,0,524288,201805186,1140850704,2281701348,268566535,4288176128,63,0,262528,0,0,32768,0,0,524288,384,1,0,0,0,0,0,384,0,0,0,81920,0,524288,416,0,0,0,0,0,524288,344448,67108864,0,131075,0,0,524288,470263202,134217755,4185915416,4025515769,2246655,0,0,384,0,0,131072,0,0,0,2048,1073741824,1082130624,5,0,3072,0,196992,67108864,0,0,0,1024,131072,470263202,134217755,4185915416,4025515769,2246271,0,0,201532832,134217755,4185915408,2406514425,2246270,0,0,201532448,134217755,4185915408,2406514425,2246270,0,0,67109248,0,0,0,0,0,0,384,0,524288,0,0,0,524288,262528,2348810240,0,0,0,0,0,384,2,0,0,0,0,524288,65920,134217728,0,1,0,0,524288,384,67108864,0,32770,0,0,524288,570486144,3,0,0,0,0,0,590248,6,0,0,0,0,0,134292896,134217747,0,3178233,148480,0,524288,16768,0,0,2,8388608,12289,1048576,16384,0,0,0,8388608,12289,0,16768,0,0,0,8388608,12289,1048576,33598848,3,0,0,0,0,0,3456,0,0,0,0,0,0,65920,201326592,0,131073,0,0,524288,384,67108864,0,163840,0,0,524288,384,0,0,0,1048576,0,524288,384,0,0,256,0,0,524288,131456,0,0,0,0,0,0,201532832,134217755,4185915408,2406514425,2246270,0,524288,201805218,1409286160,2281701348,268566535,4288167936,4227858495,63,384,1,0,0,0,0,524288,384,0,0,33554432,0,0,524288,134222720,0,0,0,0,0,0,384,0,0,2,0,49152,1048576,131456,0,0,0,0,0,1048576,2097536,0,0,0,0,0,524288,384,3,0,0,0,1024,1048576,384,3,0,0,0,0,1048576,201794976,134217755,4185915480,4017127161,2246271,0,0,384,2,0,0,0,0,1048576,218343328,167772187,4185915408,4017127161,2246270,0,0,67347488,167772187,4185915408,4017127161,2246270,0,0,201805218,1275068435,2281701284,3178229,4288168960,63,0,201565602,134217755,4185915408,4017127161,2246270,0,0,201565216,134217755,4185915408,4017127161,2246270,0,0,201565600,134217755,4185915408,4017127161,2246270,0,524288,201794978,201326619,4185915492,137527035,148480,0,524288,384,0,32,0,0,0,524288,201794978,201326619,4185915620,137527035,148480,0,524288,384,0,128,0,0,0,524288,201794978,201326619,4185915876,137527035,148480,0,524288,384,0,256,0,0,0,524288,201794978,201326619,4185916388,137527035,1197056,0,524288,384,0,512,0,0,0,524288,201794978,201326619,4185917412,137527035,1197056,0,524288,384,0,1024,0,0,0,524288,201794978,201326619,4185919460,137527035,1197056,0,524288,384,0,2048,0,0,0,524288,201794978,201326619,4185980900,137527035,1197056,0,524288,384,0,4096,0,0,0,524288,384,0,8192,0,0,0,524288,384,0,16384,0,0,0,524288,384,0,32768,0,0,0,524288,201797026,201326619,4186963940,137527035,1197056,0,524288,384,0,262144,0,0,0,524288,134218112,0,0,0,0,0,524288,2432,0,0,0,0,0,524288,384,0,65536,0,0,0,524288,384,0,131072,0,0,0,524288,201797026,201326619,4194303972,137527035,1197056,0,524288,384,0,1048576,0,0,0,524288,384,0,2097152,0,0,0,524288,384,0,4194304,0,0,0,524288,384,0,8388608,0,0,0,524288,384,0,16777216,0,0,0,524288,201797026,1275068443,4227858404,137527035,1197056,0,524288,384,1073741824,0,0,0,0,524288,384,0,33554432,0,0,0,524288,201797026,1275068435,2281701348,3309307,1197056,0,524288,384,0,67108864,0,0,0,524288,201813410,1275068435,2281701348,3309307,4287775744,63,0,0,0,0,0,4286578688,63,0,384,0,0,0,4286578688,63,524288,16768,0,0,0,0,0,524288,384,0,2147483648,0,0,0,524288,67109248,0,0,0,0,0,524288,384,0,0,0,524288,0,524288,384,0,0,1,0,0,524288,384,0,0,4,0,0,524288,384,0,0,0,16384,0,524288,393602,67108864,4,0,0,0,524288,393602,0,4,0,0,0,524288,201813410,1275068435,2281701348,271744763,4288300032,63,524288,201794978,201326619,4185915492,137527035,1197056,0,524288,134218624,0,0,0,0,0,0,896,0,0,0,0,0,0,8576,0,0,0,0,0,0,16768,0,0,0,0,0,0,33152,0,0,0,0,0,0,590208,0,0,0,0,0,0,201794976,134217755,4185915392,137395961,2245632,0,0,201401760,134217755,4185915392,137395961,2245632,0,0,5243264,0,0,0,0,0,524288,2097580,0,0,0,0,0,0,428,0,0,0,0,0,0,1048960,0,0,0,0,0,1048576,8388992,0,0,0,0,0,1048576,2097536,0,0,0,0,0,1048576,428,0,0,0,0,0,1048576,428,2,0,0,0,0,1048576,392,0,0,0,0,0,1048576,388,0,0,0,0,0,1048576,416,0,0,0,0,0,1048576,150995840,0,0,0,0,0,0,16777600,0,0,0,0,0,0,100663680,0,0,0,0,0,0,392,0,0,0,0,0,0,570469544,3,16777280,0,0,0,0,487129516,0,0,0,0,0,0,416,0,0,0,0,0,0,388,0,0,0,0,0,0,256,0,0,0,0,0,0,3254780288,33554176,0,0,0,0,0,0,33554176,0,0,0,0,0,384,33554176,0,0,0,0,0,33597824,3,0,0,0,0,0,33554816,0,0,0,0,0,0,570469760,3,0,0,0,0,0,33554816,3,0,0,0,0,0,424,4,0,0,0,0,0,384,3,0,0,0,0,0,428,26,0,0,0,0,0,428,25,0,0,0,0,0,428,27,0,0,0,0,0,428,24,0,0,0,0,0,3254780288,33554400,0,0,0,0,0,384,32,0,0,0,0,0,384,128,0,0,0,0,0,590252,0,0,0,0,0,0,201565600,167772187,4185915408,4017127161,2246270,0,524288,201524256,134217755,4185915408,4017127161,2246270,0,0,65920,1207959571,0,4,0,0,524288,384,524288,0,0,0,0,524288,8576,0,0,0,0,0,524288,65920,1207959555,0,0,0,0,524288,65920,1207959552,0,0,0,0,524288,384,134217728,0,0,0,0,524288,392,805306368,0,0,0,0,524288,40,805306368,0,0,0,0,524288,0,0,0,0,0,0,524288,0,268435456,0,0,0,0,524288,0,536870912,0,0,0,0,524288,8,0,0,0,0,0,524288,32,0,0,0,0,0,524288,384,2147483648,0,0,0,0,524288,262528,201326592,0,0,0,0,524288,262528,2348810240,1,0,0,0,0,384,0,1,0,0,0,524288,384,3,0,0,0,0,524288,428,2,2,0,0,16777216,0,428,1,2,0,0,33554432,0,384,0,2,0,0,0,524288,428,0,0,0,0,0,524288,33152,0,0,0,0,0,524288,65920,1073741824,24,1613758464,1024,0,524288,0,0,0,1613758464,1024,0,0,201401376,134217755,4185915392,134250233,2244608,0,0,393602,67108864,4,0,0,0,0,134292512,3,0,2129657,148480,0,0,134292896,3,0,2129657,148480,0,0,134292896,134217747,0,3178237,148480,0,0,134292512,134217747,0,3178233,148480,0,0,384,0,0,0,262144,0,524288,384,16,0,5,0,0,524288,384,16,0,4,0,0,524288,384,0,0,0,32768,0,524288,67108864,8,4185915392,134217728,0,0,0,384,134217744,0,1048576,0,0,524288,384,134217744,0,2097152,0,0,524288,384,1207959568,0,0,0,0,524288,384,134217744,0,0,0,0,524288,201401760,134217755,4185915392,137559801,2245632,0,0,201794978,201326619,4185915488,137527035,148480,0,524288,201794978,201326619,4185915616,137527035,148480,0,524288,201794978,201326619,4185915872,137527035,148480,0,524288,201813410,1275068435,2281701344,271744767,4288300032,63,524288,201412002,1207959571,2281701280,3178229,4292363264,63,524288,201805218,1140850704,2281701344,268566535,4288167936,201326655,0,384,0,0,0,0,201326592,524288,201805218,1140850704,2281701344,268566791,4288167936,201326655,0,201805218,1275068432,2281701344,268566535,4288167936,201326655,524288,201813410,1275068435,2281701344,271744763,4288300032,63,524288,201794978,201326619,4185915488,137527035,1197056,0,524288,0,0,0,0,4194304,0,0,201401760,134217755,4185915392,137395961,148480,0,524288,201401376,134217755,4185915392,137395961,148480,0,0,201401760,134217755,4185915392,137395961,148480,0,0,201794978,201326619,4185915620,137527035,148480,0,0,201797026,1275068435,2281701344,3309307,1197056,0,524288,201794978,201326619,4185915492,137527035,1197056,0,0,393602,67108864,224,131074,0,0,524288,393602,67108864,484,131074,0,0,524288,393602,67108864,996,131074,1048576,0,524288,393602,67108864,2020,131074,1048576,0,524288,393602,67108864,4068,131074,1048576,0,524288,393602,67108864,65508,131074,1048576,0,524288,134613378,67108864,1048548,131074,1048576,0,524288,134613378,67108864,8388580,131074,1048576,0,524288,134613378,67108864,33554404,131074,1048576,0,524288,134614402,1140850688,67108836,131074,1048576,0,524288,0,8,2038431744,134217728,0,0,0,201401376,134217747,2147483648,3178233,148480,0,0,201401760,134217747,2147483648,3178233,148480,0,0,201401760,134217747,2147483648,3178233,148480,0,524288,134292896,134217747,0,3178233,148480,0,0,201813410,1275068435,2281701348,271744763,4288300032,63,0,134284320,134217747,0,3178225,17408,0,0,201805186,1140850704,2281701348,268566535,4288167936,63,524288,134284704,134217747,0,3178225,17408,0,524288,32,3,0,32480,0,0,0,416,3,0,32480,0,0,524288,32,0,0,32256,0,0,0,384,0,0,96,0,0,524288,384,0,0,128,0,0,524288,416,0,0,32256,0,0,524288,201805218,1409286160,2281701348,268566791,4288167936,201326655,0,384,0,0,1536,0,0,524288,416,0,0,0,0,4227858432,524351,384,0,0,6144,0,0,524288,384,0,0,0,0,0,540608,384,0,0,24576,0,0,524288,384,0,0,0,0,0,524672,201401760,201326619,4185915392,137428731,2245632,0,0,201401376,134217755,4185915392,137428729,2245632,0,0,201335840,27,4185915392,137395962,2245632,0,0,384,0,0,32768,0,0,524288,262560,1207959555,0,916993,0,0,524288,32,1207959555,0,916993,0,0,0,416,1207959555,0,916993,0,0,524288,32,3,0,32257,0,0,0,416,3,0,32257,0,0,524288,0,134217728,0,851968,0,0,0,384,134217728,0,851968,0,0,524288,16800,1207959571,64,32257,0,0,524288,32,134217731,0,32257,0,0,0,16800,134217747,64,32257,0,0,524288,278912,201326608,64,0,0,0,524288,262528,67108880,64,0,0,0,524288,384,16,64,0,0,0,524288,416,1207959555,0,884225,0,0,524288,416,134217731,0,32257,0,0,524288,416,1207959571,0,32257,0,0,524288,416,134217747,0,32257,0,0,524288,32,134217731,0,32256,0,0,0,416,134217731,0,32256,0,0,524288,65920,0,0,1,0,0,524288,262560,134217731,0,65025,0,0,524288,475522,67108880,524356,268566530,2048,0,524288,0,0,64,0,0,0,0,65920,201326592,0,32771,0,0,524288,65920,201326592,0,163841,0,0,524288,201532832,167772187,4185915408,4017127161,2246270,0,524288,470230432,134217755,4185915416,4017127161,2246271,0,0,201532832,134217755,4185915408,4017127161,2246270,0,524288,201532448,134217755,4185915408,2403368697,2245246,0,0,384,0,0,3145728,1024,0,524288,65920,134217728,0,0,2048,0,524288,201739650,1140850704,2281701284,3145733,4288167936,63,524288,201532832,134217755,4185915408,2404417273,2245246,0,524288,201335840,27,4185915392,135298809,2244608,0,0,201739650,1275068432,2281701348,5,4292362240,63,524288,201805218,1275068435,2281701284,3178229,4292363264,63,524288,201794976,134217755,4185915408,4017127161,2246270,0,0,393602,67108864,68,131074,0,0,0,131074,0,68,131074,0,0,0,201532448,134217755,4185915408,2403368697,2246270,0,0,384,0,0,3145728,0,0,524288,470281634,1275068443,4294967228,4025515773,4290397823,63,524288,201739266,1140850704,2281701284,5,4288167936,63,0,384,0,0,2097152,0,0,524288,384,0,0,4194304,0,0,524288,384,0,0,2264924160,0,0,524288,384,0,0,117440512,0,0,524288,384,16,0,134217728,0,0,524288,134292896,134217747,16,1613790969,148480,0,0,201532832,134217755,4185915408,1748008697,2245632,0,0,67108864,8,4185915392,134217728,2097152,0,0,384,0,0,2147483648,0,0,524288,201794976,134217755,4185915472,4017127161,2246271,0,0,384,0,0,0,2,0,524288,393602,134217728,4,0,0,0,524288,384,0,0,0,4,0,524288,384,0,0,0,8,0,524288,201794978,134217755,4185915396,137395961,2245632,0,0,384,0,0,0,16,0,524288,384,0,0,0,32,0,524288,384,0,0,0,64,0,524288,384,0,0,0,256,0,524288,384,0,0,0,512,0,524288,384,0,0,1613758464,1024,0,524288,384,0,0,0,1024,0,524288,32,1207959555,0,884225,4096,0,0,262560,1207959555,0,884225,4096,0,524288,416,1207959555,0,884225,4096,0,524288,32,1207959555,0,884225,0,0,0,416,1207959571,0,884225,0,0,524288,1452,0,2,0,0,0,16384,428,0,2,0,0,0,540672,384,0,0,0,8192,0,0,392,805306368,0,0,0,0,0,40,805306368,0,0,0,0,0,0,268435456,0,0,0,0,0,0,536870912,0,0,0,0,0,32,0,0,0,0,0,0,428,0,2,0,81920,0,524288,428,0,2,0,0,0,524288,128,0,0,0,0,0,524288,384,0,0,0,65536,0,524288,384,0,0,0,131072,0,524288,384,0,0,5,0,0,524288,8576,0,0,8,0,0,524288,384,0,0,8,0,0,524288,201401760,134217755,4185915392,137428729,2245632,0,524288,134284320,134217747,0,3178233,17408,0,0,384,16,0,5,16384,0,524288,201805186,1140850704,2281701344,268566535,4288167936,63,524288,384,16,0,5,540672,0,524288,201805186,1140850688,2281701344,268566530,4288151552,63,524288,384,134217744,0,1,16384,0,524288,384,0,0,134217728,0,0,524288,393602,67108864,96,131074,1048576,0,524288,384,0,0,0,2097152,0,524288,201401760,1207959579,4185915392,137395961,2245632,0,524288,384,0,0,32768,0,0,0,201335840,134217755,4185915392,137395961,2245632,0,0,384,1107296256,64,5,0,11537472,1048576,384,0,0,0,0,64,1048576,384,3,0,0,0,128,1048576,384,0,0,0,0,128,1048576,384,1,0,0,0,0,1048576,384,16,0,0,0,0,1048576,384,16,0,0,0,1792,1048576,384,16,0,0,0,1536,1048576,384,16,0,0,0,67328,1048576,384,16,0,0,0,512,1048576,384,0,0,0,0,512,1048576,384,1073741824,64,5,0,3072,1048576,384,1073741824,0,0,0,1024,1048576,67968,1140850704,1082130624,131077,0,3072,0,384,0,64,0,0,0,0,384,0,64,5,0,2048,0,67968,1140850688,1082131136,131077,0,2048,0,84352,1140850688,1082131136,131079,8388608,15361,1048576,384,1073741824,0,0,0,0,1048576,84352,1140850688,1082131136,131079,8388608,15361,0,384,0,512,0,0,0,1048576,392,536870912,16777216,0,0,0,1048576,168,805306368,16777216,0,0,0,1048576,128,268435456,0,0,0,0,1048576,128,0,16777216,0,0,0,1048576,128,536870912,0,0,0,0,1048576,136,0,0,0,0,0,1048576,160,0,0,0,0,0,1048576,384,0,0,0,0,2048,1048576,384,0,0,4,0,0,1048576,384,0,0,1,0,0,1048576,384,0,0,0,0,49152,1048576,128,0,64,0,0,0,1048576,2432,0,1082130560,0,0,0,1048576,384,0,0,0,0,65536,1048576,384,0,0,0,0,131072,1048576,393600,8,0,131072,0,0,1048576,384,0,0,0,0,262144,1048576,393644,16,0,131072,0,0,1048576,396,0,0,131072,0,0,0,384,16,0,0,0,525568,1048576,384,16,0,0,0,1024,1048576,196992,67108880,0,0,0,1024,131072,196992,67108880,0,131072,0,1024,393216,384,0,0,0,0,0,1310720,384,0,0,0,0,0,1179648,384,16,0,0,0,1280,1048576,416,16,0,96,0,1280,1048576,196992,67108880,0,131072,0,1024,131072,384,0,0,0,0,256,1048576,134236544,16,196672,0,0,0,1048576,134236160,0,196672,0,0,0,0,416,0,0,96,0,1024,1048576,416,0,0,0,0,1024,1048576,134237608,0,196608,131072,0,0,1048576,134236160,0,196608,131072,0,0,0,1408,0,0,0,0,0,1048576,384,0,0,96,0,0,1048576,16768,0,0,0,0,0,1048576,134236160,0,196608,0,0,0,0,134237192,0,196608,0,0,0,0,384,0,0,0,0,11534336,1048576,384,0,0,0,0,1048576,1048576,384,0,0,0,0,2097152,1048576,384,0,0,0,0,8388608,1048576,262528,1073741824,64,5,0,3072,0,392,3,0,0,0,0,1048576,416,0,1,0,0,4194304,1048576,384,0,33554432,0,0,0,1048576,168,0,16777280,0,0,0,0,128,0,16777216,0,0,0,0,128,0,64,0,0,0,0,160,0,0,0,0,0,0,136,0,0,0,0,0,0,590208,2,0,0,0,0,0,262528,67108864,0,0,0,0,0,262528,134217728,0,0,0,0,524288,428,0,2,0,0,16777216,0,384,0,2,0,0,0,0,384,0,0,0,0,16777216,0,428,0,2,0,0,33554432,0,384,0,0,0,0,33554432,0,384,0,0,0,0,201326592,0,416,0,16777216,0,0,0,0,384,0,0,4,0,0,0,201805186,1409286160,2281701344,268566791,4288167936,201326655,0,384,268435456,0,0,0,0,0,416,0,0,0,0,4227858432,63,384,0,0,0,0,268435456,0,384,0,0,0,0,536870912,0,384,0,0,0,0,1073741824,0,384,0,0,0,0,2147483648,0,384,0,0,0,0,0,1,384,0,0,0,0,134217728,0,384,0,0,0,0,0,2,384,0,0,0,0,0,4,384,0,0,0,0,0,8,384,0,0,0,0,0,16,384,0,0,0,0,0,32,384,0,0,0,0,67108864,0,201804802,1409286160,2281701348,268566535,4288167936,63,0,201805186,1409286160,2281701348,268566535,4288167936,63,0,384,0,0,0,0,0,16320,384,0,0,0,0,0,64,384,0,0,0,0,0,128,384,0,0,0,0,0,256,384,0,0,0,0,0,512,384,0,0,0,0,0,1024,384,0,0,0,0,0,2048,384,0,0,0,0,0,4096,384,0,0,0,0,0,8192,384,0,0,0,0,0,384,384,0,16,0,0,0,0,65920,134217728,0,1,0,0,0,428,0,2,0,0,0,16384,384,0,0,0,0,0,16384,428,0,2,0,0,0,0,384,134217728,0,0,0,0,0,65920,0,0,1,0,0,0,384,0,0,0,0,64,0,384,1073741824,64,5,0,11537408,0,268435840,1073741824,64,5,0,11537408,0,384,1073741824,64,5,0,3072,0,384,0,0,0,0,11534336,0,384,0,0,0,0,0,32768,384,16,0,0,0,0,0,196992,67108864,0,0,0,0,0,384,67108864,0,0,0,0,0,384,0,0,0,0,0,393216,65920,0,0,131072,0,0,393216,384,0,0,0,0,0,262144,384,0,0,0,0,0,131072,2432,1073741824,1082130624,5,0,3072,0,67840,1140850688,1082130560,131072,0,0,0,67840,1140850688,1082130560,131077,0,2048,0,384,0,0,0,0,0,65536,396,0,0,0,0,0,0,384,16,0,0,0,1280,0,196992,67108864,0,131072,0,0,131072,196992,67108864,0,131072,0,0,262144,65920,67108864,0,0,0,0,0,262560,0,1,0,0,4194304,0,416,0,1,0,0,4194304,0,32,0,0,0,0,4227858432,63,0,0,0,0,0,0,16320,384,16,0,0,0,1536,0,384,16,0,0,0,1024,0]);;
        var token_sequence_lookup = new Uint8Array([60,105,109,112,111,114,116,62,47,42,62,62,62,61,61,61,123,33,59,125,42,42,61,45,45,39,34,33,61,61,40,44,95,36,123,92,92,34,63,63,61,58,124,124,61,38,38,61,94,61,43,43,37,61,126,61,91,93,46,46,46,48,88,41,96,64,107,101,121,102,114,97,109,101,115,35,69,78,68,95,79,70,95,80,82,79,68,85,67,84,73,79,78,105,110,115,116,97,110,99,101,111,102,101,120,116,101,110,100,115,83,67,82,73,80,84,115,117,112,112,111,114,116,115,106,115,97,115,121,110,99,98,114,101,97,107,99,111,110,116,105,110,117,101,104,114,107,101,121,103,101,110,108,105,110,107,109,101,116,97,112,97,114,97,109,116,121,112,101,111,102,119,104,105,108,101,102,117,110,99,116,105,111,110,100,101,98,117,103,103,101,114,118,111,105,100,110,117,108,108,103,101,116,111,110,108,121,114,101,116,117,114,110,121,105,101,108,100,117,114,108,65,66,55,49,50,51,52,53,54,60,60,61,47,47,61,62,42,47,45,61,36,61,92,92,39,63,46,43,61,48,120,64,115,117,112,112,111,114,116,115,105,109,112,111,114,116,97,110,116,101,120,112,111,114,116,83,84,89,76,69,115,99,114,105,112,116,97,119,97,105,116,98,97,115,101,99,111,109,109,97,110,100,108,101,116,97,114,103,101,116,119,105,116,104,102,105,110,97,108,108,121,100,101,102,97,117,108,116,118,97,114,110,101,119,60,33,60,47,62,92,47,48,79,48,111,48,66,48,98,64,105,109,112,111,114,116,64,109,101,100,105,97,105,110,112,117,116,105,109,103,105,102,101,109,98,101,100,101,108,115,101,115,111,117,114,99,101,115,119,105,116,99,104,115,116,97,116,105,99,115,116,121,108,101,115,117,112,101,114,115,101,116,97,114,101,97,99,111,110,115,116,99,97,116,99,104,99,108,97,115,115,99,97,115,101,99,111,108,116,114,97,99,107,116,104,114,111,119,116,104,105,115,116,114,117,101,116,114,121,119,98,114,102,97,108,115,101,102,114,111,109,102,111,114,100,101,108,101,116,101,100,111,110,111,116]);;
        function isTokenActive(token_id, row){
    var index  = ( row  * 7 ) + ( token_id  >> 5 );;
    var shift  = 1 << ( 31 & ( token_id ) );;
    return ( token_lookup[index] & shift ) != 0
};
        function scan_core(lexer, tk_row){
    switch(( lexer.get_byte_at( lexer.byte_offset ) & 127 )){
    case 33: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 33 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 79, tk_row ) ){
                        lexer.setToken( 79, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 77, tk_row ) ){
                    lexer.setToken( 77, 2, 2 );
                    return
                }
            } else if( isTokenActive( 35, tk_row ) ){
                lexer.setToken( 35, 1, 1 );
                return
            }
        }
    }
    break;
    case 34: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 34 ){
            if( isTokenActive( 34, tk_row ) && token_production( lexer, hc_html__ATTRIBUTE_STRING_VALUE, 23, 34, 4 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 33, tk_row ) ){
                lexer.setToken( 33, 1, 1 );
                return
            }
        }
    }
    break;
    case 35: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 35 ){
            if( isTokenActive( 171, tk_row ) ){
                lexer.setToken( 171, 1, 1 );
                return
            }
        }
    }
    break;
    case 36: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 36 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 123 ){
                if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 144, tk_row ) ){
                    lexer.setToken( 144, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 173, tk_row ) ){
                    lexer.setToken( 173, 2, 2 );
                    return
                }
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 61, tk_row ) ){
                lexer.setToken( 61, 1, 1 );
                return
            }
        }
    }
    break;
    case 37: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 37 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 153, tk_row ) ){
                    lexer.setToken( 153, 2, 2 );
                    return
                }
            } else if( isTokenActive( 89, tk_row ) ){
                lexer.setToken( 89, 1, 1 );
                return
            }
        }
    }
    break;
    case 38: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 38 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 38 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 164, tk_row ) ){
                        lexer.setToken( 164, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 72, tk_row ) ){
                    lexer.setToken( 72, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 159, tk_row ) ){
                    lexer.setToken( 159, 2, 2 );
                    return
                }
            } else if( isTokenActive( 75, tk_row ) ){
                lexer.setToken( 75, 1, 1 );
                return
            }
        }
    }
    break;
    case 39: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 39 ){
            if( isTokenActive( 34, tk_row ) && token_production( lexer, hc_html__ATTRIBUTE_STRING_VALUE, 23, 34, 4 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 32, tk_row ) ){
                lexer.setToken( 32, 1, 1 );
                return
            }
        }
    }
    break;
    case 40: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 40 ){
            if( isTokenActive( 36, tk_row ) ){
                lexer.setToken( 36, 1, 1 );
                return
            }
        }
    }
    break;
    case 41: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 41 ){
            if( isTokenActive( 113, tk_row ) ){
                lexer.setToken( 113, 1, 1 );
                return
            }
        }
    }
    break;
    case 42: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 42 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 42 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 162, tk_row ) ){
                        lexer.setToken( 162, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 90, tk_row ) ){
                    lexer.setToken( 90, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 21, tk_row ) ){
                    lexer.setToken( 21, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 151, tk_row ) ){
                    lexer.setToken( 151, 2, 2 );
                    return
                }
            } else if( isTokenActive( 62, tk_row ) ){
                lexer.setToken( 62, 1, 1 );
                return
            }
        }
    }
    break;
    case 43: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 43 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 43 ){
                if( isTokenActive( 95, tk_row ) ){
                    lexer.setToken( 95, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 154, tk_row ) ){
                    lexer.setToken( 154, 2, 2 );
                    return
                }
            } else if( isTokenActive( 87, tk_row ) ){
                lexer.setToken( 87, 1, 1 );
                return
            }
        }
    }
    break;
    case 44: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 44 ){
            if( isTokenActive( 58, tk_row ) ){
                lexer.setToken( 58, 1, 1 );
                return
            }
        }
    }
    break;
    case 45: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 45 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 45 ){
                if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 26, tk_row ) ){
                    lexer.setToken( 26, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 155, tk_row ) ){
                    lexer.setToken( 155, 2, 2 );
                    return
                }
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 88, tk_row ) ){
                lexer.setToken( 88, 1, 1 );
                return
            }
        }
    }
    break;
    case 46: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 46 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 111, tk_row ) && lexer.get_byte_at( lexer.byte_offset  + 2 ) == 46 ){
                    lexer.setToken( 111, 3, 3 );
                    return
                }
            } else if( isTokenActive( 98, tk_row ) ){
                lexer.setToken( 98, 1, 1 );
                return
            }
        }
    }
    break;
    case 47: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 47 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 42 ){
                if( isTokenActive( 211, tk_row ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 212, tk_row ) && token_production( lexer, hc_css__comment, 8, 212, 2048 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 20, tk_row ) ){
                    lexer.setToken( 20, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 211, tk_row ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 22, tk_row ) ){
                    lexer.setToken( 22, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 29, tk_row ) ){
                    lexer.setToken( 29, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 152, tk_row ) ){
                    lexer.setToken( 152, 2, 2 );
                    return
                }
            } else if( isTokenActive( 211, tk_row ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 212, tk_row ) && token_production( lexer, hc_css__comment, 8, 212, 2048 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 10, tk_row ) ){
                lexer.setToken( 10, 1, 1 );
                return
            }
        }
    }
    break;
    case 48: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 48 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 88 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 105, tk_row ) ){
                    lexer.setToken( 105, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 120 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 106, tk_row ) ){
                    lexer.setToken( 106, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 79 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 107, tk_row ) ){
                    lexer.setToken( 107, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 108, tk_row ) ){
                    lexer.setToken( 108, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 66 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 109, tk_row ) ){
                    lexer.setToken( 109, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 98 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 110, tk_row ) ){
                    lexer.setToken( 110, 2, 2 );
                    return
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 199, tk_row ) ){
                lexer.setToken( 199, 1, 1 );
                return
            }
        }
    }
    break;
    case 49: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 49 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 200, tk_row ) ){
                lexer.setToken( 200, 1, 1 );
                return
            }
        }
    }
    break;
    case 50: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 50 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 201, tk_row ) ){
                lexer.setToken( 201, 1, 1 );
                return
            }
        }
    }
    break;
    case 51: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 51 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 202, tk_row ) ){
                lexer.setToken( 202, 1, 1 );
                return
            }
        }
    }
    break;
    case 52: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 52 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 203, tk_row ) ){
                lexer.setToken( 203, 1, 1 );
                return
            }
        }
    }
    break;
    case 53: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 53 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 204, tk_row ) ){
                lexer.setToken( 204, 1, 1 );
                return
            }
        }
    }
    break;
    case 54: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 54 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 205, tk_row ) ){
                lexer.setToken( 205, 1, 1 );
                return
            }
        }
    }
    break;
    case 55: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 55 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 198, tk_row ) ){
                lexer.setToken( 198, 1, 1 );
                return
            }
        }
    }
    break;
    case 58: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 58 ){
            if( isTokenActive( 70, tk_row ) ){
                lexer.setToken( 70, 1, 1 );
                return
            }
        }
    }
    break;
    case 59: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 59 ){
            if( isTokenActive( 17, tk_row ) ){
                lexer.setToken( 17, 1, 1 );
                return
            }
        }
    }
    break;
    case 60: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 60 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 5 == compare( lexer, lexer.byte_offset  + 2, 2, 5, token_sequence_lookup ) ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 7 ) == 62 ){
                        if( isTokenActive( 12, tk_row ) ){
                            lexer.setToken( 12, 8, 8 );
                            return
                        }
                    } else if( isTokenActive( 9, tk_row ) ){
                        lexer.setToken( 9, 7, 7 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 60 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 156, tk_row ) ){
                        lexer.setToken( 156, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 84, tk_row ) ){
                    lexer.setToken( 84, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 33 ){
                if( isTokenActive( 24, tk_row ) ){
                    lexer.setToken( 24, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 28, tk_row ) ){
                    lexer.setToken( 28, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 80, tk_row ) ){
                    lexer.setToken( 80, 2, 2 );
                    return
                }
            } else if( isTokenActive( 27, tk_row ) ){
                lexer.setToken( 27, 1, 1 );
                return
            }
        }
    }
    break;
    case 61: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 61 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 78, tk_row ) ){
                        lexer.setToken( 78, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 76, tk_row ) ){
                    lexer.setToken( 76, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 150, tk_row ) ){
                    lexer.setToken( 150, 2, 2 );
                    return
                }
            } else if( isTokenActive( 14, tk_row ) ){
                lexer.setToken( 14, 1, 1 );
                return
            }
        }
    }
    break;
    case 62: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 62 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 62 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 62 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 61 ){
                        if( isTokenActive( 158, tk_row ) ){
                            lexer.setToken( 158, 4, 4 );
                            return
                        }
                    } else if( isTokenActive( 86, tk_row ) ){
                        lexer.setToken( 86, 3, 3 );
                        return
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 157, tk_row ) ){
                        lexer.setToken( 157, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 85, tk_row ) ){
                    lexer.setToken( 85, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 81, tk_row ) ){
                    lexer.setToken( 81, 2, 2 );
                    return
                }
            } else if( isTokenActive( 11, tk_row ) ){
                lexer.setToken( 11, 1, 1 );
                return
            }
        }
    }
    break;
    case 63: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 63 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 63 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 163, tk_row ) ){
                        lexer.setToken( 163, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 148, tk_row ) ){
                    lexer.setToken( 148, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 147, tk_row ) ){
                    lexer.setToken( 147, 2, 2 );
                    return
                }
            } else if( isTokenActive( 69, tk_row ) ){
                lexer.setToken( 69, 1, 1 );
                return
            }
        }
    }
    break;
    case 64: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 64 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 107 ){
                if( isTokenActive( 181, tk_row ) && 8 == compare( lexer, lexer.byte_offset  + 2, 67, 8, token_sequence_lookup ) ){
                    lexer.setToken( 181, 10, 10 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 183, tk_row ) && 7 == compare( lexer, lexer.byte_offset  + 2, 254, 7, token_sequence_lookup ) ){
                    lexer.setToken( 183, 9, 9 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( isTokenActive( 166, tk_row ) && 5 == compare( lexer, lexer.byte_offset  + 2, 352, 5, token_sequence_lookup ) ){
                    lexer.setToken( 166, 7, 7 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 109 ){
                if( isTokenActive( 180, tk_row ) && 4 == compare( lexer, lexer.byte_offset  + 2, 359, 4, token_sequence_lookup ) ){
                    lexer.setToken( 180, 6, 6 );
                    return
                }
            }
        }
    }
    break;
    case 65: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 65 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 194, tk_row ) ){
                lexer.setToken( 194, 1, 1 );
                return
            }
        }
    }
    break;
    case 66: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 66 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 195, tk_row ) ){
                lexer.setToken( 195, 1, 1 );
                return
            }
        }
    }
    break;
    case 67: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 67 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 196, tk_row ) ){
                lexer.setToken( 196, 1, 1 );
                return
            }
        }
    }
    break;
    case 68: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 68 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 197, tk_row ) ){
                lexer.setToken( 197, 1, 1 );
                return
            }
        }
    }
    break;
    case 69: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 69 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 186, tk_row ) ){
                lexer.setToken( 186, 1, 1 );
                return
            }
        }
    }
    break;
    case 70: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 70 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 188, tk_row ) ){
                lexer.setToken( 188, 1, 1 );
                return
            }
        }
    }
    break;
    case 83: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 83 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 67 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 112, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 37, tk_row ) ){
                        lexer.setToken( 37, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 84 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 278, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 30, tk_row ) ){
                        lexer.setToken( 30, 5, 5 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 91: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 91 ){
            if( isTokenActive( 96, tk_row ) ){
                lexer.setToken( 96, 1, 1 );
                return
            }
        }
    }
    break;
    case 92: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 92 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 92 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 34 ){
                    if( isTokenActive( 184, tk_row ) ){
                        lexer.setToken( 184, 3, 3 );
                        return
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 39 ){
                    if( isTokenActive( 185, tk_row ) ){
                        lexer.setToken( 185, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 206, tk_row ) ){
                    lexer.setToken( 206, 2, 2 );
                    return
                }
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 65, tk_row ) ){
                lexer.setToken( 65, 1, 1 );
                return
            }
        }
    }
    break;
    case 93: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 93 ){
            if( isTokenActive( 97, tk_row ) ){
                lexer.setToken( 97, 1, 1 );
                return
            }
        }
    }
    break;
    case 94: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 94 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 160, tk_row ) ){
                    lexer.setToken( 160, 2, 2 );
                    return
                }
            } else if( isTokenActive( 74, tk_row ) ){
                lexer.setToken( 74, 1, 1 );
                return
            }
        }
    }
    break;
    case 95: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 95 ){
            if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 60, tk_row ) ){
                lexer.setToken( 60, 1, 1 );
                return
            }
        }
    }
    break;
    case 96: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 96 ){
            if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 142, tk_row ) ){
                lexer.setToken( 142, 1, 1 );
                return
            }
        }
    }
    break;
    case 97: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 97 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 115 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 129, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 116, tk_row ) ){
                            lexer.setToken( 116, 5, 5 );
                            return
                        } else if( isTokenActive( 112, tk_row ) ){
                            lexer.setToken( 112, 5, 5 );
                            return
                        }
                    }
                } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 63, tk_row ) ){
                    lexer.setToken( 63, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 119 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 289, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 123, tk_row ) ){
                        lexer.setToken( 123, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 415, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 41, tk_row ) ){
                        lexer.setToken( 41, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 110 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 100 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 209, tk_row ) ){
                        lexer.setToken( 209, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 189, tk_row ) ){
                lexer.setToken( 189, 1, 1 );
                return
            }
        }
    }
    break;
    case 98: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 98 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 101 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 134, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 130, tk_row ) ){
                            lexer.setToken( 130, 5, 5 );
                            return
                        }
                    }
                } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 43, tk_row ) ){
                    lexer.setToken( 43, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 294, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 42, tk_row ) ){
                        lexer.setToken( 42, 4, 4 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 190, tk_row ) ){
                lexer.setToken( 190, 1, 1 );
                return
            }
        }
    }
    break;
    case 99: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 99 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 110 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 116 ){
                        if( 4 == compare( lexer, lexer.byte_offset  + 4, 140, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 129, tk_row ) ){
                                lexer.setToken( 129, 8, 8 );
                                return
                            }
                        }
                    } else if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 115 ){
                        if( lexer.get_byte_at( lexer.byte_offset  + 4 ) == 116 ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 126, tk_row ) ){
                                lexer.setToken( 126, 5, 5 );
                                return
                            }
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 109 ){
                    if( 4 == compare( lexer, lexer.byte_offset  + 3, 299, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 45, tk_row ) ){
                            lexer.setToken( 45, 7, 7 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 108 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 44, tk_row ) ){
                        lexer.setToken( 44, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 425, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 135, tk_row ) ){
                            lexer.setToken( 135, 5, 5 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 115 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 128, tk_row ) ){
                            lexer.setToken( 128, 4, 4 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 108 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 429, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 138, tk_row ) ){
                        lexer.setToken( 138, 5, 5 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 191, tk_row ) ){
                lexer.setToken( 191, 1, 1 );
                return
            }
        }
    }
    break;
    case 100: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 100 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 98 ){
                    if( 5 == compare( lexer, lexer.byte_offset  + 3, 187, 5, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 137, tk_row ) ){
                            lexer.setToken( 137, 8, 8 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 102 ){
                    if( 4 == compare( lexer, lexer.byte_offset  + 3, 325, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 67, tk_row ) ){
                            lexer.setToken( 67, 7, 7 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 108 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 478, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 91, tk_row ) ){
                            lexer.setToken( 91, 6, 6 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 120, tk_row ) ){
                    lexer.setToken( 120, 2, 2 );
                    return
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 192, tk_row ) ){
                lexer.setToken( 192, 1, 1 );
                return
            }
        }
    }
    break;
    case 101: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 101 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 120 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( 4 == compare( lexer, lexer.byte_offset  + 3, 106, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 139, tk_row ) ){
                            lexer.setToken( 139, 7, 7 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 273, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 15, tk_row ) ){
                            lexer.setToken( 15, 6, 6 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 109 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 375, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 46, tk_row ) ){
                        lexer.setToken( 46, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 108 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 380, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 119, tk_row ) ){
                        lexer.setToken( 119, 4, 4 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 187, tk_row ) ){
                lexer.setToken( 187, 1, 1 );
                return
            }
        }
    }
    break;
    case 102: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 102 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 117 ){
                if( 6 == compare( lexer, lexer.byte_offset  + 2, 178, 6, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 117, tk_row ) ){
                        lexer.setToken( 117, 8, 8 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 5 == compare( lexer, lexer.byte_offset  + 2, 317, 5, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 136, tk_row ) ){
                        lexer.setToken( 136, 7, 7 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 465, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 102, tk_row ) ){
                        lexer.setToken( 102, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 470, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 64, tk_row ) ){
                        lexer.setToken( 64, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 122, tk_row ) ){
                        lexer.setToken( 122, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 56, tk_row ) ){
                lexer.setToken( 56, 1, 1 );
                return
            } else if( isTokenActive( 193, tk_row ) ){
                lexer.setToken( 193, 1, 1 );
                return
            }
        }
    }
    break;
    case 103: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 103 ){
            if( 2 == compare( lexer, lexer.byte_offset  + 1, 201, 2, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 114, tk_row ) ){
                    lexer.setToken( 114, 3, 3 );
                    return
                }
            }
        }
    }
    break;
    case 104: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 104 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 47, tk_row ) ){
                    lexer.setToken( 47, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 105: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 105 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 110 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 115 ){
                    if( 7 == compare( lexer, lexer.byte_offset  + 3, 96, 7, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 82, tk_row ) ){
                            lexer.setToken( 82, 10, 10 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 366, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 40, tk_row ) ){
                            lexer.setToken( 40, 5, 5 );
                            return
                        }
                    }
                } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 83, tk_row ) ){
                    lexer.setToken( 83, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 109 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 264, 3, token_sequence_lookup ) ){
                        if( lexer.get_byte_at( lexer.byte_offset  + 6 ) == 97 ){
                            if( 2 == compare( lexer, lexer.byte_offset  + 7, 268, 2, token_sequence_lookup ) ){
                                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 178, tk_row ) ){
                                    lexer.setToken( 178, 9, 9 );
                                    return
                                }
                            }
                        } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 13, tk_row ) ){
                            lexer.setToken( 13, 6, 6 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 103 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 48, tk_row ) ){
                        lexer.setToken( 48, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 118, tk_row ) ){
                    lexer.setToken( 118, 2, 2 );
                    return
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 174, tk_row ) ){
                lexer.setToken( 174, 1, 1 );
                return
            }
        }
    }
    break;
    case 106: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 106 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 38, tk_row ) ){
                    lexer.setToken( 38, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 107: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 107 ){
            if( 5 == compare( lexer, lexer.byte_offset  + 1, 147, 5, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 49, tk_row ) ){
                    lexer.setToken( 49, 6, 6 );
                    return
                }
            }
        }
    }
    break;
    case 108: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 108 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 154, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 50, tk_row ) ){
                        lexer.setToken( 50, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 125, tk_row ) ){
                        lexer.setToken( 125, 3, 3 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 109: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 109 ){
            if( 3 == compare( lexer, lexer.byte_offset  + 1, 157, 3, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 51, tk_row ) ){
                    lexer.setToken( 51, 4, 4 );
                    return
                }
            }
        }
    }
    break;
    case 110: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 110 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 117 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 198, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 103, tk_row ) ){
                        lexer.setToken( 103, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 119 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 99, tk_row ) ){
                        lexer.setToken( 99, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 168, tk_row ) ){
                        lexer.setToken( 168, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 104, tk_row ) ){
                lexer.setToken( 104, 1, 1 );
                return
            }
        }
    }
    break;
    case 111: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 111 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 110 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 205, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 179, tk_row ) ){
                        lexer.setToken( 179, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 124, tk_row ) ){
                    lexer.setToken( 124, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 210, tk_row ) ){
                    lexer.setToken( 210, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 112: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 112 ){
            if( 4 == compare( lexer, lexer.byte_offset  + 1, 161, 4, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 52, tk_row ) ){
                    lexer.setToken( 52, 5, 5 );
                    return
                }
            }
        }
    }
    break;
    case 114: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 114 ){
            if( 5 == compare( lexer, lexer.byte_offset  + 1, 208, 5, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 131, tk_row ) ){
                    lexer.setToken( 131, 6, 6 );
                    return
                }
            }
        }
    }
    break;
    case 115: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 115 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 117 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 112 ){
                        if( 4 == compare( lexer, lexer.byte_offset  + 4, 120, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 207, tk_row ) ){
                                lexer.setToken( 207, 8, 8 );
                                return
                            }
                        }
                    } else if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 101 ){
                        if( lexer.get_byte_at( lexer.byte_offset  + 4 ) == 114 ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 145, tk_row ) ){
                                lexer.setToken( 145, 5, 5 );
                                return
                            }
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 99 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 283, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 39, tk_row ) ){
                        lexer.setToken( 39, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 384, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 53, tk_row ) ){
                        lexer.setToken( 53, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 119 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 390, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 127, tk_row ) ){
                        lexer.setToken( 127, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 116 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 97 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 397, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 140, tk_row ) ){
                            lexer.setToken( 140, 6, 6 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 403, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 31, tk_row ) ){
                            lexer.setToken( 31, 5, 5 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 115, tk_row ) ){
                        lexer.setToken( 115, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 175, tk_row ) ){
                lexer.setToken( 175, 1, 1 );
                return
            }
        }
    }
    break;
    case 116: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 116 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 121 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 167, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 93, tk_row ) ){
                        lexer.setToken( 93, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 307, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 146, tk_row ) ){
                        lexer.setToken( 146, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 97 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 442, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 54, tk_row ) ){
                            lexer.setToken( 54, 5, 5 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 117 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 101, tk_row ) ){
                            lexer.setToken( 101, 4, 4 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 121 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 134, tk_row ) ){
                        lexer.setToken( 134, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 104 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 447, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 133, tk_row ) ){
                            lexer.setToken( 133, 5, 5 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 105 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 115 ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 100, tk_row ) ){
                            lexer.setToken( 100, 4, 4 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 182, tk_row ) ){
                    lexer.setToken( 182, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 117: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 117 ){
            if( 2 == compare( lexer, lexer.byte_offset  + 1, 219, 2, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 167, tk_row ) ){
                    lexer.setToken( 167, 3, 3 );
                    return
                }
            }
        }
    }
    break;
    case 118: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 118 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 194, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 92, tk_row ) ){
                        lexer.setToken( 92, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 68, tk_row ) ){
                        lexer.setToken( 68, 3, 3 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 119: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 119 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 104 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 173, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 121, tk_row ) ){
                        lexer.setToken( 121, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 313, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 132, tk_row ) ){
                        lexer.setToken( 132, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 98 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 55, tk_row ) ){
                        lexer.setToken( 55, 3, 3 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 121: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 121 ){
            if( 4 == compare( lexer, lexer.byte_offset  + 1, 214, 4, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 149, tk_row ) ){
                    lexer.setToken( 149, 5, 5 );
                    return
                }
            }
        }
    }
    break;
    case 123: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 123 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 33 ){
                if( isTokenActive( 19, tk_row ) ){
                    lexer.setToken( 19, 2, 2 );
                    return
                }
            } else if( isTokenActive( 16, tk_row ) ){
                lexer.setToken( 16, 1, 1 );
                return
            }
        }
    }
    break;
    case 124: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 124 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 124 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 165, tk_row ) ){
                        lexer.setToken( 165, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 71, tk_row ) ){
                    lexer.setToken( 71, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 161, tk_row ) ){
                    lexer.setToken( 161, 2, 2 );
                    return
                }
            } else if( isTokenActive( 73, tk_row ) ){
                lexer.setToken( 73, 1, 1 );
                return
            }
        }
    }
    break;
    case 125: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 125 ){
            if( isTokenActive( 18, tk_row ) ){
                lexer.setToken( 18, 1, 1 );
                return
            }
        }
    }
    break;
    case 126: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 126 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 172, tk_row ) ){
                    lexer.setToken( 172, 2, 2 );
                    return
                }
            } else if( isTokenActive( 94, tk_row ) ){
                lexer.setToken( 94, 1, 1 );
                return
            }
        }
    }
    break;
    default: 
    break
};
    if( isTokenActive( 23, tk_row ) && pre_scan( lexer, 0 ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) ){
    return
} else if( isTokenActive( 25, tk_row ) && pre_scan( lexer, 1 ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) ){
    return
} else if( isTokenActive( 34, tk_row ) && pre_scan( lexer, 2 ) && token_production( lexer, hc_html__ATTRIBUTE_STRING_VALUE, 23, 34, 4 ) ){
    return
} else if( isTokenActive( 59, tk_row ) && pre_scan( lexer, 3 ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) ){
    return
} else if( isTokenActive( 141, tk_row ) && pre_scan( lexer, 3 ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) ){
    return
} else if( isTokenActive( 143, tk_row ) && pre_scan( lexer, 4 ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) ){
    return
} else if( isTokenActive( 170, tk_row ) && pre_scan( lexer, 5 ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) ){
    return
} else if( isTokenActive( 176, tk_row ) && pre_scan( lexer, 5 ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) ){
    return
} else if( isTokenActive( 177, tk_row ) && pre_scan( lexer, 0 ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) ){
    return
} else if( isTokenActive( 208, tk_row ) && pre_scan( lexer, 0 ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) ){
    return
} else if( isTokenActive( 211, tk_row ) && pre_scan( lexer, 6 ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) ){
    return
} else if( isTokenActive( 212, tk_row ) && pre_scan( lexer, 7 ) && token_production( lexer, hc_css__comment, 8, 212, 2048 ) ){
    return
} else if( isTokenActive( 8, tk_row ) && lexer.isSP( true ) ){
    return
} else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) ){
    return
} else if( isTokenActive( 2, tk_row ) && lexer.isSym( true ) ){
    return
} else if( isTokenActive( 7, tk_row ) && lexer.isNL(  ) ){
    return
} else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) ){
    return
} else if( isTokenActive( 169, tk_row ) && false ){
    return
}
}

function scan(lexer, tk_row, pk_row){
    if( ( ( lexer._type ) <= 0 ) )scan_core( lexer, tk_row );;
    if( isTokenActive( 66, tk_row ) && nocap_lb_6725b1140c2474a9( lexer ) ){
    return
};
    if( ( pk_row  > 0 && isTokenActive( lexer._type, pk_row ) ) ){
    while( ( isTokenActive( lexer._type, pk_row ) ) ) {
            lexer.next(  );
            scan_core( lexer, tk_row )
        }
}
}
        function pre_scan(lexer, tk_row){
    var tk_length = lexer.token_length;;
    var bt_length = lexer.byte_length;;
    var type_cache = lexer._type;;
    scan( lexer, tk_row, 0 );
    var type_out = lexer._type;;
    lexer._type  = type_cache;
    lexer.token_length  = tk_length;
    lexer.byte_length  = bt_length;
    return type_out  > 0
}

function branch_0072fd18d3aeca7c(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 7, 19 );
    return 0
};
    return - 1
}

function branch_0160f0b291f6054b(state, db, prod){
    'offset 10 peek_level-1 [  (  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 11 peek_level0 [  ... 40 { [ )  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_695fb15b8fbd4b08, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_b6b33baa71b23679, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_017e32e2623dd334(state, db, prod){
    add_reduce( state, 1, 352 );
    return 311
}

function branch_0197a94536844bcf(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 174 );
    return 0
};
    return - 1
}

function branch_021e47c347f3394c(state, db, prod){
    add_reduce( state, 2, 0 );
    return 159
}

function branch_029533987ebaf81f(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_f35d7e4ef9d5bd98, 110 );
    return hc_javascript__binding_element( state, db, 0 )
};
    return - 1
}

function branch_03197776794950c3(state, db, prod){
    add_reduce( state, 1, 343 );
    return 264
}

function branch_03a886e6dea22642(state, db, prod){
    'offset 4 peek_level-1 [  , )  ]';
    '186:626 javascript__arguments=>τ( javascript__argument_list • τ, τ)';
    '186:628 javascript__arguments=>τ( javascript__argument_list • τ)';
    scan( state.lexer, 16, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( set_production /*186*/, 186 );
    '"--LEAF--"';
    '186:626 javascript__arguments=>τ( javascript__argument_list • τ, τ)';
    consume( state );
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
        consume( state );
        add_reduce( state, 4, 258 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 113 ){
    'Asserts [  )  ]';
    state.push_fn( set_production /*186*/, 186 );
    '"--LEAF--"';
    '186:628 javascript__arguments=>τ( javascript__argument_list • τ)';
    consume( state );
    add_reduce( state, 3, 258 );
    return 0
};
    return - 1
}

function branch_03bb38ff4330ba78(state, db, prod){
    'offset 7 peek_level-1 [  ;  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression • τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:503 javascript__iteration_statement=>τfor τ( javascript__expression • τ; τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression • τ; javascript__expression τ; τ) javascript__statement';
    '134:510 javascript__iteration_statement=>τfor τ( javascript__expression • τ; τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 8 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ;  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; τ) javascript__statement';
    '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; javascript__expression τ) javascript__statement';
    '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; τ) javascript__statement';
    scan( state.lexer, 19, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 10 peek_level-1 [  126  ]';
        '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; τ) javascript__statement';
        scan( state.lexer, 21, 11 );
        state.push_fn( branch_7a58197cd02b7883, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        'Asserts [  ;  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 10 peek_level-1 [  ;  ]';
        '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; javascript__expression τ) javascript__statement';
        '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; τ) javascript__statement';
        'offset 11 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
        '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • javascript__expression τ) javascript__statement';
        '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • τ) javascript__statement';
        scan( state.lexer, 22, 9 );
        if( isTokenActive( state.lexer._type, 20 ) ){
            'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*134*/, 134 );
            '"--LEAF--"';
            '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • javascript__expression τ) javascript__statement';
            state.push_fn( branch_7f34f27ddc9747e8, 134 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( set_production /*134*/, 134 );
            '"--LEAF--"';
            '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • τ) javascript__statement';
            consume( state );
            state.push_fn( branch_e7ca26ec7501a7a9, 134 );
            return hc_javascript__statement( state, db, 0 )
        }
    }
};
    return - 1
}

function branch_0420b34e5168643c(state, db, prod){
    add_reduce( state, 1, 94 );
    return 0
}

function branch_04913e5fc0e0ed8b(state, db, prod){
    state.push_fn( branch_a473dd18c6f44f50, 35 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_04c6b273b0fc55f8(state, db, prod){
    '"--LEAF--"';
    '241:811 css__media_feature=>τ( • css__mf_range τ)';
    state.push_fn( branch_38d7ec245d2d4794, 241 );
    return hc_css__mf_range( state, db, 0 )
}

function branch_04de800f07405fba(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:838 css__mf_range=>css__mf_value τ< • tk:css__identifier τ<= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:838 css__mf_range=>css__mf_value τ< tk:css__identifier • τ<= css__mf_value';
    scan( state.lexer, 25, 24 );
    if( ( state.lexer._type  == 80 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_05576081eb9037d4(state, db, prod){
    'offset 7 peek_level-1 [  >  ]';
    '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> css__CSS τ</ τSTYLE τ>';
    '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> css__CSS τ</ τstyle τ>';
    '17:71 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> τ</ τSTYLE τ>';
    '17:75 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> τ</ τstyle τ>';
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    'Assert Consume [  >  ]';
    consume( state );
    'offset 8 peek_level0 [   @import @media @keyframes @supports * 216 # . [ : </  ]';
    '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • css__CSS τ</ τSTYLE τ>';
    '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • css__CSS τ</ τstyle τ>';
    '17:71 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • τ</ τSTYLE τ>';
    '17:75 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • τ</ τstyle τ>';
    scan( state.lexer, 26, 9 );
    if( isTokenActive( state.lexer._type, 27 ) ){
        'Asserts [   @import @media @keyframes @supports * 216 # . [ :  ]';
        'offset 10 peek_level-1 [  202  ]';
        '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • css__CSS τ</ τSTYLE τ>';
        '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • css__CSS τ</ τstyle τ>';
        scan( state.lexer, 28, 9 );
        state.push_fn( branch_06feb694997963fa, 0 );
        return hc_css__CSS( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        'Asserts [  </  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 10 peek_level-1 [  </  ]';
        '17:71 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • τ</ τSTYLE τ>';
        '17:75 html__TAG=>τ< τstyle html__ATTRIBUTES τ> • τ</ τstyle τ>';
        'offset 11 peek_level-1 [  STYLE style  ]';
        '17:71 html__TAG=>τ< τstyle html__ATTRIBUTES τ> τ</ • τSTYLE τ>';
        '17:75 html__TAG=>τ< τstyle html__ATTRIBUTES τ> τ</ • τstyle τ>';
        scan( state.lexer, 29, 9 );
        if( state.lexer._type  == 30 ){
            'Asserts [  STYLE  ]';
            state.push_fn( set_production /*17*/, 17 );
            '"--LEAF--"';
            '17:71 html__TAG=>τ< τstyle html__ATTRIBUTES τ> τ</ • τSTYLE τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 26 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 31 ){
            'Asserts [  style  ]';
            state.push_fn( set_production /*17*/, 17 );
            '"--LEAF--"';
            '17:75 html__TAG=>τ< τstyle html__ATTRIBUTES τ> τ</ • τstyle τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 26 );
                return 0
            };
            return - 1
        }
    }
};
    return - 1
}

function branch_05f770f30d6a4ff1(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__exponentiation_expression_goto( state, db, 75 )
}

function branch_06693284d683e088(state, db, prod){
    add_reduce( state, 2, 228 );
    return 155
}

function branch_0673be5ff0aaa431(state, db, prod){
    '"--LEAF--"';
    '176:613 javascript__template_spans=>javascript__template_middle_list • javascript__template_tail';
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    state.push_fn( branch_e64f3615854135b9, 176 );
    return hc_javascript__template_tail( state, db, 0 )
};
    return - 1
}

function branch_06baf88f7890c41a(state, db, prod){
    add_reduce( state, 7, 187 );
    return 134
}

function branch_06feb694997963fa(state, db, prod){
    'offset 11 peek_level-1 [  </  ]';
    '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES τ> css__CSS • τ</ τSTYLE τ>';
    '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES τ> css__CSS • τ</ τstyle τ>';
    scan( state.lexer, 30, 9 );
    if( state.lexer._type  == 28 ){
    'Assert Consume [  </  ]';
    consume( state );
    'offset 12 peek_level-1 [  STYLE style  ]';
    '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES τ> css__CSS τ</ • τSTYLE τ>';
    '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES τ> css__CSS τ</ • τstyle τ>';
    scan( state.lexer, 29, 9 );
    if( state.lexer._type  == 30 ){
        'Asserts [  STYLE  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES τ> css__CSS τ</ • τSTYLE τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 21 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 31 ){
        'Asserts [  style  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES τ> css__CSS τ</ • τstyle τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 21 );
            return 0
        };
        return - 1
    }
};
    return - 1
}

function branch_07400e963cc2aa65(state, db, prod){
    'offset 8 peek_level-1 [  {  ]';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage • τ{ javascript__class_body τ}';
    '165:578 javascript__class_expression=>τclass javascript__class_heritage • τ{ τ}';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage • τ{ javascript__class_body τ}';
    '158:561 javascript__class_declaration=>τclass javascript__class_heritage • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 9 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
    '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ • τ}';
    '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        'offset 11 peek_level-1 [  160  ]';
        '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
        '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
        scan( state.lexer, 33, 11 );
        state.push_fn( branch_a43fce48572b8630, 0 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 11 peek_level-1 [  }  ]';
        '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ • τ}';
        '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ • τ}';
        'offset 12 peek_level-1 [  END_OF_FILE ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl ,  ]';
        '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ τ} •';
        '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ τ} •';
        scan( state.lexer, 34, 11 );
        if( state.lexer._type  == 1 ){
            'Asserts [  END_OF_FILE  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_9588b10a02a5aa6c, 75 );
            state.push_fn( branch_f756413485dfcd88, 121 );
            return 0
        } else {
            '"--LEAF--"';
            '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ τ} •';
            add_reduce( state, 4, 235 );
            return hc_javascript__statement_list_item_goto( state, db, 75 )
        }
    }
};
    return - 1
}

function branch_07f51c15285b9925(state, db, prod){
    'offset 7 peek_level-1 [  in of  ]';
    '134:492 javascript__iteration_statement=>τfor τ( javascript__left_hand_side_expression • τin javascript__expression τ) javascript__statement';
    '134:505 javascript__iteration_statement=>τfor τ( javascript__left_hand_side_expression • τof javascript__expression τ) javascript__statement';
    scan( state.lexer, 35, 11 );
    if( state.lexer._type  == 83 ){
    'Asserts [  in  ]';
    state.push_fn( set_production /*134*/, 134 );
    '"--LEAF--"';
    '134:492 javascript__iteration_statement=>τfor τ( javascript__left_hand_side_expression • τin javascript__expression τ) javascript__statement';
    consume( state );
    state.push_fn( branch_b9bf377dde48a035, 134 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 124 ){
    'Asserts [  of  ]';
    state.push_fn( set_production /*134*/, 134 );
    '"--LEAF--"';
    '134:505 javascript__iteration_statement=>τfor τ( javascript__left_hand_side_expression • τof javascript__expression τ) javascript__statement';
    consume( state );
    state.push_fn( branch_3552ea689089b4a2, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_08342825069b0160(state, db, prod){
    'offset 4 peek_level-1 [  , }  ]';
    '50:210 javascript__export_clause=>τ{ javascript__export_clause_list_399 • τ, τ}';
    '50:212 javascript__export_clause=>τ{ javascript__export_clause_list_399 • τ}';
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( set_production /*50*/, 50 );
    '"--LEAF--"';
    '50:210 javascript__export_clause=>τ{ javascript__export_clause_list_399 • τ, τ}';
    consume( state );
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 4, 62 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*50*/, 50 );
    '"--LEAF--"';
    '50:212 javascript__export_clause=>τ{ javascript__export_clause_list_399 • τ}';
    consume( state );
    add_reduce( state, 3, 62 );
    return 0
};
    return - 1
}

function branch_08ae789b89d7d863(state, db, prod){
    add_reduce( state, 2, 12 );
    add_reduce( state, 1, 98 );
    add_reduce( state, 1, 115 );
    return 0
}

function branch_0912092e7d3508ca(state, db, prod){
    add_reduce( state, 3, 53 );
    return 0
}

function branch_0984293846c4da1e(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return hc_css__media_condition_without_or_goto( state, db, 240 )
};
    return - 1
}

function branch_09da1ad173d333a8(state, db, prod){
    'offset 3 peek_level-1 [  ; @media @keyframes @supports * # . [ : </ END_OF_PRODUCTION 216  ]';
    '254:853 css__AT_RULE=>css__keyframes • τ;';
    '254:856 css__AT_RULE=>css__keyframes •';
    scan( state.lexer, 38, 24 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*254*/, 254 );
    '"--LEAF--"';
    '254:853 css__AT_RULE=>css__keyframes • τ;';
    consume( state );
    add_reduce( state, 2, 14 );
    return 0
} else {
    '"--LEAF--"';
    '254:856 css__AT_RULE=>css__keyframes •';
    add_reduce( state, 1, 14 );
    return 254
};
    return - 1
}

function branch_0aa85f4426bcd38c(state, db, prod){
    add_reduce( state, 2, 0 );
    return 291
}

function branch_0accdf44ffc3ad18(state, db, prod){
    'offset 7 peek_level0 [  only not 216 ( ; END_OF_PRODUCTION  ]';
    '204:694 css__import=>τ@import css__url css__import_group_1287_0_ • css__import_list_1289';
    '204:698 css__import=>τ@import css__url css__import_group_1287_0_ •';
    scan( state.lexer, 39, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    'Asserts [  only not 216 (  ]';
    state.push_fn( set_production /*204*/, 204 );
    '"--LEAF--"';
    '204:694 css__import=>τ@import css__url css__import_group_1287_0_ • css__import_list_1289';
    state.push_fn( branch_472b2c778a3a0605, 204 );
    return hc_css__import_list_1289( state, db, 0 )
} else {
    '"--LEAF--"';
    '204:698 css__import=>τ@import css__url css__import_group_1287_0_ •';
    add_reduce( state, 3, 285 );
    return 204
};
    return - 1
}

function branch_0b4241142cbf5abe(state, db, prod){
    'offset 8 peek_level-1 [  )  ]';
    '98:368 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 9 peek_level-1 [  {  ]';
    '98:368 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
        'Assert Consume [  {  ]';
        consume( state );
        'offset 10 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
        '98:368 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
        '98:376 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
        scan( state.lexer, 40, 9 );
        if( isTokenActive( state.lexer._type, 41 ) ){
            'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:368 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
            state.push_fn( branch_5121fc23773fe257, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:376 javascript__method_definition=>τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
            consume( state );
            add_reduce( state, 7, 130 );
            return 0
        }
    }
};
    return - 1
}

function branch_0bd7f6bd9ca86d44(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_43b3d05903540d0d, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_0c8cb59ae1d05865(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 8, 18 );
    return 0
};
    return - 1
}

function branch_0c91deeca65ee5a0(state, db, prod){
    add_reduce( state, 1, 37 );
    return 0
}

function branch_0ca47ff3bbf8ae05(state, db, prod){
    scan( state.lexer, 42, 24 );
    if( ( state.lexer._type  == 16 ) ){
    consume( state );
    state.push_fn( branch_c89e5cb4a82e5385, 258 );
    return hc_css__keyframes_list_1637( state, db, 0 )
};
    return - 1
}

function branch_0d049e4db4484b03(state, db, prod){
    add_reduce( state, 3, 327 );
    return 0
}

function branch_0d1d3f19019f1922(state, db, prod){
    state.push_fn( branch_3c131ed7e769316a, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_0d2941eedb8f6d42(state, db, prod){
    'offset 7 peek_level-1 [  in of  ]';
    '134:488 javascript__iteration_statement=>τfor τ( javascript__for_declaration • τin javascript__expression τ) javascript__statement';
    '134:500 javascript__iteration_statement=>τfor τ( javascript__for_declaration • τof javascript__expression τ) javascript__statement';
    scan( state.lexer, 35, 11 );
    if( state.lexer._type  == 83 ){
    'Asserts [  in  ]';
    state.push_fn( set_production /*134*/, 134 );
    '"--LEAF--"';
    '134:488 javascript__iteration_statement=>τfor τ( javascript__for_declaration • τin javascript__expression τ) javascript__statement';
    consume( state );
    state.push_fn( branch_b9bf377dde48a035, 134 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 124 ){
    'Asserts [  of  ]';
    state.push_fn( set_production /*134*/, 134 );
    '"--LEAF--"';
    '134:500 javascript__iteration_statement=>τfor τ( javascript__for_declaration • τof javascript__expression τ) javascript__statement';
    consume( state );
    state.push_fn( branch_3552ea689089b4a2, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_0e072fdc27530b37(state, db, prod){
    'offset 4 peek_level0 [  default case }  ]';
    '142:523 javascript__case_block=>τ{ javascript__case_clauses • javascript__default_clause javascript__case_clauses τ}';
    '142:526 javascript__case_block=>τ{ javascript__case_clauses • javascript__default_clause τ}';
    '142:525 javascript__case_block=>τ{ javascript__case_clauses • javascript__case_clauses τ}';
    '142:527 javascript__case_block=>τ{ javascript__case_clauses • τ}';
    scan( state.lexer, 43, 11 );
    if( state.lexer._type  == 67 ){
    'Asserts [  default  ]';
    'offset 6 peek_level-1 [  145  ]';
    '142:523 javascript__case_block=>τ{ javascript__case_clauses • javascript__default_clause javascript__case_clauses τ}';
    '142:526 javascript__case_block=>τ{ javascript__case_clauses • javascript__default_clause τ}';
    scan( state.lexer, 44, 11 );
    state.push_fn( branch_641501314857eda4, 0 );
    return hc_javascript__default_clause( state, db, 0 )
} else if( state.lexer._type  == 128 ){
    'Asserts [  case  ]';
    state.push_fn( set_production /*142*/, 142 );
    '"--LEAF--"';
    '142:525 javascript__case_block=>τ{ javascript__case_clauses • javascript__case_clauses τ}';
    state.push_fn( branch_b746cdddf9c0321b, 142 );
    return hc_javascript__case_clauses( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*142*/, 142 );
    '"--LEAF--"';
    '142:527 javascript__case_block=>τ{ javascript__case_clauses • τ}';
    consume( state );
    add_reduce( state, 3, 209 );
    return 0
};
    return - 1
}

function branch_0e8dacddd33b72aa(state, db, prod){
    add_reduce( state, 1, 156 );
    return 118
}

function branch_0eccb3f60187246e(state, db, prod){
    add_reduce( state, 2, 334 );
    return 0
}

function branch_0f00c7498fddac84(state, db, prod){
    add_reduce( state, 2, 160 );
    return 0
}

function branch_0f32ea116410b4fe(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_8cfd40537685bdce, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_0f4b91c57196f73b(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 5, 277 );
    add_reduce( state, 1, 275 );
    return hc_javascript__assignment_expression_goto( state, db, 198 )
};
    return - 1
}

function branch_0fd9c6312c379f85(state, db, prod){
    'offset 4 peek_level-1 [  {  ]';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage • τ{ javascript__class_body τ}';
    '158:561 javascript__class_declaration=>τclass javascript__class_heritage • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 5 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
    '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.push_fn( set_production /*158*/, 158 );
        '"--LEAF--"';
        '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
        state.push_fn( branch_2374c682d05e30d1, 158 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*158*/, 158 );
        '"--LEAF--"';
        '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ • τ}';
        consume( state );
        add_reduce( state, 4, 235 );
        return 0
    }
};
    return - 1
}

function branch_10b1b41c67b5a780(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__formal_parameter_list_goto( state, db, 116 )
}

function branch_10f84fa89e47280d(state, db, prod){
    add_reduce( state, 1, 163 );
    return 147
}

function branch_116a2bdedd8937cd(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:827 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ<= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:827 css__mf_range=>css__mf_value τ<= tk:css__identifier • τ<= css__mf_value';
    scan( state.lexer, 25, 24 );
    if( ( state.lexer._type  == 80 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_1258f37abbcc16f9(state, db, prod){
    state.push_fn( branch_05f770f30d6a4ff1, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_1289d97c0883dcfa(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 175 );
    return 0
};
    return - 1
}

function branch_13c1e16455851475(state, db, prod){
    'offset 15 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ τ} •';
    {
    '"--LEAF--"';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ τ} •';
    add_reduce( state, 4, 236 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_1444c31aded2e42c(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return hc_css__media_condition_goto( state, db, 240 )
};
    return - 1
}

function branch_152680e8cb3da748(state, db, prod){
    add_reduce( state, 1, 14 );
    return 0
}

function branch_1534b63df6946ea5(state, db, prod){
    scan( state.lexer, 30, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    state.push_fn( branch_c5145e9e61ff30dc, 17 );
    return hc_html__TAGNAME( state, db, 0 )
};
    return - 1
}

function branch_1543b2803f9b2557(state, db, prod){
    add_reduce( state, 2, 108 );
    return hc_javascript__template_middle_list_goto( state, db, 178 )
}

function branch_15ec4d96e9777cff(state, db, prod){
    state.push_fn( branch_30a4c728783b8373, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_15fb703721f556f9(state, db, prod){
    add_reduce( state, 2, 265 );
    return 0
}

function branch_16833eb5dd17ab3b(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_e1f39354fa05cc4a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_174851bf7f7242b3(state, db, prod){
    '"--LEAF--"';
    '143:531 javascript__case_clauses=>javascript__case_clauses • javascript__case_clause';
    scan( state.lexer, 45, 11 );
    if( ( state.lexer._type  == 128 ) ){
    state.push_fn( branch_8dabf91e039dcfda, 143 );
    return hc_javascript__case_clause( state, db, 0 )
};
    return - 1
}

function branch_174a4749802a5aed(state, db, prod){
    add_reduce( state, 2, 66 );
    return 0
}

function branch_176ef10a2e42454b(state, db, prod){
    '"--LEAF--"';
    '241:812 css__media_feature=>τ( • css__mf_plain τ)';
    state.push_fn( branch_1444c31aded2e42c, 240 );
    return hc_css__mf_plain( state, db, 0 )
}

function branch_17a3282d8d9c8a2d(state, db, prod){
    scan( state.lexer, 46, 24 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 6, 309 );
    return 0
};
    return - 1
}

function branch_1861820f7a067d9d(state, db, prod){
    '"--LEAF--"';
    '241:812 css__media_feature=>τ( • css__mf_plain τ)';
    state.push_fn( branch_38d7ec245d2d4794, 241 );
    return hc_css__mf_plain( state, db, 0 )
}

function branch_186b999d08b5cc89(state, db, prod){
    'offset 6 peek_level-1 [  ; }  ]';
    '6:16 WICK_BINDING=>τ{! javascript__expression • τ; javascript__expression τ}';
    '6:18 WICK_BINDING=>τ{! javascript__expression • τ}';
    scan( state.lexer, 47, 9 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*6*/, 6 );
    '"--LEAF--"';
    '6:16 WICK_BINDING=>τ{! javascript__expression • τ; javascript__expression τ}';
    consume( state );
    state.push_fn( branch_bde3f53b296f2151, 6 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*6*/, 6 );
    '"--LEAF--"';
    '6:18 WICK_BINDING=>τ{! javascript__expression • τ}';
    consume( state );
    add_reduce( state, 3, 8 );
    return 0
};
    return - 1
}

function branch_18f55b22f3445351(state, db, prod){
    state.push_fn( branch_c342c3a3a0f47eb9, 253 );
    return hc_css__declaration( state, db, 0 )
}

function branch_18f83925f4c80938(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 129 );
    return 0
};
    return - 1
}

function branch_1a8a0499b7033f46(state, db, prod){
    add_reduce( state, 3, 28 );
    return 20
}

function branch_1ab9bb0b1d889bbd(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 6, 230 );
    return 0
};
    return - 1
}

function branch_1aef6b45df2168e6(state, db, prod){
    add_reduce( state, 2, 219 );
    return 0
}

function branch_1b116c1a362ad4ac(state, db, prod){
    'offset 1 peek_level-1 [  91  ]';
    '89:338 javascript__array_literal=>τ[ • javascript__element_list τ]';
    '89:339 javascript__array_literal=>τ[ • javascript__element_list τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ • javascript__element_list τ, τ]';
    scan( state.lexer, 48, 11 );
    state.push_fn( branch_2947ee53773554d3, 0 );
    return hc_javascript__element_list( state, db, 0 )
}

function branch_1b53e170eb324054(state, db, prod){
    state.push_fn( branch_3aa15af582de1f9d, 126 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function branch_1b878f79e1413e9e(state, db, prod){
    'offset 1 peek_level-1 [  114  ]';
    '113:417 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ]';
    '113:418 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__elision javascript__binding_rest_element τ]';
    '113:421 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, τ]';
    scan( state.lexer, 49, 11 );
    state.push_fn( branch_a66d797505329b2a, 0 );
    return hc_javascript__binding_element_list( state, db, 0 )
}

function branch_1b9ee5e7bb4f544f(state, db, prod){
    'offset 2 peek_level-1 [  253  ]';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__declaration_list css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__declaration_list τ}';
    scan( state.lexer, 50, 24 );
    state.push_fn( branch_e8bff56839885a1f, 0 );
    return hc_css__declaration_list( state, db, 0 )
}

function branch_1c2a047022ca38f2(state, db, prod){
    'offset 4 peek_level0 [  from ; } nl END_OF_FILE  ]';
    '49:203 javascript__export_declaration=>τexport javascript__export_clause • javascript__from_clause javascript__asi';
    '49:209 javascript__export_declaration=>τexport javascript__export_clause • javascript__asi';
    scan( state.lexer, 51, 11 );
    if( state.lexer._type  == 64 ){
    'Asserts [  from  ]';
    state.push_fn( set_production /*49*/, 49 );
    '"--LEAF--"';
    '49:203 javascript__export_declaration=>τexport javascript__export_clause • javascript__from_clause javascript__asi';
    state.push_fn( branch_7e54beac23d51662, 49 );
    return hc_javascript__from_clause( state, db, 0 )
} else {
    state.push_fn( set_production /*49*/, 49 );
    '"--LEAF--"';
    '49:209 javascript__export_declaration=>τexport javascript__export_clause • javascript__asi';
    state.push_fn( branch_a81f0e5c9b1bb065, 49 );
    return hc_javascript__asi( state, db, 0 )
};
    return - 1
}

function branch_1c5b7dbf6da7b7b6(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__media_and_list_1603_goto( state, db, 304 )
}

function branch_1c893129dc61a9cc(state, db, prod){
    'offset 7 peek_level-1 [  {  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage • τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 8 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.push_fn( set_production /*165*/, 165 );
        '"--LEAF--"';
        '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
        state.push_fn( branch_1ab9bb0b1d889bbd, 165 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*165*/, 165 );
        '"--LEAF--"';
        '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
        consume( state );
        add_reduce( state, 5, 233 );
        return 0
    }
};
    return - 1
}

function branch_1ca21e19d7b5554b(state, db, prod){
    scan( state.lexer, 52, 9 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 9 );
    return 0
};
    return - 1
}

function branch_1cc8359472627aa2(state, db, prod){
    'offset 3 peek_level0 [  or and ) { END_OF_PRODUCTION  ]';
    '207:706 css__supports_condition=>css__supports_in_parens • css__supports_condition_list_1314';
    '207:707 css__supports_condition=>css__supports_in_parens •';
    scan( state.lexer, 53, 9 );
    if( state.lexer._type  == 210 || state.lexer._type  == 209 ){
    'Asserts [  or and  ]';
    state.push_fn( set_production /*207*/, 207 );
    '"--LEAF--"';
    '207:706 css__supports_condition=>css__supports_in_parens • css__supports_condition_list_1314';
    state.push_fn( branch_ee257523538089b2, 207 );
    return hc_css__supports_condition_list_1314( state, db, 0 )
} else {
    '"--LEAF--"';
    '207:707 css__supports_condition=>css__supports_in_parens •';
    add_reduce( state, 1, 1 );
    return 207
};
    return - 1
}

function branch_1ce9612e5f965a42(state, db, prod){
    'offset 3 peek_level0 [  = ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
    '54:219 javascript__variable_declaration=>javascript__binding_identifier • javascript__initializer';
    '54:220 javascript__variable_declaration=>javascript__binding_identifier •';
    scan( state.lexer, 54, 11 );
    if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    state.push_fn( set_production /*54*/, 54 );
    '"--LEAF--"';
    '54:219 javascript__variable_declaration=>javascript__binding_identifier • javascript__initializer';
    state.push_fn( branch_174a4749802a5aed, 54 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    '"--LEAF--"';
    '54:220 javascript__variable_declaration=>javascript__binding_identifier •';
    return 54
};
    return - 1
}

function branch_1d78657759a3522f(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 149 );
    return 0
};
    return - 1
}

function branch_1df29885fc317625(state, db, prod){
    add_reduce( state, 4, 58 );
    return 0
}

function branch_1e127a48a1672c9c(state, db, prod){
    add_reduce( state, 3, 270 );
    return 0
}

function branch_1e4a201684fec202(state, db, prod){
    'offset 4 peek_level0 [  ( ?. of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION ` . [  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    scan( state.lexer, 56, 9 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    'offset 4 peek_level1 [  ... yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await , )  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 57, 9 );
    if( isTokenActive( pk._type, 58 ) ){
        'Asserts [  ... yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await , )  ]';
        state.lexer._type  = 36;
        state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
        state.push_fn( branch_33df3cbb370be24b, 75 );
        return hc_javascript__arguments( state, db, 0 )
    }
} else {
    '"--LEAF--"';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    add_reduce( state, 2, 92 );
    return hc_javascript__member_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_1f84adf586ffb9fa(state, db, prod){
    'offset 4 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '87:329 javascript__octal_token=>τ0O javascript__octal_token_list_613 • javascript__octal_token_list_614';
    '87:331 javascript__octal_token=>τ0O javascript__octal_token_list_613 •';
    scan( state.lexer, 59, 9 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( set_production /*87*/, 87 );
    '"--LEAF--"';
    '87:329 javascript__octal_token=>τ0O javascript__octal_token_list_613 • javascript__octal_token_list_614';
    state.push_fn( branch_918124bffd412d50, 87 );
    return hc_javascript__octal_token_list_614( state, db, 0 )
} else {
    '"--LEAF--"';
    '87:331 javascript__octal_token=>τ0O javascript__octal_token_list_613 •';
    add_reduce( state, 2, 12 );
    return 87
};
    return - 1
}

function branch_2071c9676039a462(state, db, prod){
    'offset 1 peek_level-1 [  {  ]';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 • τ{ css__declaration_list τ; τ}';
    '260:867 css__keyframes_blocks=>css__keyframes_blocks_list_1641 • τ{ css__declaration_list τ}';
    scan( state.lexer, 42, 24 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 2 peek_level-1 [  253  ]';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ • css__declaration_list τ; τ}';
    '260:867 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ • css__declaration_list τ}';
    scan( state.lexer, 50, 24 );
    state.push_fn( branch_311bd8b578c33098, 0 );
    return hc_css__declaration_list( state, db, 0 )
};
    return - 1
}

function branch_213773c8f0ea25fb(state, db, prod){
    add_reduce( state, 2, 217 );
    return 0
}

function branch_214050d95b3408e2(state, db, prod){
    '"--LEAF--"';
    '178:616 javascript__template_middle_list=>javascript__template_middle_list • javascript__template_middle javascript__expression';
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    state.push_fn( branch_97e43eab108ae67e, 178 );
    return hc_javascript__template_middle( state, db, 0 )
};
    return - 1
}

function branch_21507767bc1ef64d(state, db, prod){
    state.push_fn( branch_609621b618d4f6c2, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_21ae27b721c01292(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 263 );
    return 0
};
    return - 1
}

function branch_22ce1f363dc8b465(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 287 );
    return 206
};
    return - 1
}

function branch_233769891365127b(state, db, prod){
    state.push_fn( branch_a8b99bb69233a624, 35 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_234af3a3ace7a700(state, db, prod){
    add_reduce( state, 2, 312 );
    return 0
}

function branch_234c298a886b6207(state, db, prod){
    add_reduce( state, 3, 223 );
    return 151
}

function branch_234c642b43045fcd(state, db, prod){
    'offset 4 peek_level0 [  only not 216 ( supports ; END_OF_PRODUCTION  ]';
    '204:694 css__import=>τ@import css__url • css__import_group_1287_0_ css__import_list_1289';
    '204:698 css__import=>τ@import css__url • css__import_group_1287_0_';
    '204:696 css__import=>τ@import css__url • css__import_list_1289';
    '204:700 css__import=>τ@import css__url •';
    scan( state.lexer, 60, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    'Asserts [  only not 216 (  ]';
    state.push_fn( set_production /*204*/, 204 );
    '"--LEAF--"';
    '204:696 css__import=>τ@import css__url • css__import_list_1289';
    state.push_fn( branch_ca532a3862fc90d3, 204 );
    return hc_css__import_list_1289( state, db, 0 )
} else if( state.lexer._type  == 207 ){
    'Asserts [  supports  ]';
    'offset 6 peek_level-1 [  295  ]';
    '204:694 css__import=>τ@import css__url • css__import_group_1287_0_ css__import_list_1289';
    '204:698 css__import=>τ@import css__url • css__import_group_1287_0_';
    scan( state.lexer, 61, 24 );
    state.push_fn( branch_0accdf44ffc3ad18, 0 );
    return hc_css__import_group_1287_0_( state, db, 0 )
} else {
    '"--LEAF--"';
    '204:700 css__import=>τ@import css__url •';
    add_reduce( state, 2, 286 );
    return 204
};
    return - 1
}

function branch_235fb58f233a87be(state, db, prod){
    add_reduce( state, 3, 77 );
    return 0
}

function branch_2374c682d05e30d1(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 231 );
    return 0
};
    return - 1
}

function branch_23dcfc00944b531f(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 6, 179 );
    return 0
};
    return - 1
}

function branch_246f0a4c0cde4548(state, db, prod){
    'offset 6 peek_level-1 [  sp > + ~ || * # . [ : ) , { END_OF_PRODUCTION 216  ]';
    '212:718 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 • θsp';
    '212:725 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 •';
    scan( state.lexer, 62, 63 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:718 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 • θsp';
    consume( state );
    add_reduce( state, 3, 296 );
    return 0
} else {
    '"--LEAF--"';
    '212:725 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 •';
    add_reduce( state, 2, 296 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_24a1dd6c50b1e13a(state, db, prod){
    'offset 15 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ τ} •';
    {
    '"--LEAF--"';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ τ} •';
    add_reduce( state, 4, 236 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_257bb8351529e8a4(state, db, prod){
    state.push_fn( branch_903716b58564713c, 34 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_269033d650d0c821(state, db, prod){
    add_reduce( state, 3, 327 );
    return hc_css__mf_range_goto( state, db, 248 )
}

function branch_269c43f199e42297(state, db, prod){
    add_reduce( state, 2, 318 );
    return 0
}

function branch_269c673a98bed17c(state, db, prod){
    '"--LEAF--"';
    '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    state.push_fn( branch_3ae99e428f1e6724, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_( state, db, 0 )
}

function branch_26c5616a81f749fa(state, db, prod){
    'offset 12 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:563 javascript__class_declaration=>τclass τ{ τ} •';
    {
    '"--LEAF--"';
    '158:563 javascript__class_declaration=>τclass τ{ τ} •';
    add_reduce( state, 3, 237 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_26e4f8c956bf63bf(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_dc7c5993763c3f24, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_270cd6bea07a58a0(state, db, prod){
    add_reduce( state, 2, 12 );
    return 313
}

function branch_272a792aedf83485(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__property_definition_list_goto( state, db, 94 )
}

function branch_27b80b951a972904(state, db, prod){
    'offset 4 peek_level-1 [  ] ,  ]';
    '89:338 javascript__array_literal=>τ[ javascript__element_list • τ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list • τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list • τ, τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*89*/, 89 );
    '"--LEAF--"';
    '89:338 javascript__array_literal=>τ[ javascript__element_list • τ]';
    consume( state );
    add_reduce( state, 3, 102 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  ,  ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list • τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list • τ, τ]';
    'offset 7 peek_level0 [  , ]  ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list τ, • javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list τ, • τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        state.push_fn( set_production /*89*/, 89 );
        '"--LEAF--"';
        '89:339 javascript__array_literal=>τ[ javascript__element_list τ, • javascript__elision τ]';
        state.push_fn( branch_43618494a708de03, 89 );
        return hc_javascript__elision( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*89*/, 89 );
        '"--LEAF--"';
        '89:341 javascript__array_literal=>τ[ javascript__element_list τ, • τ]';
        consume( state );
        add_reduce( state, 4, 105 );
        return 0
    }
};
    return - 1
}

function branch_27bc4029a4df3225(state, db, prod){
    scan( state.lexer, 65, 9 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_28e677e707d79ecf(state, db, prod){
    add_reduce( state, 3, 75 );
    return 0
}

function branch_2947ee53773554d3(state, db, prod){
    'offset 2 peek_level-1 [  ] ,  ]';
    '89:338 javascript__array_literal=>τ[ javascript__element_list • τ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list • τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list • τ, τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*89*/, 89 );
    '"--LEAF--"';
    '89:338 javascript__array_literal=>τ[ javascript__element_list • τ]';
    consume( state );
    add_reduce( state, 3, 102 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 4 peek_level-1 [  ,  ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list • τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list • τ, τ]';
    'offset 5 peek_level0 [  , ]  ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list τ, • javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list τ, • τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        state.push_fn( set_production /*89*/, 89 );
        '"--LEAF--"';
        '89:339 javascript__array_literal=>τ[ javascript__element_list τ, • javascript__elision τ]';
        state.push_fn( branch_43618494a708de03, 89 );
        return hc_javascript__elision( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*89*/, 89 );
        '"--LEAF--"';
        '89:341 javascript__array_literal=>τ[ javascript__element_list τ, • τ]';
        consume( state );
        add_reduce( state, 4, 105 );
        return 0
    }
};
    return - 1
}

function branch_29b5d1c37ed65e28(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__template_literal_goto( state, db, 169 )
}

function branch_29fcd00f200be46b(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:837 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:837 css__mf_range=>css__mf_value τ>= tk:css__identifier • τ> css__mf_value';
    scan( state.lexer, 66, 24 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_2a1990963919bde5(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 178 );
    return 0
};
    return - 1
}

function branch_2a5899d8653d895f(state, db, prod){
    add_reduce( state, 3, 155 );
    return hc_javascript__binding_element_list_goto( state, db, 114 )
}

function branch_2b1b9890ca734b2e(state, db, prod){
    'offset 13 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:560 javascript__class_declaration=>τclass τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '158:560 javascript__class_declaration=>τclass τ{ javascript__class_body τ} •';
    add_reduce( state, 4, 234 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_2b2d85e5be5c1335(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 124 );
    return 0
};
    return - 1
}

function branch_2b488808e04475e7(state, db, prod){
    add_reduce( state, 2, 262 );
    return 189
}

function branch_2b53a12244194b83(state, db, prod){
    'offset 4 peek_level-1 [  , }  ]';
    '93:354 javascript__object_literal=>τ{ javascript__property_definition_list • τ, τ}';
    '93:355 javascript__object_literal=>τ{ javascript__property_definition_list • τ}';
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( set_production /*93*/, 93 );
    '"--LEAF--"';
    '93:354 javascript__object_literal=>τ{ javascript__property_definition_list • τ, τ}';
    consume( state );
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 4, 113 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*93*/, 93 );
    '"--LEAF--"';
    '93:355 javascript__object_literal=>τ{ javascript__property_definition_list • τ}';
    consume( state );
    add_reduce( state, 3, 113 );
    return 0
};
    return - 1
}

function branch_2cf27f2789755031(state, db, prod){
    'offset 5 peek_level-1 [  (  ]';
    '98:365 javascript__method_definition=>τasync τ* javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:370 javascript__method_definition=>τasync τ* javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>τasync τ* javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:379 javascript__method_definition=>τasync τ* javascript__property_name • τ( τ) τ{ τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 6 peek_level0 [  ... 40 { [ )  ]';
    '98:365 javascript__method_definition=>τasync τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>τasync τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
    '98:370 javascript__method_definition=>τasync τ* javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
    '98:379 javascript__method_definition=>τasync τ* javascript__property_name τ( • τ) τ{ τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        'offset 8 peek_level-1 [  102  ]';
        '98:365 javascript__method_definition=>τasync τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:371 javascript__method_definition=>τasync τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
        scan( state.lexer, 67, 11 );
        state.push_fn( branch_37ccb1818d7495a5, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 8 peek_level-1 [  )  ]';
        '98:370 javascript__method_definition=>τasync τ* javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
        '98:379 javascript__method_definition=>τasync τ* javascript__property_name τ( • τ) τ{ τ}';
        'offset 9 peek_level-1 [  {  ]';
        '98:370 javascript__method_definition=>τasync τ* javascript__property_name τ( τ) • τ{ javascript__function_body τ}';
        '98:379 javascript__method_definition=>τasync τ* javascript__property_name τ( τ) • τ{ τ}';
        scan( state.lexer, 13, 11 );
        if( state.lexer._type  == 16 ){
            'Assert Consume [  {  ]';
            consume( state );
            'offset 10 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
            '98:370 javascript__method_definition=>τasync τ* javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
            '98:379 javascript__method_definition=>τasync τ* javascript__property_name τ( τ) τ{ • τ}';
            scan( state.lexer, 40, 9 );
            if( isTokenActive( state.lexer._type, 41 ) ){
                'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:370 javascript__method_definition=>τasync τ* javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                state.push_fn( branch_2b2d85e5be5c1335, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                'Asserts [  }  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:379 javascript__method_definition=>τasync τ* javascript__property_name τ( τ) τ{ • τ}';
                consume( state );
                add_reduce( state, 7, 133 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_2cf39bda1bef37de(state, db, prod){
    add_reduce( state, 2, 229 );
    return 156
}

function branch_2d45a6a494c79015(state, db, prod){
    scan( state.lexer, 11, 68 );
    if( ( state.lexer._type  == 7 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_2d7669ac99ce0b44(state, db, prod){
    add_reduce( state, 3, 225 );
    return 0
}

function branch_2deb0e3060b5d925(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__short_circuit_expression_goto( state, db, 75 )
}

function branch_2df7000832ab9616(state, db, prod){
    add_reduce( state, 2, 345 );
    return 284
}

function branch_2e5bb77c85950ac7(state, db, prod){
    '"--LEAF--"';
    '49:206 javascript__export_declaration=>τexport τdefault • javascript__hoistable_declaration';
    state.push_fn( branch_3ddc67fa91a0db2c, 49 );
    return hc_javascript__hoistable_declaration( state, db, 0 )
}

function branch_2ec447559632659b(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 88 );
    return 0
};
    return - 1
}

function branch_2f62a813056a7163(state, db, prod){
    'offset 6 peek_level-1 [  284  ]';
    '134:486 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:496 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; τ) javascript__statement';
    '134:507 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; τ; τ) javascript__statement';
    scan( state.lexer, 69, 11 );
    state.push_fn( branch_5b0309a1d42db7ef, 0 );
    return hc_javascript__iteration_statement_group_869_1_( state, db, 0 )
}

function branch_2fe8a09a6a152881(state, db, prod){
    add_reduce( state, 3, 251 );
    return hc_javascript__template_middle_list_goto( state, db, 178 )
}

function branch_30a4c728783b8373(state, db, prod){
    add_reduce( state, 4, 60 );
    return 49
}

function branch_30c0a886222a8a70(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:840 css__mf_range=>css__mf_value τ> • tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:840 css__mf_range=>css__mf_value τ> tk:css__identifier • τ> css__mf_value';
    scan( state.lexer, 66, 24 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_311bd8b578c33098(state, db, prod){
    'offset 3 peek_level-1 [  ; }  ]';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ; τ}';
    '260:867 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ}';
    scan( state.lexer, 70, 24 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*260*/, 260 );
    '"--LEAF--"';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ; τ}';
    consume( state );
    scan( state.lexer, 71, 24 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 5, 339 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*260*/, 260 );
    '"--LEAF--"';
    '260:867 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ}';
    consume( state );
    add_reduce( state, 4, 339 );
    return 0
};
    return - 1
}

function branch_31b9023a720b5a97(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 291 );
    return 210
};
    return - 1
}

function branch_31caa6b293f83425(state, db, prod){
    state.push_fn( branch_7c43277f5623fa13, 249 );
    return hc_css__media_and_list_1603( state, db, 0 )
}

function branch_31efc3d71dadfd9b(state, db, prod){
    scan( state.lexer, 30, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    scan( state.lexer, 72, 9 );
    if( ( state.lexer._type  == 38 ) ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 34 );
            return 0
        }
    }
};
    return - 1
}

function branch_323543e55199868c(state, db, prod){
    add_reduce( state, 3, 317 );
    return 0
}

function branch_330e8cad8b23421b(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 169 );
    return 0
};
    return - 1
}

function branch_33357b08811d62f2(state, db, prod){
    add_reduce( state, 2, 85 );
    return 0
}

function branch_333c57caa5474a61(state, db, prod){
    add_reduce( state, 3, 155 );
    return 0
}

function branch_3373bfb9bf91182b(state, db, prod){
    'offset 8 peek_level0 [  extends {  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier • τ{ τ}';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ τ}';
    scan( state.lexer, 73, 11 );
    if( state.lexer._type  == 139 ){
    'Asserts [  extends  ]';
    'offset 10 peek_level-1 [  159  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    scan( state.lexer, 74, 11 );
    state.push_fn( branch_6d0fb7e15753fc27, 0 );
    return hc_javascript__class_heritage( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 10 peek_level-1 [  {  ]';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier • τ{ τ}';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ τ}';
    'offset 11 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ • τ}';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        'offset 13 peek_level-1 [  160  ]';
        '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
        '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
        scan( state.lexer, 33, 11 );
        state.push_fn( branch_ffbd07a08aa0c68d, 0 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 13 peek_level-1 [  }  ]';
        '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ • τ}';
        '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • τ}';
        'offset 14 peek_level-1 [  END_OF_FILE ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl ,  ]';
        '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ τ} •';
        '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ τ} •';
        scan( state.lexer, 34, 11 );
        if( state.lexer._type  == 1 ){
            'Asserts [  END_OF_FILE  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_13c1e16455851475, 75 );
            state.push_fn( branch_24a1dd6c50b1e13a, 121 );
            return 0
        } else {
            '"--LEAF--"';
            '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ τ} •';
            add_reduce( state, 4, 236 );
            return hc_javascript__statement_list_item_goto( state, db, 75 )
        }
    }
};
    return - 1
}

function branch_3392ed8b64ea54b8(state, db, prod){
    add_reduce( state, 5, 222 );
    return 150
}

function branch_33df3cbb370be24b(state, db, prod){
    add_reduce( state, 3, 91 );
    return 0
}

function branch_33f01da137d9ee76(state, db, prod){
    'offset 1 peek_level0 [  = } , ] ) END_OF_PRODUCTION  ]';
    '111:411 javascript__single_name_binding=>javascript__binding_identifier • javascript__initializer';
    '111:412 javascript__single_name_binding=>javascript__binding_identifier •';
    scan( state.lexer, 75, 11 );
    if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    state.push_fn( set_production /*111*/, 111 );
    '"--LEAF--"';
    '111:411 javascript__single_name_binding=>javascript__binding_identifier • javascript__initializer';
    state.push_fn( branch_a7de5534b43714bf, 111 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    '"--LEAF--"';
    '111:412 javascript__single_name_binding=>javascript__binding_identifier •';
    add_reduce( state, 1, 148 );
    return 111
};
    return - 1
}

function branch_344f60932931ec0d(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_54868d6ec9436dfd, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_34ba99cd8ae03d85(state, db, prod){
    state.push_fn( branch_e43eb34a5f9a8782, 174 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_3552ea689089b4a2(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_3e48760a1eb8ef3f, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_355e2ba0fc376e37(state, db, prod){
    add_reduce( state, 1, 274 );
    return 0
}

function branch_36793bef0c3608d1(state, db, prod){
    'offset 16 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
    add_reduce( state, 5, 232 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_36a7234abb500392(state, db, prod){
    'offset 3 peek_level0 [  , from END_OF_PRODUCTION  ]';
    '36:165 javascript__import_clause=>javascript__imported_default_binding •';
    '36:168 javascript__import_clause=>javascript__imported_default_binding • τ, javascript__name_space_import';
    '36:169 javascript__import_clause=>javascript__imported_default_binding • τ, javascript__named_imports';
    scan( state.lexer, 76, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  ,  ]';
    '36:168 javascript__import_clause=>javascript__imported_default_binding • τ, javascript__name_space_import';
    '36:169 javascript__import_clause=>javascript__imported_default_binding • τ, javascript__named_imports';
    'offset 6 peek_level0 [  * {  ]';
    '36:168 javascript__import_clause=>javascript__imported_default_binding τ, • javascript__name_space_import';
    '36:169 javascript__import_clause=>javascript__imported_default_binding τ, • javascript__named_imports';
    scan( state.lexer, 77, 11 );
    if( state.lexer._type  == 62 ){
        'Asserts [  *  ]';
        state.push_fn( set_production /*36*/, 36 );
        '"--LEAF--"';
        '36:168 javascript__import_clause=>javascript__imported_default_binding τ, • javascript__name_space_import';
        state.push_fn( branch_f8a3663a4a4d8c1f, 36 );
        return hc_javascript__name_space_import( state, db, 0 )
    } else {
        state.push_fn( set_production /*36*/, 36 );
        '"--LEAF--"';
        '36:169 javascript__import_clause=>javascript__imported_default_binding τ, • javascript__named_imports';
        state.push_fn( branch_f8a3663a4a4d8c1f, 36 );
        return hc_javascript__named_imports( state, db, 0 )
    }
} else {
    '"--LEAF--"';
    '36:165 javascript__import_clause=>javascript__imported_default_binding •';
    add_reduce( state, 1, 44 );
    return 36
};
    return - 1
}

function branch_36d0702fdc0ac5ee(state, db, prod){
    add_reduce( state, 2, 349 );
    return 317
}

function branch_36d0fe3e2ce63a99(state, db, prod){
    add_reduce( state, 1, 241 );
    return 164
}

function branch_36f22698b835f22a(state, db, prod){
    add_reduce( state, 1, 356 );
    return 323
}

function branch_370e1e2004e6751a(state, db, prod){
    scan( state.lexer, 78, 11 );
    if( ( state.lexer._type  == 124 ) ){
    consume( state );
    state.push_fn( branch_489c8ea4d96b642e, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_37ccb1818d7495a5(state, db, prod){
    'offset 9 peek_level-1 [  )  ]';
    '98:365 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 10 peek_level-1 [  {  ]';
    '98:365 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
        'Assert Consume [  {  ]';
        consume( state );
        'offset 11 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
        '98:365 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
        '98:371 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
        scan( state.lexer, 40, 9 );
        if( isTokenActive( state.lexer._type, 41 ) ){
            'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:365 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
            state.push_fn( branch_a63db2704b3d0c43, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:371 javascript__method_definition=>τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
            consume( state );
            add_reduce( state, 8, 125 );
            return 0
        }
    }
};
    return - 1
}

function branch_37f6b15929b1ba63(state, db, prod){
    add_reduce( state, 1, 44 );
    return 0
}

function branch_3804e081362f1c98(state, db, prod){
    add_reduce( state, 3, 79 );
    return 0
}

function branch_385bdfd293a09ccb(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 177 );
    return 0
};
    return - 1
}

function branch_388c23e0a1f966be(state, db, prod){
    add_reduce( state, 2, 264 );
    return 0
}

function branch_38a5d88cc49859fa(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 253 );
    return 180
};
    return - 1
}

function branch_38d7ec245d2d4794(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return 241
};
    return - 1
}

function branch_38e4b0517223c47e(state, db, prod){
    add_reduce( state, 3, 76 );
    return 0
}

function branch_3a05440f227854dd(state, db, prod){
    '"--LEAF--"';
    '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
    state.push_fn( branch_269033d650d0c821, 248 );
    return hc_css__mf_name( state, db, 0 )
}

function branch_3a9a122a9b11f3b5(state, db, prod){
    scan( state.lexer, 71, 24 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 342 );
    return 0
};
    return - 1
}

function branch_3aa15af582de1f9d(state, db, prod){
    add_reduce( state, 3, 69 );
    return 0
}

function branch_3ae99e428f1e6724(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 253 );
    add_reduce( state, 1, 275 );
    return hc_javascript__assignment_expression_goto( state, db, 198 )
};
    return - 1
}

function branch_3b8936e439c857e1(state, db, prod){
    'offset 7 peek_level-1 [  >  ]';
    '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> javascript__script τ< τ/ τscript τ>';
    '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> τ< τ/ τSCRIPT τ>';
    '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> τ< τ/ τscript τ>';
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    'Assert Consume [  >  ]';
    consume( state );
    'offset 8 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await <  ]';
    '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
    '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • τ< τ/ τSCRIPT τ>';
    '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • τ< τ/ τscript τ>';
    scan( state.lexer, 79, 9 );
    if( isTokenActive( state.lexer._type, 80 ) ){
        'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 10 peek_level-1 [  264  ]';
        '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
        '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
        scan( state.lexer, 79, 9 );
        state.push_fn( branch_6e50b59221ffac77, 0 );
        return hc_javascript__script( state, db, 0 )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        'offset 8 peek_level1 [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style /  ]';
        '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
        '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
        '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • τ< τ/ τSCRIPT τ>';
        '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • τ< τ/ τscript τ>';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 81, 9 );
        if( isTokenActive( pk._type, 82 ) ){
            'Asserts [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
            'offset 10 peek_level-1 [  264  ]';
            '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
            '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
            scan( state.lexer, 79, 9 );
            state.push_fn( branch_6e50b59221ffac77, 0 );
            return hc_javascript__script( state, db, 0 )
        } else {
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 10 peek_level-1 [  <  ]';
            '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • τ< τ/ τSCRIPT τ>';
            '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> • τ< τ/ τscript τ>';
            'offset 11 peek_level-1 [  /  ]';
            '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> τ< • τ/ τSCRIPT τ>';
            '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> τ< • τ/ τscript τ>';
            scan( state.lexer, 83, 9 );
            if( state.lexer._type  == 10 ){
                'Assert Consume [  /  ]';
                consume( state );
                'offset 12 peek_level-1 [  SCRIPT script  ]';
                '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ • τSCRIPT τ>';
                '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ • τscript τ>';
                scan( state.lexer, 84, 9 );
                if( state.lexer._type  == 37 ){
                    'Asserts [  SCRIPT  ]';
                    state.push_fn( set_production /*27*/, 27 );
                    '"--LEAF--"';
                    '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ • τSCRIPT τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 8, 35 );
                        return 0
                    };
                    return - 1
                } else if( state.lexer._type  == 39 ){
                    'Asserts [  script  ]';
                    state.push_fn( set_production /*27*/, 27 );
                    '"--LEAF--"';
                    '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ • τscript τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 8, 35 );
                        return 0
                    };
                    return - 1
                }
            }
        }
    }
};
    return - 1
}

function branch_3b9c2412d3e02aa3(state, db, prod){
    'offset 7 peek_level0 [  > />  ]';
    '17:56 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:64 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ> τ</ html__TAGNAME τ>';
    '17:57 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ/>';
    scan( state.lexer, 85, 9 );
    if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 9 peek_level-1 [  >  ]';
    '17:56 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:64 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ> τ</ html__TAGNAME τ>';
    'offset 10 peek_level0 [  < <! num id sym sp nl { {! </  ]';
    '17:56 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES τ> • html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:64 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES τ> • τ</ html__TAGNAME τ>';
    scan( state.lexer, 86, 0 );
    if( isTokenActive( state.lexer._type, 87 ) ){
        'Asserts [  < <! num id sym sp nl { {!  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:56 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES τ> • html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( branch_78cef2abd3f1c873, 17 );
        return hc_html__TAG_BODY( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        'Asserts [  </  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:64 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES τ> • τ</ html__TAGNAME τ>';
        consume( state );
        state.push_fn( branch_0072fd18d3aeca7c, 17 );
        return hc_html__TAGNAME( state, db, 0 )
    }
} else if( state.lexer._type  == 29 ){
    'Asserts [  />  ]';
    state.push_fn( set_production /*17*/, 17 );
    '"--LEAF--"';
    '17:57 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ/>';
    consume( state );
    add_reduce( state, 4, 19 );
    return 0
};
    return - 1
}

function branch_3c131ed7e769316a(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__assignment_expression_goto( state, db, 75 )
}

function branch_3c13403716c5bcac(state, db, prod){
    add_reduce( state, 1, 38 );
    return 30
}

function branch_3c4f01ef2afc29d8(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 121 );
    return 0
};
    return - 1
}

function branch_3d6c5f5e0eea984a(state, db, prod){
    'offset 3 peek_level-1 [  ; @media @keyframes @supports * # . [ : </ END_OF_PRODUCTION 216  ]';
    '254:852 css__AT_RULE=>css__media • τ;';
    '254:855 css__AT_RULE=>css__media •';
    scan( state.lexer, 38, 24 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*254*/, 254 );
    '"--LEAF--"';
    '254:852 css__AT_RULE=>css__media • τ;';
    consume( state );
    add_reduce( state, 2, 14 );
    return 0
} else {
    '"--LEAF--"';
    '254:855 css__AT_RULE=>css__media •';
    add_reduce( state, 1, 14 );
    return 254
};
    return - 1
}

function branch_3ddc67fa91a0db2c(state, db, prod){
    add_reduce( state, 3, 60 );
    return 49
}

function branch_3e004bbc82c6990d(state, db, prod){
    add_reduce( state, 1, 275 );
    return 0
}

function branch_3e18bb7aa0105ea8(state, db, prod){
    'offset 1 peek_level0 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
    '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR • css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
    '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR •';
    scan( state.lexer, 88, 89 );
    if( state.lexer._type  == 70 ){
    'Asserts [  :  ]';
    'offset 1 peek_level1 [  216  ]';
    '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR • css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 90, 63 );
    if( pk._type  == 170 ){
        'Asserts [  216  ]';
        state.lexer._type  = 70;
        state.push_fn( set_production /*320*/, 320 );
        '"--LEAF--"';
        '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR • css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
        state.push_fn( branch_adb349d37dbc5acd, 320 );
        return hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064( state, db, 0 )
    }
} else {
    '"--LEAF--"';
    '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR •';
    add_reduce( state, 1, 355 );
    return 320
};
    return - 1
}

function branch_3e48760a1eb8ef3f(state, db, prod){
    add_reduce( state, 7, 194 );
    return 0
}

function branch_3e4fb794d2fb933c(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_3392ed8b64ea54b8, 150 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_3ebe4858b661669c(state, db, prod){
    state.push_fn( branch_3ff64859598e5222, 250 );
    return hc_css__media_or_list_1605( state, db, 0 )
}

function branch_3ebe637b6495888a(state, db, prod){
    'offset 2 peek_level0 [  END_OF_FILE END_OF_PRODUCTION  ]';
    '16:55 html__GOAL_TAG=>html__TAG •';
    {
    '"--LEAF--"';
    '16:55 html__GOAL_TAG=>html__TAG •';
    add_reduce( state, 1, 14 );
    return hc_COMPONENT_goto( state, db, 1 )
};
    return - 1
}

function branch_3eff048a87c7f7bf(state, db, prod){
    'offset 10 peek_level-1 [  </  ]';
    '17:70 html__TAG=>τ< τstyle τ> css__CSS • τ</ τSTYLE τ>';
    '17:74 html__TAG=>τ< τstyle τ> css__CSS • τ</ τstyle τ>';
    scan( state.lexer, 30, 9 );
    if( state.lexer._type  == 28 ){
    'Assert Consume [  </  ]';
    consume( state );
    'offset 11 peek_level-1 [  STYLE style  ]';
    '17:70 html__TAG=>τ< τstyle τ> css__CSS τ</ • τSTYLE τ>';
    '17:74 html__TAG=>τ< τstyle τ> css__CSS τ</ • τstyle τ>';
    scan( state.lexer, 29, 9 );
    if( state.lexer._type  == 30 ){
        'Asserts [  STYLE  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:70 html__TAG=>τ< τstyle τ> css__CSS τ</ • τSTYLE τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 25 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 31 ){
        'Asserts [  style  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:74 html__TAG=>τ< τstyle τ> css__CSS τ</ • τstyle τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 25 );
            return 0
        };
        return - 1
    }
};
    return - 1
}

function branch_3f7f5076b38bcdae(state, db, prod){
    add_reduce( state, 2, 12 );
    return 314
}

function branch_3fa175778affbf08(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 6, 23 );
    return 0
};
    return - 1
}

function branch_3ff64859598e5222(state, db, prod){
    add_reduce( state, 2, 289 );
    return 250
}

function branch_40120370a93deec0(state, db, prod){
    'offset 14 peek_level-1 [  (  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 15 peek_level0 [  ... 40 { [ )  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_695fb15b8fbd4b08, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_b6b33baa71b23679, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_4054165bdfbc9b74(state, db, prod){
    'offset 2 peek_level0 [  %= { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '164:572 javascript__function_expression=>javascript__function_declaration •';
    {
    '"--LEAF--"';
    '164:572 javascript__function_expression=>javascript__function_declaration •';
    add_reduce( state, 1, 241 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_4095732728a47f67(state, db, prod){
    'offset 4 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '87:330 javascript__octal_token=>τ0o javascript__octal_token_list_613 • javascript__octal_token_list_614';
    '87:332 javascript__octal_token=>τ0o javascript__octal_token_list_613 •';
    scan( state.lexer, 59, 9 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( set_production /*87*/, 87 );
    '"--LEAF--"';
    '87:330 javascript__octal_token=>τ0o javascript__octal_token_list_613 • javascript__octal_token_list_614';
    state.push_fn( branch_918124bffd412d50, 87 );
    return hc_javascript__octal_token_list_614( state, db, 0 )
} else {
    '"--LEAF--"';
    '87:332 javascript__octal_token=>τ0o javascript__octal_token_list_613 •';
    add_reduce( state, 2, 12 );
    return 87
};
    return - 1
}

function branch_40d86a772abb43fb(state, db, prod){
    add_reduce( state, 7, 193 );
    return 0
}

function branch_40e43973fdcd258c(state, db, prod){
    'offset 3 peek_level0 [  # . [ : sp > + ~ || * ) , { END_OF_PRODUCTION 216  ]';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329';
    '212:729 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR •';
    '212:718 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:725 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1330';
    '212:724 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • θsp';
    scan( state.lexer, 88, 89 );
    if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
    'Asserts [  # . [  ]';
    'offset 3 peek_level1 [  216  ]';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 90, 63 );
    if( pk._type  == 170 ){
        'Asserts [  216  ]';
        'offset 5 peek_level-1 [  299  ]';
        '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
        '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 θsp';
        '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
        '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329';
        scan( state.lexer, 91, 24 );
        state.push_fn( branch_e32791d780c51bf0, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1329( state, db, 0 )
    }
} else if( state.lexer._type  == 70 ){
    'Asserts [  :  ]';
    'offset 3 peek_level1 [  : 216  ]';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329';
    '212:718 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:725 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1330';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 92, 63 );
    if( pk._type  == 70 ){
        'Asserts [  :  ]';
        'offset 5 peek_level-1 [  300  ]';
        '212:718 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1330 θsp';
        '212:725 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1330';
        scan( state.lexer, 93, 24 );
        state.push_fn( branch_246f0a4c0cde4548, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1330( state, db, 0 )
    } else {
        'offset 5 peek_level-1 [  299  ]';
        '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
        '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 θsp';
        '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
        '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • css__COMPOUND_SELECTOR_list_1329';
        scan( state.lexer, 91, 24 );
        state.push_fn( branch_e32791d780c51bf0, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1329( state, db, 0 )
    }
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:724 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR • θsp';
    consume( state );
    add_reduce( state, 2, 300 );
    return 0
} else {
    '"--LEAF--"';
    '212:729 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR •';
    add_reduce( state, 1, 300 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_40e83532064d58de(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return 0
};
    return - 1
}

function branch_422261a32c8adeaa(state, db, prod){
    'offset 8 peek_level0 [  ( of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION ` . [ ?.  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    scan( state.lexer, 56, 9 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    '"--LEAF--"';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    add_reduce( state, 2, 92 );
    return hc_javascript__optional_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_428e0d9b97f7997f(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__left_hand_side_expression_goto( state, db, 75 )
}

function branch_430cbf0787a6e47c(state, db, prod){
    add_reduce( state, 2, 84 );
    return 0
}

function branch_43618494a708de03(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 5, 103 );
    return 0
};
    return - 1
}

function branch_436d1ddb68fa8250(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_ebe4eb780050d256, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_43b3d05903540d0d(state, db, prod){
    add_reduce( state, 7, 192 );
    return 0
}

function branch_4437a2dc118308df(state, db, prod){
    scan( state.lexer, 78, 11 );
    if( ( state.lexer._type  == 124 ) ){
    consume( state );
    state.push_fn( branch_436d1ddb68fa8250, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_446747d32eed8306(state, db, prod){
    'offset 4 peek_level0 [  extends {  ]';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ τ}';
    scan( state.lexer, 73, 11 );
    if( state.lexer._type  == 139 ){
    'Asserts [  extends  ]';
    'offset 6 peek_level-1 [  159  ]';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    scan( state.lexer, 74, 11 );
    state.push_fn( branch_a6d6d0c374296361, 0 );
    return hc_javascript__class_heritage( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  {  ]';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier • τ{ τ}';
    'offset 7 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
    '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.push_fn( set_production /*158*/, 158 );
        '"--LEAF--"';
        '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
        state.push_fn( branch_96cd7ea0bcc998f9, 158 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*158*/, 158 );
        '"--LEAF--"';
        '158:562 javascript__class_declaration=>τclass javascript__binding_identifier τ{ • τ}';
        consume( state );
        add_reduce( state, 4, 236 );
        return 0
    }
};
    return - 1
}

function branch_449740ceb8df7fb1(state, db, prod){
    add_reduce( state, 2, 2 );
    return 0
}

function branch_44c752a447173e09(state, db, prod){
    '"--LEAF--"';
    '134:493 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_887_1_ τin javascript__expression τ) javascript__statement';
    state.push_fn( branch_973f7e6fc7a51266, 134 );
    return hc_javascript__iteration_statement_group_887_1_( state, db, 0 )
}

function branch_45f25cea93eb325d(state, db, prod){
    scan( state.lexer, 30, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    scan( state.lexer, 72, 9 );
    if( ( state.lexer._type  == 38 ) ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 33 );
            return 0
        }
    }
};
    return - 1
}

function branch_4656c4977caeeecb(state, db, prod){
    scan( state.lexer, 94, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_a8fbaf0f87323457, 126 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_469783ee4b10f5a3(state, db, prod){
    add_reduce( state, 6, 199 );
    return 0
}

function branch_46b2d3dfd3619fb7(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return 228
};
    return - 1
}

function branch_47078fc4fa0fef1c(state, db, prod){
    'offset 1 peek_level0 [  230 ; } END_OF_PRODUCTION  ]';
    '308:1056 css__declaration_list_group_1615_0_=>css__STYLE_RULE_list_1610 • css__declaration';
    '308:1057 css__declaration_list_group_1615_0_=>css__STYLE_RULE_list_1610 •';
    scan( state.lexer, 95, 9 );
    if( state.lexer._type  == 176 ){
    'Asserts [  230  ]';
    state.push_fn( set_production /*308*/, 308 );
    '"--LEAF--"';
    '308:1056 css__declaration_list_group_1615_0_=>css__STYLE_RULE_list_1610 • css__declaration';
    state.push_fn( branch_e6708846c9d22f70, 308 );
    return hc_css__declaration( state, db, 0 )
} else {
    '"--LEAF--"';
    '308:1057 css__declaration_list_group_1615_0_=>css__STYLE_RULE_list_1610 •';
    add_reduce( state, 1, 351 );
    return 308
};
    return - 1
}

function branch_471c9fa4798d33cf(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__binary_token_list_621_goto( state, db, 283 )
}

function branch_472b2c778a3a0605(state, db, prod){
    add_reduce( state, 4, 283 );
    return 0
}

function branch_47ab1f8b0a0727c4(state, db, prod){
    '"--LEAF--"';
    '241:812 css__media_feature=>τ( • css__mf_plain τ)';
    state.push_fn( branch_7ea803938e050e09, 240 );
    return hc_css__mf_plain( state, db, 0 )
}

function branch_489c8ea4d96b642e(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_62df213a8814611c, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_48a1dc14a604cb43(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:836 css__mf_range=>css__mf_value τ> • tk:css__identifier τ>= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:836 css__mf_range=>css__mf_value τ> tk:css__identifier • τ>= css__mf_value';
    scan( state.lexer, 96, 24 );
    if( ( state.lexer._type  == 81 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_48d2171bb0e25a48(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__binding_list_goto( state, db, 137 )
}

function branch_493b803ab79f60fb(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 146 );
    return 0
};
    return - 1
}

function branch_494d7aec6e902c8b(state, db, prod){
    'offset 3 peek_level-1 [  (  ]';
    '98:374 javascript__method_definition=>javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:380 javascript__method_definition=>javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:384 javascript__method_definition=>javascript__property_name • τ( τ) τ{ τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 4 peek_level0 [  ... 40 { [ )  ]';
    '98:374 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
    '98:380 javascript__method_definition=>javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
    '98:384 javascript__method_definition=>javascript__property_name τ( • τ) τ{ τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        'offset 6 peek_level-1 [  102  ]';
        '98:374 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:381 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
        scan( state.lexer, 67, 11 );
        state.push_fn( branch_96bac22c0aa874a4, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 6 peek_level-1 [  )  ]';
        '98:380 javascript__method_definition=>javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
        '98:384 javascript__method_definition=>javascript__property_name τ( • τ) τ{ τ}';
        'offset 7 peek_level-1 [  {  ]';
        '98:380 javascript__method_definition=>javascript__property_name τ( τ) • τ{ javascript__function_body τ}';
        '98:384 javascript__method_definition=>javascript__property_name τ( τ) • τ{ τ}';
        scan( state.lexer, 13, 11 );
        if( state.lexer._type  == 16 ){
            'Assert Consume [  {  ]';
            consume( state );
            'offset 8 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
            '98:380 javascript__method_definition=>javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
            '98:384 javascript__method_definition=>javascript__property_name τ( τ) τ{ • τ}';
            scan( state.lexer, 40, 9 );
            if( isTokenActive( state.lexer._type, 41 ) ){
                'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:380 javascript__method_definition=>javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                state.push_fn( branch_9d87f58cd61f2e04, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                'Asserts [  }  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:384 javascript__method_definition=>javascript__property_name τ( τ) τ{ • τ}';
                consume( state );
                add_reduce( state, 5, 138 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_49591abc5220b3dc(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_330e8cad8b23421b, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_49d53a19b4f867c5(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 174 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_4a3561aa31a801e8(state, db, prod){
    add_reduce( state, 2, 240 );
    return 0
}

function branch_4aea69899aef47c7(state, db, prod){
    add_reduce( state, 5, 70 );
    return 0
}

function branch_4b6222b74c9bae59(state, db, prod){
    'offset 2 peek_level-1 [  {  ]';
    '255:858 css__media=>τ@media css__media_queries • τ{ css__GROUP_RULE_BODY τ}';
    '255:859 css__media=>τ@media css__media_queries • τ{ τ}';
    scan( state.lexer, 42, 24 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 3 peek_level0 [  * 216 # . [ : }  ]';
    '255:858 css__media=>τ@media css__media_queries τ{ • css__GROUP_RULE_BODY τ}';
    '255:859 css__media=>τ@media css__media_queries τ{ • τ}';
    scan( state.lexer, 97, 24 );
    if( isTokenActive( state.lexer._type, 98 ) ){
        'Asserts [  * 216 # . [ :  ]';
        state.push_fn( set_production /*255*/, 255 );
        '"--LEAF--"';
        '255:858 css__media=>τ@media css__media_queries τ{ • css__GROUP_RULE_BODY τ}';
        state.push_fn( branch_936eabcf3bf6dbab, 255 );
        return hc_css__GROUP_RULE_BODY( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*255*/, 255 );
        '"--LEAF--"';
        '255:859 css__media=>τ@media css__media_queries τ{ • τ}';
        consume( state );
        add_reduce( state, 4, 336 );
        return 0
    }
};
    return - 1
}

function branch_4da495df38d1c45c(state, db, prod){
    add_reduce( state, 2, 87 );
    return 0
}

function branch_4df943580e69b810(state, db, prod){
    'offset 8 peek_level0 [  ( END_OF_PRODUCTION ` . [ ?. -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ | ?? && || END_OF_FILE nl ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of ; += { %= /= ) *= = } ] ,  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    scan( state.lexer, 99, 11 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    '"--LEAF--"';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    add_reduce( state, 2, 92 );
    return hc_javascript__short_circuit_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_4e0c9d8faf1a7cd4(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPLEX_SELECTOR_list_1327_goto( state, db, 298 )
}

function branch_4e12ed45ea31cc66(state, db, prod){
    'offset 2 peek_level-1 [  ,  ]';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    scan( state.lexer, 100, 11 );
    if( state.lexer._type  == 58 ){
    'Assert Consume [  ,  ]';
    consume( state );
    'offset 3 peek_level-1 [  ) ...  ]';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*199*/, 199 );
        '"--LEAF--"';
        '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • τ)';
        consume( state );
        add_reduce( state, 4, 253 );
        return 0
    } else {
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_927c5a31a9018dab, 199 );
        state.push_fn( branch_79dc8c5e295ccd0d, 199 );
        return 0
    }
};
    return - 1
}

function branch_4e2e39620f32f239(state, db, prod){
    state.push_fn( branch_c80d25956108cfaf, 135 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_4e73c85e3b71fd44(state, db, prod){
    add_reduce( state, 2, 17 );
    return 0
}

function branch_4f0e9a639053afa2(state, db, prod){
    'offset 4 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '88:334 javascript__binary_token=>τ0b javascript__binary_token_list_620 • javascript__binary_token_list_621';
    '88:336 javascript__binary_token=>τ0b javascript__binary_token_list_620 •';
    scan( state.lexer, 102, 9 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( set_production /*88*/, 88 );
    '"--LEAF--"';
    '88:334 javascript__binary_token=>τ0b javascript__binary_token_list_620 • javascript__binary_token_list_621';
    state.push_fn( branch_918124bffd412d50, 88 );
    return hc_javascript__binary_token_list_621( state, db, 0 )
} else {
    '"--LEAF--"';
    '88:336 javascript__binary_token=>τ0b javascript__binary_token_list_620 •';
    add_reduce( state, 2, 12 );
    return 88
};
    return - 1
}

function branch_4f71a16bc828273c(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 166 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_4fe316c51b5f21c0(state, db, prod){
    'offset 8 peek_level0 [  ( END_OF_PRODUCTION ?. ` . [ END_OF_FILE nl ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of ; += { %= /= ) *= = } ] ,  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    scan( state.lexer, 99, 11 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    '"--LEAF--"';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    add_reduce( state, 2, 92 );
    return hc_javascript__left_hand_side_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_50b33ac79bba457f(state, db, prod){
    'offset 1 peek_level-1 [  {  ]';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ css__declaration_list css__STYLE_RULE_list_1610 τ}';
    '252:846 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ css__declaration_list τ}';
    '252:848 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ τ}';
    scan( state.lexer, 42, 24 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 2 peek_level0 [  ; } 230  ]';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__declaration_list css__STYLE_RULE_list_1610 τ}';
    '252:846 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__declaration_list τ}';
    '252:848 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • τ}';
    scan( state.lexer, 95, 9 );
    if( state.lexer._type  == 17 ){
        'Asserts [  ;  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_1b9ee5e7bb4f544f, 252 );
        state.push_fn( branch_af0e5612b39ee197, 252 );
        return 0
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*252*/, 252 );
        '"--LEAF--"';
        '252:848 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • τ}';
        consume( state );
        add_reduce( state, 3, 332 );
        return 0
    } else {
        'offset 4 peek_level-1 [  253  ]';
        '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__declaration_list css__STYLE_RULE_list_1610 τ}';
        '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__declaration_list τ}';
        scan( state.lexer, 50, 24 );
        state.push_fn( branch_5b1b05c9f9ace81f, 0 );
        return hc_css__declaration_list( state, db, 0 )
    }
};
    return - 1
}

function branch_5121fc23773fe257(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 122 );
    return 0
};
    return - 1
}

function branch_5167975d1d79c9c4(state, db, prod){
    '"--LEAF--"';
    '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
    state.push_fn( branch_269033d650d0c821, 248 );
    return hc_css__mf_name( state, db, 0 )
}

function branch_517ebbc64d1522d8(state, db, prod){
    state.push_fn( branch_eb243dbfad70f5ba, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_52041fe4709e52c2(state, db, prod){
    '"--LEAF--"';
    '"--leafy--"';
    return 143
}

function branch_522c50d13f932ea8(state, db, prod){
    'offset 7 peek_level-1 [  (  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 8 peek_level0 [  ... 40 { [ )  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_fbbc8cca8d1bd3a4, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_7056a44b19c04c51, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_52c6ed3b7a8d1e61(state, db, prod){
    'offset 9 peek_level-1 [  (  ]';
    '130:464 javascript__function_declaration=>τfunction τ* javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:470 javascript__function_declaration=>τfunction τ* javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 10 peek_level0 [  ... 40 { [ )  ]';
    '130:464 javascript__function_declaration=>τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:470 javascript__function_declaration=>τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_26e4f8c956bf63bf, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:470 javascript__function_declaration=>τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_888504487d720e0e, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_532ddb9eed202d84(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 170 );
    return 0
};
    return - 1
}

function branch_5418b9fc1dbfcf4f(state, db, prod){
    'offset 1 peek_level-1 [  90  ]';
    '113:416 javascript__array_binding_pattern=>τ[ • javascript__elision javascript__binding_rest_element τ]';
    '113:420 javascript__array_binding_pattern=>τ[ • javascript__elision τ]';
    scan( state.lexer, 100, 11 );
    state.push_fn( branch_906ec366dc662fa3, 0 );
    return hc_javascript__elision( state, db, 0 )
}

function branch_54734802f26697db(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_dc03aeac2b86612a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_54868d6ec9436dfd(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 167 );
    return 0
};
    return - 1
}

function branch_551ee1767d3b4951(state, db, prod){
    add_reduce( state, 2, 203 );
    return 140
}

function branch_5552c3161a53579a(state, db, prod){
    'offset 7 peek_level-1 [  >  ]';
    '27:116 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES • τ> javascript__script τ</ τjs τ>';
    '27:123 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES • τ> τ</ τjs τ>';
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    'Assert Consume [  >  ]';
    consume( state );
    'offset 8 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await </  ]';
    '27:116 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES τ> • javascript__script τ</ τjs τ>';
    '27:123 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES τ> • τ</ τjs τ>';
    scan( state.lexer, 103, 9 );
    if( isTokenActive( state.lexer._type, 104 ) ){
        'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*27*/, 27 );
        '"--LEAF--"';
        '27:116 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES τ> • javascript__script τ</ τjs τ>';
        state.push_fn( branch_45f25cea93eb325d, 27 );
        return hc_javascript__script( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        'Asserts [  </  ]';
        state.push_fn( set_production /*27*/, 27 );
        '"--LEAF--"';
        '27:123 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES τ> • τ</ τjs τ>';
        consume( state );
        scan( state.lexer, 72, 9 );
        if( ( state.lexer._type  == 38 ) ){
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 35 );
                return 0
            }
        };
        return - 1
    }
};
    return - 1
}

function branch_55aa503dfc5a7a4e(state, db, prod){
    add_reduce( state, 2, 108 );
    return hc_javascript__template_spans_goto( state, db, 178 )
}

function branch_55eb4e55904bc9d1(state, db, prod){
    'offset 7 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ...  ]';
    '91:346 javascript__element_list=>javascript__element_list τ, javascript__elision • javascript__assignment_expression';
    '91:347 javascript__element_list=>javascript__element_list τ, javascript__elision • javascript__spread_element';
    scan( state.lexer, 105, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
    'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    '"--LEAF--"';
    '91:346 javascript__element_list=>javascript__element_list τ, javascript__elision • javascript__assignment_expression';
    state.push_fn( branch_c1fba707ab2be2a5, 91 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    '"--LEAF--"';
    '91:347 javascript__element_list=>javascript__element_list τ, javascript__elision • javascript__spread_element';
    state.push_fn( branch_c1fba707ab2be2a5, 91 );
    return hc_javascript__spread_element( state, db, 0 )
};
    return - 1
}

function branch_561bb2612752fd0b(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 176 );
    return 0
};
    return - 1
}

function branch_56eb0ca60d23ff70(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__module_body_goto( state, db, 33 )
}

function branch_578fc70c5b21cd26(state, db, prod){
    'offset 4 peek_level0 [  extends {  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier • τ{ τ}';
    scan( state.lexer, 73, 11 );
    if( state.lexer._type  == 139 ){
    'Asserts [  extends  ]';
    'offset 6 peek_level-1 [  159  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier • javascript__class_heritage τ{ τ}';
    scan( state.lexer, 74, 11 );
    state.push_fn( branch_1c893129dc61a9cc, 0 );
    return hc_javascript__class_heritage( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  {  ]';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier • τ{ javascript__class_body τ}';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier • τ{ τ}';
    'offset 7 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
    '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.push_fn( set_production /*165*/, 165 );
        '"--LEAF--"';
        '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ • javascript__class_body τ}';
        state.push_fn( branch_96cd7ea0bcc998f9, 165 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*165*/, 165 );
        '"--LEAF--"';
        '165:579 javascript__class_expression=>τclass javascript__binding_identifier τ{ • τ}';
        consume( state );
        add_reduce( state, 4, 236 );
        return 0
    }
};
    return - 1
}

function branch_596abcfba34f36c7(state, db, prod){
    'offset 10 peek_level0 [  ... ]  ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • τ]';
    scan( state.lexer, 106, 11 );
    if( state.lexer._type  == 111 ){
    'Asserts [  ...  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • javascript__binding_rest_element τ]';
    state.push_fn( branch_893277c7cc35ec31, 113 );
    return hc_javascript__binding_rest_element( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • τ]';
    consume( state );
    add_reduce( state, 5, 153 );
    return 0
};
    return - 1
}

function branch_597361ab2fc7ae53(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:839 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:839 css__mf_range=>css__mf_value τ<= tk:css__identifier • τ< css__mf_value';
    scan( state.lexer, 107, 24 );
    if( ( state.lexer._type  == 27 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_597965bbd31b89f6(state, db, prod){
    add_reduce( state, 5, 204 );
    return 141
}

function branch_59e0a72b9bdd04f5(state, db, prod){
    '"--LEAF--"';
    '"--leafy--"';
    return 253
}

function branch_5a2f701a2fefa730(state, db, prod){
    add_reduce( state, 3, 80 );
    return 0
}

function branch_5aa1f6b9967de2ab(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:841 css__mf_range=>css__mf_value τ< • tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:841 css__mf_range=>css__mf_value τ< tk:css__identifier • τ< css__mf_value';
    scan( state.lexer, 107, 24 );
    if( ( state.lexer._type  == 27 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_5b0309a1d42db7ef(state, db, prod){
    'offset 7 peek_level-1 [  ;  ]';
    '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ • τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:496 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ • τ; τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ • τ; javascript__expression τ; τ) javascript__statement';
    '134:507 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ • τ; τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 8 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ;  ]';
    '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • javascript__expression τ; τ) javascript__statement';
    '134:496 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • τ; javascript__expression τ) javascript__statement';
    '134:507 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • τ; τ) javascript__statement';
    scan( state.lexer, 19, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 10 peek_level-1 [  126  ]';
        '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • javascript__expression τ; τ) javascript__statement';
        scan( state.lexer, 21, 11 );
        state.push_fn( branch_5c6ae1c515270f45, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        'Asserts [  ;  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 10 peek_level-1 [  ;  ]';
        '134:496 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • τ; javascript__expression τ) javascript__statement';
        '134:507 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; • τ; τ) javascript__statement';
        'offset 11 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
        '134:496 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; • javascript__expression τ) javascript__statement';
        '134:507 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; • τ) javascript__statement';
        scan( state.lexer, 22, 9 );
        if( isTokenActive( state.lexer._type, 20 ) ){
            'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*134*/, 134 );
            '"--LEAF--"';
            '134:496 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; • javascript__expression τ) javascript__statement';
            state.push_fn( branch_7f34f27ddc9747e8, 134 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( set_production /*134*/, 134 );
            '"--LEAF--"';
            '134:507 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; • τ) javascript__statement';
            consume( state );
            state.push_fn( branch_e7ca26ec7501a7a9, 134 );
            return hc_javascript__statement( state, db, 0 )
        }
    }
};
    return - 1
}

function branch_5b1b05c9f9ace81f(state, db, prod){
    'offset 5 peek_level0 [  ; }  ]';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • τ}';
    scan( state.lexer, 47, 9 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*252*/, 252 );
    '"--LEAF--"';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • css__STYLE_RULE_list_1610 τ}';
    state.push_fn( branch_d039753938d9cd05, 252 );
    return hc_css__STYLE_RULE_list_1610( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*252*/, 252 );
    '"--LEAF--"';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • τ}';
    consume( state );
    add_reduce( state, 4, 331 );
    return 0
};
    return - 1
}

function branch_5b51b1e16b9daf7b(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:826 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ>= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:826 css__mf_range=>css__mf_value τ>= tk:css__identifier • τ>= css__mf_value';
    scan( state.lexer, 96, 24 );
    if( ( state.lexer._type  == 81 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_5c6ae1c515270f45(state, db, prod){
    'offset 11 peek_level-1 [  ;  ]';
    '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression • τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 12 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
    '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; • τ) javascript__statement';
    scan( state.lexer, 22, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
        state.push_fn( branch_9b524494e1babaea, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; • τ) javascript__statement';
        consume( state );
        state.push_fn( branch_97f2f316d8c39806, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_5c88b2f13f5585e4(state, db, prod){
    add_reduce( state, 1, 340 );
    return 0
}

function branch_5ca1d17079e9fcd0(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__variable_declaration_list_goto( state, db, 53 )
}

function branch_5cb267bf74038e65(state, db, prod){
    add_reduce( state, 1, 1 );
    return 0
}

function branch_5d5172fa8655c623(state, db, prod){
    'offset 6 peek_level-1 [  140  ]';
    '134:488 javascript__iteration_statement=>τfor τ( • javascript__for_declaration τin javascript__expression τ) javascript__statement';
    '134:500 javascript__iteration_statement=>τfor τ( • javascript__for_declaration τof javascript__expression τ) javascript__statement';
    scan( state.lexer, 108, 11 );
    state.push_fn( branch_0d2941eedb8f6d42, 0 );
    return hc_javascript__for_declaration( state, db, 0 )
}

function branch_5e04f36dc03b5f73(state, db, prod){
    add_reduce( state, 3, 161 );
    return 0
}

function branch_5f1d4dd7e626b9f5(state, db, prod){
    '"--LEAF--"';
    '134:506 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    state.push_fn( branch_370e1e2004e6751a, 134 );
    return hc_javascript__iteration_statement_group_896_1_( state, db, 0 )
}

function branch_5f28dbc07a790197(state, db, prod){
    'offset 15 peek_level-1 [  }  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body • τ}';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body • τ}';
    scan( state.lexer, 14, 11 );
    if( state.lexer._type  == 18 ){
    'Assert Consume [  }  ]';
    consume( state );
    'offset 16 peek_level-1 [  END_OF_FILE ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl  ]';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        'Asserts [  END_OF_FILE  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_9d7371a3159c8a4b, 121 );
        state.push_fn( branch_98dd23720d74ecd7, 75 );
        return 0
    } else {
        '"--LEAF--"';
        '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
        add_reduce( state, 6, 230 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_609621b618d4f6c2(state, db, prod){
    add_reduce( state, 4, 60 );
    return 0
}

function branch_60d1f22634e1d8d8(state, db, prod){
    add_reduce( state, 2, 12 );
    return 0
}

function branch_61e634f78d764fd5(state, db, prod){
    add_reduce( state, 3, 68 );
    return 0
}

function branch_62371e09d07c7934(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_7b74e4f5b1724881, 134 );
    return hc_javascript__asi( state, db, 0 )
};
    return - 1
}

function branch_625784590dfb6990(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 253 );
    return 199
};
    return - 1
}

function branch_628f19130835c1c3(state, db, prod){
    state.push_fn( branch_ede0f885ef9d3d87, 146 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_62df213a8814611c(state, db, prod){
    add_reduce( state, 7, 194 );
    return 134
}

function branch_6329a1fb9c53c5ab(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_532ddb9eed202d84, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_63673f200ce997a5(state, db, prod){
    state.push_fn( branch_2deb0e3060b5d925, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_6384e8ff46f7fb04(state, db, prod){
    state.push_fn( branch_c36ec8b885763224, 148 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_63c76a8bd141704d(state, db, prod){
    'offset 8 peek_level0 [  ( END_OF_PRODUCTION ` . [ ?. *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE nl : of ; { ) } ] ,  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    scan( state.lexer, 99, 11 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    '"--LEAF--"';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    add_reduce( state, 2, 92 );
    return hc_javascript__assignment_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_641501314857eda4(state, db, prod){
    'offset 7 peek_level0 [  case }  ]';
    '142:523 javascript__case_block=>τ{ javascript__case_clauses javascript__default_clause • javascript__case_clauses τ}';
    '142:526 javascript__case_block=>τ{ javascript__case_clauses javascript__default_clause • τ}';
    scan( state.lexer, 109, 11 );
    if( state.lexer._type  == 128 ){
    'Asserts [  case  ]';
    state.push_fn( set_production /*142*/, 142 );
    '"--LEAF--"';
    '142:523 javascript__case_block=>τ{ javascript__case_clauses javascript__default_clause • javascript__case_clauses τ}';
    state.push_fn( branch_85ba82d417382647, 142 );
    return hc_javascript__case_clauses( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*142*/, 142 );
    '"--LEAF--"';
    '142:526 javascript__case_block=>τ{ javascript__case_clauses javascript__default_clause • τ}';
    consume( state );
    add_reduce( state, 4, 208 );
    return 0
};
    return - 1
}

function branch_647439ca9e7ea686(state, db, prod){
    add_reduce( state, 3, 273 );
    return 0
}

function branch_659029be4454979b(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 3, 152 );
    return 0
};
    return - 1
}

function branch_66d1425953e53a43(state, db, prod){
    'offset 9 peek_level-1 [  sp > + ~ || * # . [ : ) , { END_OF_PRODUCTION 216  ]';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
    scan( state.lexer, 62, 63 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
    consume( state );
    add_reduce( state, 4, 294 );
    return 0
} else {
    '"--LEAF--"';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
    add_reduce( state, 3, 294 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_6802d52f88e336b5(state, db, prod){
    '"--LEAF--"';
    '20:85 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • html__ATTRIBUTE_BODY';
    state.push_fn( branch_1a8a0499b7033f46, 20 );
    return hc_html__ATTRIBUTE_BODY( state, db, 0 )
}

function branch_688092dff7e0b0ed(state, db, prod){
    'offset 1 peek_level0 [  E e ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
    '82:319 javascript__scientific_token=>javascript__float_token •';
    scan( state.lexer, 110, 9 );
    if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
    'Asserts [  E e  ]';
    state.push_fn( set_production /*82*/, 82 );
    '"--LEAF--"';
    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
    state.push_fn( branch_60d1f22634e1d8d8, 82 );
    return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
} else {
    '"--LEAF--"';
    '82:319 javascript__scientific_token=>javascript__float_token •';
    add_reduce( state, 1, 14 );
    return 82
};
    return - 1
}

function branch_695fb15b8fbd4b08(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_a6259fc3edd7737c, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_6a7516e57187d00c(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_html__ATTRIBUTES_goto( state, db, 19 )
}

function branch_6a785f89ee375b00(state, db, prod){
    add_reduce( state, 4, 42 );
    add_reduce( state, 1, 41 );
    return 0
}

function branch_6ab24f20dbdbfa84(state, db, prod){
    add_reduce( state, 2, 279 );
    return 0
}

function branch_6b6bbb456d65602e(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 3, 278 );
    return 0
};
    return - 1
}

function branch_6b7c6730793b5be5(state, db, prod){
    'offset 11 peek_level-1 [  </  ]';
    '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> css__CSS • τ</ τSTYLE τ>';
    '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> css__CSS • τ</ τstyle τ>';
    scan( state.lexer, 30, 9 );
    if( state.lexer._type  == 28 ){
    'Assert Consume [  </  ]';
    consume( state );
    'offset 12 peek_level-1 [  STYLE style  ]';
    '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> css__CSS τ</ • τSTYLE τ>';
    '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> css__CSS τ</ • τstyle τ>';
    scan( state.lexer, 29, 9 );
    if( state.lexer._type  == 30 ){
        'Asserts [  STYLE  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> css__CSS τ</ • τSTYLE τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 21 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 31 ){
        'Asserts [  style  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> css__CSS τ</ • τstyle τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 21 );
            return 0
        };
        return - 1
    }
};
    return - 1
}

function branch_6bdab82a0e6358f8(state, db, prod){
    state.push_fn( branch_c8d2a666286307a2, 149 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_6c4223fa35ba71e7(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 3, 158 );
    return 0
};
    return - 1
}

function branch_6cace078782c5618(state, db, prod){
    state.push_fn( branch_428e0d9b97f7997f, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_6cb776736fe88463(state, db, prod){
    add_reduce( state, 6, 198 );
    return 0
}

function branch_6cd1f1bf1a0c6078(state, db, prod){
    add_reduce( state, 3, 214 );
    return 0
}

function branch_6d0fb7e15753fc27(state, db, prod){
    'offset 11 peek_level-1 [  {  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage • τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage • τ{ τ}';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage • τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 12 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        'offset 14 peek_level-1 [  160  ]';
        '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
        '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
        scan( state.lexer, 33, 11 );
        state.push_fn( branch_5f28dbc07a790197, 0 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 14 peek_level-1 [  }  ]';
        '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
        '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
        'offset 15 peek_level-1 [  END_OF_FILE ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl ,  ]';
        '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
        '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
        scan( state.lexer, 34, 11 );
        if( state.lexer._type  == 1 ){
            'Asserts [  END_OF_FILE  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_84ca7b47bdcb38f2, 75 );
            state.push_fn( branch_cd2cb244b20686d9, 121 );
            return 0
        } else {
            '"--LEAF--"';
            '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
            add_reduce( state, 5, 233 );
            return hc_javascript__statement_list_item_goto( state, db, 75 )
        }
    }
};
    return - 1
}

function branch_6d47b92cb0b4983a(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return hc_css__media_condition_goto( state, db, 240 )
};
    return - 1
}

function branch_6d5fe25590047b65(state, db, prod){
    add_reduce( state, 8, 186 );
    return 0
}

function branch_6de138e30c35efa8(state, db, prod){
    state.push_fn( branch_895aa123fa566ad1, 11 );
    return hc_html__BODY( state, db, 0 )
}

function branch_6df555e4b1a24c66(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_1289d97c0883dcfa, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_6e2c267667c82014(state, db, prod){
    add_reduce( state, 1, 280 );
    return 0
}

function branch_6e50b59221ffac77(state, db, prod){
    'offset 11 peek_level-1 [  <  ]';
    '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script • τ< τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script • τ< τ/ τscript τ>';
    scan( state.lexer, 111, 9 );
    if( state.lexer._type  == 27 ){
    'Assert Consume [  <  ]';
    consume( state );
    'offset 12 peek_level-1 [  /  ]';
    '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< • τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< • τ/ τscript τ>';
    scan( state.lexer, 83, 9 );
    if( state.lexer._type  == 10 ){
        'Assert Consume [  /  ]';
        consume( state );
        'offset 13 peek_level-1 [  SCRIPT script  ]';
        '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ • τSCRIPT τ>';
        '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ • τscript τ>';
        scan( state.lexer, 84, 9 );
        if( state.lexer._type  == 37 ){
            'Asserts [  SCRIPT  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ • τSCRIPT τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 9, 33 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 39 ){
            'Asserts [  script  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ • τscript τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 9, 33 );
                return 0
            };
            return - 1
        }
    }
};
    return - 1
}

function branch_6ecaae111f21bbc9(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return 0
};
    return - 1
}

function branch_6f90f9be26052111(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 131 );
    return 0
};
    return - 1
}

function branch_7023c83870a619b8(state, db, prod){
    '"--LEAF--"';
    '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
    state.push_fn( branch_269033d650d0c821, 248 );
    return hc_css__mf_name( state, db, 0 )
}

function branch_703ec40a06a493ef(state, db, prod){
    'offset 13 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:577 javascript__class_expression=>τclass τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '165:577 javascript__class_expression=>τclass τ{ javascript__class_body τ} •';
    add_reduce( state, 4, 234 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_7056a44b19c04c51(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 173 );
    return 0
};
    return - 1
}

function branch_7065649da347f941(state, db, prod){
    'Asserts [  ; ] nl END_OF_FILE ) : END_OF_PRODUCTION  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 126
}

function branch_70d9326e6c9dc217(state, db, prod){
    add_reduce( state, 3, 28 );
    return 0
}

function branch_711a8495c94cb4d8(state, db, prod){
    'offset 2 peek_level0 [  catch finally  ]';
    '152:545 javascript__try_statement=>τtry javascript__block • javascript__catch';
    '152:547 javascript__try_statement=>τtry javascript__block • javascript__catch javascript__finally';
    '152:546 javascript__try_statement=>τtry javascript__block • javascript__finally';
    scan( state.lexer, 112, 11 );
    if( state.lexer._type  == 135 ){
    'Asserts [  catch  ]';
    'offset 4 peek_level-1 [  153  ]';
    '152:545 javascript__try_statement=>τtry javascript__block • javascript__catch';
    '152:547 javascript__try_statement=>τtry javascript__block • javascript__catch javascript__finally';
    scan( state.lexer, 113, 11 );
    state.push_fn( branch_8a150a781ee603e9, 0 );
    return hc_javascript__catch( state, db, 0 )
} else {
    state.push_fn( set_production /*152*/, 152 );
    '"--LEAF--"';
    '152:546 javascript__try_statement=>τtry javascript__block • javascript__finally';
    state.push_fn( branch_2d7669ac99ce0b44, 152 );
    return hc_javascript__finally( state, db, 0 )
};
    return - 1
}

function branch_713b2f8bd118627a(state, db, prod){
    add_reduce( state, 3, 142 );
    return 0
}

function branch_71c00b5275f03638(state, db, prod){
    add_reduce( state, 2, 353 );
    return 318
}

function branch_725ce3be88128be6(state, db, prod){
    'offset 3 peek_level0 [  @media @keyframes @supports * 216 # . [ : </ END_OF_PRODUCTION  ]';
    '203:690 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 • css__STYLE_SHEET_list_1283';
    '203:692 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 •';
    scan( state.lexer, 114, 9 );
    if( isTokenActive( state.lexer._type, 115 ) ){
    'Asserts [  @media @keyframes @supports * 216 # . [ :  ]';
    state.push_fn( set_production /*203*/, 203 );
    '"--LEAF--"';
    '203:690 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 • css__STYLE_SHEET_list_1283';
    state.push_fn( branch_6ab24f20dbdbfa84, 203 );
    return hc_css__STYLE_SHEET_list_1283( state, db, 0 )
} else {
    '"--LEAF--"';
    '203:692 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 •';
    add_reduce( state, 1, 281 );
    return 203
};
    return - 1
}

function branch_72a90fe47ea2dd7d(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 5, 153 );
    return 0
};
    return - 1
}

function branch_736d9e7f50372e7c(state, db, prod){
    '"--LEAF--"';
    '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    state.push_fn( branch_3ae99e428f1e6724, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_( state, db, 0 )
}

function branch_746fc3b29eef739d(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_4aea69899aef47c7, 57 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function branch_7483bdc374ca764a(state, db, prod){
    state.push_fn( branch_4e73c85e3b71fd44, 15 );
    return hc_html__GOAL_TAG( state, db, 0 )
}

function branch_76299b8f840122e3(state, db, prod){
    state.push_fn( branch_a61249f19ae4f80e, 191 );
    return hc_javascript__arguments( state, db, 0 )
}

function branch_76555673d7c8ae6c(state, db, prod){
    add_reduce( state, 2, 320 );
    return 239
}

function branch_771b37a26d9f2dd6(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 255 );
    return 0
};
    return - 1
}

function branch_77cd17e0992d27d4(state, db, prod){
    add_reduce( state, 3, 64 );
    return 52
}

function branch_78cef2abd3f1c873(state, db, prod){
    scan( state.lexer, 30, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    state.push_fn( branch_0c8cb59ae1d05865, 17 );
    return hc_html__TAGNAME( state, db, 0 )
};
    return - 1
}

function branch_792c4b2ac67a7935(state, db, prod){
    'offset 8 peek_level-1 [  )  ]';
    '98:369 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 9 peek_level-1 [  {  ]';
    '98:369 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
        'Assert Consume [  {  ]';
        consume( state );
        'offset 10 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
        '98:369 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
        '98:378 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
        scan( state.lexer, 40, 9 );
        if( isTokenActive( state.lexer._type, 41 ) ){
            'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:369 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
            state.push_fn( branch_a999f6308f78bcf5, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:378 javascript__method_definition=>τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
            consume( state );
            add_reduce( state, 7, 132 );
            return 0
        }
    }
};
    return - 1
}

function branch_79647dcfa8fc7924(state, db, prod){
    add_reduce( state, 2, 83 );
    return 0
}

function branch_796b814e914d04c9(state, db, prod){
    'offset 4 peek_level0 [  only not 216 ( supports ; END_OF_PRODUCTION  ]';
    '204:695 css__import=>τ@import css__import_group_1285_0_ • css__import_group_1287_0_ css__import_list_1289';
    '204:699 css__import=>τ@import css__import_group_1285_0_ • css__import_group_1287_0_';
    '204:697 css__import=>τ@import css__import_group_1285_0_ • css__import_list_1289';
    '204:701 css__import=>τ@import css__import_group_1285_0_ •';
    scan( state.lexer, 116, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    'Asserts [  only not 216 (  ]';
    state.push_fn( set_production /*204*/, 204 );
    '"--LEAF--"';
    '204:697 css__import=>τ@import css__import_group_1285_0_ • css__import_list_1289';
    state.push_fn( branch_ca532a3862fc90d3, 204 );
    return hc_css__import_list_1289( state, db, 0 )
} else if( state.lexer._type  == 207 ){
    'Asserts [  supports  ]';
    'offset 6 peek_level-1 [  295  ]';
    '204:695 css__import=>τ@import css__import_group_1285_0_ • css__import_group_1287_0_ css__import_list_1289';
    '204:699 css__import=>τ@import css__import_group_1285_0_ • css__import_group_1287_0_';
    scan( state.lexer, 61, 24 );
    state.push_fn( branch_c7a3cf8bad226361, 0 );
    return hc_css__import_group_1287_0_( state, db, 0 )
} else {
    '"--LEAF--"';
    '204:701 css__import=>τ@import css__import_group_1285_0_ •';
    add_reduce( state, 2, 286 );
    return 204
};
    return - 1
}

function branch_799342b36a99fa4d(state, db, prod){
    'offset 3 peek_level-1 [  = >= < <= >  ]';
    '248:825 css__mf_range=>css__mf_value • τ= css__mf_name';
    '248:826 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ>= css__mf_value';
    '248:835 css__mf_range=>css__mf_value • τ>= css__mf_name';
    '248:837 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ> css__mf_value';
    '248:827 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ<= css__mf_value';
    '248:833 css__mf_range=>css__mf_value • τ<= css__mf_name';
    '248:839 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ< css__mf_value';
    '248:832 css__mf_range=>css__mf_value • τ< css__mf_name';
    '248:838 css__mf_range=>css__mf_value • τ< tk:css__identifier τ<= css__mf_value';
    '248:841 css__mf_range=>css__mf_value • τ< tk:css__identifier τ< css__mf_value';
    '248:834 css__mf_range=>css__mf_value • τ> css__mf_name';
    '248:836 css__mf_range=>css__mf_value • τ> tk:css__identifier τ>= css__mf_value';
    '248:840 css__mf_range=>css__mf_value • τ> tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 117, 24 );
    if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
    '"--LEAF--"';
    '248:825 css__mf_range=>css__mf_value • τ= css__mf_name';
    consume( state );
    state.push_fn( branch_0d049e4db4484b03, 248 );
    return hc_css__mf_name( state, db, 0 )
} else if( state.lexer._type  == 81 ){
    'Asserts [  >=  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  >=  ]';
    '248:826 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ>= css__mf_value';
    '248:835 css__mf_range=>css__mf_value • τ>= css__mf_name';
    '248:837 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ> css__mf_value';
    'offset 6 peek_level0 [  216  ]';
    '248:826 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ>= css__mf_value';
    '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
    '248:837 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
        'Asserts [  216  ]';
        'offset 6 peek_level1 [  > >= ) END_OF_PRODUCTION <= < =  ]';
        '248:826 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ>= css__mf_value';
        '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
        '248:837 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ> css__mf_value';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 118, 24 );
        if( pk._type  == 11 ){
            'Asserts [  >  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_29fcd00f200be46b, 248 );
            state.push_fn( branch_5167975d1d79c9c4, 248 );
            return 0
        } else if( pk._type  == 81 ){
            'Asserts [  >=  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_5b51b1e16b9daf7b, 248 );
            state.push_fn( branch_5167975d1d79c9c4, 248 );
            return 0
        } else {
            state.lexer._type  = 170;
            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
            '"--LEAF--"';
            '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
            state.push_fn( branch_0d049e4db4484b03, 248 );
            return hc_css__mf_name( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 27 ){
    'Asserts [  <  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  <  ]';
    '248:832 css__mf_range=>css__mf_value • τ< css__mf_name';
    '248:838 css__mf_range=>css__mf_value • τ< tk:css__identifier τ<= css__mf_value';
    '248:841 css__mf_range=>css__mf_value • τ< tk:css__identifier τ< css__mf_value';
    'offset 6 peek_level0 [  216  ]';
    '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
    '248:838 css__mf_range=>css__mf_value τ< • tk:css__identifier τ<= css__mf_value';
    '248:841 css__mf_range=>css__mf_value τ< • tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
        'Asserts [  216  ]';
        'offset 6 peek_level1 [  < <= ) END_OF_PRODUCTION >= > =  ]';
        '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
        '248:838 css__mf_range=>css__mf_value τ< • tk:css__identifier τ<= css__mf_value';
        '248:841 css__mf_range=>css__mf_value τ< • tk:css__identifier τ< css__mf_value';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 118, 24 );
        if( pk._type  == 27 ){
            'Asserts [  <  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_5aa1f6b9967de2ab, 248 );
            state.push_fn( branch_3a05440f227854dd, 248 );
            return 0
        } else if( pk._type  == 80 ){
            'Asserts [  <=  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_04de800f07405fba, 248 );
            state.push_fn( branch_3a05440f227854dd, 248 );
            return 0
        } else {
            state.lexer._type  = 170;
            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
            '"--LEAF--"';
            '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
            state.push_fn( branch_0d049e4db4484b03, 248 );
            return hc_css__mf_name( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 80 ){
    'Asserts [  <=  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  <=  ]';
    '248:827 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ<= css__mf_value';
    '248:833 css__mf_range=>css__mf_value • τ<= css__mf_name';
    '248:839 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ< css__mf_value';
    'offset 6 peek_level0 [  216  ]';
    '248:827 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ<= css__mf_value';
    '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
    '248:839 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
        'Asserts [  216  ]';
        'offset 6 peek_level1 [  < <= ) END_OF_PRODUCTION >= > =  ]';
        '248:827 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ<= css__mf_value';
        '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
        '248:839 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ< css__mf_value';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 118, 24 );
        if( pk._type  == 27 ){
            'Asserts [  <  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_bf213fcbd8137fe3, 248 );
            state.push_fn( branch_7023c83870a619b8, 248 );
            return 0
        } else if( pk._type  == 80 ){
            'Asserts [  <=  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_116a2bdedd8937cd, 248 );
            state.push_fn( branch_7023c83870a619b8, 248 );
            return 0
        } else {
            state.lexer._type  = 170;
            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
            '"--LEAF--"';
            '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
            state.push_fn( branch_0d049e4db4484b03, 248 );
            return hc_css__mf_name( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  >  ]';
    '248:834 css__mf_range=>css__mf_value • τ> css__mf_name';
    '248:836 css__mf_range=>css__mf_value • τ> tk:css__identifier τ>= css__mf_value';
    '248:840 css__mf_range=>css__mf_value • τ> tk:css__identifier τ> css__mf_value';
    'offset 6 peek_level0 [  216  ]';
    '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
    '248:836 css__mf_range=>css__mf_value τ> • tk:css__identifier τ>= css__mf_value';
    '248:840 css__mf_range=>css__mf_value τ> • tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
        'Asserts [  216  ]';
        'offset 6 peek_level1 [  > >= ) END_OF_PRODUCTION <= < =  ]';
        '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
        '248:836 css__mf_range=>css__mf_value τ> • tk:css__identifier τ>= css__mf_value';
        '248:840 css__mf_range=>css__mf_value τ> • tk:css__identifier τ> css__mf_value';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 118, 24 );
        if( pk._type  == 11 ){
            'Asserts [  >  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_30c0a886222a8a70, 248 );
            state.push_fn( branch_b88a2a5e5e3bb6c7, 248 );
            return 0
        } else if( pk._type  == 81 ){
            'Asserts [  >=  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_ea5194dac3c1f97e, 248 );
            state.push_fn( branch_b88a2a5e5e3bb6c7, 248 );
            return 0
        } else {
            state.lexer._type  = 170;
            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
            '"--LEAF--"';
            '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
            state.push_fn( branch_0d049e4db4484b03, 248 );
            return hc_css__mf_name( state, db, 0 )
        }
    }
};
    return - 1
}

function branch_79b1892882f11948(state, db, prod){
    '"--LEAF--"';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    state.push_fn( branch_0f4b91c57196f73b, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_( state, db, 0 )
}

function branch_79dc8c5e295ccd0d(state, db, prod){
    '"--LEAF--"';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    state.push_fn( branch_ad7dad5f3826f56b, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_( state, db, 0 )
}

function branch_7a3634b887518149(state, db, prod){
    add_reduce( state, 1, 98 );
    add_reduce( state, 1, 115 );
    return 0
}

function branch_7a558e274ba16720(state, db, prod){
    add_reduce( state, 2, 117 );
    return 96
}

function branch_7a58197cd02b7883(state, db, prod){
    'offset 11 peek_level-1 [  ;  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression • τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 12 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • τ) javascript__statement';
    scan( state.lexer, 22, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
        state.push_fn( branch_9b524494e1babaea, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • τ) javascript__statement';
        consume( state );
        state.push_fn( branch_97f2f316d8c39806, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_7af222e51e94481e(state, db, prod){
    'offset 12 peek_level-1 [  ;  ]';
    '134:490 javascript__iteration_statement=>τfor τ( τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
    '134:502 javascript__iteration_statement=>τfor τ( τ; javascript__expression • τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 13 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
    '134:490 javascript__iteration_statement=>τfor τ( τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
    '134:502 javascript__iteration_statement=>τfor τ( τ; javascript__expression τ; • τ) javascript__statement';
    scan( state.lexer, 22, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:490 javascript__iteration_statement=>τfor τ( τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
        state.push_fn( branch_ca8976e3dc7da8de, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:502 javascript__iteration_statement=>τfor τ( τ; javascript__expression τ; • τ) javascript__statement';
        consume( state );
        state.push_fn( branch_f57e2266ef16c397, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_7b14d74b485bfded(state, db, prod){
    add_reduce( state, 3, 251 );
    return hc_javascript__template_spans_goto( state, db, 178 )
}

function branch_7b2563eb43a2e432(state, db, prod){
    'offset 4 peek_level0 [  " " 13 import export > />  ]';
    '17:56 html__TAG=>τ< html__TAGNAME • html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:57 html__TAG=>τ< html__TAGNAME • html__ATTRIBUTES τ/>';
    '17:64 html__TAG=>τ< html__TAGNAME • html__ATTRIBUTES τ> τ</ html__TAGNAME τ>';
    '17:63 html__TAG=>τ< html__TAGNAME • τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:76 html__TAG=>τ< html__TAGNAME • τ> τ</ html__TAGNAME τ>';
    '17:65 html__TAG=>τ< html__TAGNAME • τ/>';
    scan( state.lexer, 119, 9 );
    if( isTokenActive( state.lexer._type, 120 ) ){
    'Asserts [  " " 13 import export  ]';
    'offset 6 peek_level-1 [  19  ]';
    '17:56 html__TAG=>τ< html__TAGNAME • html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:57 html__TAG=>τ< html__TAGNAME • html__ATTRIBUTES τ/>';
    '17:64 html__TAG=>τ< html__TAGNAME • html__ATTRIBUTES τ> τ</ html__TAGNAME τ>';
    scan( state.lexer, 121, 9 );
    state.push_fn( branch_3b9c2412d3e02aa3, 0 );
    return hc_html__ATTRIBUTES( state, db, 0 )
} else if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  >  ]';
    '17:63 html__TAG=>τ< html__TAGNAME • τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:76 html__TAG=>τ< html__TAGNAME • τ> τ</ html__TAGNAME τ>';
    'offset 7 peek_level0 [  < <! num id sym sp nl { {! </  ]';
    '17:63 html__TAG=>τ< html__TAGNAME τ> • html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:76 html__TAG=>τ< html__TAGNAME τ> • τ</ html__TAGNAME τ>';
    scan( state.lexer, 86, 0 );
    if( isTokenActive( state.lexer._type, 87 ) ){
        'Asserts [  < <! num id sym sp nl { {!  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:63 html__TAG=>τ< html__TAGNAME τ> • html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( branch_1534b63df6946ea5, 17 );
        return hc_html__TAG_BODY( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        'Asserts [  </  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:76 html__TAG=>τ< html__TAGNAME τ> • τ</ html__TAGNAME τ>';
        consume( state );
        state.push_fn( branch_3fa175778affbf08, 17 );
        return hc_html__TAGNAME( state, db, 0 )
    }
} else if( state.lexer._type  == 29 ){
    'Asserts [  />  ]';
    state.push_fn( set_production /*17*/, 17 );
    '"--LEAF--"';
    '17:65 html__TAG=>τ< html__TAGNAME • τ/>';
    consume( state );
    add_reduce( state, 3, 23 );
    return 0
};
    return - 1
}

function branch_7b74e4f5b1724881(state, db, prod){
    add_reduce( state, 7, 183 );
    return 0
}

function branch_7b8905437871e530(state, db, prod){
    'offset 10 peek_level-1 [  <  ]';
    '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script • τ< τ/ τSCRIPT τ>';
    '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script • τ< τ/ τscript τ>';
    scan( state.lexer, 111, 9 );
    if( state.lexer._type  == 27 ){
    'Assert Consume [  <  ]';
    consume( state );
    'offset 11 peek_level-1 [  /  ]';
    '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script τ< • τ/ τSCRIPT τ>';
    '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script τ< • τ/ τscript τ>';
    scan( state.lexer, 83, 9 );
    if( state.lexer._type  == 10 ){
        'Assert Consume [  /  ]';
        consume( state );
        'offset 12 peek_level-1 [  SCRIPT script  ]';
        '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script τ< τ/ • τSCRIPT τ>';
        '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script τ< τ/ • τscript τ>';
        scan( state.lexer, 84, 9 );
        if( state.lexer._type  == 37 ){
            'Asserts [  SCRIPT  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script τ< τ/ • τSCRIPT τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 8, 34 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 39 ){
            'Asserts [  script  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> javascript__script τ< τ/ • τscript τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 8, 34 );
                return 0
            };
            return - 1
        }
    }
};
    return - 1
}

function branch_7c43277f5623fa13(state, db, prod){
    add_reduce( state, 2, 289 );
    return 249
}

function branch_7c53a45a4c458e09(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__import_list_1289_goto( state, db, 296 )
}

function branch_7c66f8dfb3cecee6(state, db, prod){
    '"--LEAF--"';
    '240:808 css__media_in_parenths=>τ( • css__media_condition τ)';
    state.push_fn( branch_0984293846c4da1e, 240 );
    return hc_css__media_condition( state, db, 0 )
}

function branch_7ce417f1f91bcaf2(state, db, prod){
    'offset 3 peek_level0 [  ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
    scan( state.lexer, 122, 9 );
    if( state.lexer._type  == 95 ){
    'Asserts [  ++  ]';
    state.push_fn( set_production /*72*/, 72 );
    '"--LEAF--"';
    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
    consume( state );
    add_reduce( state, 2, 86 );
    return 0
} else if( state.lexer._type  == 26 ){
    'Asserts [  --  ]';
    state.push_fn( set_production /*72*/, 72 );
    '"--LEAF--"';
    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
    consume( state );
    add_reduce( state, 2, 86 );
    return 0
} else {
    '"--LEAF--"';
    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
    return 72
};
    return - 1
}

function branch_7d28866a17c37517(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 178 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_7dcad059cb87d44a(state, db, prod){
    'offset 1 peek_level0 [  ? ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION  ]';
    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
    scan( state.lexer, 123, 9 );
    if( state.lexer._type  == 69 ){
    'Asserts [  ?  ]';
    state.push_fn( set_production /*58*/, 58 );
    '"--LEAF--"';
    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
    consume( state );
    state.push_fn( branch_c34374128f2f73d0, 58 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    '"--LEAF--"';
    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
    return 58
};
    return - 1
}

function branch_7e54beac23d51662(state, db, prod){
    state.push_fn( branch_1df29885fc317625, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_7e54fb8dccbd647b(state, db, prod){
    add_reduce( state, 2, 238 );
    return 0
}

function branch_7ea803938e050e09(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return hc_css__media_condition_without_or_goto( state, db, 240 )
};
    return - 1
}

function branch_7f34f27ddc9747e8(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_9a0c7ff089e4c72a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_807d02544ae8b717(state, db, prod){
    'offset 4 peek_level-1 [  /  ]';
    '166:581 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 • τ/ default_productions__js_identifier';
    '166:583 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 • τ/';
    scan( state.lexer, 124, 11 );
    if( state.lexer._type  == 10 ){
    'Assert Consume [  /  ]';
    consume( state );
    'offset 5 peek_level0 [  168 ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '166:581 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 τ/ • default_productions__js_identifier';
    '166:583 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 τ/ •';
    scan( state.lexer, 125, 9 );
    if( state.lexer._type  == 141 ){
        'Asserts [  168  ]';
        state.push_fn( set_production /*166*/, 166 );
        '"--LEAF--"';
        '166:581 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 τ/ • default_productions__js_identifier';
        state.push_fn( branch_dbcadac18e62d166, 166 );
        return hc_default_productions__js_identifier( state, db, 0 )
    } else {
        '"--LEAF--"';
        '166:583 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 τ/ •';
        add_reduce( state, 3, 244 );
        return 166
    }
};
    return - 1
}

function branch_818f16ab5570e0ea(state, db, prod){
    'offset 2 peek_level0 [  , ] } = *= ) /= ?. %= { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of END_OF_PRODUCTION  ]';
    '76:304 javascript__primary_expression=>html__TAG •';
    {
    '"--LEAF--"';
    '76:304 javascript__primary_expression=>html__TAG •';
    return hc_COMPONENT_goto( state, db, 75 )
};
    return - 1
}

function branch_81a5eb8bde8cca53(state, db, prod){
    'offset 6 peek_level-1 [  126  ]';
    '134:491 javascript__iteration_statement=>τfor τ( • javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:503 javascript__iteration_statement=>τfor τ( • javascript__expression τ; τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( • javascript__expression τ; javascript__expression τ; τ) javascript__statement';
    '134:510 javascript__iteration_statement=>τfor τ( • javascript__expression τ; τ; τ) javascript__statement';
    scan( state.lexer, 21, 11 );
    state.push_fn( branch_03bb38ff4330ba78, 0 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_81d7589e5ba94b1b(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064_goto( state, db, 324 )
}

function branch_81e00d8aae69616b(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 3, 139 );
    return 101
};
    return - 1
}

function branch_82df08eff2757437(state, db, prod){
    '"--LEAF--"';
    '241:811 css__media_feature=>τ( • css__mf_range τ)';
    state.push_fn( branch_1444c31aded2e42c, 240 );
    return hc_css__mf_range( state, db, 0 )
}

function branch_84ca7b47bdcb38f2(state, db, prod){
    'offset 16 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
    {
    '"--LEAF--"';
    '165:576 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
    add_reduce( state, 5, 233 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_84ce0da9cbca5ccc(state, db, prod){
    state.push_fn( branch_174a4749802a5aed, 54 );
    return hc_javascript__initializer( state, db, 0 )
}

function branch_852d672a81a2b967(state, db, prod){
    'offset 4 peek_level-1 [  } ,  ]';
    '107:403 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ}';
    '107:404 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ, javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ, τ}';
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*107*/, 107 );
    '"--LEAF--"';
    '107:403 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ}';
    consume( state );
    add_reduce( state, 3, 145 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  ,  ]';
    '107:404 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ, javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ, τ}';
    'offset 7 peek_level0 [  ... }  ]';
    '107:404 javascript__object_binding_pattern=>τ{ javascript__binding_property_list τ, • javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>τ{ javascript__binding_property_list τ, • τ}';
    scan( state.lexer, 126, 11 );
    if( state.lexer._type  == 111 ){
        'Asserts [  ...  ]';
        state.push_fn( set_production /*107*/, 107 );
        '"--LEAF--"';
        '107:404 javascript__object_binding_pattern=>τ{ javascript__binding_property_list τ, • javascript__binding_rest_property τ}';
        state.push_fn( branch_493b803ab79f60fb, 107 );
        return hc_javascript__binding_rest_property( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*107*/, 107 );
        '"--LEAF--"';
        '107:405 javascript__object_binding_pattern=>τ{ javascript__binding_property_list τ, • τ}';
        consume( state );
        add_reduce( state, 4, 145 );
        return 0
    }
};
    return - 1
}

function branch_8556e88bbf7a4064(state, db, prod){
    add_reduce( state, 3, 322 );
    return 242
}

function branch_855ab17a1cca1393(state, db, prod){
    scan( state.lexer, 127, 9 );
    if( ( state.lexer._type  == 32 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_85ba82d417382647(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 205 );
    return 0
};
    return - 1
}

function branch_8637f38d50ddede4(state, db, prod){
    'offset 8 peek_level0 [  ... ]  ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • τ]';
    scan( state.lexer, 106, 11 );
    if( state.lexer._type  == 111 ){
    'Asserts [  ...  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • javascript__binding_rest_element τ]';
    state.push_fn( branch_893277c7cc35ec31, 113 );
    return hc_javascript__binding_rest_element( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • τ]';
    consume( state );
    add_reduce( state, 5, 153 );
    return 0
};
    return - 1
}

function branch_86950834db7306e2(state, db, prod){
    'offset 3 peek_level-1 [  ${ `  ]';
    '171:596 javascript__template_string=>javascript__template_string_list_1088 • τ${-ns';
    '171:597 javascript__template_string=>javascript__template_string_list_1088 • τ`-ns';
    scan( state.lexer, 128, 11 );
    if( state.lexer._type  == 144 ){
    'Asserts [  ${  ]';
    state.push_fn( set_production /*171*/, 171 );
    '"--LEAF--"';
    '171:596 javascript__template_string=>javascript__template_string_list_1088 • τ${-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 142 ){
    'Asserts [  `  ]';
    state.push_fn( set_production /*171*/, 171 );
    '"--LEAF--"';
    '171:597 javascript__template_string=>javascript__template_string_list_1088 • τ`-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
};
    return - 1
}

function branch_8706797ac6db287f(state, db, prod){
    'offset 11 peek_level-1 [  (  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 12 peek_level0 [  ... 40 { [ )  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_b8f84665b89c9897, 75 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_97bfec73b617eeaa, 75 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_8708d5a8141dc08e(state, db, prod){
    'offset 1 peek_level0 [  . E e : ( [ ` ?. = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- in of ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] ; } nl END_OF_FILE , && || { END_OF_PRODUCTION  ]';
    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
    '83:321 javascript__float_token=>javascript__int_token •';
    scan( state.lexer, 110, 9 );
    if( state.lexer._type  == 98 ){
    'Asserts [  .  ]';
    'offset 1 peek_level1 [  num  ]';
    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 129, 11 );
    if( pk._type  == 5 ){
        'Asserts [  num  ]';
        state.lexer._type  = 98;
        state.push_fn( set_production /*83*/, 83 );
        '"--LEAF--"';
        '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
        state.push_fn( branch_60d1f22634e1d8d8, 83 );
        return hc_javascript__float_token_group_597_0_( state, db, 0 )
    }
} else {
    '"--LEAF--"';
    '83:321 javascript__float_token=>javascript__int_token •';
    add_reduce( state, 1, 14 );
    return 83
};
    return - 1
}

function branch_873755940ab62737(state, db, prod){
    add_reduce( state, 5, 227 );
    return 153
}

function branch_87b3679504a7f0fb(state, db, prod){
    state.push_fn( branch_d5b82c84f6a87a6a, 115 );
    return hc_javascript__binding_element( state, db, 0 )
}

function branch_880a3004fa6a988d(state, db, prod){
    'offset 3 peek_level0 [  = , ) ] } END_OF_PRODUCTION  ]';
    '112:414 javascript__binding_element=>javascript__binding_pattern • javascript__initializer';
    '112:415 javascript__binding_element=>javascript__binding_pattern •';
    scan( state.lexer, 130, 11 );
    if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    state.push_fn( set_production /*112*/, 112 );
    '"--LEAF--"';
    '112:414 javascript__binding_element=>javascript__binding_pattern • javascript__initializer';
    state.push_fn( branch_a7de5534b43714bf, 112 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    '"--LEAF--"';
    '112:415 javascript__binding_element=>javascript__binding_pattern •';
    add_reduce( state, 1, 148 );
    return 112
};
    return - 1
}

function branch_888504487d720e0e(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 171 );
    return 0
};
    return - 1
}

function branch_893277c7cc35ec31(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 6, 151 );
    return 0
};
    return - 1
}

function branch_895aa123fa566ad1(state, db, prod){
    add_reduce( state, 2, 13 );
    return 0
}

function branch_89ea6217e293f3ca(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__export_clause_list_399_goto( state, db, 274 )
}

function branch_8a150a781ee603e9(state, db, prod){
    'offset 5 peek_level0 [  finally else while var ; if continue break return with throw try debugger class { do for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await } default case </ export END_OF_PRODUCTION END_OF_FILE 40  ]';
    '152:545 javascript__try_statement=>τtry javascript__block javascript__catch •';
    '152:547 javascript__try_statement=>τtry javascript__block javascript__catch • javascript__finally';
    scan( state.lexer, 131, 9 );
    if( state.lexer._type  == 136 ){
    'Asserts [  finally  ]';
    state.push_fn( set_production /*152*/, 152 );
    '"--LEAF--"';
    '152:547 javascript__try_statement=>τtry javascript__block javascript__catch • javascript__finally';
    state.push_fn( branch_fdf4ee78aee4220e, 152 );
    return hc_javascript__finally( state, db, 0 )
} else {
    '"--LEAF--"';
    '152:545 javascript__try_statement=>τtry javascript__block javascript__catch •';
    add_reduce( state, 3, 224 );
    return 152
};
    return - 1
}

function branch_8a2f9a55c66da970(state, db, prod){
    '"--LEAF--"';
    '240:808 css__media_in_parenths=>τ( • css__media_condition τ)';
    state.push_fn( branch_6d47b92cb0b4983a, 240 );
    return hc_css__media_condition( state, db, 0 )
}

function branch_8a3686439d9e75fb(state, db, prod){
    'offset 11 peek_level-1 [  (  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 12 peek_level0 [  ... 40 { [ )  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_fbbc8cca8d1bd3a4, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_7056a44b19c04c51, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_8ab4c4fcc8a8c8cd(state, db, prod){
    state.push_fn( branch_551ee1767d3b4951, 140 );
    return hc_javascript__for_binding( state, db, 0 )
}

function branch_8b7f6cc58ff0fe5a(state, db, prod){
    scan( state.lexer, 132, 9 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 348 );
    return 0
};
    return - 1
}

function branch_8be81d01f471225f(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_e759b49925136b70, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_8ce4b8c35b5b4bb1(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 120 );
    return 0
};
    return - 1
}

function branch_8cfd40537685bdce(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 172 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_8d5a4f64190d3b68(state, db, prod){
    'offset 1 peek_level0 [  > + ~ || * 216 # . [ : ) { , END_OF_PRODUCTION  ]';
    '211:714 css__COMPLEX_SELECTOR=>css__COMPOUND_SELECTOR • css__COMPLEX_SELECTOR_list_1327';
    '211:715 css__COMPLEX_SELECTOR=>css__COMPOUND_SELECTOR •';
    scan( state.lexer, 88, 9 );
    if( isTokenActive( state.lexer._type, 133 ) ){
    'Asserts [  > + ~ || * 216 # . [ :  ]';
    state.push_fn( set_production /*211*/, 211 );
    '"--LEAF--"';
    '211:714 css__COMPLEX_SELECTOR=>css__COMPOUND_SELECTOR • css__COMPLEX_SELECTOR_list_1327';
    state.push_fn( branch_c9c4b70f1f36587f, 211 );
    return hc_css__COMPLEX_SELECTOR_list_1327( state, db, 0 )
} else {
    '"--LEAF--"';
    '211:715 css__COMPLEX_SELECTOR=>css__COMPOUND_SELECTOR •';
    add_reduce( state, 1, 293 );
    return 211
};
    return - 1
}

function branch_8d96cfb80bfe5bc2(state, db, prod){
    'offset 14 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
    add_reduce( state, 5, 231 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_8dabf91e039dcfda(state, db, prod){
    add_reduce( state, 2, 2 );
    return hc_javascript__case_clauses_goto( state, db, 143 )
}

function branch_8e14cc5b254736d6(state, db, prod){
    add_reduce( state, 3, 72 );
    return 0
}

function branch_8ea6cf05133375eb(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 10, 164 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_8ee67cd78057d7cc(state, db, prod){
    'offset 4 peek_level0 [  and , ; { END_OF_PRODUCTION  ]';
    '236:798 css__media_query=>τnot css__media_type • css__media_query_group_1473_0_';
    '236:801 css__media_query=>τnot css__media_type •';
    scan( state.lexer, 134, 9 );
    if( state.lexer._type  == 209 ){
    'Asserts [  and  ]';
    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
    '"--LEAF--"';
    '236:798 css__media_query=>τnot css__media_type • css__media_query_group_1473_0_';
    state.push_fn( branch_323543e55199868c, 236 );
    return hc_css__media_query_group_1473_0_( state, db, 0 )
} else {
    '"--LEAF--"';
    '236:801 css__media_query=>τnot css__media_type •';
    add_reduce( state, 2, 319 );
    return hc_css__media_query_goto( state, db, 236 )
};
    return - 1
}

function branch_8ef3067035e886d2(state, db, prod){
    'offset 16 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
    add_reduce( state, 5, 232 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_903716b58564713c(state, db, prod){
    add_reduce( state, 3, 43 );
    add_reduce( state, 1, 41 );
    return 0
}

function branch_906517a24028dd0e(state, db, prod){
    'offset 5 peek_level0 [  else while var ; if continue break return with throw try debugger class { do for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await } default case </ export END_OF_PRODUCTION END_OF_FILE 40  ]';
    '132:480 javascript__if_statement=>τif τ( javascript__expression τ) javascript__statement • τelse javascript__statement';
    '132:481 javascript__if_statement=>τif τ( javascript__expression τ) javascript__statement •';
    scan( state.lexer, 135, 9 );
    if( state.lexer._type  == 119 ){
    'Asserts [  else  ]';
    'offset 5 peek_level1 [  var ; if continue break return with throw try debugger { 40 do while for switch yield async ( new super import this [ class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    '132:480 javascript__if_statement=>τif τ( javascript__expression τ) javascript__statement • τelse javascript__statement';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 136, 9 );
    if( isTokenActive( pk._type, 137 ) ){
        'Asserts [  var ; if continue break return with throw try debugger { 40 do while for switch yield async ( new super import this [ class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.lexer._type  = 119;
        state.push_fn( set_production /*132*/, 132 );
        '"--LEAF--"';
        '132:480 javascript__if_statement=>τif τ( javascript__expression τ) javascript__statement • τelse javascript__statement';
        consume( state );
        state.push_fn( branch_98b1ff31cb22f280, 132 );
        return hc_javascript__statement( state, db, 0 )
    }
} else {
    '"--LEAF--"';
    '132:481 javascript__if_statement=>τif τ( javascript__expression τ) javascript__statement •';
    add_reduce( state, 5, 182 );
    return 132
};
    return - 1
}

function branch_906ec366dc662fa3(state, db, prod){
    'offset 2 peek_level0 [  ... ]  ]';
    '113:416 javascript__array_binding_pattern=>τ[ javascript__elision • javascript__binding_rest_element τ]';
    '113:420 javascript__array_binding_pattern=>τ[ javascript__elision • τ]';
    scan( state.lexer, 106, 11 );
    if( state.lexer._type  == 111 ){
    'Asserts [  ...  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:416 javascript__array_binding_pattern=>τ[ javascript__elision • javascript__binding_rest_element τ]';
    state.push_fn( branch_1d78657759a3522f, 113 );
    return hc_javascript__binding_rest_element( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:420 javascript__array_binding_pattern=>τ[ javascript__elision • τ]';
    consume( state );
    add_reduce( state, 3, 152 );
    return 0
};
    return - 1
}

function branch_90eebccb68d82021(state, db, prod){
    'offset 4 peek_level-1 [  (  ]';
    '98:366 javascript__method_definition=>τget javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
    '98:372 javascript__method_definition=>τget javascript__property_name • τ( τ) τ{ τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 5 peek_level-1 [  )  ]';
    '98:366 javascript__method_definition=>τget javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
    '98:372 javascript__method_definition=>τget javascript__property_name τ( • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
        'Assert Consume [  )  ]';
        consume( state );
        'offset 6 peek_level-1 [  {  ]';
        '98:366 javascript__method_definition=>τget javascript__property_name τ( τ) • τ{ javascript__function_body τ}';
        '98:372 javascript__method_definition=>τget javascript__property_name τ( τ) • τ{ τ}';
        scan( state.lexer, 13, 11 );
        if( state.lexer._type  == 16 ){
            'Assert Consume [  {  ]';
            consume( state );
            'offset 7 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
            '98:366 javascript__method_definition=>τget javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
            '98:372 javascript__method_definition=>τget javascript__property_name τ( τ) τ{ • τ}';
            scan( state.lexer, 40, 9 );
            if( isTokenActive( state.lexer._type, 41 ) ){
                'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:366 javascript__method_definition=>τget javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                state.push_fn( branch_8ce4b8c35b5b4bb1, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                'Asserts [  }  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:372 javascript__method_definition=>τget javascript__property_name τ( τ) τ{ • τ}';
                consume( state );
                add_reduce( state, 6, 126 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_918124bffd412d50(state, db, prod){
    add_reduce( state, 3, 100 );
    return 0
}

function branch_922993291d964a30(state, db, prod){
    state.push_fn( branch_233769891365127b, 35 );
    return hc_javascript__from_clause( state, db, 0 )
}

function branch_927c5a31a9018dab(state, db, prod){
    '"--LEAF--"';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    state.push_fn( branch_ad7dad5f3826f56b, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_( state, db, 0 )
}

function branch_92ba2008096693fd(state, db, prod){
    'offset 4 peek_level-1 [  (  ]';
    '98:368 javascript__method_definition=>τ* javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:375 javascript__method_definition=>τ* javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>τ* javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:382 javascript__method_definition=>τ* javascript__property_name • τ( τ) τ{ τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 5 peek_level0 [  ... 40 { [ )  ]';
    '98:368 javascript__method_definition=>τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
    '98:375 javascript__method_definition=>τ* javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
    '98:382 javascript__method_definition=>τ* javascript__property_name τ( • τ) τ{ τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        'offset 7 peek_level-1 [  102  ]';
        '98:368 javascript__method_definition=>τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:376 javascript__method_definition=>τ* javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
        scan( state.lexer, 67, 11 );
        state.push_fn( branch_0b4241142cbf5abe, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 7 peek_level-1 [  )  ]';
        '98:375 javascript__method_definition=>τ* javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
        '98:382 javascript__method_definition=>τ* javascript__property_name τ( • τ) τ{ τ}';
        'offset 8 peek_level-1 [  {  ]';
        '98:375 javascript__method_definition=>τ* javascript__property_name τ( τ) • τ{ javascript__function_body τ}';
        '98:382 javascript__method_definition=>τ* javascript__property_name τ( τ) • τ{ τ}';
        scan( state.lexer, 13, 11 );
        if( state.lexer._type  == 16 ){
            'Assert Consume [  {  ]';
            consume( state );
            'offset 9 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
            '98:375 javascript__method_definition=>τ* javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
            '98:382 javascript__method_definition=>τ* javascript__property_name τ( τ) τ{ • τ}';
            scan( state.lexer, 40, 9 );
            if( isTokenActive( state.lexer._type, 41 ) ){
                'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:375 javascript__method_definition=>τ* javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                state.push_fn( branch_18f83925f4c80938, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                'Asserts [  }  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:382 javascript__method_definition=>τ* javascript__property_name τ( τ) τ{ • τ}';
                consume( state );
                add_reduce( state, 6, 136 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_936eabcf3bf6dbab(state, db, prod){
    scan( state.lexer, 71, 24 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 335 );
    return 0
};
    return - 1
}

function branch_941b0a954c649456(state, db, prod){
    add_reduce( state, 3, 5 );
    return 4
}

function branch_943029143eb62c01(state, db, prod){
    add_reduce( state, 3, 78 );
    return 0
}

function branch_94d210f5e537e2f9(state, db, prod){
    scan( state.lexer, 138, 9 );
    if( ( state.lexer._type  == 26 ) ){
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 6, 15 );
        return 0
    }
};
    return - 1
}

function branch_950c41dd46277dca(state, db, prod){
    state.push_fn( branch_7a558e274ba16720, 96 );
    return hc_javascript__initializer( state, db, 0 )
}

function branch_954c56e02bee4682(state, db, prod){
    add_reduce( state, 2, 312 );
    return 226
}

function branch_9588b10a02a5aa6c(state, db, prod){
    'offset 13 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ τ} •';
    {
    '"--LEAF--"';
    '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ τ} •';
    add_reduce( state, 4, 235 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_961fad18f3f0a5a7(state, db, prod){
    add_reduce( state, 1, 316 );
    return 0
}

function branch_96481d82eb2eba1a(state, db, prod){
    'offset 13 peek_level-1 [  ;  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression • τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 14 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • τ) javascript__statement';
    scan( state.lexer, 22, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • javascript__expression τ) javascript__statement';
        state.push_fn( branch_9b524494e1babaea, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; • τ) javascript__statement';
        consume( state );
        state.push_fn( branch_97f2f316d8c39806, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_968d2bd6f0ff599a(state, db, prod){
    add_reduce( state, 3, 254 );
    return 0
}

function branch_96b4a920ae326c1f(state, db, prod){
    add_reduce( state, 3, 273 );
    return hc_javascript__assignment_expression_goto( state, db, 57 )
}

function branch_96bac22c0aa874a4(state, db, prod){
    'offset 7 peek_level-1 [  )  ]';
    '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 8 peek_level-1 [  {  ]';
    '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
        'Assert Consume [  {  ]';
        consume( state );
        'offset 9 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
        '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
        '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
        scan( state.lexer, 40, 9 );
        if( isTokenActive( state.lexer._type, 41 ) ){
            'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
            state.push_fn( branch_d76e07f28ea9f453, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
            consume( state );
            add_reduce( state, 6, 135 );
            return 0
        }
    }
};
    return - 1
}

function branch_96cd7ea0bcc998f9(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 232 );
    return 0
};
    return - 1
}

function branch_96d8bd77c73a6285(state, db, prod){
    state.push_fn( branch_77cd17e0992d27d4, 52 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_973f7e6fc7a51266(state, db, prod){
    scan( state.lexer, 139, 11 );
    if( ( state.lexer._type  == 83 ) ){
    consume( state );
    state.push_fn( branch_b68265317f93cd7a, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_9742cc9ec480e36c(state, db, prod){
    add_reduce( state, 2, 54 );
    return 44
}

function branch_97bfec73b617eeaa(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 173 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_97e43eab108ae67e(state, db, prod){
    state.push_fn( branch_7b14d74b485bfded, 178 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_97f2f316d8c39806(state, db, prod){
    add_reduce( state, 8, 191 );
    return 0
}

function branch_9891863a03e0793d(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:838 css__mf_range=>css__mf_value τ< • tk:css__identifier τ<= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:838 css__mf_range=>css__mf_value τ< tk:css__identifier • τ<= css__mf_value';
    scan( state.lexer, 25, 24 );
    if( ( state.lexer._type  == 80 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_989668520b64d0f9(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 234 );
    return 0
};
    return - 1
}

function branch_98b1ff31cb22f280(state, db, prod){
    add_reduce( state, 7, 181 );
    return 0
}

function branch_98dd23720d74ecd7(state, db, prod){
    'offset 17 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
    add_reduce( state, 6, 230 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_992c11af5ca877f1(state, db, prod){
    'offset 8 peek_level0 [  ( END_OF_PRODUCTION ` . [ ?. -- ++ ** END_OF_FILE nl * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of ; += { %= /= ) *= = } ] ,  ]';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    scan( state.lexer, 99, 11 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:292 javascript__member_expression=>τnew javascript__member_expression • javascript__arguments';
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    '"--LEAF--"';
    '75:293 javascript__member_expression=>τnew javascript__member_expression •';
    add_reduce( state, 2, 92 );
    return hc_javascript__exponentiation_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_9a0c7ff089e4c72a(state, db, prod){
    add_reduce( state, 8, 190 );
    return 0
}

function branch_9a118edb7556e134(state, db, prod){
    'offset 1 peek_level0 [  as , } END_OF_PRODUCTION  ]';
    '51:214 javascript__export_specifier=>javascript__identifier •';
    '51:215 javascript__export_specifier=>javascript__identifier • τas javascript__identifier';
    scan( state.lexer, 140, 9 );
    if( state.lexer._type  == 63 ){
    'Asserts [  as  ]';
    state.push_fn( set_production /*51*/, 51 );
    '"--LEAF--"';
    '51:215 javascript__export_specifier=>javascript__identifier • τas javascript__identifier';
    consume( state );
    state.push_fn( branch_0912092e7d3508ca, 51 );
    return hc_javascript__identifier( state, db, 0 )
} else {
    '"--LEAF--"';
    '51:214 javascript__export_specifier=>javascript__identifier •';
    add_reduce( state, 1, 52 );
    return 51
};
    return - 1
}

function branch_9aea9847880627fd(state, db, prod){
    add_reduce( state, 2, 334 );
    return hc_css__declaration_list_goto( state, db, 253 )
}

function branch_9af93c66ec6f1e19(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__named_imports_list_331_goto( state, db, 271 )
}

function branch_9afea872a2de7233(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_597965bbd31b89f6, 141 );
    return hc_javascript__case_block( state, db, 0 )
};
    return - 1
}

function branch_9b524494e1babaea(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_e651b2015f0826be, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_9b60da2eca0fe01f(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 206 );
    return 0
};
    return - 1
}

function branch_9bc1b7e9b668a34a(state, db, prod){
    'offset 7 peek_level-1 [  >  ]';
    '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> javascript__script τ< τ/ τscript τ>';
    '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> τ< τ/ τSCRIPT τ>';
    '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> τ< τ/ τscript τ>';
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    'Assert Consume [  >  ]';
    consume( state );
    'offset 8 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await <  ]';
    '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
    '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
    '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • τ< τ/ τSCRIPT τ>';
    '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • τ< τ/ τscript τ>';
    scan( state.lexer, 79, 9 );
    if( isTokenActive( state.lexer._type, 80 ) ){
        'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 10 peek_level-1 [  264  ]';
        '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
        '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
        scan( state.lexer, 79, 9 );
        state.push_fn( branch_d5d91d7289cf520e, 0 );
        return hc_javascript__script( state, db, 0 )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        'offset 8 peek_level1 [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style /  ]';
        '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
        '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
        '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • τ< τ/ τSCRIPT τ>';
        '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • τ< τ/ τscript τ>';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 81, 9 );
        if( isTokenActive( pk._type, 82 ) ){
            'Asserts [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
            'offset 10 peek_level-1 [  264  ]';
            '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τSCRIPT τ>';
            '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • javascript__script τ< τ/ τscript τ>';
            scan( state.lexer, 79, 9 );
            state.push_fn( branch_d5d91d7289cf520e, 0 );
            return hc_javascript__script( state, db, 0 )
        } else {
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 10 peek_level-1 [  <  ]';
            '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • τ< τ/ τSCRIPT τ>';
            '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> • τ< τ/ τscript τ>';
            'offset 11 peek_level-1 [  /  ]';
            '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> τ< • τ/ τSCRIPT τ>';
            '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> τ< • τ/ τscript τ>';
            scan( state.lexer, 83, 9 );
            if( state.lexer._type  == 10 ){
                'Assert Consume [  /  ]';
                consume( state );
                'offset 12 peek_level-1 [  SCRIPT script  ]';
                '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> τ< τ/ • τSCRIPT τ>';
                '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> τ< τ/ • τscript τ>';
                scan( state.lexer, 84, 9 );
                if( state.lexer._type  == 37 ){
                    'Asserts [  SCRIPT  ]';
                    state.push_fn( set_production /*27*/, 27 );
                    '"--LEAF--"';
                    '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> τ< τ/ • τSCRIPT τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 8, 35 );
                        return 0
                    };
                    return - 1
                } else if( state.lexer._type  == 39 ){
                    'Asserts [  script  ]';
                    state.push_fn( set_production /*27*/, 27 );
                    '"--LEAF--"';
                    '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> τ< τ/ • τscript τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 8, 35 );
                        return 0
                    };
                    return - 1
                }
            }
        }
    }
};
    return - 1
}

function branch_9cf639610c3537f3(state, db, prod){
    scan( state.lexer, 141, 11 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 55 );
    return 0
};
    return - 1
}

function branch_9d5a7eab51c37cb0(state, db, prod){
    add_reduce( state, 3, 311 );
    return 0
}

function branch_9d64d8ab25932416(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__STYLE_SHEET_list_1282_goto( state, db, 292 )
}

function branch_9d7371a3159c8a4b(state, db, prod){
    'offset 17 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ} •';
    add_reduce( state, 6, 230 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_9d7dc046c3f4d281(state, db, prod){
    '"--LEAF--"';
    '"--leafy--"';
    return 126
}

function branch_9d871c26cf31d6ba(state, db, prod){
    add_reduce( state, 2, 354 );
    add_reduce( state, 1, 1 );
    return 0
}

function branch_9d87f58cd61f2e04(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 6, 134 );
    return 0
};
    return - 1
}

function branch_9db3115235becfe6(state, db, prod){
    state.push_fn( branch_34ba99cd8ae03d85, 174 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_9e01aab23a7c11c1(state, db, prod){
    add_reduce( state, 3, 243 );
    return 0
}

function branch_9e534ae5b4265198(state, db, prod){
    add_reduce( state, 5, 329 );
    return hc_css__mf_range_goto( state, db, 248 )
}

function branch_9e986e4e875bdfda(state, db, prod){
    add_reduce( state, 2, 346 );
    return 285
}

function branch_9ea8d8de93214b70(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 3, 144 );
    return 0
};
    return - 1
}

function branch_9f4d101a511d592f(state, db, prod){
    scan( state.lexer, 94, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_a8fbaf0f87323457, 197 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_9ff54e7282ef1152(state, db, prod){
    add_reduce( state, 1, 115 );
    return 0
}

function branch_a0197a3296fdfafb(state, db, prod){
    add_reduce( state, 3, 311 );
    add_reduce( state, 1, 1 );
    return 0
}

function branch_a022a557e5d1d094(state, db, prod){
    'offset 4 peek_level-1 [  (  ]';
    '98:369 javascript__method_definition=>τasync javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:377 javascript__method_definition=>τasync javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>τasync javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:383 javascript__method_definition=>τasync javascript__property_name • τ( τ) τ{ τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 5 peek_level0 [  ... 40 { [ )  ]';
    '98:369 javascript__method_definition=>τasync javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>τasync javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
    '98:377 javascript__method_definition=>τasync javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
    '98:383 javascript__method_definition=>τasync javascript__property_name τ( • τ) τ{ τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        'offset 7 peek_level-1 [  102  ]';
        '98:369 javascript__method_definition=>τasync javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:378 javascript__method_definition=>τasync javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
        scan( state.lexer, 67, 11 );
        state.push_fn( branch_792c4b2ac67a7935, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 7 peek_level-1 [  )  ]';
        '98:377 javascript__method_definition=>τasync javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
        '98:383 javascript__method_definition=>τasync javascript__property_name τ( • τ) τ{ τ}';
        'offset 8 peek_level-1 [  {  ]';
        '98:377 javascript__method_definition=>τasync javascript__property_name τ( τ) • τ{ javascript__function_body τ}';
        '98:383 javascript__method_definition=>τasync javascript__property_name τ( τ) • τ{ τ}';
        scan( state.lexer, 13, 11 );
        if( state.lexer._type  == 16 ){
            'Assert Consume [  {  ]';
            consume( state );
            'offset 9 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
            '98:377 javascript__method_definition=>τasync javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
            '98:383 javascript__method_definition=>τasync javascript__property_name τ( τ) τ{ • τ}';
            scan( state.lexer, 40, 9 );
            if( isTokenActive( state.lexer._type, 41 ) ){
                'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:377 javascript__method_definition=>τasync javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                state.push_fn( branch_6f90f9be26052111, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                'Asserts [  }  ]';
                state.push_fn( set_production /*98*/, 98 );
                '"--LEAF--"';
                '98:383 javascript__method_definition=>τasync javascript__property_name τ( τ) τ{ • τ}';
                consume( state );
                add_reduce( state, 6, 137 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_a09e7c8106240880(state, db, prod){
    'offset 3 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ...  ]';
    '91:344 javascript__element_list=>javascript__elision • javascript__assignment_expression';
    '91:345 javascript__element_list=>javascript__elision • javascript__spread_element';
    scan( state.lexer, 105, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
    'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    '"--LEAF--"';
    '91:344 javascript__element_list=>javascript__elision • javascript__assignment_expression';
    state.push_fn( branch_d5b82c84f6a87a6a, 91 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    '"--LEAF--"';
    '91:345 javascript__element_list=>javascript__elision • javascript__spread_element';
    state.push_fn( branch_d5b82c84f6a87a6a, 91 );
    return hc_javascript__spread_element( state, db, 0 )
};
    return - 1
}

function branch_a16edcbb2ef21e4e(state, db, prod){
    'offset 4 peek_level-1 [  (  ]';
    '98:367 javascript__method_definition=>τset javascript__property_name • τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>τset javascript__property_name • τ( javascript__property_set_parameter_list τ) τ{ τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 5 peek_level-1 [  163  ]';
    '98:367 javascript__method_definition=>τset javascript__property_name τ( • javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>τset javascript__property_name τ( • javascript__property_set_parameter_list τ) τ{ τ}';
    scan( state.lexer, 142, 11 );
    state.push_fn( branch_eeb9c0d9a8eef4f8, 0 );
    return hc_javascript__property_set_parameter_list( state, db, 0 )
};
    return - 1
}

function branch_a172f1ead2e33677(state, db, prod){
    add_reduce( state, 2, 221 );
    return 0
}

function branch_a19db9d6844f32b3(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:826 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ>= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:826 css__mf_range=>css__mf_value τ>= tk:css__identifier • τ>= css__mf_value';
    scan( state.lexer, 96, 24 );
    if( ( state.lexer._type  == 81 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_a1abe50f17b19313(state, db, prod){
    add_reduce( state, 3, 268 );
    return hc_javascript__coalesce_expression_goto( state, db, 195 )
}

function branch_a20c02ef4298dc95(state, db, prod){
    scan( state.lexer, 65, 9 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 31 );
    return 0
};
    return - 1
}

function branch_a21bd1c476de366a(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 314 );
    return 0
};
    return - 1
}

function branch_a2852cbcab80f24b(state, db, prod){
    add_reduce( state, 2, 117 );
    return 0
}

function branch_a2a5aae2305d8568(state, db, prod){
    add_reduce( state, 3, 162 );
    return 127
}

function branch_a2d1e57f617f7d66(state, db, prod){
    '"--LEAF--"';
    '241:811 css__media_feature=>τ( • css__mf_range τ)';
    state.push_fn( branch_7ea803938e050e09, 240 );
    return hc_css__mf_range( state, db, 0 )
}

function branch_a3239a69d266627d(state, db, prod){
    add_reduce( state, 4, 57 );
    return 0
}

function branch_a3cd21a857d06f28(state, db, prod){
    'offset 8 peek_level-1 [  ) ,  ]';
    '180:618 javascript__parenthesized=>τ( javascript__expression • τ)';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    scan( state.lexer, 16, 11 );
    if( state.lexer._type  == 113 ){
    'Asserts [  )  ]';
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 180 )*/, 180 );
    '"--LEAF--"';
    '180:618 javascript__parenthesized=>τ( javascript__expression • τ)';
    consume( state );
    add_reduce( state, 3, 253 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 10 peek_level-1 [  ,  ]';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    'offset 11 peek_level-1 [  ) ...  ]';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 198 )*/, 198 );
        '"--LEAF--"';
        '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • τ)';
        consume( state );
        add_reduce( state, 4, 253 );
        add_reduce( state, 1, 275 );
        return 0
    } else {
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_79b1892882f11948, 198 );
        state.push_fn( branch_a7b2abff161468cb, 198 );
        return 0
    }
};
    return - 1
}

function branch_a3e83d9faaa61cfd(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__case_clauses_goto( state, db, 143 )
}

function branch_a4087d8b8c9a386b(state, db, prod){
    scan( state.lexer, 94, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_a8fbaf0f87323457, 57 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_a43fce48572b8630(state, db, prod){
    'offset 12 peek_level-1 [  }  ]';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ javascript__class_body • τ}';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ javascript__class_body • τ}';
    scan( state.lexer, 14, 11 );
    if( state.lexer._type  == 18 ){
    'Assert Consume [  }  ]';
    consume( state );
    'offset 13 peek_level-1 [  END_OF_FILE ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl  ]';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        'Asserts [  END_OF_FILE  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_d5caa7d95b0b6b30, 121 );
        state.push_fn( branch_8d96cfb80bfe5bc2, 75 );
        return 0
    } else {
        '"--LEAF--"';
        '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
        add_reduce( state, 5, 231 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_a473dd18c6f44f50(state, db, prod){
    add_reduce( state, 3, 43 );
    return 0
}

function branch_a5367ccba8bcfdb4(state, db, prod){
    'offset 14 peek_level-1 [  (  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 15 peek_level0 [  ... 40 { [ )  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_695fb15b8fbd4b08, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_b6b33baa71b23679, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_a611ed844340118b(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__int_token_list_601_goto( state, db, 277 )
}

function branch_a61249f19ae4f80e(state, db, prod){
    add_reduce( state, 2, 264 );
    return 191
}

function branch_a6259fc3edd7737c(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 10, 164 );
    return 0
};
    return - 1
}

function branch_a626995fc08c9472(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPOUND_SELECTOR_list_1330_goto( state, db, 300 )
}

function branch_a63db2704b3d0c43(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 119 );
    return 0
};
    return - 1
}

function branch_a66d797505329b2a(state, db, prod){
    'offset 2 peek_level-1 [  ] ,  ]';
    '113:417 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision javascript__binding_rest_element τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:417 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ]';
    consume( state );
    add_reduce( state, 3, 150 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 4 peek_level-1 [  ,  ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision javascript__binding_rest_element τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, τ]';
    'offset 5 peek_level0 [  , ... ]  ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__binding_rest_element τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • τ]';
    scan( state.lexer, 143, 11 );
    if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        'offset 7 peek_level-1 [  90  ]';
        '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision javascript__binding_rest_element τ]';
        '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision τ]';
        scan( state.lexer, 100, 11 );
        state.push_fn( branch_8637f38d50ddede4, 0 );
        return hc_javascript__elision( state, db, 0 )
    } else if( state.lexer._type  == 111 ){
        'Asserts [  ...  ]';
        state.push_fn( set_production /*113*/, 113 );
        '"--LEAF--"';
        '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__binding_rest_element τ]';
        state.push_fn( branch_72a90fe47ea2dd7d, 113 );
        return hc_javascript__binding_rest_element( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*113*/, 113 );
        '"--LEAF--"';
        '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • τ]';
        consume( state );
        add_reduce( state, 4, 150 );
        return 0
    }
};
    return - 1
}

function branch_a69ba5f976ce1c39(state, db, prod){
    'offset 4 peek_level-1 [  ] ,  ]';
    '113:417 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision javascript__binding_rest_element τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*113*/, 113 );
    '"--LEAF--"';
    '113:417 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ]';
    consume( state );
    add_reduce( state, 3, 150 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  ,  ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision javascript__binding_rest_element τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, τ]';
    'offset 7 peek_level0 [  , ... ]  ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__binding_rest_element τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • τ]';
    scan( state.lexer, 143, 11 );
    if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        'offset 9 peek_level-1 [  90  ]';
        '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision javascript__binding_rest_element τ]';
        '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__elision τ]';
        scan( state.lexer, 100, 11 );
        state.push_fn( branch_596abcfba34f36c7, 0 );
        return hc_javascript__elision( state, db, 0 )
    } else if( state.lexer._type  == 111 ){
        'Asserts [  ...  ]';
        state.push_fn( set_production /*113*/, 113 );
        '"--LEAF--"';
        '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__binding_rest_element τ]';
        state.push_fn( branch_72a90fe47ea2dd7d, 113 );
        return hc_javascript__binding_rest_element( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*113*/, 113 );
        '"--LEAF--"';
        '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • τ]';
        consume( state );
        add_reduce( state, 4, 150 );
        return 0
    }
};
    return - 1
}

function branch_a6c922ac7395948a(state, db, prod){
    'offset 3 peek_level0 [  = / > /> " " import export END_OF_PRODUCTION 13  ]';
    '20:85 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD • τ= html__ATTRIBUTE_BODY';
    '20:87 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD • τ= WICK_BINDING';
    '20:90 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD • τ= html__ATTRIBUTE_group_169_0_';
    '20:86 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD •';
    scan( state.lexer, 144, 9 );
    if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  =  ]';
    '20:85 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD • τ= html__ATTRIBUTE_BODY';
    '20:87 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD • τ= WICK_BINDING';
    '20:90 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD • τ= html__ATTRIBUTE_group_169_0_';
    'offset 6 peek_level0 [  { {! hybrid-3073[[23]production_token  ["]literal] 23 num id  ]';
    '20:85 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • html__ATTRIBUTE_BODY';
    '20:87 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • WICK_BINDING';
    '20:90 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • html__ATTRIBUTE_group_169_0_';
    scan( state.lexer, 145, 9 );
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
        'Asserts [  { {!  ]';
        state.push_fn( set_production /*20*/, 20 );
        '"--LEAF--"';
        '20:87 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • WICK_BINDING';
        state.push_fn( branch_f7de3da658dea4ce, 20 );
        return hc_WICK_BINDING( state, db, 0 )
    } else if( state.lexer._type  == 3073 || state.lexer._type  == 34 || state.lexer._type  == 33 ){
        'Asserts [  hybrid-3073[[23]production_token  ["]literal]  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_fe2bae871e28d597, 20 );
        state.push_fn( branch_6802d52f88e336b5, 20 );
        return 0
    } else {
        state.push_fn( set_production /*20*/, 20 );
        '"--LEAF--"';
        '20:85 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • html__ATTRIBUTE_BODY';
        state.push_fn( branch_70d9326e6c9dc217, 20 );
        return hc_html__ATTRIBUTE_BODY( state, db, 0 )
    }
} else {
    '"--LEAF--"';
    '20:86 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD •';
    add_reduce( state, 1, 29 );
    return 20
};
    return - 1
}

function branch_a6d6d0c374296361(state, db, prod){
    'offset 7 peek_level-1 [  {  ]';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage • τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 8 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.push_fn( set_production /*158*/, 158 );
        '"--LEAF--"';
        '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • javascript__class_body τ}';
        state.push_fn( branch_1ab9bb0b1d889bbd, 158 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*158*/, 158 );
        '"--LEAF--"';
        '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ • τ}';
        consume( state );
        add_reduce( state, 5, 233 );
        return 0
    }
};
    return - 1
}

function branch_a6edf34acd0514af(state, db, prod){
    'offset 6 peek_level-1 [  73  ]';
    '134:492 javascript__iteration_statement=>τfor τ( • javascript__left_hand_side_expression τin javascript__expression τ) javascript__statement';
    '134:505 javascript__iteration_statement=>τfor τ( • javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    scan( state.lexer, 146, 11 );
    state.push_fn( branch_07f51c15285b9925, 0 );
    return hc_javascript__left_hand_side_expression( state, db, 0 )
}

function branch_a757f61f66d496ad(state, db, prod){
    add_reduce( state, 8, 189 );
    return 0
}

function branch_a7b2abff161468cb(state, db, prod){
    '"--LEAF--"';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    state.push_fn( branch_0f4b91c57196f73b, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_( state, db, 0 )
}

function branch_a7bb0444cd5e8bab(state, db, prod){
    'offset 2 peek_level-1 [  ~= ^= $= *= = ]  ]';
    '221:752 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • τ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER css__string css__ATTR_MODIFIER τ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER tk:css__identifier css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER css__string τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER tk:css__identifier τ]';
    scan( state.lexer, 147, 24 );
    if( isTokenActive( state.lexer._type, 148 ) ){
    'Asserts [  ~= ^= $= *= =  ]';
    'offset 4 peek_level-1 [  222  ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER css__string css__ATTR_MODIFIER τ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER tk:css__identifier css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER css__string τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • css__ATTR_MATCHER tk:css__identifier τ]';
    scan( state.lexer, 149, 24 );
    state.push_fn( branch_e8b9679a451e18a6, 0 );
    return hc_css__ATTR_MATCHER( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*221*/, 221 );
    '"--LEAF--"';
    '221:752 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME • τ]';
    consume( state );
    add_reduce( state, 3, 308 );
    return 0
};
    return - 1
}

function branch_a7de5534b43714bf(state, db, prod){
    add_reduce( state, 2, 147 );
    return 0
}

function branch_a8022d582004ce02(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_IMPORT_TAG_LIST_goto( state, db, 2 )
}

function branch_a8064f294e1d80de(state, db, prod){
    add_reduce( state, 3, 49 );
    return 41
}

function branch_a81f0e5c9b1bb065(state, db, prod){
    add_reduce( state, 3, 61 );
    return 0
}

function branch_a85b9560c11d11f1(state, db, prod){
    'offset 4 peek_level0 [  " " 13 import export / >  ]';
    '17:58 html__TAG=>τ< html__VOID_NAME • html__ATTRIBUTES τ/ τ>';
    '17:67 html__TAG=>τ< html__VOID_NAME • html__ATTRIBUTES τ>';
    '17:66 html__TAG=>τ< html__VOID_NAME • τ/ τ>';
    '17:77 html__TAG=>τ< html__VOID_NAME • τ>';
    scan( state.lexer, 150, 9 );
    if( isTokenActive( state.lexer._type, 120 ) ){
    'Asserts [  " " 13 import export  ]';
    'offset 6 peek_level-1 [  19  ]';
    '17:58 html__TAG=>τ< html__VOID_NAME • html__ATTRIBUTES τ/ τ>';
    '17:67 html__TAG=>τ< html__VOID_NAME • html__ATTRIBUTES τ>';
    scan( state.lexer, 121, 9 );
    state.push_fn( branch_a9f67e174617e7d8, 0 );
    return hc_html__ATTRIBUTES( state, db, 0 )
} else if( state.lexer._type  == 10 ){
    'Asserts [  /  ]';
    state.push_fn( set_production /*17*/, 17 );
    '"--LEAF--"';
    '17:66 html__TAG=>τ< html__VOID_NAME • τ/ τ>';
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 4, 24 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    state.push_fn( set_production /*17*/, 17 );
    '"--LEAF--"';
    '17:77 html__TAG=>τ< html__VOID_NAME • τ>';
    consume( state );
    add_reduce( state, 3, 24 );
    return 0
};
    return - 1
}

function branch_a8b069c903e9e56e(state, db, prod){
    add_reduce( state, 3, 65 );
    return 0
}

function branch_a8b263dabb540262(state, db, prod){
    add_reduce( state, 1, 11 );
    return 0
}

function branch_a8b99bb69233a624(state, db, prod){
    add_reduce( state, 4, 42 );
    return 0
}

function branch_a8c1480cdd56a687(state, db, prod){
    'offset 3 peek_level-1 [  ; @media @keyframes @supports * # . [ : </ END_OF_PRODUCTION 216  ]';
    '254:854 css__AT_RULE=>css__supports • τ;';
    '254:857 css__AT_RULE=>css__supports •';
    scan( state.lexer, 38, 24 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*254*/, 254 );
    '"--LEAF--"';
    '254:854 css__AT_RULE=>css__supports • τ;';
    consume( state );
    add_reduce( state, 2, 14 );
    return 0
} else {
    '"--LEAF--"';
    '254:857 css__AT_RULE=>css__supports •';
    add_reduce( state, 1, 14 );
    return 254
};
    return - 1
}

function branch_a8fbaf0f87323457(state, db, prod){
    add_reduce( state, 4, 272 );
    return 0
}

function branch_a999f6308f78bcf5(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 123 );
    return 0
};
    return - 1
}

function branch_a9f67e174617e7d8(state, db, prod){
    'offset 7 peek_level-1 [  / >  ]';
    '17:58 html__TAG=>τ< html__VOID_NAME html__ATTRIBUTES • τ/ τ>';
    '17:67 html__TAG=>τ< html__VOID_NAME html__ATTRIBUTES • τ>';
    scan( state.lexer, 151, 9 );
    if( state.lexer._type  == 10 ){
    'Asserts [  /  ]';
    state.push_fn( set_production /*17*/, 17 );
    '"--LEAF--"';
    '17:58 html__TAG=>τ< html__VOID_NAME html__ATTRIBUTES • τ/ τ>';
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 5, 20 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    state.push_fn( set_production /*17*/, 17 );
    '"--LEAF--"';
    '17:67 html__TAG=>τ< html__VOID_NAME html__ATTRIBUTES • τ>';
    consume( state );
    add_reduce( state, 4, 20 );
    return 0
};
    return - 1
}

function branch_aa3c16b74408eee8(state, db, prod){
    'offset 3 peek_level0 [  , ) END_OF_PRODUCTION  ]';
    '103:393 javascript__formal_parameters=>javascript__formal_parameter_list • τ,';
    '103:394 javascript__formal_parameters=>javascript__formal_parameter_list • τ, javascript__function_rest_parameter';
    '103:395 javascript__formal_parameters=>javascript__formal_parameter_list •';
    scan( state.lexer, 152, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 5 peek_level-1 [  ,  ]';
    '103:393 javascript__formal_parameters=>javascript__formal_parameter_list • τ,';
    '103:394 javascript__formal_parameters=>javascript__formal_parameter_list • τ, javascript__function_rest_parameter';
    'offset 6 peek_level0 [  ... ) END_OF_PRODUCTION  ]';
    '103:393 javascript__formal_parameters=>javascript__formal_parameter_list τ, •';
    '103:394 javascript__formal_parameters=>javascript__formal_parameter_list τ, • javascript__function_rest_parameter';
    scan( state.lexer, 153, 11 );
    if( state.lexer._type  == 111 ){
        'Asserts [  ...  ]';
        state.push_fn( set_production /*103*/, 103 );
        '"--LEAF--"';
        '103:394 javascript__formal_parameters=>javascript__formal_parameter_list τ, • javascript__function_rest_parameter';
        state.push_fn( branch_713b2f8bd118627a, 103 );
        return hc_javascript__function_rest_parameter( state, db, 0 )
    } else {
        '"--LEAF--"';
        '103:393 javascript__formal_parameters=>javascript__formal_parameter_list τ, •';
        add_reduce( state, 2, 141 );
        return 103
    }
} else {
    '"--LEAF--"';
    '103:395 javascript__formal_parameters=>javascript__formal_parameter_list •';
    add_reduce( state, 1, 141 );
    return 103
};
    return - 1
}

function branch_aa8ebb943fbd1a48(state, db, prod){
    state.push_fn( branch_a3239a69d266627d, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_ab5c4a110d499aaa(state, db, prod){
    'offset 10 peek_level-1 [  </  ]';
    '17:68 html__TAG=>τ< τSTYLE τ> css__CSS • τ</ τSTYLE τ>';
    '17:72 html__TAG=>τ< τSTYLE τ> css__CSS • τ</ τstyle τ>';
    scan( state.lexer, 30, 9 );
    if( state.lexer._type  == 28 ){
    'Assert Consume [  </  ]';
    consume( state );
    'offset 11 peek_level-1 [  STYLE style  ]';
    '17:68 html__TAG=>τ< τSTYLE τ> css__CSS τ</ • τSTYLE τ>';
    '17:72 html__TAG=>τ< τSTYLE τ> css__CSS τ</ • τstyle τ>';
    scan( state.lexer, 29, 9 );
    if( state.lexer._type  == 30 ){
        'Asserts [  STYLE  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:68 html__TAG=>τ< τSTYLE τ> css__CSS τ</ • τSTYLE τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 25 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 31 ){
        'Asserts [  style  ]';
        state.push_fn( set_production /*17*/, 17 );
        '"--LEAF--"';
        '17:72 html__TAG=>τ< τSTYLE τ> css__CSS τ</ • τstyle τ>';
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 25 );
            return 0
        };
        return - 1
    }
};
    return - 1
}

function branch_acd9ffcdb9473c40(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_bed0d628da1f06c1, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_acda0059542b066b(state, db, prod){
    scan( state.lexer, 154, 11 );
    if( ( state.lexer._type  == 148 ) ){
    consume( state );
    state.push_fn( branch_a1abe50f17b19313, 195 );
    return hc_javascript__bitwise_or_expression( state, db, 0 )
};
    return - 1
}

function branch_ad7dad5f3826f56b(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 5, 277 );
    return 199
};
    return - 1
}

function branch_adb349d37dbc5acd(state, db, prod){
    add_reduce( state, 2, 354 );
    return 0
}

function branch_ae070c57f7da2b64(state, db, prod){
    add_reduce( state, 1, 337 );
    return 256
}

function branch_aea5465f0a146c0f(state, db, prod){
    add_reduce( state, 3, 110 );
    return 0
}

function branch_af0e5612b39ee197(state, db, prod){
    '"--LEAF--"';
    '252:846 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ • css__STYLE_RULE_list_1610 τ}';
    state.push_fn( branch_bc512fc854baa5fc, 252 );
    return hc_css__STYLE_RULE_list_1610( state, db, 0 )
}

function branch_af29ef54a1233fb1(state, db, prod){
    scan( state.lexer, 37, 24 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 0 );
    return 0
};
    return - 1
}

function branch_af5a47252c447dea(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:827 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ<= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:827 css__mf_range=>css__mf_value τ<= tk:css__identifier • τ<= css__mf_value';
    scan( state.lexer, 25, 24 );
    if( ( state.lexer._type  == 80 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_af679ef3125e0c9b(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__GROUP_RULE_BODY_goto( state, db, 257 )
}

function branch_b0812bdbb7de30d7(state, db, prod){
    'offset 3 peek_level0 [  = ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
    '138:516 javascript__lexical_binding=>javascript__binding_identifier •';
    '138:517 javascript__lexical_binding=>javascript__binding_identifier • javascript__initializer';
    scan( state.lexer, 54, 11 );
    if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    state.push_fn( set_production /*138*/, 138 );
    '"--LEAF--"';
    '138:517 javascript__lexical_binding=>javascript__binding_identifier • javascript__initializer';
    state.push_fn( branch_174a4749802a5aed, 138 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    '"--LEAF--"';
    '138:516 javascript__lexical_binding=>javascript__binding_identifier •';
    return 138
};
    return - 1
}

function branch_b2fd4a2a8060c709(state, db, prod){
    'offset 10 peek_level-1 [  <  ]';
    '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script • τ< τ/ τSCRIPT τ>';
    '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script • τ< τ/ τscript τ>';
    scan( state.lexer, 111, 9 );
    if( state.lexer._type  == 27 ){
    'Assert Consume [  <  ]';
    consume( state );
    'offset 11 peek_level-1 [  /  ]';
    '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script τ< • τ/ τSCRIPT τ>';
    '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script τ< • τ/ τscript τ>';
    scan( state.lexer, 83, 9 );
    if( state.lexer._type  == 10 ){
        'Assert Consume [  /  ]';
        consume( state );
        'offset 12 peek_level-1 [  SCRIPT script  ]';
        '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script τ< τ/ • τSCRIPT τ>';
        '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script τ< τ/ • τscript τ>';
        scan( state.lexer, 84, 9 );
        if( state.lexer._type  == 37 ){
            'Asserts [  SCRIPT  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script τ< τ/ • τSCRIPT τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 8, 34 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 39 ){
            'Asserts [  script  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> javascript__script τ< τ/ • τscript τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 8, 34 );
                return 0
            };
            return - 1
        }
    }
};
    return - 1
}

function branch_b5b9637d18ae7c84(state, db, prod){
    add_reduce( state, 5, 328 );
    return hc_css__mf_range_goto( state, db, 248 )
}

function branch_b5fdd6aabf77a7a5(state, db, prod){
    add_reduce( state, 3, 71 );
    return 0
}

function branch_b64731a444ee13c0(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_6d5fe25590047b65, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_b68265317f93cd7a(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_06baf88f7890c41a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_b6b33baa71b23679(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 168 );
    return 0
};
    return - 1
}

function branch_b746cdddf9c0321b(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 207 );
    return 0
};
    return - 1
}

function branch_b7fd124f92fb523a(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:841 css__mf_range=>css__mf_value τ< • tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:841 css__mf_range=>css__mf_value τ< tk:css__identifier • τ< css__mf_value';
    scan( state.lexer, 107, 24 );
    if( ( state.lexer._type  == 27 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_b83e3d5a44bbe4a5(state, db, prod){
    add_reduce( state, 2, 260 );
    return 0
}

function branch_b84b8efa7845113b(state, db, prod){
    add_reduce( state, 2, 111 );
    return 92
}

function branch_b88a2a5e5e3bb6c7(state, db, prod){
    '"--LEAF--"';
    '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
    state.push_fn( branch_269033d650d0c821, 248 );
    return hc_css__mf_name( state, db, 0 )
}

function branch_b8ac3131d3a3e021(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_html__TAG_BODY_goto( state, db, 26 )
}

function branch_b8f84665b89c9897(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_4f71a16bc828273c, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_b90d0bc4f53c5817(state, db, prod){
    scan( state.lexer, 94, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_647439ca9e7ea686, 197 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_b98464b55f6f88b7(state, db, prod){
    state.push_fn( branch_6a785f89ee375b00, 34 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_b9bf377dde48a035(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_e2e87c4cabd27c76, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_ba51cf1d2a90dae6(state, db, prod){
    'offset 6 peek_level-1 [  135  ]';
    '134:487 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:498 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration javascript__expression τ; τ) javascript__statement';
    '134:508 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration τ; τ) javascript__statement';
    scan( state.lexer, 108, 11 );
    state.push_fn( branch_f2329607313f1867, 0 );
    return hc_javascript__lexical_declaration( state, db, 0 )
}

function branch_ba73dd3943623c00(state, db, prod){
    'offset 2 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '162:570 javascript__hoistable_declaration=>javascript__function_declaration •';
    {
    '"--LEAF--"';
    '162:570 javascript__hoistable_declaration=>javascript__function_declaration •';
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_bafc000a9c398ba6(state, db, prod){
    '"--LEAF--"';
    '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    state.push_fn( branch_625784590dfb6990, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_( state, db, 0 )
}

function branch_bb0cb59facb2821a(state, db, prod){
    state.push_fn( branch_b98464b55f6f88b7, 34 );
    return hc_javascript__from_clause( state, db, 0 )
}

function branch_bb129fcd84bd27b6(state, db, prod){
    scan( state.lexer, 155, 11 );
    if( ( state.lexer._type  == 104 ) ){
    consume( state );
    add_reduce( state, 2, 14 );
    return 85
};
    return - 1
}

function branch_bb4f5446f0577f53(state, db, prod){
    add_reduce( state, 2, 271 );
    return 0
}

function branch_bbdf222a52f0a3f4(state, db, prod){
    scan( state.lexer, 156, 9 );
    if( ( state.lexer._type  == 17 ) ){
    consume( state );
    add_reduce( state, 2, 14 );
    return 316
};
    return - 1
}

function branch_bc04aeea89469b83(state, db, prod){
    'offset 3 peek_level-1 [  )  ]';
    '132:480 javascript__if_statement=>τif τ( javascript__expression • τ) javascript__statement τelse javascript__statement';
    '132:481 javascript__if_statement=>τif τ( javascript__expression • τ) javascript__statement';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 4 peek_level-1 [  122  ]';
    '132:480 javascript__if_statement=>τif τ( javascript__expression τ) • javascript__statement τelse javascript__statement';
    '132:481 javascript__if_statement=>τif τ( javascript__expression τ) • javascript__statement';
    scan( state.lexer, 157, 11 );
    state.push_fn( branch_906517a24028dd0e, 0 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_bc231d7404cbc712(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 3, 101 );
    return 89
};
    return - 1
}

function branch_bc3a70852c614b9e(state, db, prod){
    '"--LEAF--"';
    '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    state.push_fn( branch_625784590dfb6990, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_( state, db, 0 )
}

function branch_bc512fc854baa5fc(state, db, prod){
    scan( state.lexer, 71, 24 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 332 );
    return 252
};
    return - 1
}

function branch_bccca4c4593292e3(state, db, prod){
    'offset 4 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '86:325 javascript__hex_token=>τ0X javascript__hex_token_list_606 • javascript__hex_token_list_607';
    '86:327 javascript__hex_token=>τ0X javascript__hex_token_list_606 •';
    scan( state.lexer, 158, 9 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( set_production /*86*/, 86 );
    '"--LEAF--"';
    '86:325 javascript__hex_token=>τ0X javascript__hex_token_list_606 • javascript__hex_token_list_607';
    state.push_fn( branch_918124bffd412d50, 86 );
    return hc_javascript__hex_token_list_607( state, db, 0 )
} else {
    '"--LEAF--"';
    '86:327 javascript__hex_token=>τ0X javascript__hex_token_list_606 •';
    add_reduce( state, 2, 12 );
    return 86
};
    return - 1
}

function branch_bde3f53b296f2151(state, db, prod){
    scan( state.lexer, 52, 9 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 7 );
    return 0
};
    return - 1
}

function branch_be9017ee1fa4e6ba(state, db, prod){
    add_reduce( state, 1, 140 );
    return 0
}

function branch_bed0d628da1f06c1(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 167 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_bf213fcbd8137fe3(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:839 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:839 css__mf_range=>css__mf_value τ<= tk:css__identifier • τ< css__mf_value';
    scan( state.lexer, 107, 24 );
    if( ( state.lexer._type  == 27 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_bfe024a32ddac392(state, db, prod){
    add_reduce( state, 2, 289 );
    add_reduce( state, 1, 316 );
    return 0
}

function branch_c01b7e540a0470ae(state, db, prod){
    add_reduce( state, 2, 12 );
    return 315
}

function branch_c02448e2673e27f3(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__octal_token_list_614_goto( state, db, 281 )
}

function branch_c1851f0a1e44b8ad(state, db, prod){
    add_reduce( state, 2, 349 );
    return 322
}

function branch_c1fba707ab2be2a5(state, db, prod){
    add_reduce( state, 4, 109 );
    return 0
}

function branch_c2c3998afc2615b5(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 168 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_c33aa562df599c33(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__hex_token_list_607_goto( state, db, 279 )
}

function branch_c342c3a3a0f47eb9(state, db, prod){
    add_reduce( state, 2, 333 );
    return 0
}

function branch_c34374128f2f73d0(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_4aea69899aef47c7, 58 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function branch_c35d3f2b796beb1b(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_4aea69899aef47c7, 126 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function branch_c36ec8b885763224(state, db, prod){
    add_reduce( state, 3, 218 );
    return 0
}

function branch_c36ee5fcf9976925(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPOUND_SELECTOR_list_1329_goto( state, db, 299 )
}

function branch_c3841a874700c4e0(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_873755940ab62737, 153 );
    return hc_javascript__block( state, db, 0 )
};
    return - 1
}

function branch_c3c3efd201d2c167(state, db, prod){
    'offset 11 peek_level-1 [  }  ]';
    '165:577 javascript__class_expression=>τclass τ{ javascript__class_body • τ}';
    '158:560 javascript__class_declaration=>τclass τ{ javascript__class_body • τ}';
    scan( state.lexer, 14, 11 );
    if( state.lexer._type  == 18 ){
    'Assert Consume [  }  ]';
    consume( state );
    'offset 12 peek_level-1 [  END_OF_FILE ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl  ]';
    '158:560 javascript__class_declaration=>τclass τ{ javascript__class_body τ} •';
    '165:577 javascript__class_expression=>τclass τ{ javascript__class_body τ} •';
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        'Asserts [  END_OF_FILE  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_2b1b9890ca734b2e, 121 );
        state.push_fn( branch_703ec40a06a493ef, 75 );
        return 0
    } else {
        '"--LEAF--"';
        '165:577 javascript__class_expression=>τclass τ{ javascript__class_body τ} •';
        add_reduce( state, 4, 234 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_c417a0113f98071e(state, db, prod){
    add_reduce( state, 2, 0 );
    return 0
}

function branch_c4799025e7c55b46(state, db, prod){
    add_reduce( state, 2, 349 );
    return 321
}

function branch_c5145e9e61ff30dc(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 7, 22 );
    return 0
};
    return - 1
}

function branch_c51cb31e873d5c0f(state, db, prod){
    add_reduce( state, 2, 81 );
    return 0
}

function branch_c53f49c2a43a87e6(state, db, prod){
    scan( state.lexer, 159, 11 );
    if( ( state.lexer._type  == 32 ) ){
    consume( state );
    add_reduce( state, 3, 55 );
    return 0
};
    return - 1
}

function branch_c5bd86106a93e50c(state, db, prod){
    add_reduce( state, 2, 157 );
    return 0
}

function branch_c672daf1948e48fe(state, db, prod){
    add_reduce( state, 2, 59 );
    return 0
}

function branch_c6f3389fe847ba79(state, db, prod){
    scan( state.lexer, 160, 11 );
    if( ( state.lexer._type  == 121 ) ){
    consume( state );
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_62371e09d07c7934, 134 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function branch_c725997775810dfc(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__keyframes_list_1637_goto( state, db, 309 )
}

function branch_c72e6f9542bb18eb(state, db, prod){
    add_reduce( state, 2, 349 );
    return 303
}

function branch_c7a3cf8bad226361(state, db, prod){
    'offset 7 peek_level0 [  only not 216 ( ; END_OF_PRODUCTION  ]';
    '204:695 css__import=>τ@import css__import_group_1285_0_ css__import_group_1287_0_ • css__import_list_1289';
    '204:699 css__import=>τ@import css__import_group_1285_0_ css__import_group_1287_0_ •';
    scan( state.lexer, 39, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    'Asserts [  only not 216 (  ]';
    state.push_fn( set_production /*204*/, 204 );
    '"--LEAF--"';
    '204:695 css__import=>τ@import css__import_group_1285_0_ css__import_group_1287_0_ • css__import_list_1289';
    state.push_fn( branch_472b2c778a3a0605, 204 );
    return hc_css__import_list_1289( state, db, 0 )
} else {
    '"--LEAF--"';
    '204:699 css__import=>τ@import css__import_group_1285_0_ css__import_group_1287_0_ •';
    add_reduce( state, 3, 285 );
    return 204
};
    return - 1
}

function branch_c80d25956108cfaf(state, db, prod){
    add_reduce( state, 3, 200 );
    return 135
}

function branch_c83122ac5741e946(state, db, prod){
    'offset 7 peek_level-1 [  >  ]';
    '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> css__CSS τ</ τSTYLE τ>';
    '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> css__CSS τ</ τstyle τ>';
    '17:69 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> τ</ τSTYLE τ>';
    '17:73 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> τ</ τstyle τ>';
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    'Assert Consume [  >  ]';
    consume( state );
    'offset 8 peek_level0 [   @import @media @keyframes @supports * 216 # . [ : </  ]';
    '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • css__CSS τ</ τSTYLE τ>';
    '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • css__CSS τ</ τstyle τ>';
    '17:69 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • τ</ τSTYLE τ>';
    '17:73 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • τ</ τstyle τ>';
    scan( state.lexer, 26, 9 );
    if( isTokenActive( state.lexer._type, 27 ) ){
        'Asserts [   @import @media @keyframes @supports * 216 # . [ :  ]';
        'offset 10 peek_level-1 [  202  ]';
        '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • css__CSS τ</ τSTYLE τ>';
        '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • css__CSS τ</ τstyle τ>';
        scan( state.lexer, 28, 9 );
        state.push_fn( branch_6b7c6730793b5be5, 0 );
        return hc_css__CSS( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        'Asserts [  </  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 10 peek_level-1 [  </  ]';
        '17:69 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • τ</ τSTYLE τ>';
        '17:73 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> • τ</ τstyle τ>';
        'offset 11 peek_level-1 [  STYLE style  ]';
        '17:69 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> τ</ • τSTYLE τ>';
        '17:73 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> τ</ • τstyle τ>';
        scan( state.lexer, 29, 9 );
        if( state.lexer._type  == 30 ){
            'Asserts [  STYLE  ]';
            state.push_fn( set_production /*17*/, 17 );
            '"--LEAF--"';
            '17:69 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> τ</ • τSTYLE τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 26 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 31 ){
            'Asserts [  style  ]';
            state.push_fn( set_production /*17*/, 17 );
            '"--LEAF--"';
            '17:73 html__TAG=>τ< τSTYLE html__ATTRIBUTES τ> τ</ • τstyle τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 26 );
                return 0
            };
            return - 1
        }
    }
};
    return - 1
}

function branch_c89e5cb4a82e5385(state, db, prod){
    scan( state.lexer, 71, 24 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 338 );
    return 258
};
    return - 1
}

function branch_c8d2a666286307a2(state, db, prod){
    add_reduce( state, 3, 220 );
    return 0
}

function branch_c97aa6410788a467(state, db, prod){
    'offset 4 peek_level-1 [  {  ]';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage • τ{ javascript__class_body τ}';
    '165:578 javascript__class_expression=>τclass javascript__class_heritage • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 5 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
    '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ • τ}';
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.push_fn( set_production /*165*/, 165 );
        '"--LEAF--"';
        '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ • javascript__class_body τ}';
        state.push_fn( branch_2374c682d05e30d1, 165 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*165*/, 165 );
        '"--LEAF--"';
        '165:578 javascript__class_expression=>τclass javascript__class_heritage τ{ • τ}';
        consume( state );
        add_reduce( state, 4, 235 );
        return 0
    }
};
    return - 1
}

function branch_c9aa0f04d222f980(state, db, prod){
    add_reduce( state, 1, 98 );
    return 0
}

function branch_c9c4b70f1f36587f(state, db, prod){
    add_reduce( state, 2, 292 );
    return 0
}

function branch_ca2547f815f0bf6c(state, db, prod){
    '"--LEAF--"';
    '"--leafy--"';
    return 178
}

function branch_ca532a3862fc90d3(state, db, prod){
    add_reduce( state, 3, 284 );
    return 0
}

function branch_ca77ad478b1b5a2f(state, db, prod){
    'offset 4 peek_level0 [  / >  ]';
    '3:5 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ/ τ> τ<import>';
    '3:6 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ/ τ>';
    '3:8 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ> τ<import>';
    '3:10 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ>';
    scan( state.lexer, 151, 9 );
    if( state.lexer._type  == 10 ){
    'Asserts [  /  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  /  ]';
    '3:5 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ/ τ> τ<import>';
    '3:6 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ/ τ>';
    'offset 7 peek_level-1 [  >  ]';
    '3:5 IMPORT_TAG=>τ<import html__ATTRIBUTES τ/ • τ> τ<import>';
    '3:6 IMPORT_TAG=>τ<import html__ATTRIBUTES τ/ • τ>';
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
        'Assert Consume [  >  ]';
        consume( state );
        'offset 8 peek_level-1 [  <import> <import < END_OF_PRODUCTION  ]';
        '3:5 IMPORT_TAG=>τ<import html__ATTRIBUTES τ/ τ> • τ<import>';
        '3:6 IMPORT_TAG=>τ<import html__ATTRIBUTES τ/ τ> •';
        scan( state.lexer, 161, 9 );
        if( state.lexer._type  == 12 ){
            'Asserts [  <import>  ]';
            state.push_fn( set_production /*3*/, 3 );
            '"--LEAF--"';
            '3:5 IMPORT_TAG=>τ<import html__ATTRIBUTES τ/ τ> • τ<import>';
            consume( state );
            add_reduce( state, 5, 3 );
            return 0
        } else {
            '"--LEAF--"';
            '3:6 IMPORT_TAG=>τ<import html__ATTRIBUTES τ/ τ> •';
            add_reduce( state, 4, 3 );
            return 3
        }
    }
} else if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 6 peek_level-1 [  >  ]';
    '3:8 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ> τ<import>';
    '3:10 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ>';
    'offset 7 peek_level-1 [  <import> <import < END_OF_PRODUCTION  ]';
    '3:8 IMPORT_TAG=>τ<import html__ATTRIBUTES τ> • τ<import>';
    '3:10 IMPORT_TAG=>τ<import html__ATTRIBUTES τ> •';
    scan( state.lexer, 161, 9 );
    if( state.lexer._type  == 12 ){
        'Asserts [  <import>  ]';
        state.push_fn( set_production /*3*/, 3 );
        '"--LEAF--"';
        '3:8 IMPORT_TAG=>τ<import html__ATTRIBUTES τ> • τ<import>';
        consume( state );
        add_reduce( state, 4, 3 );
        return 0
    } else {
        '"--LEAF--"';
        '3:10 IMPORT_TAG=>τ<import html__ATTRIBUTES τ> •';
        add_reduce( state, 3, 3 );
        return 3
    }
};
    return - 1
}

function branch_ca8976e3dc7da8de(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_a757f61f66d496ad, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_cb167a3f9f07927a(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:837 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:837 css__mf_range=>css__mf_value τ>= tk:css__identifier • τ> css__mf_value';
    scan( state.lexer, 66, 24 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_ccb7e21bf7959db5(state, db, prod){
    add_reduce( state, 2, 262 );
    return 0
}

function branch_cd2cb244b20686d9(state, db, prod){
    'offset 16 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
    {
    '"--LEAF--"';
    '158:559 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ τ} •';
    add_reduce( state, 5, 233 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_cdf7eba05b87dc47(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__template_string_list_1088_goto( state, db, 288 )
}

function branch_cf5f2b7a242c50fd(state, db, prod){
    add_reduce( state, 1, 241 );
    return 0
}

function branch_cf682186ca5859a9(state, db, prod){
    'offset 2 peek_level-1 [  {  ]';
    '263:872 css__supports=>τ@supports css__supports_group_1652_0_ • τ{ css__GROUP_RULE_BODY τ}';
    '263:873 css__supports=>τ@supports css__supports_group_1652_0_ • τ{ τ}';
    scan( state.lexer, 42, 24 );
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 3 peek_level0 [  * 216 # . [ : }  ]';
    '263:872 css__supports=>τ@supports css__supports_group_1652_0_ τ{ • css__GROUP_RULE_BODY τ}';
    '263:873 css__supports=>τ@supports css__supports_group_1652_0_ τ{ • τ}';
    scan( state.lexer, 97, 24 );
    if( isTokenActive( state.lexer._type, 98 ) ){
        'Asserts [  * 216 # . [ :  ]';
        state.push_fn( set_production /*263*/, 263 );
        '"--LEAF--"';
        '263:872 css__supports=>τ@supports css__supports_group_1652_0_ τ{ • css__GROUP_RULE_BODY τ}';
        state.push_fn( branch_3a9a122a9b11f3b5, 263 );
        return hc_css__GROUP_RULE_BODY( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*263*/, 263 );
        '"--LEAF--"';
        '263:873 css__supports=>τ@supports css__supports_group_1652_0_ τ{ • τ}';
        consume( state );
        add_reduce( state, 4, 342 );
        return 0
    }
};
    return - 1
}

function branch_cff5c6dc70998e82(state, db, prod){
    add_reduce( state, 1, 347 );
    return 294
}

function branch_d0393a2bdcb724db(state, db, prod){
    state.push_fn( branch_4e2e39620f32f239, 135 );
    return hc_javascript__binding_list( state, db, 0 )
}

function branch_d039753938d9cd05(state, db, prod){
    scan( state.lexer, 71, 24 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 331 );
    return 0
};
    return - 1
}

function branch_d066281b5241e9c3(state, db, prod){
    scan( state.lexer, 93, 24 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_8556e88bbf7a4064, 242 );
    return hc_css__mf_value( state, db, 0 )
};
    return - 1
}

function branch_d0cc2e3ffb7fb26a(state, db, prod){
    'offset 4 peek_level-1 [  , }  ]';
    '42:181 javascript__named_imports=>τ{ javascript__named_imports_list_331 • τ, τ}';
    '42:183 javascript__named_imports=>τ{ javascript__named_imports_list_331 • τ}';
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( set_production /*42*/, 42 );
    '"--LEAF--"';
    '42:181 javascript__named_imports=>τ{ javascript__named_imports_list_331 • τ, τ}';
    consume( state );
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 4, 50 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*42*/, 42 );
    '"--LEAF--"';
    '42:183 javascript__named_imports=>τ{ javascript__named_imports_list_331 • τ}';
    consume( state );
    add_reduce( state, 3, 50 );
    return 0
};
    return - 1
}

function branch_d24507c3da9f329b(state, db, prod){
    scan( state.lexer, 138, 9 );
    if( ( state.lexer._type  == 26 ) ){
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 5, 16 );
        return 0
    }
};
    return - 1
}

function branch_d2a8975db05dbfcf(state, db, prod){
    'offset 4 peek_level0 [  case }  ]';
    '142:524 javascript__case_block=>τ{ javascript__default_clause • javascript__case_clauses τ}';
    '142:528 javascript__case_block=>τ{ javascript__default_clause • τ}';
    scan( state.lexer, 109, 11 );
    if( state.lexer._type  == 128 ){
    'Asserts [  case  ]';
    state.push_fn( set_production /*142*/, 142 );
    '"--LEAF--"';
    '142:524 javascript__case_block=>τ{ javascript__default_clause • javascript__case_clauses τ}';
    state.push_fn( branch_9b60da2eca0fe01f, 142 );
    return hc_javascript__case_clauses( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*142*/, 142 );
    '"--LEAF--"';
    '142:528 javascript__case_block=>τ{ javascript__default_clause • τ}';
    consume( state );
    add_reduce( state, 3, 210 );
    return 0
};
    return - 1
}

function branch_d2f9c0255f04782b(state, db, prod){
    scan( state.lexer, 55, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 266 );
    return 0
};
    return - 1
}

function branch_d34fa5c5e0e9d678(state, db, prod){
    'offset 4 peek_level-1 [  216  ]';
    '248:840 css__mf_range=>css__mf_value τ> • tk:css__identifier τ> css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:840 css__mf_range=>css__mf_value τ> tk:css__identifier • τ> css__mf_value';
    scan( state.lexer, 66, 24 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_d3c83c6593b0d214(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_8ea6cf05133375eb, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_d554d2768b30da15(state, db, prod){
    add_reduce( state, 1, 47 );
    return 38
}

function branch_d5b82c84f6a87a6a(state, db, prod){
    add_reduce( state, 2, 108 );
    return 0
}

function branch_d5caa7d95b0b6b30(state, db, prod){
    'offset 14 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
    {
    '"--LEAF--"';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ javascript__class_body τ} •';
    add_reduce( state, 5, 231 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_d5d91d7289cf520e(state, db, prod){
    'offset 11 peek_level-1 [  <  ]';
    '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script • τ< τ/ τSCRIPT τ>';
    '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script • τ< τ/ τscript τ>';
    scan( state.lexer, 111, 9 );
    if( state.lexer._type  == 27 ){
    'Assert Consume [  <  ]';
    consume( state );
    'offset 12 peek_level-1 [  /  ]';
    '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script τ< • τ/ τSCRIPT τ>';
    '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script τ< • τ/ τscript τ>';
    scan( state.lexer, 83, 9 );
    if( state.lexer._type  == 10 ){
        'Assert Consume [  /  ]';
        consume( state );
        'offset 13 peek_level-1 [  SCRIPT script  ]';
        '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ • τSCRIPT τ>';
        '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ • τscript τ>';
        scan( state.lexer, 84, 9 );
        if( state.lexer._type  == 37 ){
            'Asserts [  SCRIPT  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ • τSCRIPT τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 9, 33 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 39 ){
            'Asserts [  script  ]';
            state.push_fn( set_production /*27*/, 27 );
            '"--LEAF--"';
            '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ • τscript τ>';
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 9, 33 );
                return 0
            };
            return - 1
        }
    }
};
    return - 1
}

function branch_d62dc9b9f72ed489(state, db, prod){
    'offset 8 peek_level0 [  i s ]  ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER css__string • css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER css__string • τ]';
    scan( state.lexer, 162, 24 );
    if( state.lexer._type  == 174 || state.lexer._type  == 175 ){
    'Asserts [  i s  ]';
    state.push_fn( set_production /*221*/, 221 );
    '"--LEAF--"';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER css__string • css__ATTR_MODIFIER τ]';
    state.push_fn( branch_17a3282d8d9c8a2d, 221 );
    return hc_css__ATTR_MODIFIER( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    'Asserts [  ]  ]';
    state.push_fn( set_production /*221*/, 221 );
    '"--LEAF--"';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER css__string • τ]';
    consume( state );
    add_reduce( state, 5, 310 );
    return 0
};
    return - 1
}

function branch_d67a8a460d48d673(state, db, prod){
    add_reduce( state, 3, 89 );
    return 0
}

function branch_d689e0319550fcad(state, db, prod){
    add_reduce( state, 3, 114 );
    return 0
}

function branch_d76e07f28ea9f453(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 128 );
    return 0
};
    return - 1
}

function branch_d7a8d4b3d5a505e9(state, db, prod){
    add_reduce( state, 3, 73 );
    return 0
}

function branch_d7fe2aec14bab81f(state, db, prod){
    '"--LEAF--"';
    '49:208 javascript__export_declaration=>τexport τdefault • javascript__assignment_expression javascript__asi';
    state.push_fn( branch_15ec4d96e9777cff, 49 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function branch_d910a989515412be(state, db, prod){
    'offset 4 peek_level0 [  and , ; { END_OF_PRODUCTION  ]';
    '236:796 css__media_query=>τonly css__media_type • css__media_query_group_1473_0_';
    '236:799 css__media_query=>τonly css__media_type •';
    scan( state.lexer, 134, 9 );
    if( state.lexer._type  == 209 ){
    'Asserts [  and  ]';
    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
    '"--LEAF--"';
    '236:796 css__media_query=>τonly css__media_type • css__media_query_group_1473_0_';
    state.push_fn( branch_323543e55199868c, 236 );
    return hc_css__media_query_group_1473_0_( state, db, 0 )
} else {
    '"--LEAF--"';
    '236:799 css__media_query=>τonly css__media_type •';
    add_reduce( state, 2, 319 );
    return hc_css__media_query_goto( state, db, 236 )
};
    return - 1
}

function branch_da4c9bd7a10f970a(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 263 );
    return 190
};
    return - 1
}

function branch_da8df7b930b94262(state, db, prod){
    'offset 4 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '88:333 javascript__binary_token=>τ0B javascript__binary_token_list_620 • javascript__binary_token_list_621';
    '88:335 javascript__binary_token=>τ0B javascript__binary_token_list_620 •';
    scan( state.lexer, 102, 9 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( set_production /*88*/, 88 );
    '"--LEAF--"';
    '88:333 javascript__binary_token=>τ0B javascript__binary_token_list_620 • javascript__binary_token_list_621';
    state.push_fn( branch_918124bffd412d50, 88 );
    return hc_javascript__binary_token_list_621( state, db, 0 )
} else {
    '"--LEAF--"';
    '88:335 javascript__binary_token=>τ0B javascript__binary_token_list_620 •';
    add_reduce( state, 2, 12 );
    return 88
};
    return - 1
}

function branch_dab5b5a3217d965a(state, db, prod){
    'offset 12 peek_level0 [  { += ; [ . ` ( ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of %= ?. /= ) *= = } ] , END_OF_PRODUCTION  ]';
    '165:580 javascript__class_expression=>τclass τ{ τ} •';
    {
    '"--LEAF--"';
    '165:580 javascript__class_expression=>τclass τ{ τ} •';
    add_reduce( state, 3, 237 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_db3303a9e9717b61(state, db, prod){
    add_reduce( state, 2, 31 );
    return 56
}

function branch_db506fe5bd3a0825(state, db, prod){
    'offset 3 peek_level0 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
    '212:728 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 •';
    '212:722 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • θsp';
    scan( state.lexer, 88, 89 );
    if( state.lexer._type  == 70 ){
    'Asserts [  :  ]';
    'offset 3 peek_level1 [  :  ]';
    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 93, 24 );
    if( pk._type  == 70 ){
        'Asserts [  :  ]';
        'offset 5 peek_level-1 [  300  ]';
        '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
        '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
        scan( state.lexer, 93, 24 );
        state.push_fn( branch_f83a864e4cf5b402, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1330( state, db, 0 )
    }
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:722 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • θsp';
    consume( state );
    add_reduce( state, 2, 299 );
    return 0
} else {
    '"--LEAF--"';
    '212:728 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 •';
    add_reduce( state, 1, 299 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_dbcadac18e62d166(state, db, prod){
    add_reduce( state, 4, 242 );
    return 0
}

function branch_dc0291532e902549(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 166 );
    return 0
};
    return - 1
}

function branch_dc03aeac2b86612a(state, db, prod){
    add_reduce( state, 5, 184 );
    return 0
}

function branch_dc7c5993763c3f24(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 165 );
    return 0
};
    return - 1
}

function branch_dd01c670f9b5a5d5(state, db, prod){
    '"--LEAF--"';
    '"--leafy--"';
    return 90
}

function branch_dd25703ca108703e(state, db, prod){
    'offset 4 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
    '86:326 javascript__hex_token=>τ0x javascript__hex_token_list_606 • javascript__hex_token_list_607';
    '86:328 javascript__hex_token=>τ0x javascript__hex_token_list_606 •';
    scan( state.lexer, 158, 9 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( set_production /*86*/, 86 );
    '"--LEAF--"';
    '86:326 javascript__hex_token=>τ0x javascript__hex_token_list_606 • javascript__hex_token_list_607';
    state.push_fn( branch_918124bffd412d50, 86 );
    return hc_javascript__hex_token_list_607( state, db, 0 )
} else {
    '"--LEAF--"';
    '86:328 javascript__hex_token=>τ0x javascript__hex_token_list_606 •';
    add_reduce( state, 2, 12 );
    return 86
};
    return - 1
}

function branch_de9917e08ce698f5(state, db, prod){
    '"--LEAF--"';
    '253:850 css__declaration_list=>css__declaration_list • css__declaration_list_group_1615_0_';
    scan( state.lexer, 163, 24 );
    if( ( state.lexer._type  == 17 ) ){
    state.push_fn( branch_9aea9847880627fd, 253 );
    return hc_css__declaration_list_group_1615_0_( state, db, 0 )
};
    return - 1
}

function branch_df3ac9fd932b099a(state, db, prod){
    state.push_fn( branch_174a4749802a5aed, 138 );
    return hc_javascript__initializer( state, db, 0 )
}

function branch_df9525e73970d08d(state, db, prod){
    add_reduce( state, 2, 111 );
    return 0
}

function branch_e06154576db868ed(state, db, prod){
    add_reduce( state, 1, 39 );
    return 0
}

function branch_e1f39354fa05cc4a(state, db, prod){
    add_reduce( state, 7, 195 );
    return 0
}

function branch_e272769be8485173(state, db, prod){
    '"--LEAF--"';
    '178:616 javascript__template_middle_list=>javascript__template_middle_list • javascript__template_middle javascript__expression';
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    state.push_fn( branch_e4f552616f32e443, 178 );
    return hc_javascript__template_middle( state, db, 0 )
};
    return - 1
}

function branch_e2e87c4cabd27c76(state, db, prod){
    add_reduce( state, 7, 187 );
    return 0
}

function branch_e32791d780c51bf0(state, db, prod){
    'offset 6 peek_level0 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
    '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 •';
    '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • θsp';
    scan( state.lexer, 88, 89 );
    if( state.lexer._type  == 70 ){
    'Asserts [  :  ]';
    'offset 6 peek_level1 [  :  ]';
    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 93, 24 );
    if( pk._type  == 70 ){
        'Asserts [  :  ]';
        'offset 8 peek_level-1 [  300  ]';
        '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
        '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
        scan( state.lexer, 93, 24 );
        state.push_fn( branch_66d1425953e53a43, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1330( state, db, 0 )
    }
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • θsp';
    consume( state );
    add_reduce( state, 3, 297 );
    return 0
} else {
    '"--LEAF--"';
    '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 •';
    add_reduce( state, 2, 297 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_e33a81b49710a4c7(state, db, prod){
    add_reduce( state, 2, 346 );
    return 286
}

function branch_e43eb34a5f9a8782(state, db, prod){
    add_reduce( state, 3, 247 );
    return 174
}

function branch_e48bfd912460c186(state, db, prod){
    add_reduce( state, 2, 0 );
    return 290
}

function branch_e4d733a71edfa6fb(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__keyframes_blocks_list_1641_goto( state, db, 310 )
}

function branch_e4e74e80d0822d9e(state, db, prod){
    state.push_fn( branch_e68bd9c8db095f84, 125 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_e4f552616f32e443(state, db, prod){
    state.push_fn( branch_2fe8a09a6a152881, 178 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_e511fcca6aef4275(state, db, prod){
    scan( state.lexer, 164, 11 );
    if( ( state.lexer._type  == 21 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_e52a91bfee8af692(state, db, prod){
    add_reduce( state, 3, 273 );
    return hc_javascript__statement_goto( state, db, 126 )
}

function branch_e58fb523d7e39a7a(state, db, prod){
    state.push_fn( branch_29b5d1c37ed65e28, 169 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_e5a644df6613b5fc(state, db, prod){
    add_reduce( state, 3, 30 );
    return 20
}

function branch_e6421c43dfc2d652(state, db, prod){
    'offset 11 peek_level-1 [  (  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 12 peek_level0 [  ... 40 { [ )  ]';
    '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:465 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_fbbc8cca8d1bd3a4, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:472 javascript__function_declaration=>τasync τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_7056a44b19c04c51, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_e64f3615854135b9(state, db, prod){
    add_reduce( state, 2, 249 );
    return hc_javascript__template_spans_goto( state, db, 176 )
}

function branch_e651b2015f0826be(state, db, prod){
    add_reduce( state, 9, 185 );
    return 0
}

function branch_e6708846c9d22f70(state, db, prod){
    add_reduce( state, 2, 350 );
    return 0
}

function branch_e68bd9c8db095f84(state, db, prod){
    add_reduce( state, 2, 160 );
    return 125
}

function branch_e6b6b9b166ca4bf8(state, db, prod){
    add_reduce( state, 3, 162 );
    return hc_javascript__statement_goto( state, db, 122 )
}

function branch_e74b9eea64be430f(state, db, prod){
    add_reduce( state, 2, 82 );
    return 0
}

function branch_e759b49925136b70(state, db, prod){
    scan( state.lexer, 14, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 172 );
    return 0
};
    return - 1
}

function branch_e7b8aedf7573fc09(state, db, prod){
    state.push_fn( branch_3aa15af582de1f9d, 57 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function branch_e7ca26ec7501a7a9(state, db, prod){
    add_reduce( state, 7, 197 );
    return 0
}

function branch_e84512e4653d7482(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__STYLE_RULE_list_1607_goto( state, db, 306 )
}

function branch_e863e3fed681749c(state, db, prod){
    'offset 7 peek_level-1 [  )  ]';
    '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 8 peek_level-1 [  {  ]';
    '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
        'Assert Consume [  {  ]';
        consume( state );
        'offset 9 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
        '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
        '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
        scan( state.lexer, 40, 9 );
        if( isTokenActive( state.lexer._type, 41 ) ){
            'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            '"--LEAF--"';
            '98:374 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • javascript__function_body τ}';
            state.push_fn( branch_d76e07f28ea9f453, 95 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            '"--LEAF--"';
            '98:381 javascript__method_definition=>javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ • τ}';
            consume( state );
            add_reduce( state, 6, 135 );
            return 0
        }
    }
};
    return - 1
}

function branch_e8b9679a451e18a6(state, db, prod){
    'offset 5 peek_level0 [  " " 216  ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • css__string css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • css__string τ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • tk:css__identifier css__ATTR_MODIFIER τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • tk:css__identifier τ]';
    scan( state.lexer, 165, 24 );
    if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
    'Asserts [  " "  ]';
    'offset 7 peek_level-1 [  205  ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • css__string css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • css__string τ]';
    scan( state.lexer, 166, 24 );
    state.push_fn( branch_d62dc9b9f72ed489, 0 );
    return hc_css__string( state, db, 0 )
} else if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 7 peek_level-1 [  216  ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • tk:css__identifier css__ATTR_MODIFIER τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER • tk:css__identifier τ]';
    'offset 8 peek_level0 [  i s ]  ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER tk:css__identifier • css__ATTR_MODIFIER τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER tk:css__identifier • τ]';
    scan( state.lexer, 162, 24 );
    if( state.lexer._type  == 174 || state.lexer._type  == 175 ){
        'Asserts [  i s  ]';
        state.push_fn( set_production /*221*/, 221 );
        '"--LEAF--"';
        '221:754 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER tk:css__identifier • css__ATTR_MODIFIER τ]';
        state.push_fn( branch_17a3282d8d9c8a2d, 221 );
        return hc_css__ATTR_MODIFIER( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*221*/, 221 );
        '"--LEAF--"';
        '221:756 css__ATTRIBUTE_SELECTOR=>τ[ css__WQ_NAME css__ATTR_MATCHER tk:css__identifier • τ]';
        consume( state );
        add_reduce( state, 5, 310 );
        return 0
    }
};
    return - 1
}

function branch_e8bff56839885a1f(state, db, prod){
    'offset 3 peek_level0 [  ; }  ]';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • τ}';
    scan( state.lexer, 47, 9 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*252*/, 252 );
    '"--LEAF--"';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • css__STYLE_RULE_list_1610 τ}';
    state.push_fn( branch_d039753938d9cd05, 252 );
    return hc_css__STYLE_RULE_list_1610( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*252*/, 252 );
    '"--LEAF--"';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • τ}';
    consume( state );
    add_reduce( state, 4, 331 );
    return 0
};
    return - 1
}

function branch_e8ee1ba7c85eedaa(state, db, prod){
    add_reduce( state, 1, 46 );
    return 37
}

function branch_e9a85b6810b0e90a(state, db, prod){
    scan( state.lexer, 23, 24 );
    if( ( state.lexer._type  == 170 ) ){
    consume( state );
    add_reduce( state, 2, 304 );
    return 0
};
    return - 1
}

function branch_ea5194dac3c1f97e(state, db, prod){
    'offset 6 peek_level-1 [  216  ]';
    '248:836 css__mf_range=>css__mf_value τ> • tk:css__identifier τ>= css__mf_value';
    scan( state.lexer, 23, 24 );
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '248:836 css__mf_range=>css__mf_value τ> tk:css__identifier • τ>= css__mf_value';
    scan( state.lexer, 96, 24 );
    if( ( state.lexer._type  == 81 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_ea57b111064bfbfa(state, db, prod){
    add_reduce( state, 3, 74 );
    return 0
}

function branch_eb243dbfad70f5ba(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__optional_expression_goto( state, db, 75 )
}

function branch_ebe29aecfc6c6055(state, db, prod){
    state.push_fn( branch_1543b2803f9b2557, 178 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_ebe4eb780050d256(state, db, prod){
    add_reduce( state, 8, 188 );
    return 0
}

function branch_ed4624f960cac15d(state, db, prod){
    '"--LEAF--"';
    '89:337 javascript__array_literal=>τ[ • javascript__elision τ]';
    state.push_fn( branch_bc231d7404cbc712, 89 );
    return hc_javascript__elision( state, db, 0 )
}

function branch_ede0f885ef9d3d87(state, db, prod){
    add_reduce( state, 3, 216 );
    return 0
}

function branch_ee257523538089b2(state, db, prod){
    add_reduce( state, 2, 289 );
    return 0
}

function branch_ee466a99e81a0795(state, db, prod){
    add_reduce( state, 3, 268 );
    return 0
}

function branch_eeb9c0d9a8eef4f8(state, db, prod){
    'offset 6 peek_level-1 [  )  ]';
    '98:367 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list • τ) τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list • τ) τ{ τ}';
    scan( state.lexer, 17, 11 );
    if( state.lexer._type  == 113 ){
    'Assert Consume [  )  ]';
    consume( state );
    'offset 7 peek_level-1 [  {  ]';
    '98:367 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list τ) • τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list τ) • τ{ τ}';
    scan( state.lexer, 13, 11 );
    if( state.lexer._type  == 16 ){
        'Assert Consume [  {  ]';
        consume( state );
        'offset 8 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
        '98:367 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ • javascript__function_body τ}';
        '98:373 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ • τ}';
        scan( state.lexer, 40, 9 );
        if( isTokenActive( state.lexer._type, 41 ) ){
            'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:367 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ • javascript__function_body τ}';
            state.push_fn( branch_3c4f01ef2afc29d8, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*98*/, 98 );
            '"--LEAF--"';
            '98:373 javascript__method_definition=>τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ • τ}';
            consume( state );
            add_reduce( state, 7, 127 );
            return 0
        }
    }
};
    return - 1
}

function branch_eed1dcb9fe6fb492(state, db, prod){
    'offset 2 peek_level-1 [  :  ]';
    '144:532 javascript__case_clause=>τcase javascript__expression • τ: javascript__statement_list';
    '144:533 javascript__case_clause=>τcase javascript__expression • τ:';
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 70 ){
    'Assert Consume [  :  ]';
    consume( state );
    'offset 3 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await default } case END_OF_PRODUCTION  ]';
    '144:532 javascript__case_clause=>τcase javascript__expression τ: • javascript__statement_list';
    '144:533 javascript__case_clause=>τcase javascript__expression τ: •';
    scan( state.lexer, 167, 9 );
    if( isTokenActive( state.lexer._type, 104 ) ){
        'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*144*/, 144 );
        '"--LEAF--"';
        '144:532 javascript__case_clause=>τcase javascript__expression τ: • javascript__statement_list';
        state.push_fn( branch_f7a940ecc3b3f5b6, 144 );
        return hc_javascript__statement_list( state, db, 0 )
    } else {
        '"--LEAF--"';
        '144:533 javascript__case_clause=>τcase javascript__expression τ: •';
        add_reduce( state, 3, 213 );
        return 144
    }
};
    return - 1
}

function branch_ef2493182c2ee6b7(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__statement_list_goto( state, db, 120 )
}

function branch_f0d0e7ca61e226e3(state, db, prod){
    'offset 6 peek_level-1 [  (  ]';
    '130:468 javascript__function_declaration=>τfunction javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:475 javascript__function_declaration=>τfunction javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 7 peek_level0 [  ... 40 { [ )  ]';
    '130:468 javascript__function_declaration=>τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:475 javascript__function_declaration=>τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:468 javascript__function_declaration=>τfunction javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_49591abc5220b3dc, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*130*/, 130 );
        '"--LEAF--"';
        '130:475 javascript__function_declaration=>τfunction javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_561bb2612752fd0b, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_f14f3275780e5159(state, db, prod){
    'offset 10 peek_level-1 [  ;  ]';
    '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression • τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression • τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 11 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
    '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression τ; • javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression τ; • τ) javascript__statement';
    scan( state.lexer, 22, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression τ; • javascript__expression τ) javascript__statement';
        state.push_fn( branch_b64731a444ee13c0, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:499 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression τ; • τ) javascript__statement';
        consume( state );
        state.push_fn( branch_40d86a772abb43fb, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_f1ff063f87b0360a(state, db, prod){
    add_reduce( state, 3, 116 );
    return hc_javascript__binding_property_goto( state, db, 110 )
}

function branch_f21a693f443773a2(state, db, prod){
    '"--LEAF--"';
    '199:671 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• javascript__parenthesized';
    state.push_fn( set_production /*199*/, 199 );
    return hc_javascript__parenthesized( state, db, 0 )
}

function branch_f224a880018b9ca0(state, db, prod){
    add_reduce( state, 2, 267 );
    return 194
}

function branch_f2329607313f1867(state, db, prod){
    'offset 7 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ;  ]';
    '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • javascript__expression τ; τ) javascript__statement';
    '134:498 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • τ; javascript__expression τ) javascript__statement';
    '134:508 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • τ; τ) javascript__statement';
    scan( state.lexer, 19, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
    'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    'offset 9 peek_level-1 [  126  ]';
    '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • javascript__expression τ; τ) javascript__statement';
    scan( state.lexer, 21, 11 );
    state.push_fn( branch_f14f3275780e5159, 0 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 9 peek_level-1 [  ;  ]';
    '134:498 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • τ; javascript__expression τ) javascript__statement';
    '134:508 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration • τ; τ) javascript__statement';
    'offset 10 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
    '134:498 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration τ; • javascript__expression τ) javascript__statement';
    '134:508 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration τ; • τ) javascript__statement';
    scan( state.lexer, 22, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:498 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration τ; • javascript__expression τ) javascript__statement';
        state.push_fn( branch_0bd7f6bd9ca86d44, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*134*/, 134 );
        '"--LEAF--"';
        '134:508 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration τ; • τ) javascript__statement';
        consume( state );
        state.push_fn( branch_6cb776736fe88463, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_f35d7e4ef9d5bd98(state, db, prod){
    add_reduce( state, 3, 116 );
    return 0
}

function branch_f3b2e02e29fc4964(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__binding_property_list_goto( state, db, 109 )
}

function branch_f4f0ca37d730ca54(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_a2a5aae2305d8568, 127 );
    return hc_javascript__labeled_item( state, db, 0 )
};
    return - 1
}

function branch_f52f125c2a796e7b(state, db, prod){
    state.push_fn( branch_d5b82c84f6a87a6a, 319 );
    return hc_css__COMPOUND_SELECTOR( state, db, 0 )
}

function branch_f57e2266ef16c397(state, db, prod){
    add_reduce( state, 7, 196 );
    return 0
}

function branch_f61827cf07535744(state, db, prod){
    'offset 4 peek_level-1 [  sp > + ~ || * # . [ : ) , { END_OF_PRODUCTION 216  ]';
    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
    scan( state.lexer, 62, 63 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
    consume( state );
    add_reduce( state, 3, 295 );
    return 0
} else {
    '"--LEAF--"';
    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
    add_reduce( state, 2, 295 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_f6e6a26385e26aa9(state, db, prod){
    'offset 9 peek_level-1 [  ;  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression • τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:503 javascript__iteration_statement=>τfor τ( javascript__expression • τ; τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression • τ; javascript__expression τ; τ) javascript__statement';
    '134:510 javascript__iteration_statement=>τfor τ( javascript__expression • τ; τ; τ) javascript__statement';
    scan( state.lexer, 18, 11 );
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    'offset 10 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ;  ]';
    '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; τ) javascript__statement';
    '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; javascript__expression τ) javascript__statement';
    '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; τ) javascript__statement';
    scan( state.lexer, 19, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 12 peek_level-1 [  126  ]';
        '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; • javascript__expression τ; τ) javascript__statement';
        scan( state.lexer, 21, 11 );
        state.push_fn( branch_96481d82eb2eba1a, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        'Asserts [  ;  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 12 peek_level-1 [  ;  ]';
        '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; javascript__expression τ) javascript__statement';
        '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; • τ; τ) javascript__statement';
        'offset 13 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
        '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • javascript__expression τ) javascript__statement';
        '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • τ) javascript__statement';
        scan( state.lexer, 22, 9 );
        if( isTokenActive( state.lexer._type, 20 ) ){
            'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*134*/, 134 );
            '"--LEAF--"';
            '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • javascript__expression τ) javascript__statement';
            state.push_fn( branch_7f34f27ddc9747e8, 134 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( set_production /*134*/, 134 );
            '"--LEAF--"';
            '134:510 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; • τ) javascript__statement';
            consume( state );
            state.push_fn( branch_e7ca26ec7501a7a9, 134 );
            return hc_javascript__statement( state, db, 0 )
        }
    }
};
    return - 1
}

function branch_f756413485dfcd88(state, db, prod){
    'offset 13 peek_level0 [  " var delete void typeof + ~ ! - ++ -- new this 40 true false null num 0X 0x 0O 0o 0B 0b [ { async function ; if do while for switch continue break return with throw try debugger class / ` ( super import await yield let const < " case default </ } END_OF_FILE export END_OF_PRODUCTION  ]';
    '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ τ} •';
    {
    '"--LEAF--"';
    '158:561 javascript__class_declaration=>τclass javascript__class_heritage τ{ τ} •';
    add_reduce( state, 4, 235 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_f7a940ecc3b3f5b6(state, db, prod){
    add_reduce( state, 4, 212 );
    return 0
}

function branch_f7de3da658dea4ce(state, db, prod){
    add_reduce( state, 3, 30 );
    return 0
}

function branch_f7f9a108d1dea7e0(state, db, prod){
    add_reduce( state, 2, 111 );
    return 108
}

function branch_f83a864e4cf5b402(state, db, prod){
    'offset 6 peek_level-1 [  sp > + ~ || * # . [ : ) , { END_OF_PRODUCTION 216  ]';
    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
    scan( state.lexer, 62, 63 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    '"--LEAF--"';
    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
    consume( state );
    add_reduce( state, 3, 295 );
    return 0
} else {
    '"--LEAF--"';
    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
    add_reduce( state, 2, 295 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_f8a3663a4a4d8c1f(state, db, prod){
    add_reduce( state, 3, 45 );
    return 0
}

function branch_f8caa5d0bfd04c67(state, db, prod){
    add_reduce( state, 2, 288 );
    return 0
}

function branch_f90aae817e3bb5af(state, db, prod){
    'offset 6 peek_level-1 [  ; }  ]';
    '6:15 WICK_BINDING=>τ{ javascript__expression • τ; javascript__expression τ}';
    '6:17 WICK_BINDING=>τ{ javascript__expression • τ}';
    scan( state.lexer, 47, 9 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*6*/, 6 );
    '"--LEAF--"';
    '6:15 WICK_BINDING=>τ{ javascript__expression • τ; javascript__expression τ}';
    consume( state );
    state.push_fn( branch_bde3f53b296f2151, 6 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*6*/, 6 );
    '"--LEAF--"';
    '6:17 WICK_BINDING=>τ{ javascript__expression • τ}';
    consume( state );
    add_reduce( state, 3, 8 );
    return 0
};
    return - 1
}

function branch_f9175d9ff9da1d77(state, db, prod){
    add_reduce( state, 2, 261 );
    return 0
}

function branch_f9728395ba7dac96(state, db, prod){
    add_reduce( state, 3, 60 );
    return 0
}

function branch_f98bc4cea739b108(state, db, prod){
    'offset 0 peek_level-1 [  (  ]';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 1 peek_level-1 [  126  ]';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    scan( state.lexer, 21, 11 );
    state.push_fn( branch_4e12ed45ea31cc66, 0 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_f9cbd5c4ee66a8a4(state, db, prod){
    'offset 14 peek_level-1 [  (  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 15 peek_level0 [  ... 40 { [ )  ]';
    '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  ... 40 { [  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_d3c83c6593b0d214, 75 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:467 javascript__function_declaration=>τasync τfunction τ* javascript__binding_identifier τ( • τ) τ{ javascript__function_body τ}';
        consume( state );
        scan( state.lexer, 13, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_c2c3998afc2615b5, 75 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_fab5b28464651fa3(state, db, prod){
    state.push_fn( branch_234c298a886b6207, 151 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_fac6e057d819742e(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_html__RESULT_list_72_goto( state, db, 268 )
}

function branch_fad90ab6aaf2a88c(state, db, prod){
    add_reduce( state, 1, 41 );
    return 0
}

function branch_fae774c3d18a8f61(state, db, prod){
    add_reduce( state, 2, 160 );
    add_reduce( state, 1, 1 );
    return 0
}

function branch_fb8401b9afc524e1(state, db, prod){
    add_reduce( state, 2, 0 );
    return 289
}

function branch_fbb5c57c5a37a9d6(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__media_or_list_1605_goto( state, db, 305 )
}

function branch_fbbc8cca8d1bd3a4(state, db, prod){
    scan( state.lexer, 17, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_dc0291532e902549, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_fc2d026dcaaf1c2c(state, db, prod){
    add_reduce( state, 2, 12 );
    return 276
}

function branch_fc6c3c68168bfd69(state, db, prod){
    scan( state.lexer, 168, 24 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 31 );
    return 0
};
    return - 1
}

function branch_fd8f81791ec2ac30(state, db, prod){
    add_reduce( state, 2, 12 );
    add_reduce( state, 1, 98 );
    return 0
}

function branch_fdebd0ba367c373d(state, db, prod){
    add_reduce( state, 3, 6 );
    return 5
}

function branch_fdf4ee78aee4220e(state, db, prod){
    add_reduce( state, 4, 226 );
    return 0
}

function branch_fe2bae871e28d597(state, db, prod){
    '"--LEAF--"';
    '20:90 html__ATTRIBUTE=>html__ATTRIBUTE_HEAD τ= • html__ATTRIBUTE_group_169_0_';
    state.push_fn( branch_e5a644df6613b5fc, 20 );
    return hc_html__ATTRIBUTE_group_169_0_( state, db, 0 )
}

function branch_fe54af1b3098ac8a(state, db, prod){
    add_reduce( state, 2, 90 );
    return 0
}

function branch_ff38f69fb2454a2a(state, db, prod){
    'offset 1 peek_level-1 [  ; }  ]';
    '231:783 css__declaration_values_sentineled=>css__declaration_values • τ;-ns';
    '231:784 css__declaration_values_sentineled=>css__declaration_values • τ}-ns';
    scan( state.lexer, 70, 24 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*231*/, 231 );
    '"--LEAF--"';
    '231:783 css__declaration_values_sentineled=>css__declaration_values • τ;-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*231*/, 231 );
    '"--LEAF--"';
    '231:784 css__declaration_values_sentineled=>css__declaration_values • τ}-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
};
    return - 1
}

function branch_ffbd07a08aa0c68d(state, db, prod){
    'offset 14 peek_level-1 [  }  ]';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ javascript__class_body • τ}';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ javascript__class_body • τ}';
    scan( state.lexer, 14, 11 );
    if( state.lexer._type  == 18 ){
    'Assert Consume [  }  ]';
    consume( state );
    'offset 15 peek_level-1 [  END_OF_FILE ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl  ]';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        'Asserts [  END_OF_FILE  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_8ef3067035e886d2, 121 );
        state.push_fn( branch_36793bef0c3608d1, 75 );
        return 0
    } else {
        '"--LEAF--"';
        '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ javascript__class_body τ} •';
        add_reduce( state, 5, 232 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function nocap_lb_6725b1140c2474a9(lexer){
    if( ( lexer._type ) == 66 )return true;;
    var pk = lexer.copy_in_place(  );;
    pk.byte_offset  = lexer.prev_byte_offset;
    pk.byte_length  = 0;
    while( ( pk.byte_offset  < lexer.byte_offset ) ) {
        scan( pk, 89, 0 );
        if( pk._type  == 7 ){
            lexer.setToken( 66, 0, 0 );
            return true
        };
        pk.next(  )
    };
    return false
}

function hc_WICK(state, db, prod){
    '"--LEAF--"';
    '0:0 WICK=>• COMPONENT';
    state.push_fn( set_production /*0*/, 0 );
    return hc_COMPONENT( state, db, 0 )
}

function hc_COMPONENT(state, db, prod){
    scan( state.lexer, 169, 9 );
    'offset 0 peek_level0 [   import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await < <! <import  ]';
    '1:1 COMPONENT=>• html__HTML';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '1:2 COMPONENT=>• javascript__javascript';
    if( isTokenActive( state.lexer._type, 170 ) ){
    'Asserts [   import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 1 )*/, 1 );
    '"--LEAF--"';
    '1:2 COMPONENT=>• javascript__javascript';
    state.push_fn( set_production /*0*/, 1 );
    return hc_javascript__javascript( state, db, 0 )
} else if( state.lexer._type  == 27 ){
    'Asserts [  <  ]';
    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 17 )*/, 17 );
    '"--LEAF--"';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    state.push_fn( set_production /*0*/, 17 );
    return hc_html__TAG( state, db, prod )
} else if( state.lexer._type  == 24 || state.lexer._type  == 9 ){
    'Asserts [  <! <import  ]';
    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 1 )*/, 1 );
    '"--LEAF--"';
    '1:1 COMPONENT=>• html__HTML';
    state.push_fn( set_production /*0*/, 1 );
    return hc_html__HTML( state, db, 0 )
};
    return - 1
}

function hc_COMPONENT_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 17: 
            {
                'offset 1 peek_level-1 [  END_OF_FILE ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl ,  ]';
                '16:55 html__GOAL_TAG=>html__TAG •';
                '76:304 javascript__primary_expression=>html__TAG •';
                scan( state.lexer, 171, 9 );
                if( state.lexer._type  == 1 ){
                    'Asserts [  END_OF_FILE  ]';
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_3ebe637b6495888a, 1 );
                    state.push_fn( branch_818f16ab5570e0ea, 75 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '76:304 javascript__primary_expression=>html__TAG •';
                    scan( state.lexer, 11, 11 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 33: 
            {
                'offset 1 peek_level0 [  import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await END_OF_PRODUCTION END_OF_FILE  ]';
                '32:157 javascript__module=>javascript__module_body •';
                '33:159 javascript__module_body=>javascript__module_body • javascript__module_item';
                scan( state.lexer, 172, 9 );
                if( isTokenActive( state.lexer._type, 173 ) ){
                    'Asserts [  import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 33 )*/, 33 );
                    '"--LEAF--"';
                    '33:159 javascript__module_body=>javascript__module_body • javascript__module_item';
                    scan( state.lexer, 174, 11 );
                    if( ( isTokenActive( state.lexer._type, 173 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 33 );
                        return hc_javascript__module_item( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '32:157 javascript__module=>javascript__module_body •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 39 );
                    add_reduce( state, 1, 38 );
                    prod = 1;
                    continue
                };
                break
            }
            break;
            case 59: 
            {
                'offset 1 peek_level0 [  ? END_OF_PRODUCTION ; } nl END_OF_FILE , : ) ]  ]';
                '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                scan( state.lexer, 175, 11 );
                if( state.lexer._type  == 69 ){
                    'Asserts [  ?  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                    scan( state.lexer, 176, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                'offset 1 peek_level0 [  || END_OF_PRODUCTION ? ; } nl END_OF_FILE , : ) ]  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 177, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || ? , ; } nl END_OF_FILE : ) ]  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 179, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level-1 [  ?? | END_OF_PRODUCTION && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level-1 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ++ -- ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ?  ]';
                '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 209, 9 );
                if( isTokenActive( state.lexer._type, 210 ) ){
                    'Asserts [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                    scan( state.lexer, 211, 11 );
                    if( ( isTokenActive( state.lexer._type, 210 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                    scan( state.lexer, 212, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : of { ) ]  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                'offset 1 peek_level0 [  , ; } nl END_OF_FILE  ]';
                '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                scan( state.lexer, 219, 11 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                    scan( state.lexer, 100, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    'Asserts [  ; } nl END_OF_FILE  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 33 )*/, 33 );
                    '"--LEAF--"';
                    '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_fae774c3d18a8f61, 33 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in { END_OF_PRODUCTION = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in { END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? END_OF_PRODUCTION ? , ; } nl END_OF_FILE : ) ]  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 222, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 1 ) ? prod  : - 1
}

function hc_IMPORT_TAG_LIST(state, db, prod){
    '"--LEAF--"';
    '2:3 IMPORT_TAG_LIST=>• IMPORT_TAG';
    state.push_fn( branch_a8022d582004ce02, 2 );
    return hc_IMPORT_TAG( state, db, 0 )
}

function hc_IMPORT_TAG_LIST_goto(state, db, prod){
    'offset 1 peek_level0 [  < <import  ]';
    '2:4 IMPORT_TAG_LIST=>IMPORT_TAG_LIST • IMPORT_TAG';
    '15:54 html__BODY=>IMPORT_TAG_LIST • html__GOAL_TAG';
    scan( state.lexer, 223, 9 );
    if( state.lexer._type  == 9 ){
    'Asserts [  <import  ]';
    state.push_fn( hc_IMPORT_TAG_LIST_goto /*hc_IMPORT_TAG_LIST_goto( state, db, 2 )*/, 2 );
    '"--LEAF--"';
    '2:4 IMPORT_TAG_LIST=>IMPORT_TAG_LIST • IMPORT_TAG';
    scan( state.lexer, 224, 9 );
    if( ( state.lexer._type  == 9 ) ){
        state.push_fn( branch_449740ceb8df7fb1, 2 );
        return hc_IMPORT_TAG( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 2 ) ? prod  : - 1
}

function hc_IMPORT_TAG(state, db, prod){
    scan( state.lexer, 224, 9 );
    'offset 0 peek_level-1 [  <import  ]';
    '3:5 IMPORT_TAG=>• τ<import html__ATTRIBUTES τ/ τ> τ<import>';
    '3:6 IMPORT_TAG=>• τ<import html__ATTRIBUTES τ/ τ>';
    '3:7 IMPORT_TAG=>• τ<import τ/ τ> τ<import>';
    '3:8 IMPORT_TAG=>• τ<import html__ATTRIBUTES τ> τ<import>';
    '3:9 IMPORT_TAG=>• τ<import τ/ τ>';
    '3:10 IMPORT_TAG=>• τ<import html__ATTRIBUTES τ>';
    '3:11 IMPORT_TAG=>• τ<import τ> τ<import>';
    '3:12 IMPORT_TAG=>• τ<import τ>';
    if( state.lexer._type  == 9 ){
    'Assert Consume [  <import  ]';
    consume( state );
    'offset 1 peek_level0 [  " " 13 import export / >  ]';
    '3:5 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ/ τ> τ<import>';
    '3:6 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ/ τ>';
    '3:8 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ> τ<import>';
    '3:10 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ>';
    '3:7 IMPORT_TAG=>τ<import • τ/ τ> τ<import>';
    '3:9 IMPORT_TAG=>τ<import • τ/ τ>';
    '3:11 IMPORT_TAG=>τ<import • τ> τ<import>';
    '3:12 IMPORT_TAG=>τ<import • τ>';
    scan( state.lexer, 150, 9 );
    if( isTokenActive( state.lexer._type, 120 ) ){
        'Asserts [  " " 13 import export  ]';
        'offset 3 peek_level-1 [  19  ]';
        '3:5 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ/ τ> τ<import>';
        '3:6 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ/ τ>';
        '3:8 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ> τ<import>';
        '3:10 IMPORT_TAG=>τ<import • html__ATTRIBUTES τ>';
        scan( state.lexer, 121, 9 );
        state.push_fn( branch_ca77ad478b1b5a2f, 0 );
        return hc_html__ATTRIBUTES( state, db, 0 )
    } else if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  /  ]';
        '3:7 IMPORT_TAG=>τ<import • τ/ τ> τ<import>';
        '3:9 IMPORT_TAG=>τ<import • τ/ τ>';
        'offset 4 peek_level-1 [  >  ]';
        '3:7 IMPORT_TAG=>τ<import τ/ • τ> τ<import>';
        '3:9 IMPORT_TAG=>τ<import τ/ • τ>';
        scan( state.lexer, 8, 9 );
        if( state.lexer._type  == 11 ){
            'Assert Consume [  >  ]';
            consume( state );
            'offset 5 peek_level-1 [  <import> <import < END_OF_PRODUCTION  ]';
            '3:7 IMPORT_TAG=>τ<import τ/ τ> • τ<import>';
            '3:9 IMPORT_TAG=>τ<import τ/ τ> •';
            scan( state.lexer, 161, 9 );
            if( state.lexer._type  == 12 ){
                'Asserts [  <import>  ]';
                state.push_fn( set_production /*3*/, 3 );
                '"--LEAF--"';
                '3:7 IMPORT_TAG=>τ<import τ/ τ> • τ<import>';
                consume( state );
                add_reduce( state, 4, 4 );
                return 0
            } else {
                '"--LEAF--"';
                '3:9 IMPORT_TAG=>τ<import τ/ τ> •';
                add_reduce( state, 3, 4 );
                return 3
            }
        }
    } else if( state.lexer._type  == 11 ){
        'Asserts [  >  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  >  ]';
        '3:11 IMPORT_TAG=>τ<import • τ> τ<import>';
        '3:12 IMPORT_TAG=>τ<import • τ>';
        'offset 4 peek_level-1 [  <import> <import < END_OF_PRODUCTION  ]';
        '3:11 IMPORT_TAG=>τ<import τ> • τ<import>';
        '3:12 IMPORT_TAG=>τ<import τ> •';
        scan( state.lexer, 161, 9 );
        if( state.lexer._type  == 12 ){
            'Asserts [  <import>  ]';
            state.push_fn( set_production /*3*/, 3 );
            '"--LEAF--"';
            '3:11 IMPORT_TAG=>τ<import τ> • τ<import>';
            consume( state );
            add_reduce( state, 3, 4 );
            return 0
        } else {
            '"--LEAF--"';
            '3:12 IMPORT_TAG=>τ<import τ> •';
            add_reduce( state, 2, 4 );
            return 3
        }
    }
};
    return - 1
}

function hc_IMPORT_ATTRIBUTE(state, db, prod){
    scan( state.lexer, 225, 9 );
    'offset 0 peek_level-1 [  import  ]';
    '4:13 IMPORT_ATTRIBUTE=>• τimport τ= javascript__named_imports';
    if( state.lexer._type  == 13 ){
    'Assert Consume [  import  ]';
    consume( state );
    '"--LEAF--"';
    '4:13 IMPORT_ATTRIBUTE=>τimport • τ= javascript__named_imports';
    scan( state.lexer, 226, 9 );
    if( ( state.lexer._type  == 14 ) ){
        consume( state );
        state.push_fn( branch_941b0a954c649456, 4 );
        return hc_javascript__named_imports( state, db, 0 )
    }
};
    return - 1
}

function hc_EXPORT_ATTRIBUTE(state, db, prod){
    scan( state.lexer, 227, 9 );
    'offset 0 peek_level-1 [  export  ]';
    '5:14 EXPORT_ATTRIBUTE=>• τexport τ= javascript__named_imports';
    if( state.lexer._type  == 15 ){
    'Assert Consume [  export  ]';
    consume( state );
    '"--LEAF--"';
    '5:14 EXPORT_ATTRIBUTE=>τexport • τ= javascript__named_imports';
    scan( state.lexer, 226, 9 );
    if( ( state.lexer._type  == 14 ) ){
        consume( state );
        state.push_fn( branch_fdebd0ba367c373d, 5 );
        return hc_javascript__named_imports( state, db, 0 )
    }
};
    return - 1
}

function hc_WICK_BINDING(state, db, prod){
    scan( state.lexer, 228, 9 );
    'offset 0 peek_level0 [  { {!  ]';
    '6:15 WICK_BINDING=>• τ{ javascript__expression τ; javascript__expression τ}';
    '6:17 WICK_BINDING=>• τ{ javascript__expression τ}';
    '6:19 WICK_BINDING=>• τ{ τ; javascript__expression τ}';
    '6:21 WICK_BINDING=>• τ{ τ}';
    '6:16 WICK_BINDING=>• τ{! javascript__expression τ; javascript__expression τ}';
    '6:18 WICK_BINDING=>• τ{! javascript__expression τ}';
    '6:20 WICK_BINDING=>• τ{! τ; javascript__expression τ}';
    '6:22 WICK_BINDING=>• τ{! τ}';
    if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  {  ]';
    '6:15 WICK_BINDING=>• τ{ javascript__expression τ; javascript__expression τ}';
    '6:17 WICK_BINDING=>• τ{ javascript__expression τ}';
    '6:19 WICK_BINDING=>• τ{ τ; javascript__expression τ}';
    '6:21 WICK_BINDING=>• τ{ τ}';
    'offset 3 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ; }  ]';
    '6:15 WICK_BINDING=>τ{ • javascript__expression τ; javascript__expression τ}';
    '6:17 WICK_BINDING=>τ{ • javascript__expression τ}';
    '6:19 WICK_BINDING=>τ{ • τ; javascript__expression τ}';
    '6:21 WICK_BINDING=>τ{ • τ}';
    scan( state.lexer, 229, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 5 peek_level-1 [  126  ]';
        '6:15 WICK_BINDING=>τ{ • javascript__expression τ; javascript__expression τ}';
        '6:17 WICK_BINDING=>τ{ • javascript__expression τ}';
        scan( state.lexer, 230, 9 );
        state.push_fn( branch_f90aae817e3bb5af, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        'Asserts [  ;  ]';
        state.push_fn( set_production /*6*/, 6 );
        '"--LEAF--"';
        '6:19 WICK_BINDING=>τ{ • τ; javascript__expression τ}';
        consume( state );
        state.push_fn( branch_1ca21e19d7b5554b, 6 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*6*/, 6 );
        '"--LEAF--"';
        '6:21 WICK_BINDING=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 10 );
        return 0
    }
} else if( state.lexer._type  == 19 ){
    'Asserts [  {!  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  {!  ]';
    '6:16 WICK_BINDING=>• τ{! javascript__expression τ; javascript__expression τ}';
    '6:18 WICK_BINDING=>• τ{! javascript__expression τ}';
    '6:20 WICK_BINDING=>• τ{! τ; javascript__expression τ}';
    '6:22 WICK_BINDING=>• τ{! τ}';
    'offset 3 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ; }  ]';
    '6:16 WICK_BINDING=>τ{! • javascript__expression τ; javascript__expression τ}';
    '6:18 WICK_BINDING=>τ{! • javascript__expression τ}';
    '6:20 WICK_BINDING=>τ{! • τ; javascript__expression τ}';
    '6:22 WICK_BINDING=>τ{! • τ}';
    scan( state.lexer, 229, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 5 peek_level-1 [  126  ]';
        '6:16 WICK_BINDING=>τ{! • javascript__expression τ; javascript__expression τ}';
        '6:18 WICK_BINDING=>τ{! • javascript__expression τ}';
        scan( state.lexer, 230, 9 );
        state.push_fn( branch_186b999d08b5cc89, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        'Asserts [  ;  ]';
        state.push_fn( set_production /*6*/, 6 );
        '"--LEAF--"';
        '6:20 WICK_BINDING=>τ{! • τ; javascript__expression τ}';
        consume( state );
        state.push_fn( branch_1ca21e19d7b5554b, 6 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*6*/, 6 );
        '"--LEAF--"';
        '6:22 WICK_BINDING=>τ{! • τ}';
        consume( state );
        add_reduce( state, 2, 10 );
        return 0
    }
};
    return - 1
}

function hc_javascript__comment(state, db, prod){
    scan( state.lexer, 231, 11 );
    'offset 0 peek_level0 [  /* //  ]';
    '7:23 javascript__comment=>• τ/* javascript__comment_list_48 τ*/';
    '7:25 javascript__comment=>• τ/* τ*/';
    '7:24 javascript__comment=>• τ// javascript__comment_list_51 θnl';
    '7:26 javascript__comment=>• τ// θnl';
    if( state.lexer._type  == 20 ){
    'Asserts [  /*  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  /*  ]';
    '7:23 javascript__comment=>• τ/* javascript__comment_list_48 τ*/';
    '7:25 javascript__comment=>• τ/* τ*/';
    'offset 3 peek_level0 [  */ sym sp nl id num  ]';
    '7:23 javascript__comment=>τ/* • javascript__comment_list_48 τ*/';
    '7:25 javascript__comment=>τ/* • τ*/';
    scan( state.lexer, 232, 0 );
    if( state.lexer._type  == 21 ){
        'Asserts [  */  ]';
        state.push_fn( set_production /*7*/, 7 );
        '"--LEAF--"';
        '7:25 javascript__comment=>τ/* • τ*/';
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    } else {
        state.push_fn( set_production /*7*/, 7 );
        '"--LEAF--"';
        '7:23 javascript__comment=>τ/* • javascript__comment_list_48 τ*/';
        state.push_fn( branch_e511fcca6aef4275, 7 );
        return hc_javascript__comment_list_48( state, db, 0 )
    }
} else if( state.lexer._type  == 22 ){
    'Asserts [  //  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  //  ]';
    '7:24 javascript__comment=>• τ// javascript__comment_list_51 θnl';
    '7:26 javascript__comment=>• τ// θnl';
    'offset 3 peek_level0 [  sym sp id num nl  ]';
    '7:24 javascript__comment=>τ// • javascript__comment_list_51 θnl';
    '7:26 javascript__comment=>τ// • θnl';
    scan( state.lexer, 233, 0 );
    if( state.lexer._type  == 2 || state.lexer._type  == 8 || state.lexer._type  == 3 || state.lexer._type  == 5 ){
        'Asserts [  sym sp id num  ]';
        state.push_fn( set_production /*7*/, 7 );
        '"--LEAF--"';
        '7:24 javascript__comment=>τ// • javascript__comment_list_51 θnl';
        state.push_fn( branch_2d45a6a494c79015, 7 );
        return hc_javascript__comment_list_51( state, db, 0 )
    } else if( state.lexer._type  == 7 ){
        'Asserts [  nl  ]';
        state.push_fn( set_production /*7*/, 7 );
        '"--LEAF--"';
        '7:26 javascript__comment=>τ// • θnl';
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    }
};
    return - 1
}

function hc_css__comment(state, db, prod){
    scan( state.lexer, 234, 24 );
    'offset 0 peek_level-1 [  /*  ]';
    '8:27 css__comment=>• τ/* tk:css__string_value τ*/';
    if( state.lexer._type  == 20 ){
    'Assert Consume [  /*  ]';
    consume( state );
    '"--LEAF--"';
    '8:27 css__comment=>τ/* • tk:css__string_value τ*/';
    scan( state.lexer, 235, 24 );
    if( ( state.lexer._type  == 23 ) ){
        consume( state );
        scan( state.lexer, 236, 24 );
        if( ( state.lexer._type  == 21 ) ){
            consume( state );
            add_reduce( state, 3, 0 );
            return 8
        }
    }
};
    return - 1
}

function hc_css__string_value(state, db, prod){
    scan( state.lexer, 237, 63 );
    'offset 0 peek_level-1 [  sp id sym num  ]';
    '9:28 css__string_value=>• θsp';
    '9:30 css__string_value=>• θid';
    '9:31 css__string_value=>• θsym';
    '9:32 css__string_value=>• θnum';
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:28 css__string_value=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:30 css__string_value=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:31 css__string_value=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:32 css__string_value=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_css__string_value_goto(state, db, prod){
    'offset 1 peek_level-1 [  " sp id sym num  ]';
    '9:29 css__string_value=>css__string_value • θsp';
    '9:33 css__string_value=>css__string_value • θid';
    '9:34 css__string_value=>css__string_value • θsym';
    '9:35 css__string_value=>css__string_value • θnum';
    '205:702 css__string=>τ" css__string_value • τ"';
    scan( state.lexer, 238, 63 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:29 css__string_value=>css__string_value • θsp';
    scan( state.lexer, 24, 63 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:33 css__string_value=>css__string_value • θid';
    scan( state.lexer, 239, 24 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:34 css__string_value=>css__string_value • θsym';
    scan( state.lexer, 240, 24 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    '"--LEAF--"';
    '9:35 css__string_value=>css__string_value • θnum';
    scan( state.lexer, 241, 24 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 9 ) ? prod  : - 1
}

function hc_html__HTML(state, db, prod){
    '"--LEAF--"';
    '10:36 html__HTML=>• html__RESULT';
    state.push_fn( set_production /*10*/, 10 );
    return hc_html__RESULT( state, db, 0 )
}

function hc_html__RESULT(state, db, prod){
    scan( state.lexer, 242, 9 );
    'offset 0 peek_level0 [  < <import <!  ]';
    '11:37 html__RESULT=>• html__RESULT_list_72 html__BODY';
    '11:38 html__RESULT=>• html__BODY';
    if( state.lexer._type  == 27 || state.lexer._type  == 9 ){
    'Asserts [  < <import  ]';
    state.push_fn( set_production /*11*/, 11 );
    '"--LEAF--"';
    '11:38 html__RESULT=>• html__BODY';
    state.push_fn( branch_152680e8cb3da748, 11 );
    return hc_html__BODY( state, db, 0 )
} else {
    state.push_fn( set_production /*11*/, 11 );
    '"--LEAF--"';
    '11:37 html__RESULT=>• html__RESULT_list_72 html__BODY';
    state.push_fn( branch_6de138e30c35efa8, 11 );
    return hc_html__RESULT_list_72( state, db, 0 )
};
    return - 1
}

function hc_html__DTD(state, db, prod){
    scan( state.lexer, 243, 9 );
    'offset 0 peek_level-1 [  <!  ]';
    '12:39 html__DTD=>• τ<! tk:html__identifier τ-- html__TEXT_NODE_DATA τ-- τ>';
    '12:40 html__DTD=>• τ<! τ-- html__TEXT_NODE_DATA τ-- τ>';
    if( state.lexer._type  == 24 ){
    'Assert Consume [  <!  ]';
    consume( state );
    'offset 1 peek_level-1 [  -- 13  ]';
    '12:39 html__DTD=>τ<! • tk:html__identifier τ-- html__TEXT_NODE_DATA τ-- τ>';
    '12:40 html__DTD=>τ<! • τ-- html__TEXT_NODE_DATA τ-- τ>';
    scan( state.lexer, 244, 9 );
    if( state.lexer._type  == 26 ){
        'Asserts [  --  ]';
        state.push_fn( set_production /*12*/, 12 );
        '"--LEAF--"';
        '12:40 html__DTD=>τ<! • τ-- html__TEXT_NODE_DATA τ-- τ>';
        consume( state );
        state.push_fn( branch_d24507c3da9f329b, 12 );
        return hc_html__TEXT_NODE_DATA( state, db, 0 )
    } else if( state.lexer._type  == 25 ){
        'Asserts [  13  ]';
        state.push_fn( set_production /*12*/, 12 );
        '"--LEAF--"';
        '12:39 html__DTD=>τ<! • tk:html__identifier τ-- html__TEXT_NODE_DATA τ-- τ>';
        consume( state );
        scan( state.lexer, 138, 9 );
        if( ( state.lexer._type  == 26 ) ){
            consume( state );
            state.push_fn( branch_94d210f5e537e2f9, 12 );
            return hc_html__TEXT_NODE_DATA( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function hc_html__identifier(state, db, prod){
    scan( state.lexer, 245, 9 );
    'offset 0 peek_level-1 [  id  ]';
    '13:41 html__identifier=>• θid html__identifier_list_83';
    '13:42 html__identifier=>• θid';
    if( state.lexer._type  == 3 ){
    'Assert Consume [  id  ]';
    consume( state );
    'offset 1 peek_level0 [  num id - : / > /> " " import export END_OF_PRODUCTION 13  ]';
    '13:41 html__identifier=>θid • html__identifier_list_83';
    '13:42 html__identifier=>θid •';
    scan( state.lexer, 246, 89 );
    if( state.lexer._type  == 5 || state.lexer._type  == 3 || state.lexer._type  == 88 || state.lexer._type  == 70 ){
        'Asserts [  num id - :  ]';
        state.push_fn( set_production /*13*/, 13 );
        '"--LEAF--"';
        '13:41 html__identifier=>θid • html__identifier_list_83';
        state.push_fn( branch_c417a0113f98071e, 13 );
        return hc_html__identifier_list_83( state, db, 0 )
    } else {
        '"--LEAF--"';
        '13:42 html__identifier=>θid •';
        return 13
    }
};
    return - 1
}

function hc_html__TEXT_NODE_DATA(state, db, prod){
    scan( state.lexer, 233, 0 );
    'offset 0 peek_level-1 [  num id sym sp nl  ]';
    '14:43 html__TEXT_NODE_DATA=>• θnum';
    '14:45 html__TEXT_NODE_DATA=>• θid';
    '14:46 html__TEXT_NODE_DATA=>• θsym';
    '14:47 html__TEXT_NODE_DATA=>• θsp';
    '14:48 html__TEXT_NODE_DATA=>• θnl';
    if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
    '"--LEAF--"';
    '14:43 html__TEXT_NODE_DATA=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
    '"--LEAF--"';
    '14:45 html__TEXT_NODE_DATA=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
    '"--LEAF--"';
    '14:46 html__TEXT_NODE_DATA=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
    '"--LEAF--"';
    '14:47 html__TEXT_NODE_DATA=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
    '"--LEAF--"';
    '14:48 html__TEXT_NODE_DATA=>• θnl';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_html__TEXT_NODE_DATA_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 14: 
            {
                'offset 1 peek_level0 [  -- num < <! { {! </ END_OF_PRODUCTION id sym sp nl  ]';
                '14:44 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θnum';
                '28:135 html__TEXT_NODE=>html__TEXT_NODE_DATA •';
                '14:49 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θid';
                '14:50 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θsym';
                '14:51 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θsp';
                '14:52 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θnl';
                '12:39 html__DTD=>τ<! tk:html__identifier τ-- html__TEXT_NODE_DATA • τ-- τ>';
                '12:40 html__DTD=>τ<! τ-- html__TEXT_NODE_DATA • τ-- τ>';
                scan( state.lexer, 247, 0 );
                if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 14
                } else if( state.lexer._type  == 5 ){
                    'Asserts [  num  ]';
                    'offset 1 peek_level1 [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                    '14:44 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θnum';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 247, 0 );
                    if( isTokenActive( pk._type, 247 ) ){
                        'Asserts [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                        state.lexer._type  = 5;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        '"--LEAF--"';
                        '14:44 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θnum';
                        scan( state.lexer, 248, 9 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 3 ){
                    'Asserts [  id  ]';
                    'offset 1 peek_level1 [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                    '14:49 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θid';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 247, 0 );
                    if( isTokenActive( pk._type, 247 ) ){
                        'Asserts [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                        state.lexer._type  = 3;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        '"--LEAF--"';
                        '14:49 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θid';
                        scan( state.lexer, 245, 9 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 2 ){
                    'Asserts [  sym  ]';
                    'offset 1 peek_level1 [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                    '14:50 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θsym';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 247, 0 );
                    if( isTokenActive( pk._type, 247 ) ){
                        'Asserts [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                        state.lexer._type  = 2;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        '"--LEAF--"';
                        '14:50 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θsym';
                        scan( state.lexer, 249, 9 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 8 ){
                    'Asserts [  sp  ]';
                    'offset 1 peek_level1 [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                    '14:51 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θsp';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 247, 0 );
                    if( isTokenActive( pk._type, 247 ) ){
                        'Asserts [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                        state.lexer._type  = 8;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        '"--LEAF--"';
                        '14:51 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θsp';
                        scan( state.lexer, 9, 89 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 7 ){
                    'Asserts [  nl  ]';
                    'offset 1 peek_level1 [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                    '14:52 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θnl';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 247, 0 );
                    if( isTokenActive( pk._type, 247 ) ){
                        'Asserts [  -- </ < <! num id sym sp nl { {! END_OF_PRODUCTION  ]';
                        state.lexer._type  = 7;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        '"--LEAF--"';
                        '14:52 html__TEXT_NODE_DATA=>html__TEXT_NODE_DATA • θnl';
                        scan( state.lexer, 9, 250 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 14 ) ? prod  : - 1
}

function hc_html__BODY(state, db, prod){
    scan( state.lexer, 223, 9 );
    'offset 0 peek_level0 [  < <import  ]';
    '15:53 html__BODY=>• html__GOAL_TAG';
    '15:54 html__BODY=>• IMPORT_TAG_LIST html__GOAL_TAG';
    if( state.lexer._type  == 27 ){
    'Asserts [  <  ]';
    state.push_fn( set_production /*15*/, 15 );
    '"--LEAF--"';
    '15:53 html__BODY=>• html__GOAL_TAG';
    state.push_fn( set_production /*0*/, 15 );
    return hc_html__GOAL_TAG( state, db, 0 )
} else {
    state.push_fn( set_production /*15*/, 15 );
    '"--LEAF--"';
    '15:54 html__BODY=>• IMPORT_TAG_LIST html__GOAL_TAG';
    state.push_fn( branch_7483bdc374ca764a, 15 );
    return hc_IMPORT_TAG_LIST( state, db, 0 )
};
    return - 1
}

function hc_html__GOAL_TAG(state, db, prod){
    '"--LEAF--"';
    '16:55 html__GOAL_TAG=>• html__TAG';
    state.push_fn( set_production /*16*/, 16 );
    return hc_html__TAG( state, db, 0 )
}

function hc_html__TAG(state, db, prod){
    scan( state.lexer, 111, 9 );
    'offset 0 peek_level-1 [  <  ]';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:57 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ/>';
    '17:58 html__TAG=>• τ< html__VOID_NAME html__ATTRIBUTES τ/ τ>';
    '17:59 html__TAG=>• τ< τSTYLE html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
    '17:60 html__TAG=>• τ< τstyle html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
    '17:61 html__TAG=>• τ< τSTYLE html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
    '17:62 html__TAG=>• τ< τstyle html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
    '17:63 html__TAG=>• τ< html__TAGNAME τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:64 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> τ</ html__TAGNAME τ>';
    '17:65 html__TAG=>• τ< html__TAGNAME τ/>';
    '17:66 html__TAG=>• τ< html__VOID_NAME τ/ τ>';
    '17:67 html__TAG=>• τ< html__VOID_NAME html__ATTRIBUTES τ>';
    '17:68 html__TAG=>• τ< τSTYLE τ> css__CSS τ</ τSTYLE τ>';
    '17:69 html__TAG=>• τ< τSTYLE html__ATTRIBUTES τ> τ</ τSTYLE τ>';
    '17:70 html__TAG=>• τ< τstyle τ> css__CSS τ</ τSTYLE τ>';
    '17:71 html__TAG=>• τ< τstyle html__ATTRIBUTES τ> τ</ τSTYLE τ>';
    '17:72 html__TAG=>• τ< τSTYLE τ> css__CSS τ</ τstyle τ>';
    '17:73 html__TAG=>• τ< τSTYLE html__ATTRIBUTES τ> τ</ τstyle τ>';
    '17:74 html__TAG=>• τ< τstyle τ> css__CSS τ</ τstyle τ>';
    '17:75 html__TAG=>• τ< τstyle html__ATTRIBUTES τ> τ</ τstyle τ>';
    '17:76 html__TAG=>• τ< html__TAGNAME τ> τ</ html__TAGNAME τ>';
    '17:77 html__TAG=>• τ< html__VOID_NAME τ>';
    '17:78 html__TAG=>• τ< τSTYLE τ> τ</ τSTYLE τ>';
    '17:79 html__TAG=>• τ< τstyle τ> τ</ τSTYLE τ>';
    '17:80 html__TAG=>• τ< τSTYLE τ> τ</ τstyle τ>';
    '17:81 html__TAG=>• τ< τstyle τ> τ</ τstyle τ>';
    if( state.lexer._type  == 27 ){
    'Assert Consume [  <  ]';
    consume( state );
    'offset 1 peek_level0 [  input area base br col command embed hr img keygen link meta param source track wbr f STYLE style 13  ]';
    '17:56 html__TAG=>τ< • html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:57 html__TAG=>τ< • html__TAGNAME html__ATTRIBUTES τ/>';
    '17:63 html__TAG=>τ< • html__TAGNAME τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:64 html__TAG=>τ< • html__TAGNAME html__ATTRIBUTES τ> τ</ html__TAGNAME τ>';
    '17:65 html__TAG=>τ< • html__TAGNAME τ/>';
    '17:76 html__TAG=>τ< • html__TAGNAME τ> τ</ html__TAGNAME τ>';
    '17:58 html__TAG=>τ< • html__VOID_NAME html__ATTRIBUTES τ/ τ>';
    '17:66 html__TAG=>τ< • html__VOID_NAME τ/ τ>';
    '17:67 html__TAG=>τ< • html__VOID_NAME html__ATTRIBUTES τ>';
    '17:77 html__TAG=>τ< • html__VOID_NAME τ>';
    '17:59 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
    '17:61 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
    '17:68 html__TAG=>τ< • τSTYLE τ> css__CSS τ</ τSTYLE τ>';
    '17:69 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> τ</ τSTYLE τ>';
    '17:72 html__TAG=>τ< • τSTYLE τ> css__CSS τ</ τstyle τ>';
    '17:73 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> τ</ τstyle τ>';
    '17:78 html__TAG=>τ< • τSTYLE τ> τ</ τSTYLE τ>';
    '17:80 html__TAG=>τ< • τSTYLE τ> τ</ τstyle τ>';
    '17:60 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
    '17:62 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
    '17:70 html__TAG=>τ< • τstyle τ> css__CSS τ</ τSTYLE τ>';
    '17:71 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> τ</ τSTYLE τ>';
    '17:74 html__TAG=>τ< • τstyle τ> css__CSS τ</ τstyle τ>';
    '17:75 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> τ</ τstyle τ>';
    '17:79 html__TAG=>τ< • τstyle τ> τ</ τSTYLE τ>';
    '17:81 html__TAG=>τ< • τstyle τ> τ</ τstyle τ>';
    scan( state.lexer, 251, 9 );
    if( isTokenActive( state.lexer._type, 252 ) ){
        'Asserts [  input area base br col command embed hr img keygen link meta param source track wbr f  ]';
        'offset 3 peek_level-1 [  29  ]';
        '17:58 html__TAG=>τ< • html__VOID_NAME html__ATTRIBUTES τ/ τ>';
        '17:66 html__TAG=>τ< • html__VOID_NAME τ/ τ>';
        '17:67 html__TAG=>τ< • html__VOID_NAME html__ATTRIBUTES τ>';
        '17:77 html__TAG=>τ< • html__VOID_NAME τ>';
        scan( state.lexer, 253, 9 );
        state.push_fn( branch_a85b9560c11d11f1, 0 );
        return hc_html__VOID_NAME( state, db, 0 )
    } else if( state.lexer._type  == 30 ){
        'Asserts [  STYLE  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  STYLE  ]';
        '17:59 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
        '17:61 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
        '17:68 html__TAG=>τ< • τSTYLE τ> css__CSS τ</ τSTYLE τ>';
        '17:69 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> τ</ τSTYLE τ>';
        '17:72 html__TAG=>τ< • τSTYLE τ> css__CSS τ</ τstyle τ>';
        '17:73 html__TAG=>τ< • τSTYLE html__ATTRIBUTES τ> τ</ τstyle τ>';
        '17:78 html__TAG=>τ< • τSTYLE τ> τ</ τSTYLE τ>';
        '17:80 html__TAG=>τ< • τSTYLE τ> τ</ τstyle τ>';
        'offset 4 peek_level0 [  " " 13 import export >  ]';
        '17:59 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
        '17:61 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
        '17:69 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> τ</ τSTYLE τ>';
        '17:73 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> τ</ τstyle τ>';
        '17:68 html__TAG=>τ< τSTYLE • τ> css__CSS τ</ τSTYLE τ>';
        '17:72 html__TAG=>τ< τSTYLE • τ> css__CSS τ</ τstyle τ>';
        '17:78 html__TAG=>τ< τSTYLE • τ> τ</ τSTYLE τ>';
        '17:80 html__TAG=>τ< τSTYLE • τ> τ</ τstyle τ>';
        scan( state.lexer, 254, 9 );
        if( isTokenActive( state.lexer._type, 120 ) ){
            'Asserts [  " " 13 import export  ]';
            'offset 6 peek_level-1 [  19  ]';
            '17:59 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
            '17:61 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
            '17:69 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> τ</ τSTYLE τ>';
            '17:73 html__TAG=>τ< τSTYLE • html__ATTRIBUTES τ> τ</ τstyle τ>';
            scan( state.lexer, 121, 9 );
            state.push_fn( branch_c83122ac5741e946, 0 );
            return hc_html__ATTRIBUTES( state, db, 0 )
        } else if( state.lexer._type  == 11 ){
            'Asserts [  >  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 6 peek_level-1 [  >  ]';
            '17:68 html__TAG=>τ< τSTYLE • τ> css__CSS τ</ τSTYLE τ>';
            '17:72 html__TAG=>τ< τSTYLE • τ> css__CSS τ</ τstyle τ>';
            '17:78 html__TAG=>τ< τSTYLE • τ> τ</ τSTYLE τ>';
            '17:80 html__TAG=>τ< τSTYLE • τ> τ</ τstyle τ>';
            'offset 7 peek_level0 [   @import @media @keyframes @supports * 216 # . [ : </  ]';
            '17:68 html__TAG=>τ< τSTYLE τ> • css__CSS τ</ τSTYLE τ>';
            '17:72 html__TAG=>τ< τSTYLE τ> • css__CSS τ</ τstyle τ>';
            '17:78 html__TAG=>τ< τSTYLE τ> • τ</ τSTYLE τ>';
            '17:80 html__TAG=>τ< τSTYLE τ> • τ</ τstyle τ>';
            scan( state.lexer, 26, 9 );
            if( isTokenActive( state.lexer._type, 27 ) ){
                'Asserts [   @import @media @keyframes @supports * 216 # . [ :  ]';
                'offset 9 peek_level-1 [  202  ]';
                '17:68 html__TAG=>τ< τSTYLE τ> • css__CSS τ</ τSTYLE τ>';
                '17:72 html__TAG=>τ< τSTYLE τ> • css__CSS τ</ τstyle τ>';
                scan( state.lexer, 28, 9 );
                state.push_fn( branch_ab5c4a110d499aaa, 0 );
                return hc_css__CSS( state, db, 0 )
            } else if( state.lexer._type  == 28 ){
                'Asserts [  </  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 9 peek_level-1 [  </  ]';
                '17:78 html__TAG=>τ< τSTYLE τ> • τ</ τSTYLE τ>';
                '17:80 html__TAG=>τ< τSTYLE τ> • τ</ τstyle τ>';
                'offset 10 peek_level-1 [  STYLE style  ]';
                '17:78 html__TAG=>τ< τSTYLE τ> τ</ • τSTYLE τ>';
                '17:80 html__TAG=>τ< τSTYLE τ> τ</ • τstyle τ>';
                scan( state.lexer, 29, 9 );
                if( state.lexer._type  == 30 ){
                    'Asserts [  STYLE  ]';
                    state.push_fn( set_production /*17*/, 17 );
                    '"--LEAF--"';
                    '17:78 html__TAG=>τ< τSTYLE τ> τ</ • τSTYLE τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 6, 27 );
                        return 0
                    };
                    return - 1
                } else if( state.lexer._type  == 31 ){
                    'Asserts [  style  ]';
                    state.push_fn( set_production /*17*/, 17 );
                    '"--LEAF--"';
                    '17:80 html__TAG=>τ< τSTYLE τ> τ</ • τstyle τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 6, 27 );
                        return 0
                    };
                    return - 1
                }
            }
        }
    } else if( state.lexer._type  == 31 ){
        'Asserts [  style  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  style  ]';
        '17:60 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
        '17:62 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
        '17:70 html__TAG=>τ< • τstyle τ> css__CSS τ</ τSTYLE τ>';
        '17:71 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> τ</ τSTYLE τ>';
        '17:74 html__TAG=>τ< • τstyle τ> css__CSS τ</ τstyle τ>';
        '17:75 html__TAG=>τ< • τstyle html__ATTRIBUTES τ> τ</ τstyle τ>';
        '17:79 html__TAG=>τ< • τstyle τ> τ</ τSTYLE τ>';
        '17:81 html__TAG=>τ< • τstyle τ> τ</ τstyle τ>';
        'offset 4 peek_level0 [  " " 13 import export >  ]';
        '17:60 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
        '17:62 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
        '17:71 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> τ</ τSTYLE τ>';
        '17:75 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> τ</ τstyle τ>';
        '17:70 html__TAG=>τ< τstyle • τ> css__CSS τ</ τSTYLE τ>';
        '17:74 html__TAG=>τ< τstyle • τ> css__CSS τ</ τstyle τ>';
        '17:79 html__TAG=>τ< τstyle • τ> τ</ τSTYLE τ>';
        '17:81 html__TAG=>τ< τstyle • τ> τ</ τstyle τ>';
        scan( state.lexer, 254, 9 );
        if( isTokenActive( state.lexer._type, 120 ) ){
            'Asserts [  " " 13 import export  ]';
            'offset 6 peek_level-1 [  19  ]';
            '17:60 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> css__CSS τ</ τSTYLE τ>';
            '17:62 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> css__CSS τ</ τstyle τ>';
            '17:71 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> τ</ τSTYLE τ>';
            '17:75 html__TAG=>τ< τstyle • html__ATTRIBUTES τ> τ</ τstyle τ>';
            scan( state.lexer, 121, 9 );
            state.push_fn( branch_05576081eb9037d4, 0 );
            return hc_html__ATTRIBUTES( state, db, 0 )
        } else if( state.lexer._type  == 11 ){
            'Asserts [  >  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 6 peek_level-1 [  >  ]';
            '17:70 html__TAG=>τ< τstyle • τ> css__CSS τ</ τSTYLE τ>';
            '17:74 html__TAG=>τ< τstyle • τ> css__CSS τ</ τstyle τ>';
            '17:79 html__TAG=>τ< τstyle • τ> τ</ τSTYLE τ>';
            '17:81 html__TAG=>τ< τstyle • τ> τ</ τstyle τ>';
            'offset 7 peek_level0 [   @import @media @keyframes @supports * 216 # . [ : </  ]';
            '17:70 html__TAG=>τ< τstyle τ> • css__CSS τ</ τSTYLE τ>';
            '17:74 html__TAG=>τ< τstyle τ> • css__CSS τ</ τstyle τ>';
            '17:79 html__TAG=>τ< τstyle τ> • τ</ τSTYLE τ>';
            '17:81 html__TAG=>τ< τstyle τ> • τ</ τstyle τ>';
            scan( state.lexer, 26, 9 );
            if( isTokenActive( state.lexer._type, 27 ) ){
                'Asserts [   @import @media @keyframes @supports * 216 # . [ :  ]';
                'offset 9 peek_level-1 [  202  ]';
                '17:70 html__TAG=>τ< τstyle τ> • css__CSS τ</ τSTYLE τ>';
                '17:74 html__TAG=>τ< τstyle τ> • css__CSS τ</ τstyle τ>';
                scan( state.lexer, 28, 9 );
                state.push_fn( branch_3eff048a87c7f7bf, 0 );
                return hc_css__CSS( state, db, 0 )
            } else if( state.lexer._type  == 28 ){
                'Asserts [  </  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 9 peek_level-1 [  </  ]';
                '17:79 html__TAG=>τ< τstyle τ> • τ</ τSTYLE τ>';
                '17:81 html__TAG=>τ< τstyle τ> • τ</ τstyle τ>';
                'offset 10 peek_level-1 [  STYLE style  ]';
                '17:79 html__TAG=>τ< τstyle τ> τ</ • τSTYLE τ>';
                '17:81 html__TAG=>τ< τstyle τ> τ</ • τstyle τ>';
                scan( state.lexer, 29, 9 );
                if( state.lexer._type  == 30 ){
                    'Asserts [  STYLE  ]';
                    state.push_fn( set_production /*17*/, 17 );
                    '"--LEAF--"';
                    '17:79 html__TAG=>τ< τstyle τ> τ</ • τSTYLE τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 6, 27 );
                        return 0
                    };
                    return - 1
                } else if( state.lexer._type  == 31 ){
                    'Asserts [  style  ]';
                    state.push_fn( set_production /*17*/, 17 );
                    '"--LEAF--"';
                    '17:81 html__TAG=>τ< τstyle τ> τ</ • τstyle τ>';
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 6, 27 );
                        return 0
                    };
                    return - 1
                }
            }
        }
    } else {
        'offset 3 peek_level-1 [  18  ]';
        '17:56 html__TAG=>τ< • html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        '17:57 html__TAG=>τ< • html__TAGNAME html__ATTRIBUTES τ/>';
        '17:63 html__TAG=>τ< • html__TAGNAME τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        '17:64 html__TAG=>τ< • html__TAGNAME html__ATTRIBUTES τ> τ</ html__TAGNAME τ>';
        '17:65 html__TAG=>τ< • html__TAGNAME τ/>';
        '17:76 html__TAG=>τ< • html__TAGNAME τ> τ</ html__TAGNAME τ>';
        scan( state.lexer, 255, 9 );
        state.push_fn( branch_7b2563eb43a2e432, 0 );
        return hc_html__TAGNAME( state, db, 0 )
    }
};
    return - 1
}

function hc_html__TAGNAME(state, db, prod){
    scan( state.lexer, 255, 9 );
    'offset 0 peek_level-1 [  13  ]';
    '18:82 html__TAGNAME=>• tk:html__identifier';
    if( state.lexer._type  == 25 ){
    'Assert Consume [  13  ]';
    consume( state );
    '"--LEAF--"';
    '18:82 html__TAGNAME=>tk:html__identifier •';
    scan( state.lexer, 9, 9 );
    return 18
};
    return - 1
}

function hc_html__ATTRIBUTES(state, db, prod){
    '"--LEAF--"';
    '19:83 html__ATTRIBUTES=>• html__ATTRIBUTE';
    state.push_fn( branch_6a7516e57187d00c, 19 );
    return hc_html__ATTRIBUTE( state, db, 0 )
}

function hc_html__ATTRIBUTES_goto(state, db, prod){
    'offset 1 peek_level0 [  " " 13 import export / > />  ]';
    '19:84 html__ATTRIBUTES=>html__ATTRIBUTES • html__ATTRIBUTE';
    '3:5 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ/ τ> τ<import>';
    '3:6 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ/ τ>';
    '17:58 html__TAG=>τ< html__VOID_NAME html__ATTRIBUTES • τ/ τ>';
    '3:8 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ> τ<import>';
    '3:10 IMPORT_TAG=>τ<import html__ATTRIBUTES • τ>';
    '17:56 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '17:59 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> css__CSS τ</ τSTYLE τ>';
    '17:60 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> css__CSS τ</ τSTYLE τ>';
    '17:61 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> css__CSS τ</ τstyle τ>';
    '17:62 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> css__CSS τ</ τstyle τ>';
    '17:64 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ> τ</ html__TAGNAME τ>';
    '17:67 html__TAG=>τ< html__VOID_NAME html__ATTRIBUTES • τ>';
    '17:69 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> τ</ τSTYLE τ>';
    '17:71 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> τ</ τSTYLE τ>';
    '17:73 html__TAG=>τ< τSTYLE html__ATTRIBUTES • τ> τ</ τstyle τ>';
    '17:75 html__TAG=>τ< τstyle html__ATTRIBUTES • τ> τ</ τstyle τ>';
    '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:116 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES • τ> javascript__script τ</ τjs τ>';
    '27:117 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> javascript__script τ< τ/ τscript τ>';
    '27:119 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> javascript__script τ< τ/ τscript τ>';
    '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> τ< τ/ τSCRIPT τ>';
    '27:123 html__TAG_BODY_ITEM=>τ< τjs html__ATTRIBUTES • τ> τ</ τjs τ>';
    '27:125 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> τ< τ/ τSCRIPT τ>';
    '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT html__ATTRIBUTES • τ> τ< τ/ τscript τ>';
    '27:129 html__TAG_BODY_ITEM=>τ< τscript html__ATTRIBUTES • τ> τ< τ/ τscript τ>';
    '17:57 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES • τ/>';
    scan( state.lexer, 256, 9 );
    if( isTokenActive( state.lexer._type, 120 ) ){
    'Asserts [  " " 13 import export  ]';
    state.push_fn( hc_html__ATTRIBUTES_goto /*hc_html__ATTRIBUTES_goto( state, db, 19 )*/, 19 );
    '"--LEAF--"';
    '19:84 html__ATTRIBUTES=>html__ATTRIBUTES • html__ATTRIBUTE';
    scan( state.lexer, 121, 9 );
    if( ( isTokenActive( state.lexer._type, 120 ) ) ){
        state.push_fn( branch_449740ceb8df7fb1, 19 );
        return hc_html__ATTRIBUTE( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 10 || state.lexer._type  == 11 ){
    'Asserts [  / >  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 19
};
    return ( prod  == 19 ) ? prod  : - 1
}

function hc_html__ATTRIBUTE(state, db, prod){
    scan( state.lexer, 121, 9 );
    'offset 0 peek_level0 [  import export " " 13  ]';
    '20:85 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD τ= html__ATTRIBUTE_BODY';
    '20:86 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD';
    '20:87 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD τ= WICK_BINDING';
    '20:90 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD τ= html__ATTRIBUTE_group_169_0_';
    '20:88 html__ATTRIBUTE=>• IMPORT_ATTRIBUTE';
    '20:89 html__ATTRIBUTE=>• EXPORT_ATTRIBUTE';
    if( state.lexer._type  == 13 ){
    'Asserts [  import  ]';
    state.push_fn( set_production /*20*/, 20 );
    '"--LEAF--"';
    '20:88 html__ATTRIBUTE=>• IMPORT_ATTRIBUTE';
    state.push_fn( set_production /*0*/, 20 );
    return hc_IMPORT_ATTRIBUTE( state, db, 0 )
} else if( state.lexer._type  == 15 ){
    'Asserts [  export  ]';
    state.push_fn( set_production /*20*/, 20 );
    '"--LEAF--"';
    '20:89 html__ATTRIBUTE=>• EXPORT_ATTRIBUTE';
    state.push_fn( set_production /*0*/, 20 );
    return hc_EXPORT_ATTRIBUTE( state, db, 0 )
} else {
    'offset 2 peek_level-1 [  21  ]';
    '20:85 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD τ= html__ATTRIBUTE_BODY';
    '20:86 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD';
    '20:87 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD τ= WICK_BINDING';
    '20:90 html__ATTRIBUTE=>• html__ATTRIBUTE_HEAD τ= html__ATTRIBUTE_group_169_0_';
    scan( state.lexer, 257, 9 );
    state.push_fn( branch_a6c922ac7395948a, 0 );
    return hc_html__ATTRIBUTE_HEAD( state, db, 0 )
};
    return - 1
}

function hc_html__ATTRIBUTE_HEAD(state, db, prod){
    scan( state.lexer, 257, 9 );
    'offset 0 peek_level-1 [  " " 13  ]';
    '21:91 html__ATTRIBUTE_HEAD=>• τ" tk:html__identifier τ"';
    '21:92 html__ATTRIBUTE_HEAD=>• τ" tk:html__identifier τ"';
    '21:93 html__ATTRIBUTE_HEAD=>• tk:html__identifier';
    if( state.lexer._type  == 32 ){
    'Asserts [  "  ]';
    state.push_fn( set_production /*21*/, 21 );
    '"--LEAF--"';
    '21:91 html__ATTRIBUTE_HEAD=>• τ" tk:html__identifier τ"';
    consume( state );
    scan( state.lexer, 255, 9 );
    if( ( state.lexer._type  == 25 ) ){
        consume( state );
        scan( state.lexer, 127, 9 );
        if( ( state.lexer._type  == 32 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 0
        }
    };
    return - 1
} else if( state.lexer._type  == 33 ){
    'Asserts [  "  ]';
    state.push_fn( set_production /*21*/, 21 );
    '"--LEAF--"';
    '21:92 html__ATTRIBUTE_HEAD=>• τ" tk:html__identifier τ"';
    consume( state );
    scan( state.lexer, 255, 9 );
    if( ( state.lexer._type  == 25 ) ){
        consume( state );
        scan( state.lexer, 65, 9 );
        if( ( state.lexer._type  == 33 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 0
        }
    };
    return - 1
} else if( state.lexer._type  == 25 ){
    'Asserts [  13  ]';
    state.push_fn( set_production /*21*/, 21 );
    '"--LEAF--"';
    '21:93 html__ATTRIBUTE_HEAD=>• tk:html__identifier';
    consume( state );
    return 0
};
    return - 1
}

function hc_html__ATTRIBUTE_BODY(state, db, prod){
    scan( state.lexer, 258, 9 );
    'offset 0 peek_level-1 [  23 id num  ]';
    '22:94 html__ATTRIBUTE_BODY=>• tk:html__ATTRIBUTE_STRING_VALUE';
    '22:95 html__ATTRIBUTE_BODY=>• html__identifier';
    '22:96 html__ATTRIBUTE_BODY=>• θnum';
    if( state.lexer._type  == 34 ){
    'Asserts [  23  ]';
    state.push_fn( set_production /*22*/, 22 );
    '"--LEAF--"';
    '22:94 html__ATTRIBUTE_BODY=>• tk:html__ATTRIBUTE_STRING_VALUE';
    consume( state );
    add_reduce( state, 1, 32 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( set_production /*22*/, 22 );
    '"--LEAF--"';
    '22:95 html__ATTRIBUTE_BODY=>• html__identifier';
    state.push_fn( set_production /*0*/, 22 );
    return hc_html__identifier( state, db, 0 )
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( set_production /*22*/, 22 );
    '"--LEAF--"';
    '22:96 html__ATTRIBUTE_BODY=>• θnum';
    consume( state );
    return 0
};
    return - 1
}

function hc_html__ATTRIBUTE_STRING_VALUE(state, db, prod){
    scan( state.lexer, 259, 9 );
    'offset 0 peek_level0 [  " "  ]';
    '23:97 html__ATTRIBUTE_STRING_VALUE=>• τ" html__BODY_SYMBOLS τ"';
    '23:99 html__ATTRIBUTE_STRING_VALUE=>• τ" τ"';
    '23:98 html__ATTRIBUTE_STRING_VALUE=>• τ" html__BODY_SYMBOLS τ"';
    '23:100 html__ATTRIBUTE_STRING_VALUE=>• τ" τ"';
    if( state.lexer._type  == 33 ){
    'Asserts [  "  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  "  ]';
    '23:97 html__ATTRIBUTE_STRING_VALUE=>• τ" html__BODY_SYMBOLS τ"';
    '23:99 html__ATTRIBUTE_STRING_VALUE=>• τ" τ"';
    'offset 3 peek_level0 [  " id nl sp sym num ! (  ]';
    '23:97 html__ATTRIBUTE_STRING_VALUE=>τ" • html__BODY_SYMBOLS τ"';
    '23:99 html__ATTRIBUTE_STRING_VALUE=>τ" • τ"';
    scan( state.lexer, 260, 0 );
    if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( set_production /*23*/, 23 );
        '"--LEAF--"';
        '23:99 html__ATTRIBUTE_STRING_VALUE=>τ" • τ"';
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    } else {
        state.push_fn( set_production /*23*/, 23 );
        '"--LEAF--"';
        '23:97 html__ATTRIBUTE_STRING_VALUE=>τ" • html__BODY_SYMBOLS τ"';
        state.push_fn( branch_27bc4029a4df3225, 23 );
        return hc_html__BODY_SYMBOLS( state, db, 0 )
    }
} else if( state.lexer._type  == 32 ){
    'Asserts [  "  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  "  ]';
    '23:98 html__ATTRIBUTE_STRING_VALUE=>• τ" html__BODY_SYMBOLS τ"';
    '23:100 html__ATTRIBUTE_STRING_VALUE=>• τ" τ"';
    'offset 3 peek_level0 [  " id nl sp sym num ! (  ]';
    '23:98 html__ATTRIBUTE_STRING_VALUE=>τ" • html__BODY_SYMBOLS τ"';
    '23:100 html__ATTRIBUTE_STRING_VALUE=>τ" • τ"';
    scan( state.lexer, 261, 0 );
    if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( set_production /*23*/, 23 );
        '"--LEAF--"';
        '23:100 html__ATTRIBUTE_STRING_VALUE=>τ" • τ"';
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    } else {
        state.push_fn( set_production /*23*/, 23 );
        '"--LEAF--"';
        '23:98 html__ATTRIBUTE_STRING_VALUE=>τ" • html__BODY_SYMBOLS τ"';
        state.push_fn( branch_855ab17a1cca1393, 23 );
        return hc_html__BODY_SYMBOLS( state, db, 0 )
    }
};
    return - 1
}

function hc_html__BODY_SYMBOLS(state, db, prod){
    '"--LEAF--"';
    '24:101 html__BODY_SYMBOLS=>• html__BODY_SYMBOL';
    state.push_fn( hc_html__BODY_SYMBOLS_goto /*hc_html__BODY_SYMBOLS_goto( state, db, 24 )*/, 24 );
    return hc_html__BODY_SYMBOL( state, db, 0 )
}

function hc_html__BODY_SYMBOLS_goto(state, db, prod){
    'offset 1 peek_level0 [  " " id nl sp sym num ! (  ]';
    '24:102 html__BODY_SYMBOLS=>html__BODY_SYMBOLS • html__BODY_SYMBOL';
    '23:97 html__ATTRIBUTE_STRING_VALUE=>τ" html__BODY_SYMBOLS • τ"';
    '23:98 html__ATTRIBUTE_STRING_VALUE=>τ" html__BODY_SYMBOLS • τ"';
    scan( state.lexer, 262, 0 );
    if( isTokenActive( state.lexer._type, 263 ) ){
    'Asserts [  id nl sp sym num ! (  ]';
    state.push_fn( hc_html__BODY_SYMBOLS_goto /*hc_html__BODY_SYMBOLS_goto( state, db, 24 )*/, 24 );
    '"--LEAF--"';
    '24:102 html__BODY_SYMBOLS=>html__BODY_SYMBOLS • html__BODY_SYMBOL';
    scan( state.lexer, 263, 0 );
    if( ( isTokenActive( state.lexer._type, 263 ) ) ){
        state.push_fn( branch_c417a0113f98071e, 24 );
        return hc_html__BODY_SYMBOL( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 24 ) ? prod  : - 1
}

function hc_html__BODY_SYMBOL(state, db, prod){
    scan( state.lexer, 263, 0 );
    'offset 0 peek_level-1 [  ! ( id nl sp sym num  ]';
    '25:103 html__BODY_SYMBOL=>• θid';
    '25:104 html__BODY_SYMBOL=>• θnl';
    '25:105 html__BODY_SYMBOL=>• θsp';
    '25:106 html__BODY_SYMBOL=>• θsym';
    '25:107 html__BODY_SYMBOL=>• θnum';
    '25:108 html__BODY_SYMBOL=>• τ!';
    '25:109 html__BODY_SYMBOL=>• τ(';
    if( state.lexer._type  == 35 ){
    'Asserts [  !  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:108 html__BODY_SYMBOL=>• τ!';
    consume( state );
    return 0
} else if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:109 html__BODY_SYMBOL=>• τ(';
    consume( state );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:103 html__BODY_SYMBOL=>• θid';
    consume( state );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:104 html__BODY_SYMBOL=>• θnl';
    consume( state );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:105 html__BODY_SYMBOL=>• θsp';
    consume( state );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:106 html__BODY_SYMBOL=>• θsym';
    consume( state );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( set_production /*25*/, 25 );
    '"--LEAF--"';
    '25:107 html__BODY_SYMBOL=>• θnum';
    consume( state );
    return 0
};
    return - 1
}

function hc_html__TAG_BODY(state, db, prod){
    '"--LEAF--"';
    '26:110 html__TAG_BODY=>• html__TAG_BODY_ITEM';
    state.push_fn( branch_b8ac3131d3a3e021, 26 );
    return hc_html__TAG_BODY_ITEM( state, db, 0 )
}

function hc_html__TAG_BODY_goto(state, db, prod){
    'offset 1 peek_level0 [  < <! num id sym sp nl { {! </  ]';
    '26:111 html__TAG_BODY=>html__TAG_BODY • html__TAG_BODY_ITEM';
    '17:56 html__TAG=>τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY • τ</ html__TAGNAME τ>';
    '17:63 html__TAG=>τ< html__TAGNAME τ> html__TAG_BODY • τ</ html__TAGNAME τ>';
    scan( state.lexer, 86, 0 );
    if( isTokenActive( state.lexer._type, 87 ) ){
    'Asserts [  < <! num id sym sp nl { {!  ]';
    state.push_fn( hc_html__TAG_BODY_goto /*hc_html__TAG_BODY_goto( state, db, 26 )*/, 26 );
    '"--LEAF--"';
    '26:111 html__TAG_BODY=>html__TAG_BODY • html__TAG_BODY_ITEM';
    scan( state.lexer, 87, 0 );
    if( ( isTokenActive( state.lexer._type, 87 ) ) ){
        state.push_fn( branch_449740ceb8df7fb1, 26 );
        return hc_html__TAG_BODY_ITEM( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 28 ){
    'Asserts [  </  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 26
};
    return ( prod  == 26 ) ? prod  : - 1
}

function hc_html__TAG_BODY_ITEM(state, db, prod){
    scan( state.lexer, 87, 0 );
    'offset 0 peek_level0 [  < <! num id sym sp nl { {!  ]';
    '27:112 html__TAG_BODY_ITEM=>• html__TEXT_NODE';
    '27:113 html__TAG_BODY_ITEM=>• html__TAG';
    '27:115 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:116 html__TAG_BODY_ITEM=>• τ< τjs html__ATTRIBUTES τ> javascript__script τ</ τjs τ>';
    '27:117 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
    '27:119 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
    '27:120 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:121 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
    '27:122 html__TAG_BODY_ITEM=>• τ< τjs τ> javascript__script τ</ τjs τ>';
    '27:123 html__TAG_BODY_ITEM=>• τ< τjs html__ATTRIBUTES τ> τ</ τjs τ>';
    '27:124 html__TAG_BODY_ITEM=>• τ< τscript τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:125 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
    '27:126 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> javascript__script τ< τ/ τscript τ>';
    '27:127 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ τscript τ>';
    '27:128 html__TAG_BODY_ITEM=>• τ< τscript τ> javascript__script τ< τ/ τscript τ>';
    '27:129 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> τ< τ/ τscript τ>';
    '27:130 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> τ< τ/ τSCRIPT τ>';
    '27:131 html__TAG_BODY_ITEM=>• τ< τjs τ> τ</ τjs τ>';
    '27:132 html__TAG_BODY_ITEM=>• τ< τscript τ> τ< τ/ τSCRIPT τ>';
    '27:133 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> τ< τ/ τscript τ>';
    '27:134 html__TAG_BODY_ITEM=>• τ< τscript τ> τ< τ/ τscript τ>';
    '27:114 html__TAG_BODY_ITEM=>• html__DTD';
    if( state.lexer._type  == 27 ){
    'Asserts [  <  ]';
    'offset 0 peek_level1 [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style SCRIPT js script  ]';
    '27:113 html__TAG_BODY_ITEM=>• html__TAG';
    '27:115 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:118 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
    '27:120 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:121 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
    '27:126 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> javascript__script τ< τ/ τscript τ>';
    '27:127 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ τscript τ>';
    '27:130 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> τ< τ/ τSCRIPT τ>';
    '27:133 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> τ< τ/ τscript τ>';
    '27:116 html__TAG_BODY_ITEM=>• τ< τjs html__ATTRIBUTES τ> javascript__script τ</ τjs τ>';
    '27:122 html__TAG_BODY_ITEM=>• τ< τjs τ> javascript__script τ</ τjs τ>';
    '27:123 html__TAG_BODY_ITEM=>• τ< τjs html__ATTRIBUTES τ> τ</ τjs τ>';
    '27:131 html__TAG_BODY_ITEM=>• τ< τjs τ> τ</ τjs τ>';
    '27:117 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:119 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
    '27:124 html__TAG_BODY_ITEM=>• τ< τscript τ> javascript__script τ< τ/ τSCRIPT τ>';
    '27:125 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
    '27:128 html__TAG_BODY_ITEM=>• τ< τscript τ> javascript__script τ< τ/ τscript τ>';
    '27:129 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> τ< τ/ τscript τ>';
    '27:132 html__TAG_BODY_ITEM=>• τ< τscript τ> τ< τ/ τSCRIPT τ>';
    '27:134 html__TAG_BODY_ITEM=>• τ< τscript τ> τ< τ/ τscript τ>';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 264, 9 );
    if( isTokenActive( pk._type, 82 ) ){
        'Asserts [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
        state.lexer._type  = 27;
        state.push_fn( set_production /*27*/, 27 );
        '"--LEAF--"';
        '27:113 html__TAG_BODY_ITEM=>• html__TAG';
        state.push_fn( set_production /*0*/, 27 );
        return hc_html__TAG( state, db, 0 )
    } else if( pk._type  == 37 ){
        'Asserts [  SCRIPT  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  <  ]';
        '27:115 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:118 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
        '27:120 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:121 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
        '27:126 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> javascript__script τ< τ/ τscript τ>';
        '27:127 html__TAG_BODY_ITEM=>• τ< τSCRIPT html__ATTRIBUTES τ> τ< τ/ τscript τ>';
        '27:130 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> τ< τ/ τSCRIPT τ>';
        '27:133 html__TAG_BODY_ITEM=>• τ< τSCRIPT τ> τ< τ/ τscript τ>';
        'offset 3 peek_level-1 [  SCRIPT  ]';
        '27:115 html__TAG_BODY_ITEM=>τ< • τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:118 html__TAG_BODY_ITEM=>τ< • τSCRIPT html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
        '27:120 html__TAG_BODY_ITEM=>τ< • τSCRIPT τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:121 html__TAG_BODY_ITEM=>τ< • τSCRIPT html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
        '27:126 html__TAG_BODY_ITEM=>τ< • τSCRIPT τ> javascript__script τ< τ/ τscript τ>';
        '27:127 html__TAG_BODY_ITEM=>τ< • τSCRIPT html__ATTRIBUTES τ> τ< τ/ τscript τ>';
        '27:130 html__TAG_BODY_ITEM=>τ< • τSCRIPT τ> τ< τ/ τSCRIPT τ>';
        '27:133 html__TAG_BODY_ITEM=>τ< • τSCRIPT τ> τ< τ/ τscript τ>';
        scan( state.lexer, 265, 9 );
        if( state.lexer._type  == 37 ){
            'Assert Consume [  SCRIPT  ]';
            consume( state );
            'offset 4 peek_level0 [  " " 13 import export >  ]';
            '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
            '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
            '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
            '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> τ< τ/ τscript τ>';
            '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> javascript__script τ< τ/ τSCRIPT τ>';
            '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> javascript__script τ< τ/ τscript τ>';
            '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> τ< τ/ τSCRIPT τ>';
            '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> τ< τ/ τscript τ>';
            scan( state.lexer, 254, 9 );
            if( isTokenActive( state.lexer._type, 120 ) ){
                'Asserts [  " " 13 import export  ]';
                'offset 6 peek_level-1 [  19  ]';
                '27:115 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
                '27:118 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
                '27:121 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
                '27:127 html__TAG_BODY_ITEM=>τ< τSCRIPT • html__ATTRIBUTES τ> τ< τ/ τscript τ>';
                scan( state.lexer, 121, 9 );
                state.push_fn( branch_3b8936e439c857e1, 0 );
                return hc_html__ATTRIBUTES( state, db, 0 )
            } else if( state.lexer._type  == 11 ){
                'Asserts [  >  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 6 peek_level-1 [  >  ]';
                '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> javascript__script τ< τ/ τSCRIPT τ>';
                '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> javascript__script τ< τ/ τscript τ>';
                '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> τ< τ/ τSCRIPT τ>';
                '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT • τ> τ< τ/ τscript τ>';
                'offset 7 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await <  ]';
                '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τSCRIPT τ>';
                '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τscript τ>';
                '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • τ< τ/ τSCRIPT τ>';
                '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • τ< τ/ τscript τ>';
                scan( state.lexer, 79, 9 );
                if( isTokenActive( state.lexer._type, 80 ) ){
                    'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    'offset 9 peek_level-1 [  264  ]';
                    '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τSCRIPT τ>';
                    '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τscript τ>';
                    scan( state.lexer, 79, 9 );
                    state.push_fn( branch_7b8905437871e530, 0 );
                    return hc_javascript__script( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    'offset 7 peek_level1 [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style /  ]';
                    '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τSCRIPT τ>';
                    '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τscript τ>';
                    '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • τ< τ/ τSCRIPT τ>';
                    '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • τ< τ/ τscript τ>';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 81, 9 );
                    if( isTokenActive( pk._type, 82 ) ){
                        'Asserts [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
                        'offset 9 peek_level-1 [  264  ]';
                        '27:120 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τSCRIPT τ>';
                        '27:126 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • javascript__script τ< τ/ τscript τ>';
                        scan( state.lexer, 79, 9 );
                        state.push_fn( branch_7b8905437871e530, 0 );
                        return hc_javascript__script( state, db, 0 )
                    } else {
                        consume( state );
                        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                        'offset 9 peek_level-1 [  <  ]';
                        '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • τ< τ/ τSCRIPT τ>';
                        '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> • τ< τ/ τscript τ>';
                        'offset 10 peek_level-1 [  /  ]';
                        '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> τ< • τ/ τSCRIPT τ>';
                        '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> τ< • τ/ τscript τ>';
                        scan( state.lexer, 83, 9 );
                        if( state.lexer._type  == 10 ){
                            'Assert Consume [  /  ]';
                            consume( state );
                            'offset 11 peek_level-1 [  SCRIPT script  ]';
                            '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> τ< τ/ • τSCRIPT τ>';
                            '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> τ< τ/ • τscript τ>';
                            scan( state.lexer, 84, 9 );
                            if( state.lexer._type  == 37 ){
                                'Asserts [  SCRIPT  ]';
                                state.push_fn( set_production /*27*/, 27 );
                                '"--LEAF--"';
                                '27:130 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> τ< τ/ • τSCRIPT τ>';
                                consume( state );
                                scan( state.lexer, 8, 9 );
                                if( ( state.lexer._type  == 11 ) ){
                                    consume( state );
                                    add_reduce( state, 7, 36 );
                                    return 0
                                };
                                return - 1
                            } else if( state.lexer._type  == 39 ){
                                'Asserts [  script  ]';
                                state.push_fn( set_production /*27*/, 27 );
                                '"--LEAF--"';
                                '27:133 html__TAG_BODY_ITEM=>τ< τSCRIPT τ> τ< τ/ • τscript τ>';
                                consume( state );
                                scan( state.lexer, 8, 9 );
                                if( ( state.lexer._type  == 11 ) ){
                                    consume( state );
                                    add_reduce( state, 7, 36 );
                                    return 0
                                };
                                return - 1
                            }
                        }
                    }
                }
            }
        }
    } else if( pk._type  == 38 ){
        'Asserts [  js  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  <  ]';
        '27:116 html__TAG_BODY_ITEM=>• τ< τjs html__ATTRIBUTES τ> javascript__script τ</ τjs τ>';
        '27:122 html__TAG_BODY_ITEM=>• τ< τjs τ> javascript__script τ</ τjs τ>';
        '27:123 html__TAG_BODY_ITEM=>• τ< τjs html__ATTRIBUTES τ> τ</ τjs τ>';
        '27:131 html__TAG_BODY_ITEM=>• τ< τjs τ> τ</ τjs τ>';
        'offset 3 peek_level-1 [  js  ]';
        '27:116 html__TAG_BODY_ITEM=>τ< • τjs html__ATTRIBUTES τ> javascript__script τ</ τjs τ>';
        '27:122 html__TAG_BODY_ITEM=>τ< • τjs τ> javascript__script τ</ τjs τ>';
        '27:123 html__TAG_BODY_ITEM=>τ< • τjs html__ATTRIBUTES τ> τ</ τjs τ>';
        '27:131 html__TAG_BODY_ITEM=>τ< • τjs τ> τ</ τjs τ>';
        scan( state.lexer, 72, 9 );
        if( state.lexer._type  == 38 ){
            'Assert Consume [  js  ]';
            consume( state );
            'offset 4 peek_level0 [  " " 13 import export >  ]';
            '27:116 html__TAG_BODY_ITEM=>τ< τjs • html__ATTRIBUTES τ> javascript__script τ</ τjs τ>';
            '27:123 html__TAG_BODY_ITEM=>τ< τjs • html__ATTRIBUTES τ> τ</ τjs τ>';
            '27:122 html__TAG_BODY_ITEM=>τ< τjs • τ> javascript__script τ</ τjs τ>';
            '27:131 html__TAG_BODY_ITEM=>τ< τjs • τ> τ</ τjs τ>';
            scan( state.lexer, 254, 9 );
            if( isTokenActive( state.lexer._type, 120 ) ){
                'Asserts [  " " 13 import export  ]';
                'offset 6 peek_level-1 [  19  ]';
                '27:116 html__TAG_BODY_ITEM=>τ< τjs • html__ATTRIBUTES τ> javascript__script τ</ τjs τ>';
                '27:123 html__TAG_BODY_ITEM=>τ< τjs • html__ATTRIBUTES τ> τ</ τjs τ>';
                scan( state.lexer, 121, 9 );
                state.push_fn( branch_5552c3161a53579a, 0 );
                return hc_html__ATTRIBUTES( state, db, 0 )
            } else if( state.lexer._type  == 11 ){
                'Asserts [  >  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 6 peek_level-1 [  >  ]';
                '27:122 html__TAG_BODY_ITEM=>τ< τjs • τ> javascript__script τ</ τjs τ>';
                '27:131 html__TAG_BODY_ITEM=>τ< τjs • τ> τ</ τjs τ>';
                'offset 7 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await </  ]';
                '27:122 html__TAG_BODY_ITEM=>τ< τjs τ> • javascript__script τ</ τjs τ>';
                '27:131 html__TAG_BODY_ITEM=>τ< τjs τ> • τ</ τjs τ>';
                scan( state.lexer, 103, 9 );
                if( isTokenActive( state.lexer._type, 104 ) ){
                    'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    state.push_fn( set_production /*27*/, 27 );
                    '"--LEAF--"';
                    '27:122 html__TAG_BODY_ITEM=>τ< τjs τ> • javascript__script τ</ τjs τ>';
                    state.push_fn( branch_31efc3d71dadfd9b, 27 );
                    return hc_javascript__script( state, db, 0 )
                } else if( state.lexer._type  == 28 ){
                    'Asserts [  </  ]';
                    state.push_fn( set_production /*27*/, 27 );
                    '"--LEAF--"';
                    '27:131 html__TAG_BODY_ITEM=>τ< τjs τ> • τ</ τjs τ>';
                    consume( state );
                    scan( state.lexer, 72, 9 );
                    if( ( state.lexer._type  == 38 ) ){
                        consume( state );
                        scan( state.lexer, 8, 9 );
                        if( ( state.lexer._type  == 11 ) ){
                            consume( state );
                            add_reduce( state, 6, 36 );
                            return 0
                        }
                    };
                    return - 1
                }
            }
        }
    } else {
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  <  ]';
        '27:117 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:119 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
        '27:124 html__TAG_BODY_ITEM=>• τ< τscript τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:125 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
        '27:128 html__TAG_BODY_ITEM=>• τ< τscript τ> javascript__script τ< τ/ τscript τ>';
        '27:129 html__TAG_BODY_ITEM=>• τ< τscript html__ATTRIBUTES τ> τ< τ/ τscript τ>';
        '27:132 html__TAG_BODY_ITEM=>• τ< τscript τ> τ< τ/ τSCRIPT τ>';
        '27:134 html__TAG_BODY_ITEM=>• τ< τscript τ> τ< τ/ τscript τ>';
        'offset 3 peek_level-1 [  script  ]';
        '27:117 html__TAG_BODY_ITEM=>τ< • τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:119 html__TAG_BODY_ITEM=>τ< • τscript html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
        '27:124 html__TAG_BODY_ITEM=>τ< • τscript τ> javascript__script τ< τ/ τSCRIPT τ>';
        '27:125 html__TAG_BODY_ITEM=>τ< • τscript html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
        '27:128 html__TAG_BODY_ITEM=>τ< • τscript τ> javascript__script τ< τ/ τscript τ>';
        '27:129 html__TAG_BODY_ITEM=>τ< • τscript html__ATTRIBUTES τ> τ< τ/ τscript τ>';
        '27:132 html__TAG_BODY_ITEM=>τ< • τscript τ> τ< τ/ τSCRIPT τ>';
        '27:134 html__TAG_BODY_ITEM=>τ< • τscript τ> τ< τ/ τscript τ>';
        scan( state.lexer, 266, 9 );
        if( state.lexer._type  == 39 ){
            'Assert Consume [  script  ]';
            consume( state );
            'offset 4 peek_level0 [  " " 13 import export >  ]';
            '27:117 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
            '27:119 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
            '27:125 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
            '27:129 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> τ< τ/ τscript τ>';
            '27:124 html__TAG_BODY_ITEM=>τ< τscript • τ> javascript__script τ< τ/ τSCRIPT τ>';
            '27:128 html__TAG_BODY_ITEM=>τ< τscript • τ> javascript__script τ< τ/ τscript τ>';
            '27:132 html__TAG_BODY_ITEM=>τ< τscript • τ> τ< τ/ τSCRIPT τ>';
            '27:134 html__TAG_BODY_ITEM=>τ< τscript • τ> τ< τ/ τscript τ>';
            scan( state.lexer, 254, 9 );
            if( isTokenActive( state.lexer._type, 120 ) ){
                'Asserts [  " " 13 import export  ]';
                'offset 6 peek_level-1 [  19  ]';
                '27:117 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> javascript__script τ< τ/ τSCRIPT τ>';
                '27:119 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> javascript__script τ< τ/ τscript τ>';
                '27:125 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> τ< τ/ τSCRIPT τ>';
                '27:129 html__TAG_BODY_ITEM=>τ< τscript • html__ATTRIBUTES τ> τ< τ/ τscript τ>';
                scan( state.lexer, 121, 9 );
                state.push_fn( branch_9bc1b7e9b668a34a, 0 );
                return hc_html__ATTRIBUTES( state, db, 0 )
            } else if( state.lexer._type  == 11 ){
                'Asserts [  >  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 6 peek_level-1 [  >  ]';
                '27:124 html__TAG_BODY_ITEM=>τ< τscript • τ> javascript__script τ< τ/ τSCRIPT τ>';
                '27:128 html__TAG_BODY_ITEM=>τ< τscript • τ> javascript__script τ< τ/ τscript τ>';
                '27:132 html__TAG_BODY_ITEM=>τ< τscript • τ> τ< τ/ τSCRIPT τ>';
                '27:134 html__TAG_BODY_ITEM=>τ< τscript • τ> τ< τ/ τscript τ>';
                'offset 7 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await <  ]';
                '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τSCRIPT τ>';
                '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τscript τ>';
                '27:132 html__TAG_BODY_ITEM=>τ< τscript τ> • τ< τ/ τSCRIPT τ>';
                '27:134 html__TAG_BODY_ITEM=>τ< τscript τ> • τ< τ/ τscript τ>';
                scan( state.lexer, 79, 9 );
                if( isTokenActive( state.lexer._type, 80 ) ){
                    'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    'offset 9 peek_level-1 [  264  ]';
                    '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τSCRIPT τ>';
                    '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τscript τ>';
                    scan( state.lexer, 79, 9 );
                    state.push_fn( branch_b2fd4a2a8060c709, 0 );
                    return hc_javascript__script( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    'offset 7 peek_level1 [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style /  ]';
                    '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τSCRIPT τ>';
                    '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τscript τ>';
                    '27:132 html__TAG_BODY_ITEM=>τ< τscript τ> • τ< τ/ τSCRIPT τ>';
                    '27:134 html__TAG_BODY_ITEM=>τ< τscript τ> • τ< τ/ τscript τ>';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 81, 9 );
                    if( isTokenActive( pk._type, 82 ) ){
                        'Asserts [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
                        'offset 9 peek_level-1 [  264  ]';
                        '27:124 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τSCRIPT τ>';
                        '27:128 html__TAG_BODY_ITEM=>τ< τscript τ> • javascript__script τ< τ/ τscript τ>';
                        scan( state.lexer, 79, 9 );
                        state.push_fn( branch_b2fd4a2a8060c709, 0 );
                        return hc_javascript__script( state, db, 0 )
                    } else {
                        consume( state );
                        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                        'offset 9 peek_level-1 [  <  ]';
                        '27:132 html__TAG_BODY_ITEM=>τ< τscript τ> • τ< τ/ τSCRIPT τ>';
                        '27:134 html__TAG_BODY_ITEM=>τ< τscript τ> • τ< τ/ τscript τ>';
                        'offset 10 peek_level-1 [  /  ]';
                        '27:132 html__TAG_BODY_ITEM=>τ< τscript τ> τ< • τ/ τSCRIPT τ>';
                        '27:134 html__TAG_BODY_ITEM=>τ< τscript τ> τ< • τ/ τscript τ>';
                        scan( state.lexer, 83, 9 );
                        if( state.lexer._type  == 10 ){
                            'Assert Consume [  /  ]';
                            consume( state );
                            'offset 11 peek_level-1 [  SCRIPT script  ]';
                            '27:132 html__TAG_BODY_ITEM=>τ< τscript τ> τ< τ/ • τSCRIPT τ>';
                            '27:134 html__TAG_BODY_ITEM=>τ< τscript τ> τ< τ/ • τscript τ>';
                            scan( state.lexer, 84, 9 );
                            if( state.lexer._type  == 37 ){
                                'Asserts [  SCRIPT  ]';
                                state.push_fn( set_production /*27*/, 27 );
                                '"--LEAF--"';
                                '27:132 html__TAG_BODY_ITEM=>τ< τscript τ> τ< τ/ • τSCRIPT τ>';
                                consume( state );
                                scan( state.lexer, 8, 9 );
                                if( ( state.lexer._type  == 11 ) ){
                                    consume( state );
                                    add_reduce( state, 7, 36 );
                                    return 0
                                };
                                return - 1
                            } else if( state.lexer._type  == 39 ){
                                'Asserts [  script  ]';
                                state.push_fn( set_production /*27*/, 27 );
                                '"--LEAF--"';
                                '27:134 html__TAG_BODY_ITEM=>τ< τscript τ> τ< τ/ • τscript τ>';
                                consume( state );
                                scan( state.lexer, 8, 9 );
                                if( ( state.lexer._type  == 11 ) ){
                                    consume( state );
                                    add_reduce( state, 7, 36 );
                                    return 0
                                };
                                return - 1
                            }
                        }
                    }
                }
            }
        }
    }
} else if( state.lexer._type  == 24 ){
    'Asserts [  <!  ]';
    state.push_fn( set_production /*27*/, 27 );
    '"--LEAF--"';
    '27:114 html__TAG_BODY_ITEM=>• html__DTD';
    state.push_fn( set_production /*0*/, 27 );
    return hc_html__DTD( state, db, 0 )
} else {
    state.push_fn( set_production /*27*/, 27 );
    '"--LEAF--"';
    '27:112 html__TAG_BODY_ITEM=>• html__TEXT_NODE';
    state.push_fn( set_production /*0*/, 27 );
    return hc_html__TEXT_NODE( state, db, 0 )
};
    return - 1
}

function hc_html__TEXT_NODE(state, db, prod){
    scan( state.lexer, 267, 0 );
    'offset 0 peek_level0 [  { {! num id sym sp nl  ]';
    '28:135 html__TEXT_NODE=>• html__TEXT_NODE_DATA';
    '28:136 html__TEXT_NODE=>• WICK_BINDING';
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
    'Asserts [  { {!  ]';
    state.push_fn( set_production /*28*/, 28 );
    '"--LEAF--"';
    '28:136 html__TEXT_NODE=>• WICK_BINDING';
    state.push_fn( set_production /*0*/, 28 );
    return hc_WICK_BINDING( state, db, 0 )
} else {
    state.push_fn( set_production /*28*/, 28 );
    '"--LEAF--"';
    '28:135 html__TEXT_NODE=>• html__TEXT_NODE_DATA';
    state.push_fn( branch_0c91deeca65ee5a0, 28 );
    return hc_html__TEXT_NODE_DATA( state, db, 0 )
};
    return - 1
}

function hc_html__VOID_NAME(state, db, prod){
    scan( state.lexer, 253, 9 );
    'offset 0 peek_level-1 [  input area base br col command embed hr img keygen link meta param source track wbr f  ]';
    '29:137 html__VOID_NAME=>• τinput';
    '29:138 html__VOID_NAME=>• τarea';
    '29:139 html__VOID_NAME=>• τbase';
    '29:140 html__VOID_NAME=>• τbr';
    '29:141 html__VOID_NAME=>• τcol';
    '29:142 html__VOID_NAME=>• τcommand';
    '29:143 html__VOID_NAME=>• τembed';
    '29:144 html__VOID_NAME=>• τhr';
    '29:145 html__VOID_NAME=>• τimg';
    '29:146 html__VOID_NAME=>• τkeygen';
    '29:147 html__VOID_NAME=>• τlink';
    '29:148 html__VOID_NAME=>• τmeta';
    '29:149 html__VOID_NAME=>• τparam';
    '29:150 html__VOID_NAME=>• τsource';
    '29:151 html__VOID_NAME=>• τtrack';
    '29:152 html__VOID_NAME=>• τwbr';
    '29:153 html__VOID_NAME=>• τf';
    if( state.lexer._type  == 40 ){
    'Asserts [  input  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:137 html__VOID_NAME=>• τinput';
    consume( state );
    return 0
} else if( state.lexer._type  == 41 ){
    'Asserts [  area  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:138 html__VOID_NAME=>• τarea';
    consume( state );
    return 0
} else if( state.lexer._type  == 42 ){
    'Asserts [  base  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:139 html__VOID_NAME=>• τbase';
    consume( state );
    return 0
} else if( state.lexer._type  == 43 ){
    'Asserts [  br  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:140 html__VOID_NAME=>• τbr';
    consume( state );
    return 0
} else if( state.lexer._type  == 44 ){
    'Asserts [  col  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:141 html__VOID_NAME=>• τcol';
    consume( state );
    return 0
} else if( state.lexer._type  == 45 ){
    'Asserts [  command  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:142 html__VOID_NAME=>• τcommand';
    consume( state );
    return 0
} else if( state.lexer._type  == 46 ){
    'Asserts [  embed  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:143 html__VOID_NAME=>• τembed';
    consume( state );
    return 0
} else if( state.lexer._type  == 47 ){
    'Asserts [  hr  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:144 html__VOID_NAME=>• τhr';
    consume( state );
    return 0
} else if( state.lexer._type  == 48 ){
    'Asserts [  img  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:145 html__VOID_NAME=>• τimg';
    consume( state );
    return 0
} else if( state.lexer._type  == 49 ){
    'Asserts [  keygen  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:146 html__VOID_NAME=>• τkeygen';
    consume( state );
    return 0
} else if( state.lexer._type  == 50 ){
    'Asserts [  link  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:147 html__VOID_NAME=>• τlink';
    consume( state );
    return 0
} else if( state.lexer._type  == 51 ){
    'Asserts [  meta  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:148 html__VOID_NAME=>• τmeta';
    consume( state );
    return 0
} else if( state.lexer._type  == 52 ){
    'Asserts [  param  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:149 html__VOID_NAME=>• τparam';
    consume( state );
    return 0
} else if( state.lexer._type  == 53 ){
    'Asserts [  source  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:150 html__VOID_NAME=>• τsource';
    consume( state );
    return 0
} else if( state.lexer._type  == 54 ){
    'Asserts [  track  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:151 html__VOID_NAME=>• τtrack';
    consume( state );
    return 0
} else if( state.lexer._type  == 55 ){
    'Asserts [  wbr  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:152 html__VOID_NAME=>• τwbr';
    consume( state );
    return 0
} else if( state.lexer._type  == 56 ){
    'Asserts [  f  ]';
    state.push_fn( set_production /*29*/, 29 );
    '"--LEAF--"';
    '29:153 html__VOID_NAME=>• τf';
    consume( state );
    return 0
};
    return - 1
}

function hc_javascript__javascript(state, db, prod){
    '"--LEAF--"';
    '30:154 javascript__javascript=>• javascript__start';
    state.push_fn( branch_3c13403716c5bcac, 30 );
    return hc_javascript__start( state, db, 0 )
}

function hc_javascript__start(state, db, prod){
    scan( state.lexer, 268, 11 );
    'offset 0 peek_level0 [   import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    '31:155 javascript__start=>• javascript__module';
    '31:156 javascript__start=>• ɛ';
    if( state.lexer._type  == 57 ){
    'Asserts [    ]';
    state.push_fn( set_production /*31*/, 31 );
    '"--LEAF--"';
    '31:156 javascript__start=>• ɛ';
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 0
} else if( isTokenActive( state.lexer._type, 173 ) ){
    'Asserts [  import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( set_production /*31*/, 31 );
    '"--LEAF--"';
    '31:155 javascript__start=>• javascript__module';
    state.push_fn( branch_e06154576db868ed, 31 );
    return hc_javascript__module( state, db, 0 )
};
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 31
}

function hc_javascript__module(state, db, prod){
    '"--LEAF--"';
    '32:157 javascript__module=>• javascript__module_body';
    state.push_fn( set_production /*32*/, 32 );
    return hc_javascript__module_body( state, db, 0 )
}

function hc_javascript__module_body(state, db, prod){
    '"--LEAF--"';
    '33:158 javascript__module_body=>• javascript__module_item';
    state.push_fn( branch_56eb0ca60d23ff70, 33 );
    return hc_javascript__module_item( state, db, 0 )
}

function hc_javascript__module_body_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 33: 
            {
                'offset 1 peek_level0 [  import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await END_OF_PRODUCTION END_OF_FILE  ]';
                '33:159 javascript__module_body=>javascript__module_body • javascript__module_item';
                '32:157 javascript__module=>javascript__module_body •';
                scan( state.lexer, 172, 9 );
                if( isTokenActive( state.lexer._type, 173 ) ){
                    'Asserts [  import export var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    state.push_fn( hc_javascript__module_body_goto /*hc_javascript__module_body_goto( state, db, 33 )*/, 33 );
                    '"--LEAF--"';
                    '33:159 javascript__module_body=>javascript__module_body • javascript__module_item';
                    scan( state.lexer, 174, 11 );
                    if( ( isTokenActive( state.lexer._type, 173 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 33 );
                        return hc_javascript__module_item( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 33 ) ? prod  : - 1
}

function hc_javascript__module_item(state, db, prod){
    scan( state.lexer, 174, 11 );
    'offset 0 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await import export  ]';
    '34:160 javascript__module_item=>• javascript__import_declaration';
    '34:162 javascript__module_item=>• javascript__statement_list_item';
    '34:161 javascript__module_item=>• javascript__export_declaration';
    if( isTokenActive( state.lexer._type, 269 ) ){
    'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
    '"--LEAF--"';
    '34:162 javascript__module_item=>• javascript__statement_list_item';
    state.push_fn( set_production /*0*/, 34 );
    return hc_javascript__statement_list_item( state, db, 0 )
} else if( state.lexer._type  == 13 ){
    'Asserts [  import  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  import  ]';
    '35:163 javascript__import_declaration=>• τimport javascript__import_clause javascript__from_clause javascript__asi';
    '35:164 javascript__import_declaration=>• τimport javascript__module_specifier javascript__asi';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    'offset 3 peek_level0 [  * { 40 " " ( .  ]';
    '35:163 javascript__import_declaration=>τimport • javascript__import_clause javascript__from_clause javascript__asi';
    '35:164 javascript__import_declaration=>τimport • javascript__module_specifier javascript__asi';
    '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>τimport • τ. τmeta';
    scan( state.lexer, 270, 11 );
    if( state.lexer._type  == 62 || state.lexer._type  == 16 || state.lexer._type  == 59 ){
        'Asserts [  * { 40  ]';
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
        '"--LEAF--"';
        '35:163 javascript__import_declaration=>τimport • javascript__import_clause javascript__from_clause javascript__asi';
        state.push_fn( branch_bb0cb59facb2821a, 34 );
        return hc_javascript__import_clause( state, db, 0 )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        'Asserts [  " "  ]';
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
        '"--LEAF--"';
        '35:164 javascript__import_declaration=>τimport • javascript__module_specifier javascript__asi';
        state.push_fn( branch_257bb8351529e8a4, 34 );
        return hc_javascript__module_specifier( state, db, 0 )
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
        '"--LEAF--"';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        consume( state );
        state.push_fn( branch_21ae27b721c01292, 188 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 98 ){
        'Asserts [  .  ]';
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        consume( state );
        scan( state.lexer, 271, 11 );
        if( ( state.lexer._type  == 51 ) ){
            consume( state );
            add_reduce( state, 3, 257 );
            return 0
        };
        return - 1
    }
} else {
    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
    '"--LEAF--"';
    '34:161 javascript__module_item=>• javascript__export_declaration';
    state.push_fn( branch_fad90ab6aaf2a88c, 34 );
    return hc_javascript__export_declaration( state, db, 0 )
};
    return - 1
}

function hc_javascript__module_item_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                'offset 1 peek_level0 [  ? END_OF_PRODUCTION , ; } nl END_OF_FILE : ) ]  ]';
                '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                scan( state.lexer, 175, 11 );
                if( state.lexer._type  == 69 ){
                    'Asserts [  ?  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                    scan( state.lexer, 176, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                'offset 1 peek_level0 [  || END_OF_PRODUCTION ? , ; } nl END_OF_FILE : ) ]  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 177, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || ? ; } nl END_OF_FILE , : ) ]  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 179, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level-1 [  ?? | END_OF_PRODUCTION && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level-1 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ++ -- ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ?  ]';
                '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 209, 9 );
                if( isTokenActive( state.lexer._type, 210 ) ){
                    'Asserts [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                    scan( state.lexer, 211, 11 );
                    if( ( isTokenActive( state.lexer._type, 210 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                    scan( state.lexer, 212, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : of { ) ]  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                'offset 1 peek_level0 [  , ; } nl END_OF_FILE  ]';
                '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                scan( state.lexer, 219, 11 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                    scan( state.lexer, 100, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    'Asserts [  ; } nl END_OF_FILE  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
                    '"--LEAF--"';
                    '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 34 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in { END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in { END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? END_OF_PRODUCTION ? ; } nl END_OF_FILE , : ) ]  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 222, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 34 ) ? prod  : - 1
}

function hc_javascript__import_declaration(state, db, prod){
    scan( state.lexer, 272, 11 );
    'offset 0 peek_level-1 [  import  ]';
    '35:163 javascript__import_declaration=>• τimport javascript__import_clause javascript__from_clause javascript__asi';
    '35:164 javascript__import_declaration=>• τimport javascript__module_specifier javascript__asi';
    if( state.lexer._type  == 13 ){
    'Assert Consume [  import  ]';
    consume( state );
    'offset 1 peek_level0 [  * { 40 " "  ]';
    '35:163 javascript__import_declaration=>τimport • javascript__import_clause javascript__from_clause javascript__asi';
    '35:164 javascript__import_declaration=>τimport • javascript__module_specifier javascript__asi';
    scan( state.lexer, 273, 11 );
    if( state.lexer._type  == 62 || state.lexer._type  == 16 || state.lexer._type  == 59 ){
        'Asserts [  * { 40  ]';
        state.push_fn( set_production /*35*/, 35 );
        '"--LEAF--"';
        '35:163 javascript__import_declaration=>τimport • javascript__import_clause javascript__from_clause javascript__asi';
        state.push_fn( branch_922993291d964a30, 35 );
        return hc_javascript__import_clause( state, db, 0 )
    } else {
        state.push_fn( set_production /*35*/, 35 );
        '"--LEAF--"';
        '35:164 javascript__import_declaration=>τimport • javascript__module_specifier javascript__asi';
        state.push_fn( branch_04913e5fc0e0ed8b, 35 );
        return hc_javascript__module_specifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__import_clause(state, db, prod){
    scan( state.lexer, 274, 11 );
    'offset 0 peek_level0 [  * { 40  ]';
    '36:165 javascript__import_clause=>• javascript__imported_default_binding';
    '36:168 javascript__import_clause=>• javascript__imported_default_binding τ, javascript__name_space_import';
    '36:169 javascript__import_clause=>• javascript__imported_default_binding τ, javascript__named_imports';
    '36:166 javascript__import_clause=>• javascript__name_space_import';
    '36:167 javascript__import_clause=>• javascript__named_imports';
    if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    state.push_fn( set_production /*36*/, 36 );
    '"--LEAF--"';
    '36:166 javascript__import_clause=>• javascript__name_space_import';
    state.push_fn( branch_37f6b15929b1ba63, 36 );
    return hc_javascript__name_space_import( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    state.push_fn( set_production /*36*/, 36 );
    '"--LEAF--"';
    '36:167 javascript__import_clause=>• javascript__named_imports';
    state.push_fn( branch_37f6b15929b1ba63, 36 );
    return hc_javascript__named_imports( state, db, 0 )
} else {
    'offset 2 peek_level-1 [  37  ]';
    '36:165 javascript__import_clause=>• javascript__imported_default_binding';
    '36:168 javascript__import_clause=>• javascript__imported_default_binding τ, javascript__name_space_import';
    '36:169 javascript__import_clause=>• javascript__imported_default_binding τ, javascript__named_imports';
    scan( state.lexer, 275, 11 );
    state.push_fn( branch_36a7234abb500392, 0 );
    return hc_javascript__imported_default_binding( state, db, 0 )
};
    return - 1
}

function hc_javascript__imported_default_binding(state, db, prod){
    '"--LEAF--"';
    '37:170 javascript__imported_default_binding=>• javascript__imported_binding';
    state.push_fn( branch_e8ee1ba7c85eedaa, 37 );
    return hc_javascript__imported_binding( state, db, 0 )
}

function hc_javascript__imported_binding(state, db, prod){
    '"--LEAF--"';
    '38:171 javascript__imported_binding=>• javascript__identifier';
    state.push_fn( branch_d554d2768b30da15, 38 );
    return hc_javascript__identifier( state, db, 0 )
}

function hc_javascript__identifier(state, db, prod){
    scan( state.lexer, 275, 11 );
    'offset 0 peek_level-1 [  40  ]';
    '39:172 javascript__identifier=>• tk:javascript__composite_identifier';
    if( state.lexer._type  == 59 ){
    'Assert Consume [  40  ]';
    consume( state );
    '"--LEAF--"';
    '39:172 javascript__identifier=>tk:javascript__composite_identifier •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 48 );
    return 39
};
    return - 1
}

function hc_javascript__composite_identifier(state, db, prod){
    scan( state.lexer, 276, 11 );
    'offset 0 peek_level-1 [  _ $ id  ]';
    '40:177 javascript__composite_identifier=>• τ_';
    '40:178 javascript__composite_identifier=>• τ$';
    '40:179 javascript__composite_identifier=>• θid';
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:177 javascript__composite_identifier=>• τ_';
    consume( state );
    return 0
} else if( state.lexer._type  == 61 ){
    'Asserts [  $  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:178 javascript__composite_identifier=>• τ$';
    consume( state );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:179 javascript__composite_identifier=>• θid';
    consume( state );
    return 0
};
    return - 1
}

function hc_javascript__composite_identifier_goto(state, db, prod){
    'offset 1 peek_level-1 [  _ $ id num  ]';
    '40:173 javascript__composite_identifier=>javascript__composite_identifier • θid';
    '40:174 javascript__composite_identifier=>javascript__composite_identifier • τ_';
    '40:175 javascript__composite_identifier=>javascript__composite_identifier • τ$';
    '40:176 javascript__composite_identifier=>javascript__composite_identifier • θnum';
    scan( state.lexer, 277, 278 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:174 javascript__composite_identifier=>javascript__composite_identifier • τ_';
    scan( state.lexer, 279, 278 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 61 ){
    'Asserts [  $  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:175 javascript__composite_identifier=>javascript__composite_identifier • τ$';
    scan( state.lexer, 280, 278 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:173 javascript__composite_identifier=>javascript__composite_identifier • θid';
    scan( state.lexer, 281, 278 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    '"--LEAF--"';
    '40:176 javascript__composite_identifier=>javascript__composite_identifier • θnum';
    scan( state.lexer, 282, 278 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
};
    return ( prod  == 40 ) ? prod  : - 1
}

function hc_javascript__name_space_import(state, db, prod){
    scan( state.lexer, 205, 11 );
    'offset 0 peek_level-1 [  *  ]';
    '41:180 javascript__name_space_import=>• τ* τas javascript__imported_binding';
    if( state.lexer._type  == 62 ){
    'Assert Consume [  *  ]';
    consume( state );
    '"--LEAF--"';
    '41:180 javascript__name_space_import=>τ* • τas javascript__imported_binding';
    scan( state.lexer, 283, 11 );
    if( ( state.lexer._type  == 63 ) ){
        consume( state );
        state.push_fn( branch_a8064f294e1d80de, 41 );
        return hc_javascript__imported_binding( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__named_imports(state, db, prod){
    scan( state.lexer, 13, 11 );
    'offset 0 peek_level-1 [  {  ]';
    '42:181 javascript__named_imports=>• τ{ javascript__named_imports_list_331 τ, τ}';
    '42:182 javascript__named_imports=>• τ{ τ, τ}';
    '42:183 javascript__named_imports=>• τ{ javascript__named_imports_list_331 τ}';
    '42:184 javascript__named_imports=>• τ{ τ}';
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 1 peek_level0 [  , } 40  ]';
    '42:181 javascript__named_imports=>τ{ • javascript__named_imports_list_331 τ, τ}';
    '42:183 javascript__named_imports=>τ{ • javascript__named_imports_list_331 τ}';
    '42:182 javascript__named_imports=>τ{ • τ, τ}';
    '42:184 javascript__named_imports=>τ{ • τ}';
    scan( state.lexer, 284, 11 );
    if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        state.push_fn( set_production /*42*/, 42 );
        '"--LEAF--"';
        '42:182 javascript__named_imports=>τ{ • τ, τ}';
        consume( state );
        scan( state.lexer, 14, 11 );
        if( ( state.lexer._type  == 18 ) ){
            consume( state );
            add_reduce( state, 3, 51 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*42*/, 42 );
        '"--LEAF--"';
        '42:184 javascript__named_imports=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 51 );
        return 0
    } else {
        'offset 3 peek_level-1 [  271  ]';
        '42:181 javascript__named_imports=>τ{ • javascript__named_imports_list_331 τ, τ}';
        '42:183 javascript__named_imports=>τ{ • javascript__named_imports_list_331 τ}';
        scan( state.lexer, 275, 11 );
        state.push_fn( branch_d0cc2e3ffb7fb26a, 0 );
        return hc_javascript__named_imports_list_331( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__import_specifier(state, db, prod){
    '"--LEAF--"';
    '39:172 javascript__identifier=>• tk:javascript__composite_identifier';
    state.push_fn( hc_javascript__import_specifier_goto /*hc_javascript__import_specifier_goto( state, db, 39 )*/, 39 );
    return hc_javascript__identifier( state, db, prod )
}

function hc_javascript__import_specifier_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 39: 
            {
                'offset 1 peek_level0 [  as , } from END_OF_PRODUCTION  ]';
                '38:171 javascript__imported_binding=>javascript__identifier •';
                '43:186 javascript__import_specifier=>javascript__identifier • τas javascript__imported_binding';
                scan( state.lexer, 285, 9 );
                if( state.lexer._type  == 63 ){
                    'Asserts [  as  ]';
                    state.push_fn( hc_javascript__import_specifier_goto /*hc_javascript__import_specifier_goto( state, db, 43 )*/, 43 );
                    '"--LEAF--"';
                    '43:186 javascript__import_specifier=>javascript__identifier • τas javascript__imported_binding';
                    scan( state.lexer, 283, 11 );
                    consume( state );
                    state.push_fn( branch_0912092e7d3508ca, 43 );
                    return hc_javascript__imported_binding( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '38:171 javascript__imported_binding=>javascript__identifier •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 47 );
                    add_reduce( state, 1, 52 );
                    prod = 43;
                    continue
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 43 ) ? prod  : - 1
}

function hc_javascript__from_clause(state, db, prod){
    scan( state.lexer, 286, 11 );
    'offset 0 peek_level-1 [  from  ]';
    '44:187 javascript__from_clause=>• τfrom javascript__module_specifier';
    if( state.lexer._type  == 64 ){
    'Assert Consume [  from  ]';
    consume( state );
    '"--LEAF--"';
    '44:187 javascript__from_clause=>τfrom • javascript__module_specifier';
    scan( state.lexer, 287, 11 );
    if( ( state.lexer._type  == 33 || state.lexer._type  == 32 ) ){
        state.push_fn( branch_9742cc9ec480e36c, 44 );
        return hc_javascript__module_specifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__module_specifier(state, db, prod){
    '"--LEAF--"';
    '45:188 javascript__module_specifier=>• javascript__string_literal';
    state.push_fn( set_production /*45*/, 45 );
    return hc_javascript__string_literal( state, db, 0 )
}

function hc_javascript__string_literal(state, db, prod){
    scan( state.lexer, 287, 11 );
    'offset 0 peek_level0 [  " "  ]';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:191 javascript__string_literal=>• τ" τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '46:192 javascript__string_literal=>• τ" τ"';
    if( state.lexer._type  == 33 ){
    'Asserts [  "  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  "  ]';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:191 javascript__string_literal=>• τ" τ"';
    'offset 3 peek_level0 [  " f:sf:s" nl sp sym num id f:s  ]';
    '46:189 javascript__string_literal=>τ" • javascript__string_literal_list_342 τ"';
    '46:191 javascript__string_literal=>τ" • τ"';
    scan( state.lexer, 288, 0 );
    if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( set_production /*46*/, 46 );
        '"--LEAF--"';
        '46:191 javascript__string_literal=>τ" • τ"';
        consume( state );
        add_reduce( state, 2, 56 );
        return 0
    } else {
        state.push_fn( set_production /*46*/, 46 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>τ" • javascript__string_literal_list_342 τ"';
        state.push_fn( branch_9cf639610c3537f3, 46 );
        return hc_javascript__string_literal_list_342( state, db, 0 )
    }
} else if( state.lexer._type  == 32 ){
    'Asserts [  "  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  "  ]';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '46:192 javascript__string_literal=>• τ" τ"';
    'offset 3 peek_level0 [  " f:sf:s" nl sp sym num id f:s  ]';
    '46:190 javascript__string_literal=>τ" • javascript__string_literal_list_345 τ"';
    '46:192 javascript__string_literal=>τ" • τ"';
    scan( state.lexer, 289, 0 );
    if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( set_production /*46*/, 46 );
        '"--LEAF--"';
        '46:192 javascript__string_literal=>τ" • τ"';
        consume( state );
        add_reduce( state, 2, 56 );
        return 0
    } else {
        state.push_fn( set_production /*46*/, 46 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>τ" • javascript__string_literal_list_345 τ"';
        state.push_fn( branch_c53f49c2a43a87e6, 46 );
        return hc_javascript__string_literal_list_345( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__escaped_sequence(state, db, prod){
    scan( state.lexer, 290, 11 );
    'offset 0 peek_level-1 [  f:s  ]';
    '47:193 javascript__escaped_sequence=>• τf:s θid';
    '47:194 javascript__escaped_sequence=>• τf:s θnl';
    '47:195 javascript__escaped_sequence=>• τf:s θsp';
    '47:196 javascript__escaped_sequence=>• τf:s θsym';
    '47:197 javascript__escaped_sequence=>• τf:s θnum';
    if( state.lexer._type  == 65 ){
    'Assert Consume [  f:s  ]';
    consume( state );
    'offset 1 peek_level-1 [  id nl sp sym num  ]';
    '47:193 javascript__escaped_sequence=>τf:s • θid';
    '47:194 javascript__escaped_sequence=>τf:s • θnl';
    '47:195 javascript__escaped_sequence=>τf:s • θsp';
    '47:196 javascript__escaped_sequence=>τf:s • θsym';
    '47:197 javascript__escaped_sequence=>τf:s • θnum';
    scan( state.lexer, 291, 278 );
    if( state.lexer._type  == 3 ){
        'Asserts [  id  ]';
        state.push_fn( set_production /*47*/, 47 );
        '"--LEAF--"';
        '47:193 javascript__escaped_sequence=>τf:s • θid';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 7 ){
        'Asserts [  nl  ]';
        state.push_fn( set_production /*47*/, 47 );
        '"--LEAF--"';
        '47:194 javascript__escaped_sequence=>τf:s • θnl';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 8 ){
        'Asserts [  sp  ]';
        state.push_fn( set_production /*47*/, 47 );
        '"--LEAF--"';
        '47:195 javascript__escaped_sequence=>τf:s • θsp';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 2 ){
        'Asserts [  sym  ]';
        state.push_fn( set_production /*47*/, 47 );
        '"--LEAF--"';
        '47:196 javascript__escaped_sequence=>τf:s • θsym';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 5 ){
        'Asserts [  num  ]';
        state.push_fn( set_production /*47*/, 47 );
        '"--LEAF--"';
        '47:197 javascript__escaped_sequence=>τf:s • θnum';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    }
};
    return - 1
}

function hc_javascript__asi(state, db, prod){
    scan( state.lexer, 220, 11 );
    'offset 0 peek_level-1 [  ; } nl END_OF_FILE  ]';
    '48:198 javascript__asi=>• τ;';
    '48:199 javascript__asi=>• τ}-ns';
    '48:200 javascript__asi=>• lb[θnl]';
    '48:201 javascript__asi=>• END_OF_FILE';
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( set_production /*48*/, 48 );
    '"--LEAF--"';
    '48:198 javascript__asi=>• τ;';
    consume( state );
    return 0
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    state.push_fn( set_production /*48*/, 48 );
    '"--LEAF--"';
    '48:199 javascript__asi=>• τ}-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 0
} else if( state.lexer._type  == 66 ){
    'Asserts [  nl  ]';
    state.push_fn( set_production /*48*/, 48 );
    '"--LEAF--"';
    '48:200 javascript__asi=>• lb[θnl]';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 0
} else if( state.lexer._type  == 1 ){
    'Asserts [  END_OF_FILE  ]';
    state.push_fn( set_production /*48*/, 48 );
    '"--LEAF--"';
    '48:201 javascript__asi=>• END_OF_FILE';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 0
};
    return - 1
}

function hc_javascript__export_declaration(state, db, prod){
    scan( state.lexer, 292, 11 );
    'offset 0 peek_level-1 [  export  ]';
    '49:202 javascript__export_declaration=>• τexport τ* javascript__from_clause javascript__asi';
    '49:203 javascript__export_declaration=>• τexport javascript__export_clause javascript__from_clause javascript__asi';
    '49:204 javascript__export_declaration=>• τexport javascript__variable_statement';
    '49:205 javascript__export_declaration=>• τexport javascript__declaration';
    '49:206 javascript__export_declaration=>• τexport τdefault javascript__hoistable_declaration';
    '49:207 javascript__export_declaration=>• τexport τdefault javascript__class_declaration';
    '49:208 javascript__export_declaration=>• τexport τdefault javascript__assignment_expression javascript__asi';
    '49:209 javascript__export_declaration=>• τexport javascript__export_clause javascript__asi';
    if( state.lexer._type  == 15 ){
    'Assert Consume [  export  ]';
    consume( state );
    'offset 1 peek_level-1 [  class async function let const var default * {  ]';
    '49:202 javascript__export_declaration=>τexport • τ* javascript__from_clause javascript__asi';
    '49:203 javascript__export_declaration=>τexport • javascript__export_clause javascript__from_clause javascript__asi';
    '49:209 javascript__export_declaration=>τexport • javascript__export_clause javascript__asi';
    '49:204 javascript__export_declaration=>τexport • javascript__variable_statement';
    '49:205 javascript__export_declaration=>τexport • javascript__declaration';
    '49:206 javascript__export_declaration=>τexport • τdefault javascript__hoistable_declaration';
    '49:207 javascript__export_declaration=>τexport • τdefault javascript__class_declaration';
    '49:208 javascript__export_declaration=>τexport • τdefault javascript__assignment_expression javascript__asi';
    scan( state.lexer, 293, 11 );
    if( isTokenActive( state.lexer._type, 294 ) ){
        'Asserts [  class async function let const  ]';
        state.push_fn( set_production /*49*/, 49 );
        '"--LEAF--"';
        '49:205 javascript__export_declaration=>τexport • javascript__declaration';
        state.push_fn( branch_c672daf1948e48fe, 49 );
        return hc_javascript__declaration( state, db, 0 )
    } else if( state.lexer._type  == 68 ){
        'Asserts [  var  ]';
        state.push_fn( set_production /*49*/, 49 );
        '"--LEAF--"';
        '49:204 javascript__export_declaration=>τexport • javascript__variable_statement';
        state.push_fn( branch_c672daf1948e48fe, 49 );
        return hc_javascript__variable_statement( state, db, 0 )
    } else if( state.lexer._type  == 67 ){
        'Asserts [  default  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  default  ]';
        '49:206 javascript__export_declaration=>τexport • τdefault javascript__hoistable_declaration';
        '49:207 javascript__export_declaration=>τexport • τdefault javascript__class_declaration';
        '49:208 javascript__export_declaration=>τexport • τdefault javascript__assignment_expression javascript__asi';
        'offset 4 peek_level0 [  yield 40 ( new super import this [ { / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await async function class  ]';
        '49:206 javascript__export_declaration=>τexport τdefault • javascript__hoistable_declaration';
        '49:208 javascript__export_declaration=>τexport τdefault • javascript__assignment_expression javascript__asi';
        '49:207 javascript__export_declaration=>τexport τdefault • javascript__class_declaration';
        scan( state.lexer, 230, 9 );
        if( isTokenActive( state.lexer._type, 295 ) ){
            'Asserts [  yield 40 ( new super import this [ { / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*49*/, 49 );
            '"--LEAF--"';
            '49:208 javascript__export_declaration=>τexport τdefault • javascript__assignment_expression javascript__asi';
            state.push_fn( branch_21507767bc1ef64d, 49 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 116 ){
            'Asserts [  async  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_d7fe2aec14bab81f, 49 );
            state.push_fn( branch_2e5bb77c85950ac7, 49 );
            return 0
        } else if( state.lexer._type  == 117 ){
            'Asserts [  function  ]';
            state.push_fn( set_production /*49*/, 49 );
            '"--LEAF--"';
            '49:206 javascript__export_declaration=>τexport τdefault • javascript__hoistable_declaration';
            state.push_fn( branch_f9728395ba7dac96, 49 );
            return hc_javascript__hoistable_declaration( state, db, 0 )
        } else {
            state.push_fn( set_production /*49*/, 49 );
            '"--LEAF--"';
            '49:207 javascript__export_declaration=>τexport τdefault • javascript__class_declaration';
            state.push_fn( branch_f9728395ba7dac96, 49 );
            return hc_javascript__class_declaration( state, db, 0 )
        }
    } else if( state.lexer._type  == 62 ){
        'Asserts [  *  ]';
        state.push_fn( set_production /*49*/, 49 );
        '"--LEAF--"';
        '49:202 javascript__export_declaration=>τexport • τ* javascript__from_clause javascript__asi';
        consume( state );
        state.push_fn( branch_aa8ebb943fbd1a48, 49 );
        return hc_javascript__from_clause( state, db, 0 )
    } else {
        'offset 3 peek_level-1 [  50  ]';
        '49:203 javascript__export_declaration=>τexport • javascript__export_clause javascript__from_clause javascript__asi';
        '49:209 javascript__export_declaration=>τexport • javascript__export_clause javascript__asi';
        scan( state.lexer, 13, 11 );
        state.push_fn( branch_1c2a047022ca38f2, 0 );
        return hc_javascript__export_clause( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__export_clause(state, db, prod){
    scan( state.lexer, 13, 11 );
    'offset 0 peek_level-1 [  {  ]';
    '50:210 javascript__export_clause=>• τ{ javascript__export_clause_list_399 τ, τ}';
    '50:211 javascript__export_clause=>• τ{ τ, τ}';
    '50:212 javascript__export_clause=>• τ{ javascript__export_clause_list_399 τ}';
    '50:213 javascript__export_clause=>• τ{ τ}';
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 1 peek_level0 [  , } 40  ]';
    '50:210 javascript__export_clause=>τ{ • javascript__export_clause_list_399 τ, τ}';
    '50:212 javascript__export_clause=>τ{ • javascript__export_clause_list_399 τ}';
    '50:211 javascript__export_clause=>τ{ • τ, τ}';
    '50:213 javascript__export_clause=>τ{ • τ}';
    scan( state.lexer, 284, 11 );
    if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        state.push_fn( set_production /*50*/, 50 );
        '"--LEAF--"';
        '50:211 javascript__export_clause=>τ{ • τ, τ}';
        consume( state );
        scan( state.lexer, 14, 11 );
        if( ( state.lexer._type  == 18 ) ){
            consume( state );
            add_reduce( state, 3, 63 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*50*/, 50 );
        '"--LEAF--"';
        '50:213 javascript__export_clause=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 63 );
        return 0
    } else {
        'offset 3 peek_level-1 [  274  ]';
        '50:210 javascript__export_clause=>τ{ • javascript__export_clause_list_399 τ, τ}';
        '50:212 javascript__export_clause=>τ{ • javascript__export_clause_list_399 τ}';
        scan( state.lexer, 275, 11 );
        state.push_fn( branch_08342825069b0160, 0 );
        return hc_javascript__export_clause_list_399( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__export_specifier(state, db, prod){
    'offset 0 peek_level-1 [  39  ]';
    '51:214 javascript__export_specifier=>• javascript__identifier';
    '51:215 javascript__export_specifier=>• javascript__identifier τas javascript__identifier';
    state.push_fn( branch_9a118edb7556e134, 0 );
    return hc_javascript__identifier( state, db, 0 )
}

function hc_javascript__variable_statement(state, db, prod){
    scan( state.lexer, 69, 11 );
    'offset 0 peek_level-1 [  var  ]';
    '52:216 javascript__variable_statement=>• τvar javascript__variable_declaration_list javascript__asi';
    if( state.lexer._type  == 68 ){
    'Assert Consume [  var  ]';
    consume( state );
    '"--LEAF--"';
    '52:216 javascript__variable_statement=>τvar • javascript__variable_declaration_list javascript__asi';
    scan( state.lexer, 142, 11 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_96d8bd77c73a6285, 52 );
        return hc_javascript__variable_declaration_list( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__variable_declaration_list(state, db, prod){
    '"--LEAF--"';
    '53:217 javascript__variable_declaration_list=>• javascript__variable_declaration';
    state.push_fn( branch_5ca1d17079e9fcd0, 53 );
    return hc_javascript__variable_declaration( state, db, 0 )
}

function hc_javascript__variable_declaration_list_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 53: 
            {
                'offset 1 peek_level-1 [  , ; } nl END_OF_FILE END_OF_PRODUCTION  ]';
                '53:218 javascript__variable_declaration_list=>javascript__variable_declaration_list • τ, javascript__variable_declaration';
                '52:216 javascript__variable_statement=>τvar javascript__variable_declaration_list • javascript__asi';
                '284:997 javascript__iteration_statement_group_869_1_=>τvar javascript__variable_declaration_list •';
                scan( state.lexer, 296, 9 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_javascript__variable_declaration_list_goto /*hc_javascript__variable_declaration_list_goto( state, db, 53 )*/, 53 );
                    '"--LEAF--"';
                    '53:218 javascript__variable_declaration_list=>javascript__variable_declaration_list • τ, javascript__variable_declaration';
                    scan( state.lexer, 100, 11 );
                    consume( state );
                    state.push_fn( branch_a8b069c903e9e56e, 53 );
                    return hc_javascript__variable_declaration( state, db, 0 )
                } else if( state.lexer._type  == 17 ){
                    'Asserts [  ;  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 53
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 53 ) ? prod  : - 1
}

function hc_javascript__variable_declaration(state, db, prod){
    scan( state.lexer, 142, 11 );
    'offset 0 peek_level0 [  { [ 40  ]';
    '54:219 javascript__variable_declaration=>• javascript__binding_identifier javascript__initializer';
    '54:220 javascript__variable_declaration=>• javascript__binding_identifier';
    '54:221 javascript__variable_declaration=>• javascript__binding_pattern javascript__initializer';
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  { [  ]';
    state.push_fn( set_production /*54*/, 54 );
    '"--LEAF--"';
    '54:221 javascript__variable_declaration=>• javascript__binding_pattern javascript__initializer';
    state.push_fn( branch_84ce0da9cbca5ccc, 54 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    'offset 2 peek_level-1 [  55  ]';
    '54:219 javascript__variable_declaration=>• javascript__binding_identifier javascript__initializer';
    '54:220 javascript__variable_declaration=>• javascript__binding_identifier';
    scan( state.lexer, 275, 11 );
    state.push_fn( branch_1ce9612e5f965a42, 0 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__binding_identifier(state, db, prod){
    scan( state.lexer, 275, 11 );
    'offset 0 peek_level-1 [  40  ]';
    '55:222 javascript__binding_identifier=>• tk:javascript__composite_identifier';
    if( state.lexer._type  == 59 ){
    'Assert Consume [  40  ]';
    consume( state );
    '"--LEAF--"';
    '55:222 javascript__binding_identifier=>tk:javascript__composite_identifier •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 67 );
    return 55
};
    return - 1
}

function hc_javascript__initializer(state, db, prod){
    scan( state.lexer, 212, 11 );
    'offset 0 peek_level-1 [  =  ]';
    '56:223 javascript__initializer=>• τ= javascript__assignment_expression';
    if( state.lexer._type  == 14 ){
    'Assert Consume [  =  ]';
    consume( state );
    '"--LEAF--"';
    '56:223 javascript__initializer=>τ= • javascript__assignment_expression';
    scan( state.lexer, 21, 11 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
        state.push_fn( branch_db3303a9e9717b61, 56 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__assignment_expression(state, db, prod){
    scan( state.lexer, 21, 11 );
    'offset 0 peek_level0 [  new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await 40 ( async yield  ]';
    '57:224 javascript__assignment_expression=>• javascript__conditional_expression';
    '57:227 javascript__assignment_expression=>• javascript__left_hand_side_expression τ= javascript__assignment_expression';
    '57:228 javascript__assignment_expression=>• javascript__left_hand_side_expression javascript__assignment_operator javascript__assignment_expression';
    '57:226 javascript__assignment_expression=>• javascript__arrow_function';
    '57:225 javascript__assignment_expression=>• javascript__yield_expression';
    if( isTokenActive( state.lexer._type, 297 ) ){
    'Asserts [  new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level0 [  new super import this class true false null function [ { / < " " ` 0X 0x 0O 0o 0B 0b num  ]';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    '184:624 javascript__new_target=>• τnew τ. τtarget';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    '76:294 javascript__primary_expression=>• τthis';
    '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
    '93:353 javascript__object_literal=>• τ{ τ}';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '79:310 javascript__boolean_literal=>• τtrue';
    '79:311 javascript__boolean_literal=>• τfalse';
    '80:312 javascript__null_literal=>• τnull';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    scan( state.lexer, 298, 9 );
    if( state.lexer._type  == 99 ){
        'Asserts [  new  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  new  ]';
        '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>• τnew javascript__member_expression';
        '184:624 javascript__new_target=>• τnew τ. τtarget';
        'offset 5 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num .  ]';
        '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>τnew • javascript__member_expression';
        '184:624 javascript__new_target=>τnew • τ. τtarget';
        scan( state.lexer, 299, 9 );
        if( isTokenActive( state.lexer._type, 300 ) ){
            'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
            'offset 7 peek_level-1 [  75  ]';
            '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
            '75:293 javascript__member_expression=>τnew • javascript__member_expression';
            scan( state.lexer, 146, 11 );
            state.push_fn( branch_63c76a8bd141704d, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '184:624 javascript__new_target=>τnew • τ. τtarget';
            consume( state );
            scan( state.lexer, 301, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 145 ){
        'Asserts [  super  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  super  ]';
        '189:641 javascript__super_call=>• τsuper javascript__arguments';
        '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
        '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
        'offset 5 peek_level0 [  ( . [  ]';
        '189:641 javascript__super_call=>τsuper • javascript__arguments';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        scan( state.lexer, 302, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '189:641 javascript__super_call=>τsuper • javascript__arguments';
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            'Asserts [  [  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 13 ){
        'Asserts [  import  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  import  ]';
        '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
        '185:625 javascript__import_meta=>• τimport τ. τmeta';
        'offset 5 peek_level-1 [  ( .  ]';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        scan( state.lexer, 303, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '185:625 javascript__import_meta=>τimport • τ. τmeta';
            consume( state );
            scan( state.lexer, 271, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        'Asserts [  this  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '76:294 javascript__primary_expression=>• τthis';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 138 ){
        'Asserts [  class  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 101 ){
        'Asserts [  true  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:310 javascript__boolean_literal=>• τtrue';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 102 ){
        'Asserts [  false  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:311 javascript__boolean_literal=>• τfalse';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        'Asserts [  null  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '80:312 javascript__null_literal=>• τnull';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 117 ){
        'Asserts [  function  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '93:353 javascript__object_literal=>• τ{ τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        'Asserts [  `  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  `  ]';
        '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
        'offset 5 peek_level-1 [  171  ]';
        '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
        scan( state.lexer, 304, 11 );
        if( state.lexer._type  == 143 ){
            'Assert Consume [  171  ]';
            consume( state );
            'offset 6 peek_level-1 [  ` ${  ]';
            '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
            '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
            scan( state.lexer, 128, 11 );
            if( state.lexer._type  == 142 ){
                'Asserts [  `  ]';
                state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                '"--LEAF--"';
                '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                'Asserts [  ${  ]';
                state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 175 )*/, 175 );
                '"--LEAF--"';
                '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 105 ){
        'Asserts [  0X  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 106 ){
        'Asserts [  0x  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 ){
        'Asserts [  0O  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 108 ){
        'Asserts [  0o  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 ){
        'Asserts [  0B  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 110 ){
        'Asserts [  0b  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else {
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 84 )*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
} else if( isTokenActive( state.lexer._type, 305 ) ){
    'Asserts [  delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
    '"--LEAF--"';
    '57:224 javascript__assignment_expression=>• javascript__conditional_expression';
    state.push_fn( set_production /*0*/, 57 );
    return hc_javascript__conditional_expression( state, db, 0 )
} else if( state.lexer._type  == 59 || state.lexer._type  == 36 || state.lexer._type  == 116 ){
    'Asserts [  40 ( async  ]';
    'offset 2 peek_level-1 [  async ( 40  ]';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
    '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( τ)';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, τ)';
    '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
    '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
    scan( state.lexer, 306, 11 );
    if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  async  ]';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
        '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
        'offset 5 peek_level0 [  function 40 (  ]';
        '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
        '197:661 javascript__arrow_function=>τasync • javascript__arrow_parameters τ=> javascript__concise_body';
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 117 ){
            'Asserts [  function  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 7 peek_level-1 [  function  ]';
            '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
            'offset 8 peek_level0 [  * ( 40  ]';
            '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
            '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 308, 11 );
            if( state.lexer._type  == 62 ){
                'Asserts [  *  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  *  ]';
                '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
                'offset 11 peek_level0 [  ( 40  ]';
                '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 309, 11 );
                if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 13 peek_level-1 [  (  ]';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                    'offset 14 peek_level0 [  ... 40 { [ )  ]';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                    scan( state.lexer, 12, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        'Asserts [  ... 40 { [  ]';
                        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                        '"--LEAF--"';
                        '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                        state.push_fn( branch_acd9ffcdb9473c40, 75 );
                        return hc_javascript__formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        'Asserts [  )  ]';
                        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                        '"--LEAF--"';
                        '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                        consume( state );
                        scan( state.lexer, 13, 11 );
                        if( ( state.lexer._type  == 16 ) ){
                            consume( state );
                            state.push_fn( branch_49d53a19b4f867c5, 75 );
                            return hc_javascript__function_body( state, db, 0 )
                        };
                        return - 1
                    }
                } else {
                    'offset 13 peek_level-1 [  55  ]';
                    '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                    scan( state.lexer, 275, 11 );
                    state.push_fn( branch_f9cbd5c4ee66a8a4, 0 );
                    return hc_javascript__binding_identifier( state, db, 0 )
                }
            } else if( state.lexer._type  == 36 ){
                'Asserts [  (  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  (  ]';
                '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
                'offset 11 peek_level0 [  ... 40 { [ )  ]';
                '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 12, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    'Asserts [  ... 40 { [  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    state.push_fn( branch_0f32ea116410b4fe, 75 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    'Asserts [  )  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                    consume( state );
                    scan( state.lexer, 13, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_7d28866a17c37517, 75 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                'offset 10 peek_level-1 [  55  ]';
                '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 275, 11 );
                state.push_fn( branch_8706797ac6db287f, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else {
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
            '"--LEAF--"';
            '197:661 javascript__arrow_function=>τasync • javascript__arrow_parameters τ=> javascript__concise_body';
            state.push_fn( branch_a4087d8b8c9a386b, 57 );
            return hc_javascript__arrow_parameters( state, db, 0 )
        }
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  (  ]';
        '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
        '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( τ)';
        '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, τ)';
        '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
        '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
        '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
        '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
        'offset 5 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ) ...  ]';
        '180:618 javascript__parenthesized=>τ( • javascript__expression τ)';
        '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, τ)';
        '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
        '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
        '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • τ)';
        '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
        '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
        scan( state.lexer, 310, 9 );
        if( isTokenActive( state.lexer._type, 20 ) ){
            'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            'offset 7 peek_level-1 [  126  ]';
            '180:618 javascript__parenthesized=>τ( • javascript__expression τ)';
            '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, τ)';
            '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
            '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
            scan( state.lexer, 21, 11 );
            state.push_fn( branch_a3cd21a857d06f28, 0 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 198 )*/, 198 );
            '"--LEAF--"';
            '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • τ)';
            consume( state );
            add_reduce( state, 2, 276 );
            add_reduce( state, 1, 275 );
            return 0
        } else {
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_269c673a98bed17c, 198 );
            state.push_fn( branch_736d9e7f50372e7c, 198 );
            return 0
        }
    } else if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 77 )*/, 77 );
        '"--LEAF--"';
        '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
        state.push_fn( set_production /*0*/, 77 );
        return hc_javascript__identifier_reference( state, db, prod )
    }
} else {
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
    '"--LEAF--"';
    '57:225 javascript__assignment_expression=>• javascript__yield_expression';
    state.push_fn( set_production /*0*/, 57 );
    return hc_javascript__yield_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__assignment_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                'offset 1 peek_level0 [  ? END_OF_PRODUCTION END_OF_FILE : ; ) } ] ,  ]';
                '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                scan( state.lexer, 311, 11 );
                if( state.lexer._type  == 69 ){
                    'Asserts [  ?  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
                    '"--LEAF--"';
                    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                    scan( state.lexer, 176, 11 );
                    consume( state );
                    state.push_fn( branch_746fc3b29eef739d, 57 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 57;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                'offset 1 peek_level0 [  || END_OF_PRODUCTION ? END_OF_FILE : ; ) } ] ,  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 312, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || ? END_OF_FILE : ; ) } ] ,  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 313, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level-1 [  ?? | END_OF_PRODUCTION && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION !== === != == & ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE nl : ; ) } ] ,  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level0 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- = ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ?  ]';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                scan( state.lexer, 209, 9 );
                if( isTokenActive( state.lexer._type, 210 ) ){
                    'Asserts [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
                    '"--LEAF--"';
                    '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                    scan( state.lexer, 211, 11 );
                    if( ( isTokenActive( state.lexer._type, 210 ) ) ){
                        state.push_fn( branch_e7b8aedf7573fc09, 57 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
                    '"--LEAF--"';
                    '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                    scan( state.lexer, 212, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 57 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION ++ -- = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? END_OF_FILE : of ; { ) } ] ,  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 77: 
            {
                'offset 1 peek_level-1 [  => ( ` . [ ?. *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE  ]';
                '198:663 javascript__arrow_parameters=>javascript__identifier_reference •';
                '76:295 javascript__primary_expression=>javascript__identifier_reference •';
                scan( state.lexer, 315, 11 );
                if( state.lexer._type  == 150 ){
                    'Assert End [  =>  ]';
                    '"--LEAF--"';
                    '198:663 javascript__arrow_parameters=>javascript__identifier_reference •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 274 );
                    prod = 198;
                    continue
                } else {
                    '"--LEAF--"';
                    '76:295 javascript__primary_expression=>javascript__identifier_reference •';
                    scan( state.lexer, 11, 11 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION ?. [ . ` ( ++ -- = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? END_OF_FILE , ] } ) : { ; of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level-1 [  n . END_OF_PRODUCTION E e ( ` [ ?. *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE , ] } ) : { ; of  ]';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    'offset 1 peek_level1 [  num 40 E e , ] } = *= ) /= ( : ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of END_OF_PRODUCTION  ]';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 319, 11 );
                    if( pk._type  == 5 ){
                        'Asserts [  num  ]';
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 83 )*/, 83 );
                        '"--LEAF--"';
                        '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                        scan( state.lexer, 217, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        '"--LEAF--"';
                        '83:321 javascript__float_token=>javascript__int_token •';
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                '"--LEAF--"';
                '174:610 javascript__substitute_template=>javascript__template_head • javascript__expression javascript__template_spans';
                scan( state.lexer, 21, 11 );
                if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                    state.push_fn( branch_0d1d3f19019f1922, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 180: 
            {
                'offset 1 peek_level-1 [  => ( ` . [ ?. *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? END_OF_FILE  ]';
                '199:671 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>javascript__parenthesized •';
                '76:303 javascript__primary_expression=>javascript__parenthesized •';
                scan( state.lexer, 315, 11 );
                if( state.lexer._type  == 150 ){
                    'Assert End [  =>  ]';
                    '"--LEAF--"';
                    '199:671 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>javascript__parenthesized •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 275 );
                    prod = 198;
                    continue
                } else {
                    '"--LEAF--"';
                    '76:303 javascript__primary_expression=>javascript__parenthesized •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 94 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in { END_OF_PRODUCTION *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = -- ++ ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? END_OF_FILE : ; ) } ] ,  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in { END_OF_PRODUCTION *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = -- ++ ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? END_OF_FILE : ; ) } ] ,  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 320, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? END_OF_PRODUCTION ? END_OF_FILE : ; ) } ] ,  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 321, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 198: 
            {
                'offset 1 peek_level-1 [  =>  ]';
                '197:662 javascript__arrow_function=>javascript__arrow_parameters • τ=> javascript__concise_body';
                scan( state.lexer, 322, 0 );
                if( state.lexer._type  == 150 ){
                    'Assert Consume [  =>  ]';
                    consume( state );
                    '"--LEAF--"';
                    '197:662 javascript__arrow_function=>javascript__arrow_parameters τ=> • javascript__concise_body';
                    scan( state.lexer, 21, 11 );
                    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                        state.push_fn( branch_96b4a920ae326c1f, 57 );
                        return hc_javascript__concise_body( state, db, 0 )
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 57 ) ? prod  : - 1
}

function hc_javascript__conditional_expression(state, db, prod){
    'offset 0 peek_level-1 [  59  ]';
    '58:229 javascript__conditional_expression=>• javascript__short_circuit_expression';
    '58:230 javascript__conditional_expression=>• javascript__short_circuit_expression τ? javascript__assignment_expression τ: javascript__assignment_expression';
    state.push_fn( branch_7dcad059cb87d44a, 0 );
    return hc_javascript__short_circuit_expression( state, db, 0 )
}

function hc_javascript__short_circuit_expression(state, db, prod){
    scan( state.lexer, 323, 11 );
    'offset 0 peek_level0 [  delete void typeof + ~ ! - ++ -- await new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    '59:231 javascript__short_circuit_expression=>• javascript__logical_or_expression';
    '59:232 javascript__short_circuit_expression=>• javascript__coalesce_expression';
    if( isTokenActive( state.lexer._type, 324 ) ){
    'Asserts [  delete void typeof + ~ ! - ++ -- await new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level-1 [  delete void typeof await new super import this class true false null async function + ~ ! - ++ -- [ { / ( < " " ` 0X 0x 0O 0o 0B 0b 40 num  ]';
    '71:269 javascript__unary_expression=>• τdelete javascript__unary_expression';
    '71:270 javascript__unary_expression=>• τvoid javascript__unary_expression';
    '71:271 javascript__unary_expression=>• τtypeof javascript__unary_expression';
    '71:272 javascript__unary_expression=>• τ+ javascript__unary_expression';
    '71:273 javascript__unary_expression=>• τ~ javascript__unary_expression';
    '71:274 javascript__unary_expression=>• τ! javascript__unary_expression';
    '71:275 javascript__unary_expression=>• τ- javascript__unary_expression';
    '72:280 javascript__update_expression=>• τ++ javascript__unary_expression';
    '72:281 javascript__update_expression=>• τ-- javascript__unary_expression';
    '194:655 javascript__await_expression=>• τawait javascript__unary_expression';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    '184:624 javascript__new_target=>• τnew τ. τtarget';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    '76:294 javascript__primary_expression=>• τthis';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
    '93:353 javascript__object_literal=>• τ{ τ}';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '79:310 javascript__boolean_literal=>• τtrue';
    '79:311 javascript__boolean_literal=>• τfalse';
    '80:312 javascript__null_literal=>• τnull';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    scan( state.lexer, 325, 9 );
    if( state.lexer._type  == 91 ){
        'Asserts [  delete  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:269 javascript__unary_expression=>• τdelete javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 92 ){
        'Asserts [  void  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:270 javascript__unary_expression=>• τvoid javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 93 ){
        'Asserts [  typeof  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:271 javascript__unary_expression=>• τtypeof javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 123 ){
        'Asserts [  await  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '194:655 javascript__await_expression=>• τawait javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__await_expression( state, db, prod )
    } else if( state.lexer._type  == 99 ){
        'Asserts [  new  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  new  ]';
        '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>• τnew javascript__member_expression';
        '184:624 javascript__new_target=>• τnew τ. τtarget';
        'offset 5 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num .  ]';
        '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>τnew • javascript__member_expression';
        '184:624 javascript__new_target=>τnew • τ. τtarget';
        scan( state.lexer, 299, 9 );
        if( isTokenActive( state.lexer._type, 300 ) ){
            'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
            'offset 7 peek_level-1 [  75  ]';
            '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
            '75:293 javascript__member_expression=>τnew • javascript__member_expression';
            scan( state.lexer, 146, 11 );
            state.push_fn( branch_4df943580e69b810, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '184:624 javascript__new_target=>τnew • τ. τtarget';
            consume( state );
            scan( state.lexer, 301, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 145 ){
        'Asserts [  super  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  super  ]';
        '189:641 javascript__super_call=>• τsuper javascript__arguments';
        '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
        '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
        'offset 5 peek_level0 [  ( . [  ]';
        '189:641 javascript__super_call=>τsuper • javascript__arguments';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        scan( state.lexer, 302, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '189:641 javascript__super_call=>τsuper • javascript__arguments';
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            'Asserts [  [  ]';
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 13 ){
        'Asserts [  import  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  import  ]';
        '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
        '185:625 javascript__import_meta=>• τimport τ. τmeta';
        'offset 5 peek_level-1 [  ( .  ]';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        scan( state.lexer, 303, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '185:625 javascript__import_meta=>τimport • τ. τmeta';
            consume( state );
            scan( state.lexer, 271, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        'Asserts [  this  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '76:294 javascript__primary_expression=>• τthis';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 138 ){
        'Asserts [  class  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 101 ){
        'Asserts [  true  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:310 javascript__boolean_literal=>• τtrue';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 102 ){
        'Asserts [  false  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:311 javascript__boolean_literal=>• τfalse';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        'Asserts [  null  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '80:312 javascript__null_literal=>• τnull';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 117 ){
        'Asserts [  function  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 87 ){
        'Asserts [  +  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:272 javascript__unary_expression=>• τ+ javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 94 ){
        'Asserts [  ~  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:273 javascript__unary_expression=>• τ~ javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 35 ){
        'Asserts [  !  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:274 javascript__unary_expression=>• τ! javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 88 ){
        'Asserts [  -  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        '"--LEAF--"';
        '71:275 javascript__unary_expression=>• τ- javascript__unary_expression';
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 95 ){
        'Asserts [  ++  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
        '"--LEAF--"';
        '72:280 javascript__update_expression=>• τ++ javascript__unary_expression';
        state.push_fn( set_production /*0*/, 72 );
        return hc_javascript__update_expression( state, db, prod )
    } else if( state.lexer._type  == 26 ){
        'Asserts [  --  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
        '"--LEAF--"';
        '72:281 javascript__update_expression=>• τ-- javascript__unary_expression';
        state.push_fn( set_production /*0*/, 72 );
        return hc_javascript__update_expression( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '93:353 javascript__object_literal=>• τ{ τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        'Asserts [  `  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  `  ]';
        '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
        'offset 5 peek_level-1 [  171  ]';
        '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
        scan( state.lexer, 304, 11 );
        if( state.lexer._type  == 143 ){
            'Assert Consume [  171  ]';
            consume( state );
            'offset 6 peek_level-1 [  ` ${  ]';
            '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
            '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
            scan( state.lexer, 128, 11 );
            if( state.lexer._type  == 142 ){
                'Asserts [  `  ]';
                state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                '"--LEAF--"';
                '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                'Asserts [  ${  ]';
                state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 175 )*/, 175 );
                '"--LEAF--"';
                '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 105 ){
        'Asserts [  0X  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 106 ){
        'Asserts [  0x  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 ){
        'Asserts [  0O  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 108 ){
        'Asserts [  0o  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 ){
        'Asserts [  0B  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 110 ){
        'Asserts [  0b  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 84 )*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__short_circuit_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 60: 
            {
                'offset 1 peek_level0 [  || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 326, 9 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || END_OF_FILE ? : ; ) } ] ,  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 313, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level0 [  | ?? END_OF_PRODUCTION && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION | ?? && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ | ?? && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ | ?? && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION !== === != == & ^ | ?? && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION < > <= >= instanceof in !== === != == & ^ | ?? && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION - + << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | && || END_OF_FILE nl ? : ; ) } ] ,  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level0 [  ++ -- END_OF_PRODUCTION ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | && || END_OF_FILE ? : ; ) } ] ,  ]';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 327, 11 );
                if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | && || END_OF_FILE ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of ; += { %= /= ) *= = } ] ,  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION ( ` . [ ?. -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ | ?? && || END_OF_FILE , ] } = *= ) /= : %= { += ; ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level-1 [  n . END_OF_PRODUCTION E e ( ` [ ?. -- ++ ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ | ?? && || END_OF_FILE , ] } = *= ) /= : %= { += ; ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    'offset 1 peek_level1 [  num 40 E e , ] } = *= ) /= ( : ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of END_OF_PRODUCTION  ]';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 319, 11 );
                    if( pk._type  == 5 ){
                        'Asserts [  num  ]';
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 83 )*/, 83 );
                        '"--LEAF--"';
                        '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                        scan( state.lexer, 217, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        '"--LEAF--"';
                        '83:321 javascript__float_token=>javascript__int_token •';
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                '"--LEAF--"';
                '174:610 javascript__substitute_template=>javascript__template_head • javascript__expression javascript__template_spans';
                scan( state.lexer, 21, 11 );
                if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                    state.push_fn( branch_63673f200ce997a5, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { END_OF_PRODUCTION -- ++ ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ | ?? && || END_OF_FILE ? : ; ) } ] ,  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { END_OF_PRODUCTION ++ -- ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | && || END_OF_FILE ? : ; ) } ] ,  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 320, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 328, 9 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 59 ) ? prod  : - 1
}

function hc_javascript__logical_or_expression(state, db, prod){
    '"--LEAF--"';
    '60:233 javascript__logical_or_expression=>• javascript__logical_and_expression';
    state.push_fn( hc_javascript__logical_or_expression_goto /*hc_javascript__logical_or_expression_goto( state, db, 60 )*/, 60 );
    return hc_javascript__logical_and_expression( state, db, 0 )
}

function hc_javascript__logical_or_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 60: 
            {
                'offset 1 peek_level-1 [  || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                scan( state.lexer, 329, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__logical_or_expression_goto /*hc_javascript__logical_or_expression_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 60 ) ? prod  : - 1
}

function hc_javascript__logical_and_expression(state, db, prod){
    '"--LEAF--"';
    '61:235 javascript__logical_and_expression=>• javascript__bitwise_or_expression';
    state.push_fn( hc_javascript__logical_and_expression_goto /*hc_javascript__logical_and_expression_goto( state, db, 61 )*/, 61 );
    return hc_javascript__bitwise_or_expression( state, db, 0 )
}

function hc_javascript__logical_and_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 61: 
            {
                'offset 1 peek_level-1 [  && || ? ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION  ]';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression τ|| javascript__logical_and_expression •';
                scan( state.lexer, 330, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__logical_and_expression_goto /*hc_javascript__logical_and_expression_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 61
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 61 ) ? prod  : - 1
}

function hc_javascript__bitwise_or_expression(state, db, prod){
    '"--LEAF--"';
    '62:237 javascript__bitwise_or_expression=>• javascript__bitwise_xor_expression';
    state.push_fn( hc_javascript__bitwise_or_expression_goto /*hc_javascript__bitwise_or_expression_goto( state, db, 62 )*/, 62 );
    return hc_javascript__bitwise_xor_expression( state, db, 0 )
}

function hc_javascript__bitwise_or_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 62: 
            {
                'offset 1 peek_level-1 [  | && || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION ??  ]';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression τ&& javascript__bitwise_or_expression •';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression τ?? javascript__bitwise_or_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression τ?? javascript__bitwise_or_expression •';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 331, 11 );
                if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__bitwise_or_expression_goto /*hc_javascript__bitwise_or_expression_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 62
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 62 ) ? prod  : - 1
}

function hc_javascript__bitwise_xor_expression(state, db, prod){
    '"--LEAF--"';
    '63:239 javascript__bitwise_xor_expression=>• javascript__bitwise_and_expression';
    state.push_fn( hc_javascript__bitwise_xor_expression_goto /*hc_javascript__bitwise_xor_expression_goto( state, db, 63 )*/, 63 );
    return hc_javascript__bitwise_and_expression( state, db, 0 )
}

function hc_javascript__bitwise_xor_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 63: 
            {
                'offset 1 peek_level-1 [  ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression τ| javascript__bitwise_xor_expression •';
                scan( state.lexer, 332, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__bitwise_xor_expression_goto /*hc_javascript__bitwise_xor_expression_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 63
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 63 ) ? prod  : - 1
}

function hc_javascript__bitwise_and_expression(state, db, prod){
    '"--LEAF--"';
    '64:241 javascript__bitwise_and_expression=>• javascript__equality_expression';
    state.push_fn( hc_javascript__bitwise_and_expression_goto /*hc_javascript__bitwise_and_expression_goto( state, db, 64 )*/, 64 );
    return hc_javascript__equality_expression( state, db, 0 )
}

function hc_javascript__bitwise_and_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 64: 
            {
                'offset 1 peek_level-1 [  & ^ | ?? && || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression τ^ javascript__bitwise_and_expression •';
                scan( state.lexer, 333, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__bitwise_and_expression_goto /*hc_javascript__bitwise_and_expression_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 64
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 64 ) ? prod  : - 1
}

function hc_javascript__equality_expression(state, db, prod){
    '"--LEAF--"';
    '65:243 javascript__equality_expression=>• javascript__relational_expression';
    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
    return hc_javascript__relational_expression( state, db, 0 )
}

function hc_javascript__equality_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 65: 
            {
                'offset 1 peek_level-1 [  == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression τ& javascript__equality_expression •';
                scan( state.lexer, 334, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 65
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 65 ) ? prod  : - 1
}

function hc_javascript__relational_expression(state, db, prod){
    '"--LEAF--"';
    '66:248 javascript__relational_expression=>• javascript__shift_expression';
    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
    return hc_javascript__shift_expression( state, db, 0 )
}

function hc_javascript__relational_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 66: 
            {
                'offset 1 peek_level-1 [  in instanceof < > <= >= !== === != == & ^ | ?? && || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression τ== javascript__relational_expression •';
                '65:245 javascript__equality_expression=>javascript__equality_expression τ!= javascript__relational_expression •';
                '65:246 javascript__equality_expression=>javascript__equality_expression τ=== javascript__relational_expression •';
                '65:247 javascript__equality_expression=>javascript__equality_expression τ!== javascript__relational_expression •';
                scan( state.lexer, 335, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 66
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 66 ) ? prod  : - 1
}

function hc_javascript__shift_expression(state, db, prod){
    '"--LEAF--"';
    '67:255 javascript__shift_expression=>• javascript__additive_expression';
    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
    return hc_javascript__additive_expression( state, db, 0 )
}

function hc_javascript__shift_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 67: 
            {
                'offset 1 peek_level-1 [  << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression τ< javascript__shift_expression •';
                '66:250 javascript__relational_expression=>javascript__relational_expression τ> javascript__shift_expression •';
                '66:251 javascript__relational_expression=>javascript__relational_expression τ<= javascript__shift_expression •';
                '66:252 javascript__relational_expression=>javascript__relational_expression τ>= javascript__shift_expression •';
                '66:253 javascript__relational_expression=>javascript__relational_expression τinstanceof javascript__shift_expression •';
                '66:254 javascript__relational_expression=>javascript__relational_expression τin javascript__shift_expression •';
                scan( state.lexer, 336, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 67
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 67 ) ? prod  : - 1
}

function hc_javascript__additive_expression(state, db, prod){
    '"--LEAF--"';
    '68:259 javascript__additive_expression=>• javascript__multiplicative_expression';
    state.push_fn( hc_javascript__additive_expression_goto /*hc_javascript__additive_expression_goto( state, db, 68 )*/, 68 );
    return hc_javascript__multiplicative_expression( state, db, 0 )
}

function hc_javascript__additive_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 68: 
            {
                'offset 1 peek_level-1 [  + - >>> >> << < > <= >= instanceof in !== === != == & ^ | ?? && || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression τ<< javascript__additive_expression •';
                '67:257 javascript__shift_expression=>javascript__shift_expression τ>> javascript__additive_expression •';
                '67:258 javascript__shift_expression=>javascript__shift_expression τ>>> javascript__additive_expression •';
                scan( state.lexer, 337, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__additive_expression_goto /*hc_javascript__additive_expression_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__additive_expression_goto /*hc_javascript__additive_expression_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 68
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 68 ) ? prod  : - 1
}

function hc_javascript__multiplicative_expression(state, db, prod){
    '"--LEAF--"';
    '69:262 javascript__multiplicative_expression=>• javascript__exponentiation_expression';
    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
    return hc_javascript__exponentiation_expression( state, db, 0 )
}

function hc_javascript__multiplicative_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 69: 
            {
                'offset 1 peek_level-1 [  * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression τ+ javascript__multiplicative_expression •';
                '68:261 javascript__additive_expression=>javascript__additive_expression τ- javascript__multiplicative_expression •';
                scan( state.lexer, 338, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 69
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 69 ) ? prod  : - 1
}

function hc_javascript__exponentiation_expression(state, db, prod){
    scan( state.lexer, 323, 11 );
    'offset 0 peek_level0 [  delete void typeof + ~ ! - await ++ -- new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    '70:266 javascript__exponentiation_expression=>• javascript__unary_expression';
    '70:267 javascript__exponentiation_expression=>• javascript__update_expression τ** javascript__exponentiation_expression';
    if( isTokenActive( state.lexer._type, 339 ) ){
    'Asserts [  delete void typeof + ~ ! - await  ]';
    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 70 )*/, 70 );
    '"--LEAF--"';
    '70:266 javascript__exponentiation_expression=>• javascript__unary_expression';
    state.push_fn( set_production /*0*/, 70 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 340 ) ){
    'Asserts [  ++ -- new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level-1 [  new super import this class true false null async function ++ -- [ { / ( < " " ` 0X 0x 0O 0o 0B 0b 40 num  ]';
    '72:280 javascript__update_expression=>• τ++ javascript__unary_expression';
    '72:281 javascript__update_expression=>• τ-- javascript__unary_expression';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    '184:624 javascript__new_target=>• τnew τ. τtarget';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    '76:294 javascript__primary_expression=>• τthis';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
    '93:353 javascript__object_literal=>• τ{ τ}';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '79:310 javascript__boolean_literal=>• τtrue';
    '79:311 javascript__boolean_literal=>• τfalse';
    '80:312 javascript__null_literal=>• τnull';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    scan( state.lexer, 341, 9 );
    if( state.lexer._type  == 99 ){
        'Asserts [  new  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  new  ]';
        '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>• τnew javascript__member_expression';
        '184:624 javascript__new_target=>• τnew τ. τtarget';
        'offset 5 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num .  ]';
        '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>τnew • javascript__member_expression';
        '184:624 javascript__new_target=>τnew • τ. τtarget';
        scan( state.lexer, 299, 9 );
        if( isTokenActive( state.lexer._type, 300 ) ){
            'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
            'offset 7 peek_level-1 [  75  ]';
            '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
            '75:293 javascript__member_expression=>τnew • javascript__member_expression';
            scan( state.lexer, 146, 11 );
            state.push_fn( branch_992c11af5ca877f1, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '184:624 javascript__new_target=>τnew • τ. τtarget';
            consume( state );
            scan( state.lexer, 301, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 145 ){
        'Asserts [  super  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  super  ]';
        '189:641 javascript__super_call=>• τsuper javascript__arguments';
        '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
        '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
        'offset 5 peek_level0 [  ( . [  ]';
        '189:641 javascript__super_call=>τsuper • javascript__arguments';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        scan( state.lexer, 302, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '189:641 javascript__super_call=>τsuper • javascript__arguments';
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            'Asserts [  [  ]';
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 13 ){
        'Asserts [  import  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  import  ]';
        '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
        '185:625 javascript__import_meta=>• τimport τ. τmeta';
        'offset 5 peek_level-1 [  ( .  ]';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        scan( state.lexer, 303, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '185:625 javascript__import_meta=>τimport • τ. τmeta';
            consume( state );
            scan( state.lexer, 271, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        'Asserts [  this  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '76:294 javascript__primary_expression=>• τthis';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 138 ){
        'Asserts [  class  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 101 ){
        'Asserts [  true  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:310 javascript__boolean_literal=>• τtrue';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 102 ){
        'Asserts [  false  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:311 javascript__boolean_literal=>• τfalse';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        'Asserts [  null  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '80:312 javascript__null_literal=>• τnull';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 117 ){
        'Asserts [  function  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 95 ){
        'Asserts [  ++  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
        '"--LEAF--"';
        '72:280 javascript__update_expression=>• τ++ javascript__unary_expression';
        state.push_fn( set_production /*0*/, 72 );
        return hc_javascript__update_expression( state, db, prod )
    } else if( state.lexer._type  == 26 ){
        'Asserts [  --  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
        '"--LEAF--"';
        '72:281 javascript__update_expression=>• τ-- javascript__unary_expression';
        state.push_fn( set_production /*0*/, 72 );
        return hc_javascript__update_expression( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '93:353 javascript__object_literal=>• τ{ τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        'Asserts [  `  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  `  ]';
        '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
        'offset 5 peek_level-1 [  171  ]';
        '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
        scan( state.lexer, 304, 11 );
        if( state.lexer._type  == 143 ){
            'Assert Consume [  171  ]';
            consume( state );
            'offset 6 peek_level-1 [  ` ${  ]';
            '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
            '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
            scan( state.lexer, 128, 11 );
            if( state.lexer._type  == 142 ){
                'Asserts [  `  ]';
                state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                '"--LEAF--"';
                '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                'Asserts [  ${  ]';
                state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 175 )*/, 175 );
                '"--LEAF--"';
                '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 105 ){
        'Asserts [  0X  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 106 ){
        'Asserts [  0x  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 ){
        'Asserts [  0O  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 108 ){
        'Asserts [  0o  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 ){
        'Asserts [  0B  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 110 ){
        'Asserts [  0b  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 84 )*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__exponentiation_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 72: 
            {
                'offset 1 peek_level0 [  ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ | ?? && || ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION  ]';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                scan( state.lexer, 122, 9 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 70 )*/, 70 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 70 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 70;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level0 [  ++ -- END_OF_PRODUCTION ** END_OF_FILE * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : ; ) } ] ,  ]';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 327, 11 );
                if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION ++ -- ** END_OF_FILE * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of ; += { %= /= ) *= = } ] ,  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION ?. [ . ` ( ++ -- ** END_OF_FILE , ] } = *= ) /= : %= { += ; * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level-1 [  n . END_OF_PRODUCTION E e ( ` [ ?. -- ++ ** END_OF_FILE , ] } = *= ) /= : %= { += ; * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    'offset 1 peek_level1 [  num 40 E e , ] } = *= ) /= ( : ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of END_OF_PRODUCTION  ]';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 319, 11 );
                    if( pk._type  == 5 ){
                        'Asserts [  num  ]';
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 83 )*/, 83 );
                        '"--LEAF--"';
                        '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                        scan( state.lexer, 217, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        '"--LEAF--"';
                        '83:321 javascript__float_token=>javascript__int_token •';
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                '"--LEAF--"';
                '174:610 javascript__substitute_template=>javascript__template_head • javascript__expression javascript__template_spans';
                scan( state.lexer, 21, 11 );
                if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                    state.push_fn( branch_1258f37abbcc16f9, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { END_OF_PRODUCTION -- ++ ** END_OF_FILE * / % + - << >> >>> < > <= >= instanceof == != === !== & ^ | && || ?? ? : ; ) } ] ,  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { END_OF_PRODUCTION -- ++ ** END_OF_FILE * / % + - << >> >>> < > <= >= instanceof == != === !== & ^ | && || ?? ? : ; ) } ] ,  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 320, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 70 ) ? prod  : - 1
}

function hc_javascript__unary_expression(state, db, prod){
    scan( state.lexer, 323, 11 );
    'offset 0 peek_level0 [  ++ -- new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num delete void typeof await + ~ ! -  ]';
    '71:268 javascript__unary_expression=>• javascript__update_expression';
    '71:269 javascript__unary_expression=>• τdelete javascript__unary_expression';
    '71:270 javascript__unary_expression=>• τvoid javascript__unary_expression';
    '71:271 javascript__unary_expression=>• τtypeof javascript__unary_expression';
    '71:272 javascript__unary_expression=>• τ+ javascript__unary_expression';
    '71:273 javascript__unary_expression=>• τ~ javascript__unary_expression';
    '71:274 javascript__unary_expression=>• τ! javascript__unary_expression';
    '71:275 javascript__unary_expression=>• τ- javascript__unary_expression';
    '71:276 javascript__unary_expression=>• javascript__await_expression';
    if( isTokenActive( state.lexer._type, 340 ) ){
    'Asserts [  ++ -- new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:268 javascript__unary_expression=>• javascript__update_expression';
    state.push_fn( set_production /*0*/, 71 );
    return hc_javascript__update_expression( state, db, 0 )
} else if( state.lexer._type  == 91 ){
    'Asserts [  delete  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:269 javascript__unary_expression=>• τdelete javascript__unary_expression';
    consume( state );
    state.push_fn( branch_c51cb31e873d5c0f, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 92 ){
    'Asserts [  void  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:270 javascript__unary_expression=>• τvoid javascript__unary_expression';
    consume( state );
    state.push_fn( branch_e74b9eea64be430f, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 93 ){
    'Asserts [  typeof  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:271 javascript__unary_expression=>• τtypeof javascript__unary_expression';
    consume( state );
    state.push_fn( branch_79647dcfa8fc7924, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 123 ){
    'Asserts [  await  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:276 javascript__unary_expression=>• javascript__await_expression';
    state.push_fn( set_production /*0*/, 71 );
    return hc_javascript__await_expression( state, db, 0 )
} else if( state.lexer._type  == 87 ){
    'Asserts [  +  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:272 javascript__unary_expression=>• τ+ javascript__unary_expression';
    consume( state );
    state.push_fn( branch_430cbf0787a6e47c, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 94 ){
    'Asserts [  ~  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:273 javascript__unary_expression=>• τ~ javascript__unary_expression';
    consume( state );
    state.push_fn( branch_430cbf0787a6e47c, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 35 ){
    'Asserts [  !  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:274 javascript__unary_expression=>• τ! javascript__unary_expression';
    consume( state );
    state.push_fn( branch_430cbf0787a6e47c, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 88 ){
    'Asserts [  -  ]';
    state.push_fn( set_production /*71*/, 71 );
    '"--LEAF--"';
    '71:275 javascript__unary_expression=>• τ- javascript__unary_expression';
    consume( state );
    state.push_fn( branch_33357b08811d62f2, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__update_expression(state, db, prod){
    scan( state.lexer, 342, 11 );
    'offset 0 peek_level0 [  new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num ++ --  ]';
    '72:277 javascript__update_expression=>• javascript__left_hand_side_expression';
    '72:278 javascript__update_expression=>• javascript__left_hand_side_expression τ++';
    '72:279 javascript__update_expression=>• javascript__left_hand_side_expression τ--';
    '72:280 javascript__update_expression=>• τ++ javascript__unary_expression';
    '72:281 javascript__update_expression=>• τ-- javascript__unary_expression';
    if( isTokenActive( state.lexer._type, 300 ) ){
    'Asserts [  new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level-1 [  73  ]';
    '72:277 javascript__update_expression=>• javascript__left_hand_side_expression';
    '72:278 javascript__update_expression=>• javascript__left_hand_side_expression τ++';
    '72:279 javascript__update_expression=>• javascript__left_hand_side_expression τ--';
    scan( state.lexer, 146, 11 );
    state.push_fn( branch_7ce417f1f91bcaf2, 0 );
    return hc_javascript__left_hand_side_expression( state, db, 0 )
} else if( state.lexer._type  == 95 ){
    'Asserts [  ++  ]';
    state.push_fn( set_production /*72*/, 72 );
    '"--LEAF--"';
    '72:280 javascript__update_expression=>• τ++ javascript__unary_expression';
    consume( state );
    state.push_fn( branch_4da495df38d1c45c, 72 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 26 ){
    'Asserts [  --  ]';
    state.push_fn( set_production /*72*/, 72 );
    '"--LEAF--"';
    '72:281 javascript__update_expression=>• τ-- javascript__unary_expression';
    consume( state );
    state.push_fn( branch_4da495df38d1c45c, 72 );
    return hc_javascript__unary_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__left_hand_side_expression(state, db, prod){
    scan( state.lexer, 146, 11 );
    'offset 0 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    '73:282 javascript__left_hand_side_expression=>• javascript__new_expression';
    '73:283 javascript__left_hand_side_expression=>• javascript__call_expression';
    '73:284 javascript__left_hand_side_expression=>• javascript__optional_expression';
    if( isTokenActive( state.lexer._type, 300 ) ){
    'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level0 [  new this super class import true false null async function [ { / ( < " " ` 0X 0x 0O 0o 0B 0b 40 num  ]';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    '184:624 javascript__new_target=>• τnew τ. τtarget';
    '76:294 javascript__primary_expression=>• τthis';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
    '93:353 javascript__object_literal=>• τ{ τ}';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '79:310 javascript__boolean_literal=>• τtrue';
    '79:311 javascript__boolean_literal=>• τfalse';
    '80:312 javascript__null_literal=>• τnull';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    scan( state.lexer, 343, 9 );
    if( state.lexer._type  == 99 ){
        'Asserts [  new  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  new  ]';
        '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>• τnew javascript__member_expression';
        '184:624 javascript__new_target=>• τnew τ. τtarget';
        'offset 5 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num .  ]';
        '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>τnew • javascript__member_expression';
        '184:624 javascript__new_target=>τnew • τ. τtarget';
        scan( state.lexer, 299, 9 );
        if( isTokenActive( state.lexer._type, 300 ) ){
            'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
            'offset 7 peek_level-1 [  75  ]';
            '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
            '75:293 javascript__member_expression=>τnew • javascript__member_expression';
            scan( state.lexer, 146, 11 );
            state.push_fn( branch_4fe316c51b5f21c0, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '184:624 javascript__new_target=>τnew • τ. τtarget';
            consume( state );
            scan( state.lexer, 301, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        'Asserts [  this  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '76:294 javascript__primary_expression=>• τthis';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 145 ){
        'Asserts [  super  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  super  ]';
        '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
        '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
        '189:641 javascript__super_call=>• τsuper javascript__arguments';
        'offset 5 peek_level-1 [  . [ (  ]';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        '189:641 javascript__super_call=>τsuper • javascript__arguments';
        scan( state.lexer, 302, 11 );
        if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            'Asserts [  [  ]';
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        } else {
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '189:641 javascript__super_call=>τsuper • javascript__arguments';
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        }
    } else if( state.lexer._type  == 138 ){
        'Asserts [  class  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 13 ){
        'Asserts [  import  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  import  ]';
        '185:625 javascript__import_meta=>• τimport τ. τmeta';
        '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
        'offset 5 peek_level-1 [  . (  ]';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        scan( state.lexer, 303, 11 );
        if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '185:625 javascript__import_meta=>τimport • τ. τmeta';
            consume( state );
            scan( state.lexer, 271, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 101 ){
        'Asserts [  true  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:310 javascript__boolean_literal=>• τtrue';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 102 ){
        'Asserts [  false  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:311 javascript__boolean_literal=>• τfalse';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        'Asserts [  null  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '80:312 javascript__null_literal=>• τnull';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 117 ){
        'Asserts [  function  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '93:353 javascript__object_literal=>• τ{ τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        'Asserts [  `  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  `  ]';
        '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
        'offset 5 peek_level-1 [  171  ]';
        '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
        scan( state.lexer, 304, 11 );
        if( state.lexer._type  == 143 ){
            'Assert Consume [  171  ]';
            consume( state );
            'offset 6 peek_level-1 [  ` ${  ]';
            '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
            '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
            scan( state.lexer, 128, 11 );
            if( state.lexer._type  == 142 ){
                'Asserts [  `  ]';
                state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                '"--LEAF--"';
                '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                'Asserts [  ${  ]';
                state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 175 )*/, 175 );
                '"--LEAF--"';
                '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 105 ){
        'Asserts [  0X  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 106 ){
        'Asserts [  0x  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 ){
        'Asserts [  0O  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 108 ){
        'Asserts [  0o  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 ){
        'Asserts [  0B  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 110 ){
        'Asserts [  0b  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 84 )*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__left_hand_side_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                'offset 1 peek_level0 [  [ . ` ( ?. END_OF_PRODUCTION END_OF_FILE ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? : -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of ; += { %= /= ) *= = } ] ,  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION ?. ( ` . [ END_OF_FILE , ] } = *= ) /= : %= { += ; ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level-1 [  n . END_OF_PRODUCTION E e ?. ( ` [ END_OF_FILE , ] } = *= ) /= : %= { += ; ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    'offset 1 peek_level1 [  num 40 E e , ] } = *= ) /= ( : ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of END_OF_PRODUCTION  ]';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 319, 11 );
                    if( pk._type  == 5 ){
                        'Asserts [  num  ]';
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 83 )*/, 83 );
                        '"--LEAF--"';
                        '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                        scan( state.lexer, 217, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        '"--LEAF--"';
                        '83:321 javascript__float_token=>javascript__int_token •';
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                '"--LEAF--"';
                '174:610 javascript__substitute_template=>javascript__template_head • javascript__expression javascript__template_spans';
                scan( state.lexer, 21, 11 );
                if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                    state.push_fn( branch_6cace078782c5618, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 56, 9 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 344, 9 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 73 ) ? prod  : - 1
}

function hc_javascript__new_expression(state, db, prod){
    '"--LEAF--"';
    '74:285 javascript__new_expression=>• javascript__member_expression';
    state.push_fn( set_production /*74*/, 74 );
    return hc_javascript__member_expression( state, db, 0 )
}

function hc_javascript__member_expression(state, db, prod){
    scan( state.lexer, 146, 11 );
    'offset 0 peek_level0 [  this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num super new import  ]';
    '75:286 javascript__member_expression=>• javascript__primary_expression';
    '75:290 javascript__member_expression=>• javascript__super_property';
    '75:291 javascript__member_expression=>• javascript__meta_property';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    if( isTokenActive( state.lexer._type, 345 ) ){
    'Asserts [  this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:286 javascript__member_expression=>• javascript__primary_expression';
    state.push_fn( set_production /*0*/, 75 );
    return hc_javascript__primary_expression( state, db, 0 )
} else if( state.lexer._type  == 145 ){
    'Asserts [  super  ]';
    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:290 javascript__member_expression=>• javascript__super_property';
    state.push_fn( set_production /*0*/, 75 );
    return hc_javascript__super_property( state, db, 0 )
} else if( state.lexer._type  == 99 ){
    'Asserts [  new  ]';
    'offset 0 peek_level1 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num .  ]';
    '75:291 javascript__member_expression=>• javascript__meta_property';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 299, 9 );
    if( isTokenActive( pk._type, 300 ) ){
        'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  new  ]';
        '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>• τnew javascript__member_expression';
        'offset 3 peek_level-1 [  75  ]';
        '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>τnew • javascript__member_expression';
        scan( state.lexer, 146, 11 );
        state.push_fn( branch_1e4a201684fec202, 0 );
        return hc_javascript__member_expression( state, db, 0 )
    } else {
        state.lexer._type  = 99;
        state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '75:291 javascript__member_expression=>• javascript__meta_property';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__meta_property( state, db, 0 )
    }
} else {
    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
    '"--LEAF--"';
    '75:291 javascript__member_expression=>• javascript__meta_property';
    state.push_fn( set_production /*0*/, 75 );
    return hc_javascript__meta_property( state, db, 0 )
};
    return - 1
}

function hc_javascript__member_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                'offset 1 peek_level-1 [  [ . ` = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- in of ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || { END_OF_PRODUCTION ( ?.  ]';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                scan( state.lexer, 346, 11 );
                if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 75 ) ? prod  : - 1
}

function hc_javascript__primary_expression(state, db, prod){
    scan( state.lexer, 347, 11 );
    'offset 0 peek_level-1 [  true false null " " 0X 0x 0O 0o 0B 0b num async function this class [ { / ` ( < 40  ]';
    '76:294 javascript__primary_expression=>• τthis';
    '76:295 javascript__primary_expression=>• javascript__identifier_reference';
    '76:296 javascript__primary_expression=>• javascript__literal';
    '76:297 javascript__primary_expression=>• javascript__array_literal';
    '76:298 javascript__primary_expression=>• javascript__object_literal';
    '76:299 javascript__primary_expression=>• javascript__function_expression';
    '76:300 javascript__primary_expression=>• javascript__class_expression';
    '76:301 javascript__primary_expression=>• javascript__regular_expression_literal';
    '76:302 javascript__primary_expression=>• javascript__template_literal';
    '76:303 javascript__primary_expression=>• javascript__parenthesized';
    '76:304 javascript__primary_expression=>• html__TAG';
    if( isTokenActive( state.lexer._type, 348 ) ){
    'Asserts [  true false null " " 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:296 javascript__primary_expression=>• javascript__literal';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__literal( state, db, 0 )
} else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
    'Asserts [  async function  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:299 javascript__primary_expression=>• javascript__function_expression';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__function_expression( state, db, 0 )
} else if( state.lexer._type  == 100 ){
    'Asserts [  this  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:294 javascript__primary_expression=>• τthis';
    consume( state );
    add_reduce( state, 1, 93 );
    return 0
} else if( state.lexer._type  == 138 ){
    'Asserts [  class  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:300 javascript__primary_expression=>• javascript__class_expression';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__class_expression( state, db, 0 )
} else if( state.lexer._type  == 96 ){
    'Asserts [  [  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:297 javascript__primary_expression=>• javascript__array_literal';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__array_literal( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:298 javascript__primary_expression=>• javascript__object_literal';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__object_literal( state, db, 0 )
} else if( state.lexer._type  == 10 ){
    'Asserts [  /  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:301 javascript__primary_expression=>• javascript__regular_expression_literal';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__regular_expression_literal( state, db, 0 )
} else if( state.lexer._type  == 142 ){
    'Asserts [  `  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:302 javascript__primary_expression=>• javascript__template_literal';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__template_literal( state, db, 0 )
} else if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:303 javascript__primary_expression=>• javascript__parenthesized';
    state.push_fn( branch_0420b34e5168643c, 76 );
    return hc_javascript__parenthesized( state, db, 0 )
} else if( state.lexer._type  == 27 ){
    'Asserts [  <  ]';
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:304 javascript__primary_expression=>• html__TAG';
    state.push_fn( set_production /*0*/, 76 );
    return hc_html__TAG( state, db, 0 )
} else {
    state.push_fn( set_production /*76*/, 76 );
    '"--LEAF--"';
    '76:295 javascript__primary_expression=>• javascript__identifier_reference';
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__identifier_reference( state, db, 0 )
};
    return - 1
}

function hc_javascript__identifier_reference(state, db, prod){
    scan( state.lexer, 275, 11 );
    'offset 0 peek_level-1 [  40  ]';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    if( state.lexer._type  == 59 ){
    'Assert Consume [  40  ]';
    consume( state );
    '"--LEAF--"';
    '77:305 javascript__identifier_reference=>tk:javascript__composite_identifier •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 95 );
    return 77
};
    return - 1
}

function hc_javascript__literal(state, db, prod){
    scan( state.lexer, 349, 11 );
    'offset 0 peek_level0 [  true false null 0X 0x 0O 0o 0B 0b num " "  ]';
    '78:306 javascript__literal=>• javascript__boolean_literal';
    '78:307 javascript__literal=>• javascript__null_literal';
    '78:308 javascript__literal=>• javascript__string_literal';
    '78:309 javascript__literal=>• javascript__numeric_literal';
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
    'Asserts [  true false  ]';
    state.push_fn( set_production /*78*/, 78 );
    '"--LEAF--"';
    '78:306 javascript__literal=>• javascript__boolean_literal';
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__boolean_literal( state, db, 0 )
} else if( state.lexer._type  == 103 ){
    'Asserts [  null  ]';
    state.push_fn( set_production /*78*/, 78 );
    '"--LEAF--"';
    '78:307 javascript__literal=>• javascript__null_literal';
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__null_literal( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 350 ) ){
    'Asserts [  0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( set_production /*78*/, 78 );
    '"--LEAF--"';
    '78:309 javascript__literal=>• javascript__numeric_literal';
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__numeric_literal( state, db, 0 )
} else {
    state.push_fn( set_production /*78*/, 78 );
    '"--LEAF--"';
    '78:308 javascript__literal=>• javascript__string_literal';
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__string_literal( state, db, 0 )
};
    return - 1
}

function hc_javascript__boolean_literal(state, db, prod){
    scan( state.lexer, 351, 11 );
    'offset 0 peek_level-1 [  true false  ]';
    '79:310 javascript__boolean_literal=>• τtrue';
    '79:311 javascript__boolean_literal=>• τfalse';
    if( state.lexer._type  == 101 ){
    'Asserts [  true  ]';
    state.push_fn( set_production /*79*/, 79 );
    '"--LEAF--"';
    '79:310 javascript__boolean_literal=>• τtrue';
    consume( state );
    add_reduce( state, 1, 96 );
    return 0
} else if( state.lexer._type  == 102 ){
    'Asserts [  false  ]';
    state.push_fn( set_production /*79*/, 79 );
    '"--LEAF--"';
    '79:311 javascript__boolean_literal=>• τfalse';
    consume( state );
    add_reduce( state, 1, 96 );
    return 0
};
    return - 1
}

function hc_javascript__null_literal(state, db, prod){
    scan( state.lexer, 352, 11 );
    'offset 0 peek_level-1 [  null  ]';
    '80:312 javascript__null_literal=>• τnull';
    if( state.lexer._type  == 103 ){
    'Assert Consume [  null  ]';
    consume( state );
    '"--LEAF--"';
    '80:312 javascript__null_literal=>τnull •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 97 );
    return 80
};
    return - 1
}

function hc_javascript__numeric_literal(state, db, prod){
    scan( state.lexer, 353, 11 );
    'offset 0 peek_level0 [  0X 0x 0O 0o 0B 0b num  ]';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    '81:315 javascript__numeric_literal=>• javascript__hex_token';
    '81:316 javascript__numeric_literal=>• javascript__octal_token';
    '81:317 javascript__numeric_literal=>• javascript__binary_token';
    if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
    'Asserts [  0X 0x  ]';
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
    '"--LEAF--"';
    '81:315 javascript__numeric_literal=>• javascript__hex_token';
    state.push_fn( branch_c9aa0f04d222f980, 81 );
    return hc_javascript__hex_token( state, db, 0 )
} else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
    'Asserts [  0O 0o  ]';
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
    '"--LEAF--"';
    '81:316 javascript__numeric_literal=>• javascript__octal_token';
    state.push_fn( branch_c9aa0f04d222f980, 81 );
    return hc_javascript__octal_token( state, db, 0 )
} else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
    'Asserts [  0B 0b  ]';
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
    '"--LEAF--"';
    '81:317 javascript__numeric_literal=>• javascript__binary_token';
    state.push_fn( branch_c9aa0f04d222f980, 81 );
    return hc_javascript__binary_token( state, db, 0 )
} else {
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 84 )*/, 84 );
    '"--LEAF--"';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    state.push_fn( set_production /*0*/, 84 );
    return hc_javascript__int_token( state, db, prod )
};
    return - 1
}

function hc_javascript__numeric_literal_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION END_OF_FILE , ] } = *= ) /= ( : ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 81 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 81;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level0 [  n . END_OF_PRODUCTION E e END_OF_FILE , ] } = *= ) /= ( : ?. %= { += ; [ ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 83 )*/, 83 );
                    '"--LEAF--"';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 98 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 83 );
                        return hc_javascript__float_token_group_597_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 81 ) ? prod  : - 1
}

function hc_javascript__scientific_token(state, db, prod){
    'offset 0 peek_level-1 [  83  ]';
    '82:318 javascript__scientific_token=>• javascript__float_token javascript__scientific_token_group_593_0_';
    '82:319 javascript__scientific_token=>• javascript__float_token';
    state.push_fn( branch_688092dff7e0b0ed, 0 );
    return hc_javascript__float_token( state, db, 0 )
}

function hc_javascript__float_token(state, db, prod){
    'offset 0 peek_level-1 [  84  ]';
    '83:320 javascript__float_token=>• javascript__int_token javascript__float_token_group_597_0_';
    '83:321 javascript__float_token=>• javascript__int_token';
    state.push_fn( branch_8708d5a8141dc08e, 0 );
    return hc_javascript__int_token( state, db, 0 )
}

function hc_javascript__int_token(state, db, prod){
    scan( state.lexer, 129, 11 );
    'offset 0 peek_level-1 [  num  ]';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    '84:323 javascript__int_token=>• θnum';
    if( state.lexer._type  == 5 ){
    'Assert Consume [  num  ]';
    consume( state );
    'offset 1 peek_level0 [  _ n . E e : ( [ ` ?. = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- in of ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] ; } nl END_OF_FILE , && || { END_OF_PRODUCTION  ]';
    '84:322 javascript__int_token=>θnum • javascript__int_token_list_601';
    '84:323 javascript__int_token=>θnum •';
    scan( state.lexer, 354, 9 );
    if( state.lexer._type  == 60 ){
        'Asserts [  _  ]';
        state.push_fn( set_production /*84*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>θnum • javascript__int_token_list_601';
        state.push_fn( branch_60d1f22634e1d8d8, 84 );
        return hc_javascript__int_token_list_601( state, db, 0 )
    } else {
        '"--LEAF--"';
        '84:323 javascript__int_token=>θnum •';
        add_reduce( state, 1, 14 );
        return 84
    }
};
    return - 1
}

function hc_javascript__big_token(state, db, prod){
    '"--LEAF--"';
    '85:324 javascript__big_token=>• javascript__int_token τn';
    state.push_fn( branch_bb129fcd84bd27b6, 85 );
    return hc_javascript__int_token( state, db, 0 )
}

function hc_javascript__hex_token(state, db, prod){
    scan( state.lexer, 355, 11 );
    'offset 0 peek_level0 [  0X 0x  ]';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:327 javascript__hex_token=>• τ0X javascript__hex_token_list_606';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:328 javascript__hex_token=>• τ0x javascript__hex_token_list_606';
    if( state.lexer._type  == 105 ){
    'Asserts [  0X  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  0X  ]';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:327 javascript__hex_token=>• τ0X javascript__hex_token_list_606';
    'offset 3 peek_level-1 [  278  ]';
    '86:325 javascript__hex_token=>τ0X • javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:327 javascript__hex_token=>τ0X • javascript__hex_token_list_606';
    scan( state.lexer, 356, 11 );
    state.push_fn( branch_bccca4c4593292e3, 0 );
    return hc_javascript__hex_token_list_606( state, db, 0 )
} else if( state.lexer._type  == 106 ){
    'Asserts [  0x  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  0x  ]';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:328 javascript__hex_token=>• τ0x javascript__hex_token_list_606';
    'offset 3 peek_level-1 [  278  ]';
    '86:326 javascript__hex_token=>τ0x • javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:328 javascript__hex_token=>τ0x • javascript__hex_token_list_606';
    scan( state.lexer, 356, 11 );
    state.push_fn( branch_dd25703ca108703e, 0 );
    return hc_javascript__hex_token_list_606( state, db, 0 )
};
    return - 1
}

function hc_javascript__octal_token(state, db, prod){
    scan( state.lexer, 357, 11 );
    'offset 0 peek_level0 [  0O 0o  ]';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:331 javascript__octal_token=>• τ0O javascript__octal_token_list_613';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:332 javascript__octal_token=>• τ0o javascript__octal_token_list_613';
    if( state.lexer._type  == 107 ){
    'Asserts [  0O  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  0O  ]';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:331 javascript__octal_token=>• τ0O javascript__octal_token_list_613';
    'offset 3 peek_level-1 [  280  ]';
    '87:329 javascript__octal_token=>τ0O • javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:331 javascript__octal_token=>τ0O • javascript__octal_token_list_613';
    scan( state.lexer, 358, 11 );
    state.push_fn( branch_1f84adf586ffb9fa, 0 );
    return hc_javascript__octal_token_list_613( state, db, 0 )
} else if( state.lexer._type  == 108 ){
    'Asserts [  0o  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  0o  ]';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:332 javascript__octal_token=>• τ0o javascript__octal_token_list_613';
    'offset 3 peek_level-1 [  280  ]';
    '87:330 javascript__octal_token=>τ0o • javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:332 javascript__octal_token=>τ0o • javascript__octal_token_list_613';
    scan( state.lexer, 358, 11 );
    state.push_fn( branch_4095732728a47f67, 0 );
    return hc_javascript__octal_token_list_613( state, db, 0 )
};
    return - 1
}

function hc_javascript__binary_token(state, db, prod){
    scan( state.lexer, 359, 11 );
    'offset 0 peek_level0 [  0B 0b  ]';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:335 javascript__binary_token=>• τ0B javascript__binary_token_list_620';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:336 javascript__binary_token=>• τ0b javascript__binary_token_list_620';
    if( state.lexer._type  == 109 ){
    'Asserts [  0B  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  0B  ]';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:335 javascript__binary_token=>• τ0B javascript__binary_token_list_620';
    'offset 3 peek_level-1 [  282  ]';
    '88:333 javascript__binary_token=>τ0B • javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:335 javascript__binary_token=>τ0B • javascript__binary_token_list_620';
    scan( state.lexer, 360, 11 );
    state.push_fn( branch_da8df7b930b94262, 0 );
    return hc_javascript__binary_token_list_620( state, db, 0 )
} else if( state.lexer._type  == 110 ){
    'Asserts [  0b  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  0b  ]';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:336 javascript__binary_token=>• τ0b javascript__binary_token_list_620';
    'offset 3 peek_level-1 [  282  ]';
    '88:334 javascript__binary_token=>τ0b • javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:336 javascript__binary_token=>τ0b • javascript__binary_token_list_620';
    scan( state.lexer, 360, 11 );
    state.push_fn( branch_4f0e9a639053afa2, 0 );
    return hc_javascript__binary_token_list_620( state, db, 0 )
};
    return - 1
}

function hc_javascript__array_literal(state, db, prod){
    scan( state.lexer, 216, 11 );
    'offset 0 peek_level-1 [  [  ]';
    '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
    '89:338 javascript__array_literal=>• τ[ javascript__element_list τ]';
    '89:339 javascript__array_literal=>• τ[ javascript__element_list τ, javascript__elision τ]';
    '89:340 javascript__array_literal=>• τ[ τ]';
    '89:341 javascript__array_literal=>• τ[ javascript__element_list τ, τ]';
    if( state.lexer._type  == 96 ){
    'Assert Consume [  [  ]';
    consume( state );
    'offset 1 peek_level0 [  ... yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await , ]  ]';
    '89:337 javascript__array_literal=>τ[ • javascript__elision τ]';
    '89:338 javascript__array_literal=>τ[ • javascript__element_list τ]';
    '89:339 javascript__array_literal=>τ[ • javascript__element_list τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ • javascript__element_list τ, τ]';
    '89:340 javascript__array_literal=>τ[ • τ]';
    scan( state.lexer, 361, 9 );
    if( isTokenActive( state.lexer._type, 362 ) ){
        'Asserts [  ... yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 3 peek_level-1 [  91  ]';
        '89:338 javascript__array_literal=>τ[ • javascript__element_list τ]';
        '89:339 javascript__array_literal=>τ[ • javascript__element_list τ, javascript__elision τ]';
        '89:341 javascript__array_literal=>τ[ • javascript__element_list τ, τ]';
        scan( state.lexer, 48, 11 );
        state.push_fn( branch_27b80b951a972904, 0 );
        return hc_javascript__element_list( state, db, 0 )
    } else if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_1b116c1a362ad4ac, 89 );
        state.push_fn( branch_ed4624f960cac15d, 89 );
        return 0
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*89*/, 89 );
        '"--LEAF--"';
        '89:340 javascript__array_literal=>τ[ • τ]';
        consume( state );
        add_reduce( state, 2, 104 );
        return 0
    }
};
    return - 1
}

function hc_javascript__elision(state, db, prod){
    scan( state.lexer, 100, 11 );
    'offset 0 peek_level-1 [  ,  ]';
    '90:342 javascript__elision=>• τ,';
    if( state.lexer._type  == 58 ){
    'Assert Consume [  ,  ]';
    consume( state );
    '"--LEAF--"';
    '90:342 javascript__elision=>τ, •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 106 );
    return hc_javascript__elision_goto( state, db, 90 )
};
    return - 1
}

function hc_javascript__elision_goto(state, db, prod){
    'offset 1 peek_level-1 [  ] yield async ( new super import this class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await 40 [ { ... ,  ]';
    '90:343 javascript__elision=>javascript__elision • τ,';
    '89:337 javascript__array_literal=>τ[ javascript__elision • τ]';
    '89:339 javascript__array_literal=>τ[ javascript__element_list τ, javascript__elision • τ]';
    '113:420 javascript__array_binding_pattern=>τ[ javascript__elision • τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • τ]';
    '91:344 javascript__element_list=>javascript__elision • javascript__assignment_expression';
    '91:346 javascript__element_list=>javascript__element_list τ, javascript__elision • javascript__assignment_expression';
    '115:427 javascript__binding_elision_element=>javascript__elision • javascript__binding_element';
    '91:345 javascript__element_list=>javascript__elision • javascript__spread_element';
    '91:347 javascript__element_list=>javascript__element_list τ, javascript__elision • javascript__spread_element';
    '113:416 javascript__array_binding_pattern=>τ[ javascript__elision • javascript__binding_rest_element τ]';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, javascript__elision • javascript__binding_rest_element τ]';
    scan( state.lexer, 361, 9 );
    if( isTokenActive( state.lexer._type, 363 ) ){
    'Asserts [  ] yield async ( new super import this class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 90
} else if( state.lexer._type  == 59 || state.lexer._type  == 96 || state.lexer._type  == 16 || state.lexer._type  == 111 ){
    'Asserts [  40 [ { ...  ]';
    var fk1 = state.fork( db );;
    fk1.push_fn( branch_dd01c670f9b5a5d5, 90 );
    state.push_fn( branch_dd01c670f9b5a5d5, 90 );
    return 0
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( hc_javascript__elision_goto /*hc_javascript__elision_goto( state, db, 90 )*/, 90 );
    '"--LEAF--"';
    '90:343 javascript__elision=>javascript__elision • τ,';
    scan( state.lexer, 100, 11 );
    consume( state );
    add_reduce( state, 2, 107 );
    return 0
};
    return ( prod  == 90 ) ? prod  : - 1
}

function hc_javascript__element_list(state, db, prod){
    scan( state.lexer, 48, 11 );
    'offset 0 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await , ...  ]';
    '91:344 javascript__element_list=>• javascript__elision javascript__assignment_expression';
    '91:345 javascript__element_list=>• javascript__elision javascript__spread_element';
    '91:348 javascript__element_list=>• javascript__assignment_expression';
    '91:349 javascript__element_list=>• javascript__spread_element';
    if( isTokenActive( state.lexer._type, 20 ) ){
    'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    '"--LEAF--"';
    '91:348 javascript__element_list=>• javascript__assignment_expression';
    state.push_fn( branch_5cb267bf74038e65, 91 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 2 peek_level-1 [  90  ]';
    '91:344 javascript__element_list=>• javascript__elision javascript__assignment_expression';
    '91:345 javascript__element_list=>• javascript__elision javascript__spread_element';
    scan( state.lexer, 100, 11 );
    state.push_fn( branch_a09e7c8106240880, 0 );
    return hc_javascript__elision( state, db, 0 )
} else {
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    '"--LEAF--"';
    '91:349 javascript__element_list=>• javascript__spread_element';
    state.push_fn( branch_5cb267bf74038e65, 91 );
    return hc_javascript__spread_element( state, db, 0 )
};
    return - 1
}

function hc_javascript__element_list_goto(state, db, prod){
    'offset 1 peek_level0 [  , ]  ]';
    '91:346 javascript__element_list=>javascript__element_list • τ, javascript__elision javascript__assignment_expression';
    '91:347 javascript__element_list=>javascript__element_list • τ, javascript__elision javascript__spread_element';
    '91:350 javascript__element_list=>javascript__element_list • τ, javascript__assignment_expression';
    '91:351 javascript__element_list=>javascript__element_list • τ, javascript__spread_element';
    '89:339 javascript__array_literal=>τ[ javascript__element_list • τ, javascript__elision τ]';
    '89:341 javascript__array_literal=>τ[ javascript__element_list • τ, τ]';
    '89:338 javascript__array_literal=>τ[ javascript__element_list • τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await , ... ]  ]';
    '91:346 javascript__element_list=>javascript__element_list • τ, javascript__elision javascript__assignment_expression';
    '91:347 javascript__element_list=>javascript__element_list • τ, javascript__elision javascript__spread_element';
    '91:350 javascript__element_list=>javascript__element_list • τ, javascript__assignment_expression';
    '91:351 javascript__element_list=>javascript__element_list • τ, javascript__spread_element';
    '89:341 javascript__array_literal=>τ[ javascript__element_list τ, • τ]';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 361, 9 );
    if( isTokenActive( pk._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.lexer._type  = 149;
        state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
        '"--LEAF--"';
        '91:350 javascript__element_list=>javascript__element_list • τ, javascript__assignment_expression';
        consume( state );
        state.push_fn( branch_aea5465f0a146c0f, 91 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( pk._type  == 58 ){
        'Asserts [  ,  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  ,  ]';
        '91:346 javascript__element_list=>javascript__element_list • τ, javascript__elision javascript__assignment_expression';
        '91:347 javascript__element_list=>javascript__element_list • τ, javascript__elision javascript__spread_element';
        'offset 6 peek_level-1 [  90  ]';
        '91:346 javascript__element_list=>javascript__element_list τ, • javascript__elision javascript__assignment_expression';
        '91:347 javascript__element_list=>javascript__element_list τ, • javascript__elision javascript__spread_element';
        scan( state.lexer, 100, 11 );
        state.push_fn( branch_55eb4e55904bc9d1, 0 );
        return hc_javascript__elision( state, db, 0 )
    } else {
        state.lexer._type  = 111;
        state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
        '"--LEAF--"';
        '91:351 javascript__element_list=>javascript__element_list • τ, javascript__spread_element';
        consume( state );
        state.push_fn( branch_aea5465f0a146c0f, 91 );
        return hc_javascript__spread_element( state, db, 0 )
    }
};
    return ( prod  == 91 ) ? prod  : - 1
}

function hc_javascript__spread_element(state, db, prod){
    scan( state.lexer, 364, 11 );
    'offset 0 peek_level-1 [  ...  ]';
    '92:352 javascript__spread_element=>• τ... javascript__assignment_expression';
    if( state.lexer._type  == 111 ){
    'Assert Consume [  ...  ]';
    consume( state );
    '"--LEAF--"';
    '92:352 javascript__spread_element=>τ... • javascript__assignment_expression';
    scan( state.lexer, 21, 11 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
        state.push_fn( branch_b84b8efa7845113b, 92 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__object_literal(state, db, prod){
    scan( state.lexer, 13, 11 );
    'offset 0 peek_level-1 [  {  ]';
    '93:353 javascript__object_literal=>• τ{ τ}';
    '93:354 javascript__object_literal=>• τ{ javascript__property_definition_list τ, τ}';
    '93:355 javascript__object_literal=>• τ{ javascript__property_definition_list τ}';
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 1 peek_level-1 [  ... 40 hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ " " 0X 0x 0O 0o 0B 0b num }  ]';
    '93:353 javascript__object_literal=>τ{ • τ}';
    '93:354 javascript__object_literal=>τ{ • javascript__property_definition_list τ, τ}';
    '93:355 javascript__object_literal=>τ{ • javascript__property_definition_list τ}';
    scan( state.lexer, 365, 11 );
    if( isTokenActive( state.lexer._type, 366 ) ){
        'Asserts [  ... 40 hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ " " 0X 0x 0O 0o 0B 0b num  ]';
        'offset 3 peek_level-1 [  94  ]';
        '93:354 javascript__object_literal=>τ{ • javascript__property_definition_list τ, τ}';
        '93:355 javascript__object_literal=>τ{ • javascript__property_definition_list τ}';
        scan( state.lexer, 367, 11 );
        state.push_fn( branch_2b53a12244194b83, 0 );
        return hc_javascript__property_definition_list( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*93*/, 93 );
        '"--LEAF--"';
        '93:353 javascript__object_literal=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 112 );
        return 0
    }
};
    return - 1
}

function hc_javascript__property_definition_list(state, db, prod){
    '"--LEAF--"';
    '94:356 javascript__property_definition_list=>• javascript__property_definition';
    state.push_fn( branch_272a792aedf83485, 94 );
    return hc_javascript__property_definition( state, db, 0 )
}

function hc_javascript__property_definition_list_goto(state, db, prod){
    'offset 1 peek_level0 [  , }  ]';
    '94:357 javascript__property_definition_list=>javascript__property_definition_list • τ, javascript__property_definition';
    '93:354 javascript__object_literal=>τ{ javascript__property_definition_list • τ, τ}';
    '93:355 javascript__object_literal=>τ{ javascript__property_definition_list • τ}';
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  ... 40 hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ " " 0X 0x 0O 0o 0B 0b num }  ]';
    '94:357 javascript__property_definition_list=>javascript__property_definition_list • τ, javascript__property_definition';
    '93:354 javascript__object_literal=>τ{ javascript__property_definition_list τ, • τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 365, 11 );
    if( isTokenActive( pk._type, 366 ) ){
        'Asserts [  ... 40 hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ " " 0X 0x 0O 0o 0B 0b num  ]';
        state.lexer._type  = 111;
        state.push_fn( hc_javascript__property_definition_list_goto /*hc_javascript__property_definition_list_goto( state, db, 94 )*/, 94 );
        '"--LEAF--"';
        '94:357 javascript__property_definition_list=>javascript__property_definition_list • τ, javascript__property_definition';
        consume( state );
        state.push_fn( branch_d689e0319550fcad, 94 );
        return hc_javascript__property_definition( state, db, 0 )
    }
};
    return ( prod  == 94 ) ? prod  : - 1
}

function hc_javascript__property_definition(state, db, prod){
    scan( state.lexer, 367, 11 );
    'offset 0 peek_level0 [  [ " " 0X 0x 0O 0o 0B 0b num 40 hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * ...  ]';
    '95:358 javascript__property_definition=>• javascript__cover_initialized_name';
    '95:359 javascript__property_definition=>• javascript__identifier_property_name';
    '95:360 javascript__property_definition=>• javascript__method_definition';
    '95:362 javascript__property_definition=>• javascript__property_name τ: javascript__assignment_expression';
    '95:361 javascript__property_definition=>• τ... javascript__assignment_expression';
    if( isTokenActive( state.lexer._type, 368 ) ){
    'Asserts [  [ " " 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level-1 [  [ " " 0X 0x 0O 0o 0B 0b num  ]';
    '101:390 javascript__computed_property_name=>• τ[ javascript__assignment_expression τ]';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    scan( state.lexer, 369, 11 );
    if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '101:390 javascript__computed_property_name=>• τ[ javascript__assignment_expression τ]';
        state.push_fn( branch_9ff54e7282ef1152, 99 );
        return hc_javascript__computed_property_name( state, db, prod )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
        state.push_fn( branch_9ff54e7282ef1152, 99 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
        state.push_fn( branch_9ff54e7282ef1152, 99 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 ){
        'Asserts [  0X  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_7a3634b887518149, 99 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 106 ){
        'Asserts [  0x  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_7a3634b887518149, 99 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 ){
        'Asserts [  0O  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_7a3634b887518149, 99 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 108 ){
        'Asserts [  0o  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_7a3634b887518149, 99 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 ){
        'Asserts [  0B  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_7a3634b887518149, 99 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 110 ){
        'Asserts [  0b  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        '"--LEAF--"';
        '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_7a3634b887518149, 99 );
        return hc_javascript__binary_token( state, db, prod )
    } else {
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 84 )*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
} else if( isTokenActive( state.lexer._type, 370 ) ){
    'Asserts [  40 hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token]  ]';
    'offset 2 peek_level-1 [  hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] 40  ]';
    '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
    '98:365 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:369 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:370 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:377 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:379 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ τ}';
    '98:383 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ τ}';
    '98:366 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:372 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ τ}';
    '98:367 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ τ}';
    scan( state.lexer, 371, 11 );
    if( state.lexer._type  == 76801 || state.lexer._type  == 112 || state.lexer._type  == 59 ){
        'Asserts [  hybrid-76801[[async]literal  [40]production_token]  ]';
        'offset 2 peek_level1 [  [ 40 " " 0X 0x 0O 0o 0B 0b num * END_OF_PRODUCTION = : (  ]';
        '98:365 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:369 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 372, 11 );
        if( isTokenActive( pk._type, 373 ) ){
            'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
            state.lexer._type  = 112;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            '"--LEAF--"';
            '98:369 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
            state.push_fn( set_production /*0*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else if( pk._type  == 62 ){
            'Asserts [  *  ]';
            state.lexer._type  = 112;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            '"--LEAF--"';
            '98:365 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
            state.push_fn( set_production /*0*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else {
            state.lexer._type  = 59;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
            '"--LEAF--"';
            '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
            state.push_fn( set_production /*0*/, 97 );
            return hc_javascript__identifier_property_name( state, db, prod )
        }
    } else if( state.lexer._type  == 74753 || state.lexer._type  == 114 || state.lexer._type  == 59 ){
        'Asserts [  hybrid-74753[[get]literal  [40]production_token]  ]';
        'offset 2 peek_level1 [  [ 40 " " 0X 0x 0O 0o 0B 0b num END_OF_PRODUCTION = : (  ]';
        '98:366 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 374, 11 );
        if( isTokenActive( pk._type, 373 ) ){
            'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
            state.lexer._type  = 114;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            '"--LEAF--"';
            '98:366 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ javascript__function_body τ}';
            state.push_fn( set_production /*0*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else {
            state.lexer._type  = 59;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
            '"--LEAF--"';
            '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
            state.push_fn( set_production /*0*/, 97 );
            return hc_javascript__identifier_property_name( state, db, prod )
        }
    } else if( state.lexer._type  == 73729 || state.lexer._type  == 115 || state.lexer._type  == 59 ){
        'Asserts [  hybrid-73729[[set]literal  [40]production_token]  ]';
        'offset 2 peek_level1 [  [ 40 " " 0X 0x 0O 0o 0B 0b num END_OF_PRODUCTION = : (  ]';
        '98:367 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
        '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 374, 11 );
        if( isTokenActive( pk._type, 373 ) ){
            'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
            state.lexer._type  = 115;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            '"--LEAF--"';
            '98:367 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
            state.push_fn( set_production /*0*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else {
            state.lexer._type  = 59;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
            '"--LEAF--"';
            '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
            state.push_fn( set_production /*0*/, 97 );
            return hc_javascript__identifier_property_name( state, db, prod )
        }
    } else if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
        '"--LEAF--"';
        '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
        state.push_fn( set_production /*0*/, 97 );
        return hc_javascript__identifier_property_name( state, db, prod )
    }
} else if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
    '"--LEAF--"';
    '95:360 javascript__property_definition=>• javascript__method_definition';
    state.push_fn( set_production /*0*/, 95 );
    return hc_javascript__method_definition( state, db, 0 )
} else if( state.lexer._type  == 111 ){
    'Asserts [  ...  ]';
    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
    '"--LEAF--"';
    '95:361 javascript__property_definition=>• τ... javascript__assignment_expression';
    consume( state );
    state.push_fn( branch_df9525e73970d08d, 95 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__property_definition_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION : ( END_OF_FILE , ] } = *= ) /= ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_08ae789b89d7d863, 99 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    add_reduce( state, 1, 115 );
                    prod = 99;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level-1 [  n . END_OF_PRODUCTION E e : ( END_OF_FILE , ] } = *= ) /= ?. %= { += ; [ ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    add_reduce( state, 1, 115 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 83 )*/, 83 );
                    '"--LEAF--"';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 98 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 83 );
                        return hc_javascript__float_token_group_597_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 97: 
            {
                'offset 1 peek_level0 [  = , } END_OF_PRODUCTION ( :  ]';
                '96:363 javascript__cover_initialized_name=>javascript__identifier_property_name • javascript__initializer';
                '95:359 javascript__property_definition=>javascript__identifier_property_name •';
                '100:387 javascript__literal_property_name=>javascript__identifier_property_name •';
                scan( state.lexer, 375, 11 );
                if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                    '"--LEAF--"';
                    '96:363 javascript__cover_initialized_name=>javascript__identifier_property_name • javascript__initializer';
                    scan( state.lexer, 212, 11 );
                    if( ( state.lexer._type  == 14 ) ){
                        state.push_fn( branch_a2852cbcab80f24b, 95 );
                        return hc_javascript__initializer( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 58 || state.lexer._type  == 18 || state.lexer._type  == - 1 ){
                    'Assert End [  , } END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '95:359 javascript__property_definition=>javascript__identifier_property_name •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 115 );
                    prod = 95;
                    continue
                } else if( state.lexer._type  == - 1 ){
                    'Assert End [  END_OF_PRODUCTION  ]';
                    'offset 1 peek_level-1 [  ( : , } END_OF_PRODUCTION  ]';
                    '100:387 javascript__literal_property_name=>javascript__identifier_property_name •';
                    '95:359 javascript__property_definition=>javascript__identifier_property_name •';
                    scan( state.lexer, 376, 11 );
                    if( state.lexer._type  == 36 || state.lexer._type  == 70 ){
                        'Assert End [  ( :  ]';
                        '"--LEAF--"';
                        '100:387 javascript__literal_property_name=>javascript__identifier_property_name •';
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 115 );
                        prod = 99;
                        continue
                    } else {
                        '"--LEAF--"';
                        '95:359 javascript__property_definition=>javascript__identifier_property_name •';
                        add_reduce( state, 1, 115 );
                        prod = 95;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '100:387 javascript__literal_property_name=>javascript__identifier_property_name •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 115 );
                    prod = 99;
                    continue
                };
                break
            }
            break;
            case 99: 
            {
                'offset 1 peek_level0 [  ( :  ]';
                '98:374 javascript__method_definition=>javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
                '98:380 javascript__method_definition=>javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
                '98:381 javascript__method_definition=>javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ τ}';
                '98:384 javascript__method_definition=>javascript__property_name • τ( τ) τ{ τ}';
                '95:362 javascript__property_definition=>javascript__property_name • τ: javascript__assignment_expression';
                scan( state.lexer, 377, 11 );
                if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 3 peek_level-1 [  (  ]';
                    '98:374 javascript__method_definition=>javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
                    '98:380 javascript__method_definition=>javascript__property_name • τ( τ) τ{ javascript__function_body τ}';
                    '98:381 javascript__method_definition=>javascript__property_name • τ( javascript__unique_formal_parameters τ) τ{ τ}';
                    '98:384 javascript__method_definition=>javascript__property_name • τ( τ) τ{ τ}';
                    'offset 4 peek_level0 [  ... 40 { [ )  ]';
                    '98:374 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
                    '98:381 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
                    '98:380 javascript__method_definition=>javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
                    '98:384 javascript__method_definition=>javascript__property_name τ( • τ) τ{ τ}';
                    scan( state.lexer, 12, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        'Asserts [  ... 40 { [  ]';
                        'offset 6 peek_level-1 [  102  ]';
                        '98:374 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
                        '98:381 javascript__method_definition=>javascript__property_name τ( • javascript__unique_formal_parameters τ) τ{ τ}';
                        scan( state.lexer, 67, 11 );
                        state.push_fn( branch_e863e3fed681749c, 0 );
                        return hc_javascript__unique_formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        'Asserts [  )  ]';
                        consume( state );
                        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                        'offset 6 peek_level-1 [  )  ]';
                        '98:380 javascript__method_definition=>javascript__property_name τ( • τ) τ{ javascript__function_body τ}';
                        '98:384 javascript__method_definition=>javascript__property_name τ( • τ) τ{ τ}';
                        'offset 7 peek_level-1 [  {  ]';
                        '98:380 javascript__method_definition=>javascript__property_name τ( τ) • τ{ javascript__function_body τ}';
                        '98:384 javascript__method_definition=>javascript__property_name τ( τ) • τ{ τ}';
                        scan( state.lexer, 13, 11 );
                        if( state.lexer._type  == 16 ){
                            'Assert Consume [  {  ]';
                            consume( state );
                            'offset 8 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
                            '98:380 javascript__method_definition=>javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                            '98:384 javascript__method_definition=>javascript__property_name τ( τ) τ{ • τ}';
                            scan( state.lexer, 40, 9 );
                            if( isTokenActive( state.lexer._type, 41 ) ){
                                'Asserts [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                                state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                                '"--LEAF--"';
                                '98:380 javascript__method_definition=>javascript__property_name τ( τ) τ{ • javascript__function_body τ}';
                                state.push_fn( branch_9d87f58cd61f2e04, 95 );
                                return hc_javascript__function_body( state, db, 0 )
                            } else if( state.lexer._type  == 18 ){
                                'Asserts [  }  ]';
                                state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                                '"--LEAF--"';
                                '98:384 javascript__method_definition=>javascript__property_name τ( τ) τ{ • τ}';
                                consume( state );
                                add_reduce( state, 5, 138 );
                                return 0
                            }
                        }
                    }
                } else if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                    '"--LEAF--"';
                    '95:362 javascript__property_definition=>javascript__property_name • τ: javascript__assignment_expression';
                    scan( state.lexer, 15, 11 );
                    consume( state );
                    state.push_fn( branch_f35d7e4ef9d5bd98, 95 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 95 ) ? prod  : - 1
}

function hc_javascript__cover_initialized_name(state, db, prod){
    '"--LEAF--"';
    '96:363 javascript__cover_initialized_name=>• javascript__identifier_property_name javascript__initializer';
    state.push_fn( branch_950c41dd46277dca, 96 );
    return hc_javascript__identifier_property_name( state, db, 0 )
}

function hc_javascript__identifier_property_name(state, db, prod){
    scan( state.lexer, 275, 11 );
    'offset 0 peek_level-1 [  40  ]';
    '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
    if( state.lexer._type  == 59 ){
    'Assert Consume [  40  ]';
    consume( state );
    '"--LEAF--"';
    '97:364 javascript__identifier_property_name=>tk:javascript__composite_identifier •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 118 );
    return 97
};
    return - 1
}

function hc_javascript__method_definition(state, db, prod){
    scan( state.lexer, 378, 11 );
    'offset 0 peek_level0 [  [ 40 " " 0X 0x 0O 0o 0B 0b num hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] *  ]';
    '98:365 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:369 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:370 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:377 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:379 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ τ}';
    '98:383 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ τ}';
    '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
    '98:366 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:372 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ τ}';
    '98:367 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ τ}';
    '98:368 javascript__method_definition=>• τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:375 javascript__method_definition=>• τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>• τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:382 javascript__method_definition=>• τ* javascript__property_name τ( τ) τ{ τ}';
    if( isTokenActive( state.lexer._type, 373 ) ){
    'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level-1 [  99  ]';
    '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
    scan( state.lexer, 379, 11 );
    state.push_fn( branch_494d7aec6e902c8b, 0 );
    return hc_javascript__property_name( state, db, 0 )
} else if( state.lexer._type  == 76801 || state.lexer._type  == 112 || state.lexer._type  == 59 ){
    'Asserts [  hybrid-76801[[async]literal  [40]production_token]  ]';
    'offset 0 peek_level1 [  [ 40 " " 0X 0x 0O 0o 0B 0b num * (  ]';
    '98:365 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:370 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:371 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:379 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ τ}';
    '98:369 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:377 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:378 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:383 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ τ}';
    '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 380, 11 );
    if( isTokenActive( pk._type, 373 ) ){
        'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  async  ]';
        '98:369 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:377 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:378 javascript__method_definition=>• τasync javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:383 javascript__method_definition=>• τasync javascript__property_name τ( τ) τ{ τ}';
        'offset 3 peek_level-1 [  99  ]';
        '98:369 javascript__method_definition=>τasync • javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:377 javascript__method_definition=>τasync • javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:378 javascript__method_definition=>τasync • javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:383 javascript__method_definition=>τasync • javascript__property_name τ( τ) τ{ τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_a022a557e5d1d094, 0 );
        return hc_javascript__property_name( state, db, 0 )
    } else if( pk._type  == 62 ){
        'Asserts [  *  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  async  ]';
        '98:365 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:370 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:371 javascript__method_definition=>• τasync τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:379 javascript__method_definition=>• τasync τ* javascript__property_name τ( τ) τ{ τ}';
        'offset 3 peek_level-1 [  *  ]';
        '98:365 javascript__method_definition=>τasync • τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:370 javascript__method_definition=>τasync • τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:371 javascript__method_definition=>τasync • τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:379 javascript__method_definition=>τasync • τ* javascript__property_name τ( τ) τ{ τ}';
        scan( state.lexer, 205, 11 );
        if( state.lexer._type  == 62 ){
            'Assert Consume [  *  ]';
            consume( state );
            'offset 4 peek_level-1 [  99  ]';
            '98:365 javascript__method_definition=>τasync τ* • javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
            '98:370 javascript__method_definition=>τasync τ* • javascript__property_name τ( τ) τ{ javascript__function_body τ}';
            '98:371 javascript__method_definition=>τasync τ* • javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
            '98:379 javascript__method_definition=>τasync τ* • javascript__property_name τ( τ) τ{ τ}';
            scan( state.lexer, 379, 11 );
            state.push_fn( branch_2cf27f2789755031, 0 );
            return hc_javascript__property_name( state, db, 0 )
        }
    } else {
        'offset 2 peek_level-1 [  99  ]';
        '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_494d7aec6e902c8b, 0 );
        return hc_javascript__property_name( state, db, 0 )
    }
} else if( state.lexer._type  == 74753 || state.lexer._type  == 114 || state.lexer._type  == 59 ){
    'Asserts [  hybrid-74753[[get]literal  [40]production_token]  ]';
    'offset 0 peek_level1 [  [ 40 " " 0X 0x 0O 0o 0B 0b num (  ]';
    '98:366 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:372 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ τ}';
    '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 381, 11 );
    if( isTokenActive( pk._type, 373 ) ){
        'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  get  ]';
        '98:366 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:372 javascript__method_definition=>• τget javascript__property_name τ( τ) τ{ τ}';
        'offset 3 peek_level-1 [  99  ]';
        '98:366 javascript__method_definition=>τget • javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:372 javascript__method_definition=>τget • javascript__property_name τ( τ) τ{ τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_90eebccb68d82021, 0 );
        return hc_javascript__property_name( state, db, 0 )
    } else {
        'offset 2 peek_level-1 [  99  ]';
        '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_494d7aec6e902c8b, 0 );
        return hc_javascript__property_name( state, db, 0 )
    }
} else if( state.lexer._type  == 73729 || state.lexer._type  == 115 || state.lexer._type  == 59 ){
    'Asserts [  hybrid-73729[[set]literal  [40]production_token]  ]';
    'offset 0 peek_level1 [  [ 40 " " 0X 0x 0O 0o 0B 0b num (  ]';
    '98:367 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
    '98:373 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ τ}';
    '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 381, 11 );
    if( isTokenActive( pk._type, 373 ) ){
        'Asserts [  [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  set  ]';
        '98:367 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
        '98:373 javascript__method_definition=>• τset javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ τ}';
        'offset 3 peek_level-1 [  99  ]';
        '98:367 javascript__method_definition=>τset • javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ javascript__function_body τ}';
        '98:373 javascript__method_definition=>τset • javascript__property_name τ( javascript__property_set_parameter_list τ) τ{ τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_a16edcbb2ef21e4e, 0 );
        return hc_javascript__property_name( state, db, 0 )
    } else {
        'offset 2 peek_level-1 [  99  ]';
        '98:374 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
        '98:380 javascript__method_definition=>• javascript__property_name τ( τ) τ{ javascript__function_body τ}';
        '98:381 javascript__method_definition=>• javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
        '98:384 javascript__method_definition=>• javascript__property_name τ( τ) τ{ τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_494d7aec6e902c8b, 0 );
        return hc_javascript__property_name( state, db, 0 )
    }
} else if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  *  ]';
    '98:368 javascript__method_definition=>• τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:375 javascript__method_definition=>• τ* javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>• τ* javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:382 javascript__method_definition=>• τ* javascript__property_name τ( τ) τ{ τ}';
    'offset 3 peek_level-1 [  99  ]';
    '98:368 javascript__method_definition=>τ* • javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ javascript__function_body τ}';
    '98:375 javascript__method_definition=>τ* • javascript__property_name τ( τ) τ{ javascript__function_body τ}';
    '98:376 javascript__method_definition=>τ* • javascript__property_name τ( javascript__unique_formal_parameters τ) τ{ τ}';
    '98:382 javascript__method_definition=>τ* • javascript__property_name τ( τ) τ{ τ}';
    scan( state.lexer, 379, 11 );
    state.push_fn( branch_92ba2008096693fd, 0 );
    return hc_javascript__property_name( state, db, 0 )
};
    return - 1
}

function hc_javascript__property_name(state, db, prod){
    scan( state.lexer, 379, 11 );
    'offset 0 peek_level0 [  40 " " 0X 0x 0O 0o 0B 0b num [  ]';
    '99:385 javascript__property_name=>• javascript__literal_property_name';
    '99:386 javascript__property_name=>• javascript__computed_property_name';
    if( isTokenActive( state.lexer._type, 382 ) ){
    'Asserts [  40 " " 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( set_production /*99*/, 99 );
    '"--LEAF--"';
    '99:385 javascript__property_name=>• javascript__literal_property_name';
    state.push_fn( branch_9ff54e7282ef1152, 99 );
    return hc_javascript__literal_property_name( state, db, 0 )
} else {
    state.push_fn( set_production /*99*/, 99 );
    '"--LEAF--"';
    '99:386 javascript__property_name=>• javascript__computed_property_name';
    state.push_fn( branch_9ff54e7282ef1152, 99 );
    return hc_javascript__computed_property_name( state, db, 0 )
};
    return - 1
}

function hc_javascript__literal_property_name(state, db, prod){
    scan( state.lexer, 383, 11 );
    'offset 0 peek_level0 [  0X 0x 0O 0o 0B 0b num " " 40  ]';
    '100:387 javascript__literal_property_name=>• javascript__identifier_property_name';
    '100:388 javascript__literal_property_name=>• javascript__string_literal';
    '100:389 javascript__literal_property_name=>• javascript__numeric_literal';
    if( isTokenActive( state.lexer._type, 350 ) ){
    'Asserts [  0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( set_production /*100*/, 100 );
    '"--LEAF--"';
    '100:389 javascript__literal_property_name=>• javascript__numeric_literal';
    state.push_fn( set_production /*0*/, 100 );
    return hc_javascript__numeric_literal( state, db, 0 )
} else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
    'Asserts [  " "  ]';
    state.push_fn( set_production /*100*/, 100 );
    '"--LEAF--"';
    '100:388 javascript__literal_property_name=>• javascript__string_literal';
    state.push_fn( set_production /*0*/, 100 );
    return hc_javascript__string_literal( state, db, 0 )
} else {
    state.push_fn( set_production /*100*/, 100 );
    '"--LEAF--"';
    '100:387 javascript__literal_property_name=>• javascript__identifier_property_name';
    state.push_fn( set_production /*0*/, 100 );
    return hc_javascript__identifier_property_name( state, db, 0 )
};
    return - 1
}

function hc_javascript__computed_property_name(state, db, prod){
    scan( state.lexer, 216, 11 );
    'offset 0 peek_level-1 [  [  ]';
    '101:390 javascript__computed_property_name=>• τ[ javascript__assignment_expression τ]';
    if( state.lexer._type  == 96 ){
    'Assert Consume [  [  ]';
    consume( state );
    '"--LEAF--"';
    '101:390 javascript__computed_property_name=>τ[ • javascript__assignment_expression τ]';
    scan( state.lexer, 21, 11 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
        state.push_fn( branch_81e00d8aae69616b, 101 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__unique_formal_parameters(state, db, prod){
    '"--LEAF--"';
    '102:391 javascript__unique_formal_parameters=>• javascript__formal_parameters';
    state.push_fn( set_production /*102*/, 102 );
    return hc_javascript__formal_parameters( state, db, 0 )
}

function hc_javascript__formal_parameters(state, db, prod){
    scan( state.lexer, 67, 11 );
    'offset 0 peek_level0 [  40 { [ ...  ]';
    '103:392 javascript__formal_parameters=>• javascript__function_rest_parameter';
    '103:393 javascript__formal_parameters=>• javascript__formal_parameter_list τ,';
    '103:394 javascript__formal_parameters=>• javascript__formal_parameter_list τ, javascript__function_rest_parameter';
    '103:395 javascript__formal_parameters=>• javascript__formal_parameter_list';
    if( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  40 { [  ]';
    'offset 2 peek_level-1 [  116  ]';
    '103:393 javascript__formal_parameters=>• javascript__formal_parameter_list τ,';
    '103:394 javascript__formal_parameters=>• javascript__formal_parameter_list τ, javascript__function_rest_parameter';
    '103:395 javascript__formal_parameters=>• javascript__formal_parameter_list';
    scan( state.lexer, 142, 11 );
    state.push_fn( branch_aa3c16b74408eee8, 0 );
    return hc_javascript__formal_parameter_list( state, db, 0 )
} else {
    state.push_fn( set_production /*103*/, 103 );
    '"--LEAF--"';
    '103:392 javascript__formal_parameters=>• javascript__function_rest_parameter';
    state.push_fn( branch_be9017ee1fa4e6ba, 103 );
    return hc_javascript__function_rest_parameter( state, db, 0 )
};
    return - 1
}

function hc_javascript__function_rest_parameter(state, db, prod){
    '"--LEAF--"';
    '104:396 javascript__function_rest_parameter=>• javascript__binding_rest_element';
    state.push_fn( set_production /*104*/, 104 );
    return hc_javascript__binding_rest_element( state, db, 0 )
}

function hc_javascript__binding_rest_element(state, db, prod){
    scan( state.lexer, 364, 11 );
    'offset 0 peek_level-1 [  ...  ]';
    '105:397 javascript__binding_rest_element=>• τ... javascript__binding_identifier';
    '105:398 javascript__binding_rest_element=>• τ... javascript__binding_pattern';
    if( state.lexer._type  == 111 ){
    'Assert Consume [  ...  ]';
    consume( state );
    'offset 1 peek_level0 [  { [ 40  ]';
    '105:397 javascript__binding_rest_element=>τ... • javascript__binding_identifier';
    '105:398 javascript__binding_rest_element=>τ... • javascript__binding_pattern';
    scan( state.lexer, 142, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  { [  ]';
        state.push_fn( set_production /*105*/, 105 );
        '"--LEAF--"';
        '105:398 javascript__binding_rest_element=>τ... • javascript__binding_pattern';
        state.push_fn( branch_df9525e73970d08d, 105 );
        return hc_javascript__binding_pattern( state, db, 0 )
    } else {
        state.push_fn( set_production /*105*/, 105 );
        '"--LEAF--"';
        '105:397 javascript__binding_rest_element=>τ... • javascript__binding_identifier';
        state.push_fn( branch_df9525e73970d08d, 105 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binding_pattern(state, db, prod){
    scan( state.lexer, 384, 11 );
    'offset 0 peek_level0 [  { [  ]';
    '106:399 javascript__binding_pattern=>• javascript__object_binding_pattern';
    '106:400 javascript__binding_pattern=>• javascript__array_binding_pattern';
    if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    state.push_fn( set_production /*106*/, 106 );
    '"--LEAF--"';
    '106:399 javascript__binding_pattern=>• javascript__object_binding_pattern';
    state.push_fn( set_production /*0*/, 106 );
    return hc_javascript__object_binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*106*/, 106 );
    '"--LEAF--"';
    '106:400 javascript__binding_pattern=>• javascript__array_binding_pattern';
    state.push_fn( set_production /*0*/, 106 );
    return hc_javascript__array_binding_pattern( state, db, 0 )
};
    return - 1
}

function hc_javascript__object_binding_pattern(state, db, prod){
    scan( state.lexer, 13, 11 );
    'offset 0 peek_level-1 [  {  ]';
    '107:401 javascript__object_binding_pattern=>• τ{ τ}';
    '107:402 javascript__object_binding_pattern=>• τ{ javascript__binding_rest_property τ}';
    '107:403 javascript__object_binding_pattern=>• τ{ javascript__binding_property_list τ}';
    '107:404 javascript__object_binding_pattern=>• τ{ javascript__binding_property_list τ, javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>• τ{ javascript__binding_property_list τ, τ}';
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 1 peek_level-1 [  40 [ " " 0X 0x 0O 0o 0B 0b num } ...  ]';
    '107:401 javascript__object_binding_pattern=>τ{ • τ}';
    '107:402 javascript__object_binding_pattern=>τ{ • javascript__binding_rest_property τ}';
    '107:403 javascript__object_binding_pattern=>τ{ • javascript__binding_property_list τ}';
    '107:404 javascript__object_binding_pattern=>τ{ • javascript__binding_property_list τ, javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>τ{ • javascript__binding_property_list τ, τ}';
    scan( state.lexer, 385, 11 );
    if( isTokenActive( state.lexer._type, 373 ) ){
        'Asserts [  40 [ " " 0X 0x 0O 0o 0B 0b num  ]';
        'offset 3 peek_level-1 [  109  ]';
        '107:403 javascript__object_binding_pattern=>τ{ • javascript__binding_property_list τ}';
        '107:404 javascript__object_binding_pattern=>τ{ • javascript__binding_property_list τ, javascript__binding_rest_property τ}';
        '107:405 javascript__object_binding_pattern=>τ{ • javascript__binding_property_list τ, τ}';
        scan( state.lexer, 379, 11 );
        state.push_fn( branch_852d672a81a2b967, 0 );
        return hc_javascript__binding_property_list( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*107*/, 107 );
        '"--LEAF--"';
        '107:401 javascript__object_binding_pattern=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 143 );
        return 0
    } else {
        state.push_fn( set_production /*107*/, 107 );
        '"--LEAF--"';
        '107:402 javascript__object_binding_pattern=>τ{ • javascript__binding_rest_property τ}';
        state.push_fn( branch_9ea8d8de93214b70, 107 );
        return hc_javascript__binding_rest_property( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binding_rest_property(state, db, prod){
    scan( state.lexer, 364, 11 );
    'offset 0 peek_level-1 [  ...  ]';
    '108:406 javascript__binding_rest_property=>• τ... javascript__binding_identifier';
    if( state.lexer._type  == 111 ){
    'Assert Consume [  ...  ]';
    consume( state );
    '"--LEAF--"';
    '108:406 javascript__binding_rest_property=>τ... • javascript__binding_identifier';
    scan( state.lexer, 275, 11 );
    if( ( state.lexer._type  == 59 ) ){
        state.push_fn( branch_f7f9a108d1dea7e0, 108 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binding_property_list(state, db, prod){
    '"--LEAF--"';
    '109:407 javascript__binding_property_list=>• javascript__binding_property';
    state.push_fn( branch_f3b2e02e29fc4964, 109 );
    return hc_javascript__binding_property( state, db, 0 )
}

function hc_javascript__binding_property_list_goto(state, db, prod){
    'offset 1 peek_level0 [  , }  ]';
    '109:408 javascript__binding_property_list=>javascript__binding_property_list • τ, javascript__binding_property';
    '107:404 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ, javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ, τ}';
    '107:403 javascript__object_binding_pattern=>τ{ javascript__binding_property_list • τ}';
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  40 [ " " 0X 0x 0O 0o 0B 0b num ... }  ]';
    '109:408 javascript__binding_property_list=>javascript__binding_property_list • τ, javascript__binding_property';
    '107:404 javascript__object_binding_pattern=>τ{ javascript__binding_property_list τ, • javascript__binding_rest_property τ}';
    '107:405 javascript__object_binding_pattern=>τ{ javascript__binding_property_list τ, • τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 385, 11 );
    if( isTokenActive( pk._type, 373 ) ){
        'Asserts [  40 [ " " 0X 0x 0O 0o 0B 0b num  ]';
        state.lexer._type  = 59;
        state.push_fn( hc_javascript__binding_property_list_goto /*hc_javascript__binding_property_list_goto( state, db, 109 )*/, 109 );
        '"--LEAF--"';
        '109:408 javascript__binding_property_list=>javascript__binding_property_list • τ, javascript__binding_property';
        consume( state );
        state.push_fn( branch_aea5465f0a146c0f, 109 );
        return hc_javascript__binding_property( state, db, 0 )
    }
};
    return ( prod  == 109 ) ? prod  : - 1
}

function hc_javascript__binding_property(state, db, prod){
    scan( state.lexer, 379, 11 );
    'offset 0 peek_level0 [  [ " " 0X 0x 0O 0o 0B 0b num 40  ]';
    '110:409 javascript__binding_property=>• javascript__single_name_binding';
    '110:410 javascript__binding_property=>• javascript__property_name τ: javascript__binding_element';
    if( isTokenActive( state.lexer._type, 368 ) ){
    'Asserts [  [ " " 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( hc_javascript__binding_property_goto /*hc_javascript__binding_property_goto( state, db, 110 )*/, 110 );
    '"--LEAF--"';
    '110:410 javascript__binding_property=>• javascript__property_name τ: javascript__binding_element';
    state.push_fn( branch_029533987ebaf81f, 110 );
    return hc_javascript__property_name( state, db, 0 )
} else if( state.lexer._type  == 59 ){
    'Asserts [  40  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  40  ]';
    '55:222 javascript__binding_identifier=>• tk:javascript__composite_identifier';
    '97:364 javascript__identifier_property_name=>• tk:javascript__composite_identifier';
    'offset 3 peek_level-1 [  : ) } = ] , ( extends { ; END_OF_FILE nl in of END_OF_PRODUCTION  ]';
    '97:364 javascript__identifier_property_name=>tk:javascript__composite_identifier •';
    '55:222 javascript__binding_identifier=>tk:javascript__composite_identifier •';
    scan( state.lexer, 386, 11 );
    if( state.lexer._type  == 70 ){
        'Assert End [  :  ]';
        '"--LEAF--"';
        '97:364 javascript__identifier_property_name=>tk:javascript__composite_identifier •';
        add_reduce( state, 1, 118 );
        add_reduce( state, 1, 115 );
        return hc_javascript__binding_property_goto( state, db, 99 )
    } else {
        '"--LEAF--"';
        '55:222 javascript__binding_identifier=>tk:javascript__composite_identifier •';
        add_reduce( state, 1, 67 );
        return hc_javascript__binding_property_goto( state, db, 55 )
    }
};
    return - 1
}

function hc_javascript__binding_property_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 55: 
            {
                'offset 1 peek_level0 [  = } , ] ) END_OF_PRODUCTION  ]';
                '111:411 javascript__single_name_binding=>javascript__binding_identifier • javascript__initializer';
                '111:412 javascript__single_name_binding=>javascript__binding_identifier •';
                scan( state.lexer, 75, 11 );
                if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__binding_property_goto /*hc_javascript__binding_property_goto( state, db, 110 )*/, 110 );
                    '"--LEAF--"';
                    '111:411 javascript__single_name_binding=>javascript__binding_identifier • javascript__initializer';
                    scan( state.lexer, 212, 11 );
                    if( ( state.lexer._type  == 14 ) ){
                        state.push_fn( branch_a7de5534b43714bf, 110 );
                        return hc_javascript__initializer( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '111:412 javascript__single_name_binding=>javascript__binding_identifier •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 148 );
                    prod = 110;
                    continue
                };
                break
            }
            break;
            case 99: 
            {
                'offset 1 peek_level-1 [  :  ]';
                '110:410 javascript__binding_property=>javascript__property_name • τ: javascript__binding_element';
                scan( state.lexer, 387, 0 );
                if( state.lexer._type  == 70 ){
                    'Assert Consume [  :  ]';
                    consume( state );
                    '"--LEAF--"';
                    '110:410 javascript__binding_property=>javascript__property_name τ: • javascript__binding_element';
                    scan( state.lexer, 142, 11 );
                    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
                        state.push_fn( branch_f1ff063f87b0360a, 110 );
                        return hc_javascript__binding_element( state, db, 0 )
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 110 ) ? prod  : - 1
}

function hc_javascript__single_name_binding(state, db, prod){
    'offset 0 peek_level-1 [  55  ]';
    '111:411 javascript__single_name_binding=>• javascript__binding_identifier javascript__initializer';
    '111:412 javascript__single_name_binding=>• javascript__binding_identifier';
    state.push_fn( branch_33f01da137d9ee76, 0 );
    return hc_javascript__binding_identifier( state, db, 0 )
}

function hc_javascript__binding_element(state, db, prod){
    scan( state.lexer, 142, 11 );
    'offset 0 peek_level0 [  { [ 40  ]';
    '112:413 javascript__binding_element=>• javascript__single_name_binding';
    '112:414 javascript__binding_element=>• javascript__binding_pattern javascript__initializer';
    '112:415 javascript__binding_element=>• javascript__binding_pattern';
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  { [  ]';
    'offset 2 peek_level-1 [  106  ]';
    '112:414 javascript__binding_element=>• javascript__binding_pattern javascript__initializer';
    '112:415 javascript__binding_element=>• javascript__binding_pattern';
    scan( state.lexer, 384, 11 );
    state.push_fn( branch_880a3004fa6a988d, 0 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*112*/, 112 );
    '"--LEAF--"';
    '112:413 javascript__binding_element=>• javascript__single_name_binding';
    state.push_fn( set_production /*0*/, 112 );
    return hc_javascript__single_name_binding( state, db, 0 )
};
    return - 1
}

function hc_javascript__array_binding_pattern(state, db, prod){
    scan( state.lexer, 216, 11 );
    'offset 0 peek_level-1 [  [  ]';
    '113:416 javascript__array_binding_pattern=>• τ[ javascript__elision javascript__binding_rest_element τ]';
    '113:417 javascript__array_binding_pattern=>• τ[ javascript__binding_element_list τ]';
    '113:418 javascript__array_binding_pattern=>• τ[ javascript__binding_element_list τ, javascript__elision javascript__binding_rest_element τ]';
    '113:419 javascript__array_binding_pattern=>• τ[ javascript__binding_rest_element τ]';
    '113:420 javascript__array_binding_pattern=>• τ[ javascript__elision τ]';
    '113:421 javascript__array_binding_pattern=>• τ[ javascript__binding_element_list τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>• τ[ javascript__binding_element_list τ, javascript__elision τ]';
    '113:423 javascript__array_binding_pattern=>• τ[ τ]';
    '113:424 javascript__array_binding_pattern=>• τ[ javascript__binding_element_list τ, τ]';
    if( state.lexer._type  == 96 ){
    'Assert Consume [  [  ]';
    consume( state );
    'offset 1 peek_level0 [  40 { [ , ... ]  ]';
    '113:416 javascript__array_binding_pattern=>τ[ • javascript__elision javascript__binding_rest_element τ]';
    '113:417 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ]';
    '113:418 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__elision javascript__binding_rest_element τ]';
    '113:420 javascript__array_binding_pattern=>τ[ • javascript__elision τ]';
    '113:421 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, τ]';
    '113:419 javascript__array_binding_pattern=>τ[ • javascript__binding_rest_element τ]';
    '113:423 javascript__array_binding_pattern=>τ[ • τ]';
    scan( state.lexer, 388, 11 );
    if( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        'Asserts [  40 { [  ]';
        'offset 3 peek_level-1 [  114  ]';
        '113:417 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ]';
        '113:418 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__elision javascript__binding_rest_element τ]';
        '113:421 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__binding_rest_element τ]';
        '113:422 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, javascript__elision τ]';
        '113:424 javascript__array_binding_pattern=>τ[ • javascript__binding_element_list τ, τ]';
        scan( state.lexer, 49, 11 );
        state.push_fn( branch_a69ba5f976ce1c39, 0 );
        return hc_javascript__binding_element_list( state, db, 0 )
    } else if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_1b878f79e1413e9e, 113 );
        state.push_fn( branch_5418b9fc1dbfcf4f, 113 );
        return 0
    } else if( state.lexer._type  == 111 ){
        'Asserts [  ...  ]';
        state.push_fn( set_production /*113*/, 113 );
        '"--LEAF--"';
        '113:419 javascript__array_binding_pattern=>τ[ • javascript__binding_rest_element τ]';
        state.push_fn( branch_659029be4454979b, 113 );
        return hc_javascript__binding_rest_element( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        'Asserts [  ]  ]';
        state.push_fn( set_production /*113*/, 113 );
        '"--LEAF--"';
        '113:423 javascript__array_binding_pattern=>τ[ • τ]';
        consume( state );
        add_reduce( state, 2, 154 );
        return 0
    }
};
    return - 1
}

function hc_javascript__binding_element_list(state, db, prod){
    '"--LEAF--"';
    '114:425 javascript__binding_element_list=>• javascript__binding_elision_element';
    state.push_fn( hc_javascript__binding_element_list_goto /*hc_javascript__binding_element_list_goto( state, db, 114 )*/, 114 );
    return hc_javascript__binding_elision_element( state, db, 0 )
}

function hc_javascript__binding_element_list_goto(state, db, prod){
    'offset 1 peek_level0 [  , ]  ]';
    '114:426 javascript__binding_element_list=>javascript__binding_element_list • τ, javascript__binding_elision_element';
    '113:418 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision javascript__binding_rest_element τ]';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__binding_rest_element τ]';
    '113:422 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, javascript__elision τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ, τ]';
    '113:417 javascript__array_binding_pattern=>τ[ javascript__binding_element_list • τ]';
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  , 40 { [ ... ]  ]';
    '114:426 javascript__binding_element_list=>javascript__binding_element_list • τ, javascript__binding_elision_element';
    '113:421 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • javascript__binding_rest_element τ]';
    '113:424 javascript__array_binding_pattern=>τ[ javascript__binding_element_list τ, • τ]';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 388, 11 );
    if( pk._type  == 58 || pk._type  == 59 || pk._type  == 16 || pk._type  == 96 ){
        'Asserts [  , 40 { [  ]';
        state.lexer._type  = 58;
        state.push_fn( hc_javascript__binding_element_list_goto /*hc_javascript__binding_element_list_goto( state, db, 114 )*/, 114 );
        '"--LEAF--"';
        '114:426 javascript__binding_element_list=>javascript__binding_element_list • τ, javascript__binding_elision_element';
        consume( state );
        state.push_fn( branch_333c57caa5474a61, 114 );
        return hc_javascript__binding_elision_element( state, db, 0 )
    }
};
    return ( prod  == 114 ) ? prod  : - 1
}

function hc_javascript__binding_elision_element(state, db, prod){
    scan( state.lexer, 49, 11 );
    'offset 0 peek_level0 [  40 { [ ,  ]';
    '115:427 javascript__binding_elision_element=>• javascript__elision javascript__binding_element';
    '115:428 javascript__binding_elision_element=>• javascript__binding_element';
    if( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  40 { [  ]';
    state.push_fn( set_production /*115*/, 115 );
    '"--LEAF--"';
    '115:428 javascript__binding_elision_element=>• javascript__binding_element';
    state.push_fn( branch_5cb267bf74038e65, 115 );
    return hc_javascript__binding_element( state, db, 0 )
} else {
    state.push_fn( set_production /*115*/, 115 );
    '"--LEAF--"';
    '115:427 javascript__binding_elision_element=>• javascript__elision javascript__binding_element';
    state.push_fn( branch_87b3679504a7f0fb, 115 );
    return hc_javascript__elision( state, db, 0 )
};
    return - 1
}

function hc_javascript__formal_parameter_list(state, db, prod){
    '"--LEAF--"';
    '116:429 javascript__formal_parameter_list=>• javascript__formal_parameter';
    state.push_fn( branch_10b1b41c67b5a780, 116 );
    return hc_javascript__formal_parameter( state, db, 0 )
}

function hc_javascript__formal_parameter_list_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 116: 
            {
                'offset 1 peek_level0 [  , ) END_OF_PRODUCTION  ]';
                '116:430 javascript__formal_parameter_list=>javascript__formal_parameter_list • τ, javascript__formal_parameter';
                '103:393 javascript__formal_parameters=>javascript__formal_parameter_list • τ,';
                '103:394 javascript__formal_parameters=>javascript__formal_parameter_list • τ, javascript__function_rest_parameter';
                '103:395 javascript__formal_parameters=>javascript__formal_parameter_list •';
                scan( state.lexer, 16, 11 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    'offset 3 peek_level1 [  40 { [ ) END_OF_PRODUCTION ...  ]';
                    '116:430 javascript__formal_parameter_list=>javascript__formal_parameter_list • τ, javascript__formal_parameter';
                    '103:393 javascript__formal_parameters=>javascript__formal_parameter_list τ, •';
                    '103:394 javascript__formal_parameters=>javascript__formal_parameter_list τ, • javascript__function_rest_parameter';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 389, 11 );
                    if( pk._type  == 59 || pk._type  == 16 || pk._type  == 96 ){
                        'Asserts [  40 { [  ]';
                        state.lexer._type  = 59;
                        state.push_fn( hc_javascript__formal_parameter_list_goto /*hc_javascript__formal_parameter_list_goto( state, db, 116 )*/, 116 );
                        '"--LEAF--"';
                        '116:430 javascript__formal_parameter_list=>javascript__formal_parameter_list • τ, javascript__formal_parameter';
                        consume( state );
                        state.push_fn( branch_a8b069c903e9e56e, 116 );
                        return hc_javascript__formal_parameter( state, db, 0 )
                    }
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 116 ) ? prod  : - 1
}

function hc_javascript__formal_parameter(state, db, prod){
    '"--LEAF--"';
    '117:431 javascript__formal_parameter=>• javascript__binding_element';
    state.push_fn( set_production /*117*/, 117 );
    return hc_javascript__binding_element( state, db, 0 )
}

function hc_javascript__function_body(state, db, prod){
    '"--LEAF--"';
    '118:432 javascript__function_body=>• javascript__function_statement_list';
    state.push_fn( branch_0e8dacddd33b72aa, 118 );
    return hc_javascript__function_statement_list( state, db, 0 )
}

function hc_javascript__function_statement_list(state, db, prod){
    scan( state.lexer, 390, 11 );
    'offset 0 peek_level0 [   var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    '119:433 javascript__function_statement_list=>• javascript__statement_list';
    '119:434 javascript__function_statement_list=>• ɛ';
    if( state.lexer._type  == 57 ){
    'Asserts [    ]';
    state.push_fn( set_production /*119*/, 119 );
    '"--LEAF--"';
    '119:434 javascript__function_statement_list=>• ɛ';
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 0
} else if( isTokenActive( state.lexer._type, 104 ) ){
    'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( set_production /*119*/, 119 );
    '"--LEAF--"';
    '119:433 javascript__function_statement_list=>• javascript__statement_list';
    state.push_fn( set_production /*0*/, 119 );
    return hc_javascript__statement_list( state, db, 0 )
};
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 119
}

function hc_javascript__statement_list(state, db, prod){
    '"--LEAF--"';
    '120:435 javascript__statement_list=>• javascript__statement_list_item';
    state.push_fn( branch_ef2493182c2ee6b7, 120 );
    return hc_javascript__statement_list_item( state, db, 0 )
}

function hc_javascript__statement_list_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 120: 
            {
                'offset 1 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await < } default case END_OF_PRODUCTION </  ]';
                '120:436 javascript__statement_list=>javascript__statement_list • javascript__statement_list_item';
                '265:875 javascript__script_body=>javascript__statement_list •';
                '124:454 javascript__block=>τ{ javascript__statement_list • τ}';
                '119:433 javascript__function_statement_list=>javascript__statement_list •';
                '144:532 javascript__case_clause=>τcase javascript__expression τ: javascript__statement_list •';
                '145:534 javascript__default_clause=>τdefault τ: javascript__statement_list •';
                scan( state.lexer, 391, 9 );
                if( isTokenActive( state.lexer._type, 80 ) ){
                    'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    state.push_fn( hc_javascript__statement_list_goto /*hc_javascript__statement_list_goto( state, db, 120 )*/, 120 );
                    '"--LEAF--"';
                    '120:436 javascript__statement_list=>javascript__statement_list • javascript__statement_list_item';
                    scan( state.lexer, 392, 11 );
                    if( ( isTokenActive( state.lexer._type, 104 ) ) ){
                        state.push_fn( branch_c5bd86106a93e50c, 120 );
                        return hc_javascript__statement_list_item( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    'offset 1 peek_level1 [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
                    '120:436 javascript__statement_list=>javascript__statement_list • javascript__statement_list_item';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 251, 9 );
                    if( isTokenActive( pk._type, 82 ) ){
                        'Asserts [  13 input area base br col command embed hr img keygen link meta param source track wbr f STYLE style  ]';
                        state.lexer._type  = 27;
                        state.push_fn( hc_javascript__statement_list_goto /*hc_javascript__statement_list_goto( state, db, 120 )*/, 120 );
                        '"--LEAF--"';
                        '120:436 javascript__statement_list=>javascript__statement_list • javascript__statement_list_item';
                        scan( state.lexer, 392, 11 );
                        if( ( isTokenActive( state.lexer._type, 104 ) ) ){
                            state.push_fn( branch_c5bd86106a93e50c, 120 );
                            return hc_javascript__statement_list_item( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == - 1 || state.lexer._type  == 128 ){
                    'Assert End [  END_OF_PRODUCTION case  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 120
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 120 ) ? prod  : - 1
}

function hc_javascript__statement_list_item(state, db, prod){
    scan( state.lexer, 392, 11 );
    'offset 0 peek_level0 [  var ; if continue break return with throw try debugger { 40 do while for switch yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await async class function let const  ]';
    '121:437 javascript__statement_list_item=>• javascript__statement';
    '121:438 javascript__statement_list_item=>• javascript__declaration';
    if( isTokenActive( state.lexer._type, 393 ) ){
    'Asserts [  var ; if continue break return with throw try debugger { 40 do while for switch yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 121 )*/, 121 );
    '"--LEAF--"';
    '121:437 javascript__statement_list_item=>• javascript__statement';
    state.push_fn( set_production /*0*/, 121 );
    return hc_javascript__statement( state, db, 0 )
} else if( state.lexer._type  == 116 || state.lexer._type  == 138 || state.lexer._type  == 117 ){
    'Asserts [  async class function  ]';
    'offset 2 peek_level0 [  async class function  ]';
    '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '165:574 javascript__class_expression=>• τclass javascript__class_heritage τ{ javascript__class_body τ}';
    '165:575 javascript__class_expression=>• τclass javascript__binding_identifier τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ τ}';
    '165:577 javascript__class_expression=>• τclass τ{ javascript__class_body τ}';
    '165:578 javascript__class_expression=>• τclass javascript__class_heritage τ{ τ}';
    '165:579 javascript__class_expression=>• τclass javascript__binding_identifier τ{ τ}';
    '165:580 javascript__class_expression=>• τclass τ{ τ}';
    '158:556 javascript__class_declaration=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '158:557 javascript__class_declaration=>• τclass javascript__class_heritage τ{ javascript__class_body τ}';
    '158:558 javascript__class_declaration=>• τclass javascript__binding_identifier τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>• τclass javascript__binding_identifier javascript__class_heritage τ{ τ}';
    '158:560 javascript__class_declaration=>• τclass τ{ javascript__class_body τ}';
    '158:561 javascript__class_declaration=>• τclass javascript__class_heritage τ{ τ}';
    '158:562 javascript__class_declaration=>• τclass javascript__binding_identifier τ{ τ}';
    '158:563 javascript__class_declaration=>• τclass τ{ τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 394, 11 );
    if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  async  ]';
        '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
        'offset 5 peek_level0 [  function 40 (  ]';
        '197:661 javascript__arrow_function=>τasync • javascript__arrow_parameters τ=> javascript__concise_body';
        '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 117 ){
            'Asserts [  function  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 7 peek_level-1 [  function  ]';
            '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
            'offset 8 peek_level0 [  * ( 40  ]';
            '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
            '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 308, 11 );
            if( state.lexer._type  == 62 ){
                'Asserts [  *  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  *  ]';
                '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
                'offset 11 peek_level0 [  ( 40  ]';
                '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 309, 11 );
                if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 13 peek_level-1 [  (  ]';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                    'offset 14 peek_level0 [  ... 40 { [ )  ]';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                    scan( state.lexer, 12, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        'Asserts [  ... 40 { [  ]';
                        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                        '"--LEAF--"';
                        '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                        state.push_fn( branch_344f60932931ec0d, 130 );
                        return hc_javascript__formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        'Asserts [  )  ]';
                        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                        '"--LEAF--"';
                        '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                        consume( state );
                        scan( state.lexer, 13, 11 );
                        if( ( state.lexer._type  == 16 ) ){
                            consume( state );
                            state.push_fn( branch_0197a94536844bcf, 130 );
                            return hc_javascript__function_body( state, db, 0 )
                        };
                        return - 1
                    }
                } else {
                    'offset 13 peek_level-1 [  55  ]';
                    '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                    scan( state.lexer, 275, 11 );
                    state.push_fn( branch_40120370a93deec0, 0 );
                    return hc_javascript__binding_identifier( state, db, 0 )
                }
            } else if( state.lexer._type  == 36 ){
                'Asserts [  (  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  (  ]';
                '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
                'offset 11 peek_level0 [  ... 40 { [ )  ]';
                '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 12, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    'Asserts [  ... 40 { [  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                    '"--LEAF--"';
                    '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    state.push_fn( branch_8be81d01f471225f, 130 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    'Asserts [  )  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                    '"--LEAF--"';
                    '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                    consume( state );
                    scan( state.lexer, 13, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_2a1990963919bde5, 130 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                'offset 10 peek_level-1 [  55  ]';
                '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 275, 11 );
                state.push_fn( branch_e6421c43dfc2d652, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else {
            state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
            '"--LEAF--"';
            '197:661 javascript__arrow_function=>τasync • javascript__arrow_parameters τ=> javascript__concise_body';
            state.push_fn( branch_4656c4977caeeecb, 126 );
            return hc_javascript__arrow_parameters( state, db, 0 )
        }
    } else if( state.lexer._type  == 138 ){
        'Asserts [  class  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  class  ]';
        '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        '165:574 javascript__class_expression=>• τclass javascript__class_heritage τ{ javascript__class_body τ}';
        '165:575 javascript__class_expression=>• τclass javascript__binding_identifier τ{ javascript__class_body τ}';
        '165:576 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ τ}';
        '165:577 javascript__class_expression=>• τclass τ{ javascript__class_body τ}';
        '165:578 javascript__class_expression=>• τclass javascript__class_heritage τ{ τ}';
        '165:579 javascript__class_expression=>• τclass javascript__binding_identifier τ{ τ}';
        '165:580 javascript__class_expression=>• τclass τ{ τ}';
        '158:556 javascript__class_declaration=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        '158:557 javascript__class_declaration=>• τclass javascript__class_heritage τ{ javascript__class_body τ}';
        '158:558 javascript__class_declaration=>• τclass javascript__binding_identifier τ{ javascript__class_body τ}';
        '158:559 javascript__class_declaration=>• τclass javascript__binding_identifier javascript__class_heritage τ{ τ}';
        '158:560 javascript__class_declaration=>• τclass τ{ javascript__class_body τ}';
        '158:561 javascript__class_declaration=>• τclass javascript__class_heritage τ{ τ}';
        '158:562 javascript__class_declaration=>• τclass javascript__binding_identifier τ{ τ}';
        '158:563 javascript__class_declaration=>• τclass τ{ τ}';
        'offset 5 peek_level0 [  extends { 40  ]';
        '165:573 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        '165:575 javascript__class_expression=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
        '165:576 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
        '165:579 javascript__class_expression=>τclass • javascript__binding_identifier τ{ τ}';
        '158:556 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        '158:558 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
        '158:559 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
        '158:562 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ τ}';
        '165:574 javascript__class_expression=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
        '165:578 javascript__class_expression=>τclass • javascript__class_heritage τ{ τ}';
        '158:557 javascript__class_declaration=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
        '158:561 javascript__class_declaration=>τclass • javascript__class_heritage τ{ τ}';
        '165:577 javascript__class_expression=>τclass • τ{ javascript__class_body τ}';
        '165:580 javascript__class_expression=>τclass • τ{ τ}';
        '158:560 javascript__class_declaration=>τclass • τ{ javascript__class_body τ}';
        '158:563 javascript__class_declaration=>τclass • τ{ τ}';
        scan( state.lexer, 395, 11 );
        if( state.lexer._type  == 139 ){
            'Asserts [  extends  ]';
            'offset 7 peek_level-1 [  159  ]';
            '165:574 javascript__class_expression=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
            '165:578 javascript__class_expression=>τclass • javascript__class_heritage τ{ τ}';
            '158:557 javascript__class_declaration=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
            '158:561 javascript__class_declaration=>τclass • javascript__class_heritage τ{ τ}';
            scan( state.lexer, 74, 11 );
            state.push_fn( branch_07400e963cc2aa65, 0 );
            return hc_javascript__class_heritage( state, db, 0 )
        } else if( state.lexer._type  == 16 ){
            'Asserts [  {  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 7 peek_level-1 [  {  ]';
            '165:577 javascript__class_expression=>τclass • τ{ javascript__class_body τ}';
            '165:580 javascript__class_expression=>τclass • τ{ τ}';
            '158:560 javascript__class_declaration=>τclass • τ{ javascript__class_body τ}';
            '158:563 javascript__class_declaration=>τclass • τ{ τ}';
            'offset 8 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
            '165:577 javascript__class_expression=>τclass τ{ • javascript__class_body τ}';
            '158:560 javascript__class_declaration=>τclass τ{ • javascript__class_body τ}';
            '165:580 javascript__class_expression=>τclass τ{ • τ}';
            '158:563 javascript__class_declaration=>τclass τ{ • τ}';
            scan( state.lexer, 31, 11 );
            if( isTokenActive( state.lexer._type, 32 ) ){
                'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
                'offset 10 peek_level-1 [  160  ]';
                '165:577 javascript__class_expression=>τclass τ{ • javascript__class_body τ}';
                '158:560 javascript__class_declaration=>τclass τ{ • javascript__class_body τ}';
                scan( state.lexer, 33, 11 );
                state.push_fn( branch_c3c3efd201d2c167, 0 );
                return hc_javascript__class_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                'Asserts [  }  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  }  ]';
                '165:580 javascript__class_expression=>τclass τ{ • τ}';
                '158:563 javascript__class_declaration=>τclass τ{ • τ}';
                'offset 11 peek_level-1 [  END_OF_FILE ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl ,  ]';
                '165:580 javascript__class_expression=>τclass τ{ τ} •';
                '158:563 javascript__class_declaration=>τclass τ{ τ} •';
                scan( state.lexer, 34, 11 );
                if( state.lexer._type  == 1 ){
                    'Asserts [  END_OF_FILE  ]';
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_dab5b5a3217d965a, 75 );
                    state.push_fn( branch_26c5616a81f749fa, 121 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '165:580 javascript__class_expression=>τclass τ{ τ} •';
                    add_reduce( state, 3, 237 );
                    return hc_javascript__statement_list_item_goto( state, db, 75 )
                }
            }
        } else {
            'offset 7 peek_level-1 [  55  ]';
            '165:573 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
            '165:575 javascript__class_expression=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
            '165:576 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
            '165:579 javascript__class_expression=>τclass • javascript__binding_identifier τ{ τ}';
            '158:556 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
            '158:558 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
            '158:559 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
            '158:562 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ τ}';
            scan( state.lexer, 275, 11 );
            state.push_fn( branch_3373bfb9bf91182b, 0 );
            return hc_javascript__binding_identifier( state, db, 0 )
        }
    } else {
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( set_production /*0*/, 130 );
        return hc_javascript__function_declaration( state, db, prod )
    }
} else {
    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 121 )*/, 121 );
    '"--LEAF--"';
    '121:438 javascript__statement_list_item=>• javascript__declaration';
    state.push_fn( set_production /*0*/, 121 );
    return hc_javascript__declaration( state, db, 0 )
};
    return - 1
}

function hc_javascript__statement_list_item_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                'offset 1 peek_level0 [  ? END_OF_PRODUCTION , ; } nl END_OF_FILE : ) ]  ]';
                '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                scan( state.lexer, 175, 11 );
                if( state.lexer._type  == 69 ){
                    'Asserts [  ?  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                    scan( state.lexer, 176, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                'offset 1 peek_level0 [  || END_OF_PRODUCTION ? , ; } nl END_OF_FILE : ) ]  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 177, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || ? ; } nl END_OF_FILE , : ) ]  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 179, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level-1 [  ?? | END_OF_PRODUCTION && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level-1 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ++ -- ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ?  ]';
                '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 209, 9 );
                if( isTokenActive( state.lexer._type, 210 ) ){
                    'Asserts [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                    scan( state.lexer, 211, 11 );
                    if( ( isTokenActive( state.lexer._type, 210 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                    scan( state.lexer, 212, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : of { ) ]  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                'offset 1 peek_level0 [  , ; } nl END_OF_FILE  ]';
                '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                scan( state.lexer, 219, 11 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                    scan( state.lexer, 100, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    'Asserts [  ; } nl END_OF_FILE  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 121 )*/, 121 );
                    '"--LEAF--"';
                    '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 121 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 130: 
            {
                'offset 1 peek_level-1 [  END_OF_FILE ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl  ]';
                '162:570 javascript__hoistable_declaration=>javascript__function_declaration •';
                '164:572 javascript__function_expression=>javascript__function_declaration •';
                scan( state.lexer, 396, 11 );
                if( state.lexer._type  == 1 ){
                    'Asserts [  END_OF_FILE  ]';
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_ba73dd3943623c00, 121 );
                    state.push_fn( branch_4054165bdfbc9b74, 75 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '164:572 javascript__function_expression=>javascript__function_declaration •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 241 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in { END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in { END_OF_PRODUCTION = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? END_OF_PRODUCTION ? ; } nl END_OF_FILE , : ) ]  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 222, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 121 ) ? prod  : - 1
}

function hc_javascript__statement(state, db, prod){
    scan( state.lexer, 397, 11 );
    'offset 0 peek_level0 [  yield async ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await do while for switch var if continue break return with throw try debugger { ; 40  ]';
    '122:439 javascript__statement=>• javascript__block_statement';
    '122:440 javascript__statement=>• javascript__expression_statement';
    '122:441 javascript__statement=>• javascript__labeled_statement';
    '122:442 javascript__statement=>• javascript__variable_statement';
    '122:443 javascript__statement=>• javascript__empty_statement';
    '122:444 javascript__statement=>• javascript__if_statement';
    '122:445 javascript__statement=>• javascript__breakable_statement';
    '122:446 javascript__statement=>• javascript__continue_statement';
    '122:447 javascript__statement=>• javascript__break_statement';
    '122:448 javascript__statement=>• javascript__return_statement';
    '122:449 javascript__statement=>• javascript__with_statement';
    '122:450 javascript__statement=>• javascript__throw_statement';
    '122:451 javascript__statement=>• javascript__try_statement';
    '122:452 javascript__statement=>• javascript__debugger_statement';
    if( isTokenActive( state.lexer._type, 398 ) ){
    'Asserts [  yield async ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:440 javascript__statement=>• javascript__expression_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__expression_statement( state, db, 0 )
} else if( state.lexer._type  == 120 || state.lexer._type  == 121 || state.lexer._type  == 122 || state.lexer._type  == 127 ){
    'Asserts [  do while for switch  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:445 javascript__statement=>• javascript__breakable_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__breakable_statement( state, db, 0 )
} else if( state.lexer._type  == 68 ){
    'Asserts [  var  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:442 javascript__statement=>• javascript__variable_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__variable_statement( state, db, 0 )
} else if( state.lexer._type  == 118 ){
    'Asserts [  if  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:444 javascript__statement=>• javascript__if_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__if_statement( state, db, 0 )
} else if( state.lexer._type  == 129 ){
    'Asserts [  continue  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:446 javascript__statement=>• javascript__continue_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__continue_statement( state, db, 0 )
} else if( state.lexer._type  == 130 ){
    'Asserts [  break  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:447 javascript__statement=>• javascript__break_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__break_statement( state, db, 0 )
} else if( state.lexer._type  == 131 ){
    'Asserts [  return  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:448 javascript__statement=>• javascript__return_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__return_statement( state, db, 0 )
} else if( state.lexer._type  == 132 ){
    'Asserts [  with  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:449 javascript__statement=>• javascript__with_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__with_statement( state, db, 0 )
} else if( state.lexer._type  == 133 ){
    'Asserts [  throw  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:450 javascript__statement=>• javascript__throw_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__throw_statement( state, db, 0 )
} else if( state.lexer._type  == 134 ){
    'Asserts [  try  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:451 javascript__statement=>• javascript__try_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__try_statement( state, db, 0 )
} else if( state.lexer._type  == 137 ){
    'Asserts [  debugger  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:452 javascript__statement=>• javascript__debugger_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__debugger_statement( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:439 javascript__statement=>• javascript__block_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__block_statement( state, db, 0 )
} else if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    '"--LEAF--"';
    '122:443 javascript__statement=>• javascript__empty_statement';
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__empty_statement( state, db, 0 )
} else if( state.lexer._type  == 59 ){
    'Asserts [  40  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  40  ]';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    '128:460 javascript__label_identifier=>• tk:javascript__composite_identifier';
    'offset 3 peek_level-1 [  : ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , =>  ]';
    '128:460 javascript__label_identifier=>tk:javascript__composite_identifier •';
    '77:305 javascript__identifier_reference=>tk:javascript__composite_identifier •';
    scan( state.lexer, 399, 11 );
    if( state.lexer._type  == 70 ){
        'Assert End [  :  ]';
        '"--LEAF--"';
        '128:460 javascript__label_identifier=>tk:javascript__composite_identifier •';
        add_reduce( state, 1, 163 );
        return hc_javascript__statement_goto( state, db, 128 )
    } else {
        '"--LEAF--"';
        '77:305 javascript__identifier_reference=>tk:javascript__composite_identifier •';
        add_reduce( state, 1, 95 );
        return hc_javascript__statement_goto( state, db, 77 )
    }
};
    return - 1
}

function hc_javascript__statement_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                'offset 1 peek_level0 [  ? END_OF_PRODUCTION , ; } nl END_OF_FILE : ) ]  ]';
                '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                scan( state.lexer, 175, 11 );
                if( state.lexer._type  == 69 ){
                    'Asserts [  ?  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                    scan( state.lexer, 176, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                'offset 1 peek_level0 [  || END_OF_PRODUCTION ? , ; } nl END_OF_FILE : ) ]  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 177, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || ? ; } nl END_OF_FILE , : ) ]  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 179, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level-1 [  ?? | END_OF_PRODUCTION && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level-1 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ++ -- ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ?  ]';
                '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 209, 9 );
                if( isTokenActive( state.lexer._type, 210 ) ){
                    'Asserts [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                    scan( state.lexer, 211, 11 );
                    if( ( isTokenActive( state.lexer._type, 210 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                    scan( state.lexer, 212, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : of { ) ]  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 77: 
            {
                'offset 1 peek_level-1 [  => ( ` . [ ?. -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE ,  ]';
                '198:663 javascript__arrow_parameters=>javascript__identifier_reference •';
                '76:295 javascript__primary_expression=>javascript__identifier_reference •';
                scan( state.lexer, 400, 11 );
                if( state.lexer._type  == 150 ){
                    'Assert End [  =>  ]';
                    '"--LEAF--"';
                    '198:663 javascript__arrow_parameters=>javascript__identifier_reference •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 274 );
                    prod = 198;
                    continue
                } else {
                    '"--LEAF--"';
                    '76:295 javascript__primary_expression=>javascript__identifier_reference •';
                    scan( state.lexer, 11, 11 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                'offset 1 peek_level0 [  , ; } nl END_OF_FILE  ]';
                '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                scan( state.lexer, 219, 11 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                    scan( state.lexer, 100, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    'Asserts [  ; } nl END_OF_FILE  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
                    '"--LEAF--"';
                    '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 122 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 128: 
            {
                'offset 1 peek_level-1 [  :  ]';
                '127:459 javascript__labeled_statement=>javascript__label_identifier • τ: javascript__labeled_item';
                scan( state.lexer, 387, 0 );
                if( state.lexer._type  == 70 ){
                    'Assert Consume [  :  ]';
                    consume( state );
                    '"--LEAF--"';
                    '127:459 javascript__labeled_statement=>javascript__label_identifier τ: • javascript__labeled_item';
                    scan( state.lexer, 157, 11 );
                    if( ( isTokenActive( state.lexer._type, 137 ) ) ){
                        state.push_fn( branch_e6b6b9b166ca4bf8, 122 );
                        return hc_javascript__labeled_item( state, db, 0 )
                    }
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in { END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in { END_OF_PRODUCTION = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? END_OF_PRODUCTION ? ; } nl END_OF_FILE , : ) ]  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 222, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 198: 
            {
                'offset 1 peek_level-1 [  =>  ]';
                '197:662 javascript__arrow_function=>javascript__arrow_parameters • τ=> javascript__concise_body';
                scan( state.lexer, 322, 0 );
                if( state.lexer._type  == 150 ){
                    'Assert Consume [  =>  ]';
                    consume( state );
                    '"--LEAF--"';
                    '197:662 javascript__arrow_function=>javascript__arrow_parameters τ=> • javascript__concise_body';
                    scan( state.lexer, 21, 11 );
                    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                        state.push_fn( branch_e52a91bfee8af692, 126 );
                        return hc_javascript__concise_body( state, db, 0 )
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 122 ) ? prod  : - 1
}

function hc_javascript__block_statement(state, db, prod){
    '"--LEAF--"';
    '123:453 javascript__block_statement=>• javascript__block';
    state.push_fn( set_production /*123*/, 123 );
    return hc_javascript__block( state, db, 0 )
}

function hc_javascript__block(state, db, prod){
    scan( state.lexer, 13, 11 );
    'offset 0 peek_level-1 [  {  ]';
    '124:454 javascript__block=>• τ{ javascript__statement_list τ}';
    '124:455 javascript__block=>• τ{ τ}';
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 1 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await }  ]';
    '124:454 javascript__block=>τ{ • javascript__statement_list τ}';
    '124:455 javascript__block=>τ{ • τ}';
    scan( state.lexer, 401, 9 );
    if( isTokenActive( state.lexer._type, 104 ) ){
        'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*124*/, 124 );
        '"--LEAF--"';
        '124:454 javascript__block=>τ{ • javascript__statement_list τ}';
        state.push_fn( branch_6c4223fa35ba71e7, 124 );
        return hc_javascript__statement_list( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*124*/, 124 );
        '"--LEAF--"';
        '124:455 javascript__block=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 159 );
        return 0
    }
};
    return - 1
}

function hc_javascript__expression_statement(state, db, prod){
    '"--LEAF--"';
    '125:456 javascript__expression_statement=>• javascript__expression javascript__asi';
    state.push_fn( branch_e4e74e80d0822d9e, 125 );
    return hc_javascript__expression( state, db, 0 )
}

function hc_javascript__expression(state, db, prod){
    '"--LEAF--"';
    '126:458 javascript__expression=>• javascript__assignment_expression';
    state.push_fn( hc_javascript__expression_goto /*hc_javascript__expression_goto( state, db, 126 )*/, 126 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function hc_javascript__expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 126: 
            {
                'offset 1 peek_level0 [  , } ; ] nl END_OF_FILE ) : END_OF_PRODUCTION  ]';
                '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, τ)';
                '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
                '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression • τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
                '6:15 WICK_BINDING=>τ{ javascript__expression • τ; javascript__expression τ}';
                '6:16 WICK_BINDING=>τ{! javascript__expression • τ; javascript__expression τ}';
                '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
                '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression • τ; javascript__expression τ) javascript__statement';
                '134:490 javascript__iteration_statement=>τfor τ( τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
                '134:491 javascript__iteration_statement=>τfor τ( javascript__expression • τ; javascript__expression τ; javascript__expression τ) javascript__statement';
                '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression • τ; javascript__expression τ) javascript__statement';
                '134:497 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression • τ; τ) javascript__statement';
                '134:499 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression • τ; τ) javascript__statement';
                '134:502 javascript__iteration_statement=>τfor τ( τ; javascript__expression • τ; τ) javascript__statement';
                '134:503 javascript__iteration_statement=>τfor τ( javascript__expression • τ; τ; javascript__expression τ) javascript__statement';
                '134:504 javascript__iteration_statement=>τfor τ( javascript__expression • τ; javascript__expression τ; τ) javascript__statement';
                '134:504 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression • τ; τ) javascript__statement';
                '134:510 javascript__iteration_statement=>τfor τ( javascript__expression • τ; τ; τ) javascript__statement';
                '149:541 javascript__return_statement=>τreturn javascript__expression • javascript__asi';
                '151:544 javascript__throw_statement=>τthrow javascript__expression • javascript__asi';
                '6:15 WICK_BINDING=>τ{ javascript__expression τ; javascript__expression • τ}';
                '6:16 WICK_BINDING=>τ{! javascript__expression τ; javascript__expression • τ}';
                '6:17 WICK_BINDING=>τ{ javascript__expression • τ}';
                '6:18 WICK_BINDING=>τ{! javascript__expression • τ}';
                '6:19 WICK_BINDING=>τ{ τ; javascript__expression • τ}';
                '6:20 WICK_BINDING=>τ{! τ; javascript__expression • τ}';
                '174:610 javascript__substitute_template=>javascript__template_head javascript__expression • javascript__template_spans';
                '178:615 javascript__template_middle_list=>javascript__template_middle javascript__expression •';
                '178:616 javascript__template_middle_list=>javascript__template_middle_list javascript__template_middle javascript__expression •';
                '75:287 javascript__member_expression=>javascript__member_expression τ[ javascript__expression • τ]';
                '182:621 javascript__super_property=>τsuper τ[ javascript__expression • τ]';
                '188:638 javascript__call_expression=>javascript__call_expression τ[ javascript__expression • τ]';
                '193:648 javascript__optional_chain=>τ?. τ[ javascript__expression • τ]';
                '193:652 javascript__optional_chain=>javascript__optional_chain τ[ javascript__expression • τ]';
                '132:480 javascript__if_statement=>τif τ( javascript__expression • τ) javascript__statement τelse javascript__statement';
                '132:481 javascript__if_statement=>τif τ( javascript__expression • τ) javascript__statement';
                '134:484 javascript__iteration_statement=>τdo javascript__statement τwhile τ( javascript__expression • τ) javascript__asi';
                '134:485 javascript__iteration_statement=>τwhile τ( javascript__expression • τ) javascript__statement';
                '134:486 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression • τ) javascript__statement';
                '134:487 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration javascript__expression τ; javascript__expression • τ) javascript__statement';
                '134:488 javascript__iteration_statement=>τfor τ( javascript__for_declaration τin javascript__expression • τ) javascript__statement';
                '134:489 javascript__iteration_statement=>τfor τawait τ( javascript__for_declaration τof javascript__expression • τ) javascript__statement';
                '134:490 javascript__iteration_statement=>τfor τ( τ; javascript__expression τ; javascript__expression • τ) javascript__statement';
                '134:491 javascript__iteration_statement=>τfor τ( javascript__expression τ; javascript__expression τ; javascript__expression • τ) javascript__statement';
                '134:492 javascript__iteration_statement=>τfor τ( javascript__left_hand_side_expression τin javascript__expression • τ) javascript__statement';
                '134:493 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_887_1_ τin javascript__expression • τ) javascript__statement';
                '134:494 javascript__iteration_statement=>τfor τawait τ( javascript__left_hand_side_expression τof javascript__expression • τ) javascript__statement';
                '134:495 javascript__iteration_statement=>τfor τawait τ( javascript__iteration_statement_group_896_1_ τof javascript__expression • τ) javascript__statement';
                '134:496 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression • τ) javascript__statement';
                '134:498 javascript__iteration_statement=>τfor τ( javascript__lexical_declaration τ; javascript__expression • τ) javascript__statement';
                '134:500 javascript__iteration_statement=>τfor τ( javascript__for_declaration τof javascript__expression • τ) javascript__statement';
                '134:501 javascript__iteration_statement=>τfor τ( τ; τ; javascript__expression • τ) javascript__statement';
                '134:503 javascript__iteration_statement=>τfor τ( javascript__expression τ; τ; javascript__expression • τ) javascript__statement';
                '134:505 javascript__iteration_statement=>τfor τ( javascript__left_hand_side_expression τof javascript__expression • τ) javascript__statement';
                '134:506 javascript__iteration_statement=>τfor τ( javascript__iteration_statement_group_896_1_ τof javascript__expression • τ) javascript__statement';
                '141:522 javascript__switch_statement=>τswitch τ( javascript__expression • τ) javascript__case_block';
                '150:543 javascript__with_statement=>τwith τ( javascript__expression • τ) javascript__statement';
                '180:618 javascript__parenthesized=>τ( javascript__expression • τ)';
                '144:532 javascript__case_clause=>τcase javascript__expression • τ: javascript__statement_list';
                '144:533 javascript__case_clause=>τcase javascript__expression • τ:';
                scan( state.lexer, 402, 9 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    'offset 3 peek_level1 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ) ...  ]';
                    '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • τ)';
                    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( javascript__expression τ, • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 310, 9 );
                    if( isTokenActive( pk._type, 20 ) ){
                        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                        state.lexer._type  = 149;
                        state.push_fn( hc_javascript__expression_goto /*hc_javascript__expression_goto( state, db, 126 )*/, 126 );
                        '"--LEAF--"';
                        '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                        consume( state );
                        state.push_fn( branch_5e04f36dc03b5f73, 126 );
                        return hc_javascript__assignment_expression( state, db, 0 )
                    }
                } else if( state.lexer._type  == 18 ){
                    'Asserts [  }  ]';
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_9d7dc046c3f4d281, 126 );
                    var fk2 = state.fork( db );;
                    fk2.push_fn( branch_9d7dc046c3f4d281, 126 );
                    state.push_fn( branch_9d7dc046c3f4d281, 126 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 403 ) ){
                    'Asserts [  ; ] nl END_OF_FILE ) : END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 126
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 126 ) ? prod  : - 1
}

function hc_javascript__labeled_statement(state, db, prod){
    '"--LEAF--"';
    '127:459 javascript__labeled_statement=>• javascript__label_identifier τ: javascript__labeled_item';
    state.push_fn( branch_f4f0ca37d730ca54, 127 );
    return hc_javascript__label_identifier( state, db, 0 )
}

function hc_javascript__label_identifier(state, db, prod){
    scan( state.lexer, 275, 11 );
    'offset 0 peek_level-1 [  40  ]';
    '128:460 javascript__label_identifier=>• tk:javascript__composite_identifier';
    if( state.lexer._type  == 59 ){
    'Assert Consume [  40  ]';
    consume( state );
    '"--LEAF--"';
    '128:460 javascript__label_identifier=>tk:javascript__composite_identifier •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 163 );
    return 128
};
    return - 1
}

function hc_javascript__labeled_item(state, db, prod){
    scan( state.lexer, 157, 11 );
    'offset 0 peek_level0 [  var ; if continue break return with throw try debugger { 40 do while for switch yield ( new super import this [ class / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await async function  ]';
    '129:461 javascript__labeled_item=>• javascript__statement';
    '129:462 javascript__labeled_item=>• javascript__function_declaration';
    if( isTokenActive( state.lexer._type, 404 ) ){
    'Asserts [  var ; if continue break return with throw try debugger { 40 do while for switch yield ( new super import this [ class / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 129 )*/, 129 );
    '"--LEAF--"';
    '129:461 javascript__labeled_item=>• javascript__statement';
    state.push_fn( set_production /*0*/, 129 );
    return hc_javascript__statement( state, db, 0 )
} else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
    'Asserts [  async function  ]';
    'offset 2 peek_level0 [  async function  ]';
    '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 405, 11 );
    if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  async  ]';
        '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
        'offset 5 peek_level0 [  function 40 (  ]';
        '197:661 javascript__arrow_function=>τasync • javascript__arrow_parameters τ=> javascript__concise_body';
        '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 117 ){
            'Asserts [  function  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 7 peek_level-1 [  function  ]';
            '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
            'offset 8 peek_level0 [  * ( 40  ]';
            '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
            '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 308, 11 );
            if( state.lexer._type  == 62 ){
                'Asserts [  *  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  *  ]';
                '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
                'offset 11 peek_level0 [  ( 40  ]';
                '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 309, 11 );
                if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 13 peek_level-1 [  (  ]';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                    'offset 14 peek_level0 [  ... 40 { [ )  ]';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                    scan( state.lexer, 12, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        'Asserts [  ... 40 { [  ]';
                        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                        '"--LEAF--"';
                        '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                        state.push_fn( branch_344f60932931ec0d, 130 );
                        return hc_javascript__formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        'Asserts [  )  ]';
                        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                        '"--LEAF--"';
                        '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                        consume( state );
                        scan( state.lexer, 13, 11 );
                        if( ( state.lexer._type  == 16 ) ){
                            consume( state );
                            state.push_fn( branch_0197a94536844bcf, 130 );
                            return hc_javascript__function_body( state, db, 0 )
                        };
                        return - 1
                    }
                } else {
                    'offset 13 peek_level-1 [  55  ]';
                    '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                    scan( state.lexer, 275, 11 );
                    state.push_fn( branch_a5367ccba8bcfdb4, 0 );
                    return hc_javascript__binding_identifier( state, db, 0 )
                }
            } else if( state.lexer._type  == 36 ){
                'Asserts [  (  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 10 peek_level-1 [  (  ]';
                '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
                'offset 11 peek_level0 [  ... 40 { [ )  ]';
                '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 12, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    'Asserts [  ... 40 { [  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                    '"--LEAF--"';
                    '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    state.push_fn( branch_8be81d01f471225f, 130 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    'Asserts [  )  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                    '"--LEAF--"';
                    '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                    consume( state );
                    scan( state.lexer, 13, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_2a1990963919bde5, 130 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                'offset 10 peek_level-1 [  55  ]';
                '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 275, 11 );
                state.push_fn( branch_8a3686439d9e75fb, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else {
            state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
            '"--LEAF--"';
            '197:661 javascript__arrow_function=>τasync • javascript__arrow_parameters τ=> javascript__concise_body';
            state.push_fn( branch_4656c4977caeeecb, 126 );
            return hc_javascript__arrow_parameters( state, db, 0 )
        }
    } else {
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( set_production /*0*/, 130 );
        return hc_javascript__function_declaration( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__labeled_item_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                'offset 1 peek_level0 [  ? END_OF_PRODUCTION ; } nl END_OF_FILE , : ) ]  ]';
                '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                scan( state.lexer, 175, 11 );
                if( state.lexer._type  == 69 ){
                    'Asserts [  ?  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '58:230 javascript__conditional_expression=>javascript__short_circuit_expression • τ? javascript__assignment_expression τ: javascript__assignment_expression';
                    scan( state.lexer, 176, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '58:229 javascript__conditional_expression=>javascript__short_circuit_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                'offset 1 peek_level0 [  || END_OF_PRODUCTION ? ; } nl END_OF_FILE , : ) ]  ]';
                '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                scan( state.lexer, 177, 11 );
                if( state.lexer._type  == 71 ){
                    'Asserts [  ||  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 60 )*/, 60 );
                    '"--LEAF--"';
                    '60:234 javascript__logical_or_expression=>javascript__logical_or_expression • τ|| javascript__logical_and_expression';
                    scan( state.lexer, 178, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:231 javascript__short_circuit_expression=>javascript__logical_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                'offset 1 peek_level0 [  && END_OF_PRODUCTION || ? , ; } nl END_OF_FILE : ) ]  ]';
                '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                scan( state.lexer, 179, 11 );
                if( state.lexer._type  == 72 ){
                    'Asserts [  &&  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 61 )*/, 61 );
                    '"--LEAF--"';
                    '61:236 javascript__logical_and_expression=>javascript__logical_and_expression • τ&& javascript__bitwise_or_expression';
                    scan( state.lexer, 180, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '60:233 javascript__logical_or_expression=>javascript__logical_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                'offset 1 peek_level-1 [  ?? | END_OF_PRODUCTION && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                scan( state.lexer, 181, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:656 javascript__coalesce_expression=>javascript__bitwise_or_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else if( state.lexer._type  == 73 ){
                    'Asserts [  |  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 62 )*/, 62 );
                    '"--LEAF--"';
                    '62:238 javascript__bitwise_or_expression=>javascript__bitwise_or_expression • τ| javascript__bitwise_xor_expression';
                    scan( state.lexer, 182, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '61:235 javascript__logical_and_expression=>javascript__bitwise_or_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                'offset 1 peek_level0 [  ^ END_OF_PRODUCTION ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                scan( state.lexer, 183, 11 );
                if( state.lexer._type  == 74 ){
                    'Asserts [  ^  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 63 )*/, 63 );
                    '"--LEAF--"';
                    '63:240 javascript__bitwise_xor_expression=>javascript__bitwise_xor_expression • τ^ javascript__bitwise_and_expression';
                    scan( state.lexer, 184, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '62:237 javascript__bitwise_or_expression=>javascript__bitwise_xor_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                'offset 1 peek_level0 [  & END_OF_PRODUCTION ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 75 ){
                    'Asserts [  &  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 64 )*/, 64 );
                    '"--LEAF--"';
                    '64:242 javascript__bitwise_and_expression=>javascript__bitwise_and_expression • τ& javascript__equality_expression';
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '63:239 javascript__bitwise_xor_expression=>javascript__bitwise_and_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                'offset 1 peek_level0 [  == != === !== END_OF_PRODUCTION & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 76 ){
                    'Asserts [  ==  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:244 javascript__equality_expression=>javascript__equality_expression • τ== javascript__relational_expression';
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    'Asserts [  !=  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:245 javascript__equality_expression=>javascript__equality_expression • τ!= javascript__relational_expression';
                    scan( state.lexer, 189, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    'Asserts [  ===  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:246 javascript__equality_expression=>javascript__equality_expression • τ=== javascript__relational_expression';
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    'Asserts [  !==  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    '"--LEAF--"';
                    '65:247 javascript__equality_expression=>javascript__equality_expression • τ!== javascript__relational_expression';
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '64:241 javascript__bitwise_and_expression=>javascript__equality_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                'offset 1 peek_level0 [  in instanceof < > <= >= END_OF_PRODUCTION !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '65:243 javascript__equality_expression=>javascript__relational_expression •';
                '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                scan( state.lexer, 192, 11 );
                if( state.lexer._type  == 83 ){
                    'Asserts [  in  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:254 javascript__relational_expression=>javascript__relational_expression • τin javascript__shift_expression';
                    scan( state.lexer, 139, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    'Asserts [  instanceof  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:253 javascript__relational_expression=>javascript__relational_expression • τinstanceof javascript__shift_expression';
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:249 javascript__relational_expression=>javascript__relational_expression • τ< javascript__shift_expression';
                    scan( state.lexer, 194, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:250 javascript__relational_expression=>javascript__relational_expression • τ> javascript__shift_expression';
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:251 javascript__relational_expression=>javascript__relational_expression • τ<= javascript__shift_expression';
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    '"--LEAF--"';
                    '66:252 javascript__relational_expression=>javascript__relational_expression • τ>= javascript__shift_expression';
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '65:243 javascript__equality_expression=>javascript__relational_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                'offset 1 peek_level0 [  << >> >>> END_OF_PRODUCTION < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '66:248 javascript__relational_expression=>javascript__shift_expression •';
                '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 84 ){
                    'Asserts [  <<  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:256 javascript__shift_expression=>javascript__shift_expression • τ<< javascript__additive_expression';
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    'Asserts [  >>  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:257 javascript__shift_expression=>javascript__shift_expression • τ>> javascript__additive_expression';
                    scan( state.lexer, 200, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    'Asserts [  >>>  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 67 )*/, 67 );
                    '"--LEAF--"';
                    '67:258 javascript__shift_expression=>javascript__shift_expression • τ>>> javascript__additive_expression';
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '66:248 javascript__relational_expression=>javascript__shift_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                'offset 1 peek_level0 [  + - END_OF_PRODUCTION >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '67:255 javascript__shift_expression=>javascript__additive_expression •';
                '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                scan( state.lexer, 198, 11 );
                if( state.lexer._type  == 87 ){
                    'Asserts [  +  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:260 javascript__additive_expression=>javascript__additive_expression • τ+ javascript__multiplicative_expression';
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 68 )*/, 68 );
                    '"--LEAF--"';
                    '68:261 javascript__additive_expression=>javascript__additive_expression • τ- javascript__multiplicative_expression';
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '67:255 javascript__shift_expression=>javascript__additive_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                'offset 1 peek_level0 [  * / % END_OF_PRODUCTION + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                scan( state.lexer, 204, 11 );
                if( state.lexer._type  == 62 ){
                    'Asserts [  *  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:263 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ* javascript__exponentiation_expression';
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    'Asserts [  /  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:264 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ/ javascript__exponentiation_expression';
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    'Asserts [  %  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '69:265 javascript__multiplicative_expression=>javascript__multiplicative_expression • τ% javascript__exponentiation_expression';
                    scan( state.lexer, 206, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '68:259 javascript__additive_expression=>javascript__multiplicative_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                'offset 1 peek_level-1 [  ** END_OF_PRODUCTION % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                '71:268 javascript__unary_expression=>javascript__update_expression •';
                scan( state.lexer, 207, 11 );
                if( state.lexer._type  == 90 ){
                    'Asserts [  **  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    '"--LEAF--"';
                    '70:267 javascript__exponentiation_expression=>javascript__update_expression • τ** javascript__exponentiation_expression';
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '71:268 javascript__unary_expression=>javascript__update_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                'offset 1 peek_level-1 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ++ -- ; } nl END_OF_FILE : ] ) , END_OF_PRODUCTION ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ?  ]';
                '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                scan( state.lexer, 209, 9 );
                if( isTokenActive( state.lexer._type, 210 ) ){
                    'Asserts [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:228 javascript__assignment_expression=>javascript__left_hand_side_expression • javascript__assignment_operator javascript__assignment_expression';
                    scan( state.lexer, 211, 11 );
                    if( ( isTokenActive( state.lexer._type, 210 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '57:227 javascript__assignment_expression=>javascript__left_hand_side_expression • τ= javascript__assignment_expression';
                    scan( state.lexer, 212, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    'Asserts [  ++  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:278 javascript__update_expression=>javascript__left_hand_side_expression • τ++';
                    scan( state.lexer, 213, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    'Asserts [  --  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 72 )*/, 72 );
                    '"--LEAF--"';
                    '72:279 javascript__update_expression=>javascript__left_hand_side_expression • τ--';
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '72:277 javascript__update_expression=>javascript__left_hand_side_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` ( END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof in !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : of { ) ]  ]';
                '74:285 javascript__new_expression=>javascript__member_expression •';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '74:285 javascript__new_expression=>javascript__member_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                'offset 1 peek_level0 [  , ; } nl END_OF_FILE  ]';
                '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                scan( state.lexer, 219, 11 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    '"--LEAF--"';
                    '126:457 javascript__expression=>javascript__expression • τ, javascript__assignment_expression';
                    scan( state.lexer, 100, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    'Asserts [  ; } nl END_OF_FILE  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 129 )*/, 129 );
                    '"--LEAF--"';
                    '125:456 javascript__expression_statement=>javascript__expression • javascript__asi';
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 129 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 130: 
            {
                'offset 1 peek_level-1 [  ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE " var delete void typeof ~ ! new this 40 true false null num 0X 0x 0O 0o 0B 0b { async function if do for switch continue break return with throw try debugger class super import await yield let const case default while else </ " export END_OF_PRODUCTION  ]';
                '164:572 javascript__function_expression=>javascript__function_declaration •';
                '129:462 javascript__labeled_item=>javascript__function_declaration •';
                scan( state.lexer, 406, 11 );
                if( isTokenActive( state.lexer._type, 407 ) ){
                    'Assert End [  ?. [ . ` ( = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> in instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE  ]';
                    '"--LEAF--"';
                    '164:572 javascript__function_expression=>javascript__function_declaration •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 241 );
                    prod = 75;
                    continue
                } else {
                    '"--LEAF--"';
                    '129:462 javascript__labeled_item=>javascript__function_declaration •';
                    prod = 129;
                    continue
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  . ( [ ` ?. of in { END_OF_PRODUCTION = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ | ?? && || ? , ; } nl END_OF_FILE : ) ]  ]';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 99, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  ?. of in { END_OF_PRODUCTION -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = ** % / * + - >>> >> << < > <= >= instanceof !== === != == & ^ ?? | && || ? ; } nl END_OF_FILE , : ) ]  ]';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                'offset 1 peek_level0 [  ?? END_OF_PRODUCTION ? , ; } nl END_OF_FILE : ) ]  ]';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                scan( state.lexer, 222, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 129 ) ? prod  : - 1
}

function hc_javascript__function_declaration(state, db, prod){
    scan( state.lexer, 405, 11 );
    'offset 0 peek_level0 [  async function  ]';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:468 javascript__function_declaration=>• τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:469 javascript__function_declaration=>• τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:470 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:474 javascript__function_declaration=>• τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:475 javascript__function_declaration=>• τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:476 javascript__function_declaration=>• τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:478 javascript__function_declaration=>• τfunction τ( τ) τ{ javascript__function_body τ}';
    if( state.lexer._type  == 116 ){
    'Asserts [  async  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  async  ]';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:465 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:466 javascript__function_declaration=>• τasync τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:471 javascript__function_declaration=>• τasync τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>• τasync τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:473 javascript__function_declaration=>• τasync τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:477 javascript__function_declaration=>• τasync τfunction τ( τ) τ{ javascript__function_body τ}';
    'offset 3 peek_level-1 [  function  ]';
    '130:463 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:465 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:466 javascript__function_declaration=>τasync • τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:467 javascript__function_declaration=>τasync • τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:471 javascript__function_declaration=>τasync • τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:472 javascript__function_declaration=>τasync • τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:473 javascript__function_declaration=>τasync • τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:477 javascript__function_declaration=>τasync • τfunction τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 408, 11 );
    if( state.lexer._type  == 117 ){
        'Assert Consume [  function  ]';
        consume( state );
        'offset 4 peek_level0 [  * ( 40  ]';
        '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
        '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
        scan( state.lexer, 308, 11 );
        if( state.lexer._type  == 62 ){
            'Asserts [  *  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 6 peek_level-1 [  *  ]';
            '130:463 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
            'offset 7 peek_level0 [  ( 40  ]';
            '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 309, 11 );
            if( state.lexer._type  == 36 ){
                'Asserts [  (  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 9 peek_level-1 [  (  ]';
                '130:466 javascript__function_declaration=>τasync τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
                'offset 10 peek_level0 [  ... 40 { [ )  ]';
                '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 12, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    'Asserts [  ... 40 { [  ]';
                    state.push_fn( set_production /*130*/, 130 );
                    '"--LEAF--"';
                    '130:466 javascript__function_declaration=>τasync τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                    state.push_fn( branch_344f60932931ec0d, 130 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    'Asserts [  )  ]';
                    state.push_fn( set_production /*130*/, 130 );
                    '"--LEAF--"';
                    '130:473 javascript__function_declaration=>τasync τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                    consume( state );
                    scan( state.lexer, 13, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_0197a94536844bcf, 130 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                'offset 9 peek_level-1 [  55  ]';
                '130:463 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                '130:467 javascript__function_declaration=>τasync τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
                scan( state.lexer, 275, 11 );
                state.push_fn( branch_0160f0b291f6054b, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 6 peek_level-1 [  (  ]';
            '130:471 javascript__function_declaration=>τasync τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync τfunction • τ( τ) τ{ javascript__function_body τ}';
            'offset 7 peek_level0 [  ... 40 { [ )  ]';
            '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 12, 11 );
            if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                'Asserts [  ... 40 { [  ]';
                state.push_fn( set_production /*130*/, 130 );
                '"--LEAF--"';
                '130:471 javascript__function_declaration=>τasync τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                state.push_fn( branch_8be81d01f471225f, 130 );
                return hc_javascript__formal_parameters( state, db, 0 )
            } else if( state.lexer._type  == 113 ){
                'Asserts [  )  ]';
                state.push_fn( set_production /*130*/, 130 );
                '"--LEAF--"';
                '130:477 javascript__function_declaration=>τasync τfunction τ( • τ) τ{ javascript__function_body τ}';
                consume( state );
                scan( state.lexer, 13, 11 );
                if( ( state.lexer._type  == 16 ) ){
                    consume( state );
                    state.push_fn( branch_2a1990963919bde5, 130 );
                    return hc_javascript__function_body( state, db, 0 )
                };
                return - 1
            }
        } else {
            'offset 6 peek_level-1 [  55  ]';
            '130:465 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:472 javascript__function_declaration=>τasync τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 275, 11 );
            state.push_fn( branch_522c50d13f932ea8, 0 );
            return hc_javascript__binding_identifier( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 117 ){
    'Asserts [  function  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  function  ]';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:468 javascript__function_declaration=>• τfunction javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:469 javascript__function_declaration=>• τfunction τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:470 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:474 javascript__function_declaration=>• τfunction τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:475 javascript__function_declaration=>• τfunction javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:476 javascript__function_declaration=>• τfunction τ* τ( τ) τ{ javascript__function_body τ}';
    '130:478 javascript__function_declaration=>• τfunction τ( τ) τ{ javascript__function_body τ}';
    'offset 3 peek_level0 [  * ( 40  ]';
    '130:464 javascript__function_declaration=>τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:469 javascript__function_declaration=>τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:470 javascript__function_declaration=>τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:476 javascript__function_declaration=>τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
    '130:468 javascript__function_declaration=>τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:475 javascript__function_declaration=>τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
    '130:474 javascript__function_declaration=>τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:478 javascript__function_declaration=>τfunction • τ( τ) τ{ javascript__function_body τ}';
    scan( state.lexer, 308, 11 );
    if( state.lexer._type  == 62 ){
        'Asserts [  *  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  *  ]';
        '130:464 javascript__function_declaration=>τfunction • τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:469 javascript__function_declaration=>τfunction • τ* τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:470 javascript__function_declaration=>τfunction • τ* javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:476 javascript__function_declaration=>τfunction • τ* τ( τ) τ{ javascript__function_body τ}';
        'offset 6 peek_level0 [  ( 40  ]';
        '130:464 javascript__function_declaration=>τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:470 javascript__function_declaration=>τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        '130:469 javascript__function_declaration=>τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:476 javascript__function_declaration=>τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
        scan( state.lexer, 309, 11 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 8 peek_level-1 [  (  ]';
            '130:469 javascript__function_declaration=>τfunction τ* • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:476 javascript__function_declaration=>τfunction τ* • τ( τ) τ{ javascript__function_body τ}';
            'offset 9 peek_level0 [  ... 40 { [ )  ]';
            '130:469 javascript__function_declaration=>τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:476 javascript__function_declaration=>τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 12, 11 );
            if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                'Asserts [  ... 40 { [  ]';
                state.push_fn( set_production /*130*/, 130 );
                '"--LEAF--"';
                '130:469 javascript__function_declaration=>τfunction τ* τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
                state.push_fn( branch_6329a1fb9c53c5ab, 130 );
                return hc_javascript__formal_parameters( state, db, 0 )
            } else if( state.lexer._type  == 113 ){
                'Asserts [  )  ]';
                state.push_fn( set_production /*130*/, 130 );
                '"--LEAF--"';
                '130:476 javascript__function_declaration=>τfunction τ* τ( • τ) τ{ javascript__function_body τ}';
                consume( state );
                scan( state.lexer, 13, 11 );
                if( ( state.lexer._type  == 16 ) ){
                    consume( state );
                    state.push_fn( branch_385bdfd293a09ccb, 130 );
                    return hc_javascript__function_body( state, db, 0 )
                };
                return - 1
            }
        } else {
            'offset 8 peek_level-1 [  55  ]';
            '130:464 javascript__function_declaration=>τfunction τ* • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            '130:470 javascript__function_declaration=>τfunction τ* • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
            scan( state.lexer, 275, 11 );
            state.push_fn( branch_52c6ed3b7a8d1e61, 0 );
            return hc_javascript__binding_identifier( state, db, 0 )
        }
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  (  ]';
        '130:474 javascript__function_declaration=>τfunction • τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:478 javascript__function_declaration=>τfunction • τ( τ) τ{ javascript__function_body τ}';
        'offset 6 peek_level0 [  ... 40 { [ )  ]';
        '130:474 javascript__function_declaration=>τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:478 javascript__function_declaration=>τfunction τ( • τ) τ{ javascript__function_body τ}';
        scan( state.lexer, 12, 11 );
        if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
            'Asserts [  ... 40 { [  ]';
            state.push_fn( set_production /*130*/, 130 );
            '"--LEAF--"';
            '130:474 javascript__function_declaration=>τfunction τ( • javascript__formal_parameters τ) τ{ javascript__function_body τ}';
            state.push_fn( branch_6df555e4b1a24c66, 130 );
            return hc_javascript__formal_parameters( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( set_production /*130*/, 130 );
            '"--LEAF--"';
            '130:478 javascript__function_declaration=>τfunction τ( • τ) τ{ javascript__function_body τ}';
            consume( state );
            scan( state.lexer, 13, 11 );
            if( ( state.lexer._type  == 16 ) ){
                consume( state );
                state.push_fn( branch_23dcfc00944b531f, 130 );
                return hc_javascript__function_body( state, db, 0 )
            };
            return - 1
        }
    } else {
        'offset 5 peek_level-1 [  55  ]';
        '130:468 javascript__function_declaration=>τfunction • javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        '130:475 javascript__function_declaration=>τfunction • javascript__binding_identifier τ( τ) τ{ javascript__function_body τ}';
        scan( state.lexer, 275, 11 );
        state.push_fn( branch_f0d0e7ca61e226e3, 0 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__empty_statement(state, db, prod){
    scan( state.lexer, 18, 11 );
    'offset 0 peek_level-1 [  ;  ]';
    '131:479 javascript__empty_statement=>• τ;';
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    '"--LEAF--"';
    '131:479 javascript__empty_statement=>τ; •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 180 );
    return 131
};
    return - 1
}

function hc_javascript__if_statement(state, db, prod){
    scan( state.lexer, 409, 11 );
    'offset 0 peek_level-1 [  if  ]';
    '132:480 javascript__if_statement=>• τif τ( javascript__expression τ) javascript__statement τelse javascript__statement';
    '132:481 javascript__if_statement=>• τif τ( javascript__expression τ) javascript__statement';
    if( state.lexer._type  == 118 ){
    'Assert Consume [  if  ]';
    consume( state );
    'offset 1 peek_level-1 [  (  ]';
    '132:480 javascript__if_statement=>τif • τ( javascript__expression τ) javascript__statement τelse javascript__statement';
    '132:481 javascript__if_statement=>τif • τ( javascript__expression τ) javascript__statement';
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 36 ){
        'Assert Consume [  (  ]';
        consume( state );
        'offset 2 peek_level-1 [  126  ]';
        '132:480 javascript__if_statement=>τif τ( • javascript__expression τ) javascript__statement τelse javascript__statement';
        '132:481 javascript__if_statement=>τif τ( • javascript__expression τ) javascript__statement';
        scan( state.lexer, 21, 11 );
        state.push_fn( branch_bc04aeea89469b83, 0 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__breakable_statement(state, db, prod){
    scan( state.lexer, 410, 11 );
    'offset 0 peek_level0 [  do while for switch  ]';
    '133:482 javascript__breakable_statement=>• javascript__iteration_statement';
    '133:483 javascript__breakable_statement=>• javascript__switch_statement';
    if( state.lexer._type  == 120 || state.lexer._type  == 121 || state.lexer._type  == 122 ){
    'Asserts [  do while for  ]';
    state.push_fn( set_production /*133*/, 133 );
    '"--LEAF--"';
    '133:482 javascript__breakable_statement=>• javascript__iteration_statement';
    state.push_fn( set_production /*0*/, 133 );
    return hc_javascript__iteration_statement( state, db, 0 )
} else {
    state.push_fn( set_production /*133*/, 133 );
    '"--LEAF--"';
    '133:483 javascript__breakable_statement=>• javascript__switch_statement';
    state.push_fn( set_production /*0*/, 133 );
    return hc_javascript__switch_statement( state, db, 0 )
};
    return - 1
}

function hc_javascript__iteration_statement(state, db, prod){
    scan( state.lexer, 411, 11 );
    'offset 0 peek_level-1 [  do while for  ]';
    '134:484 javascript__iteration_statement=>• τdo javascript__statement τwhile τ( javascript__expression τ) javascript__asi';
    '134:485 javascript__iteration_statement=>• τwhile τ( javascript__expression τ) javascript__statement';
    '134:486 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:487 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:488 javascript__iteration_statement=>• τfor τ( javascript__for_declaration τin javascript__expression τ) javascript__statement';
    '134:489 javascript__iteration_statement=>• τfor τawait τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
    '134:490 javascript__iteration_statement=>• τfor τ( τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:491 javascript__iteration_statement=>• τfor τ( javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:492 javascript__iteration_statement=>• τfor τ( javascript__left_hand_side_expression τin javascript__expression τ) javascript__statement';
    '134:493 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_887_1_ τin javascript__expression τ) javascript__statement';
    '134:494 javascript__iteration_statement=>• τfor τawait τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    '134:495 javascript__iteration_statement=>• τfor τawait τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    '134:496 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; τ) javascript__statement';
    '134:498 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration javascript__expression τ; τ) javascript__statement';
    '134:500 javascript__iteration_statement=>• τfor τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
    '134:501 javascript__iteration_statement=>• τfor τ( τ; τ; javascript__expression τ) javascript__statement';
    '134:502 javascript__iteration_statement=>• τfor τ( τ; javascript__expression τ; τ) javascript__statement';
    '134:503 javascript__iteration_statement=>• τfor τ( javascript__expression τ; τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>• τfor τ( javascript__expression τ; javascript__expression τ; τ) javascript__statement';
    '134:505 javascript__iteration_statement=>• τfor τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    '134:506 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    '134:507 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; τ) javascript__statement';
    '134:508 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration τ; τ) javascript__statement';
    '134:509 javascript__iteration_statement=>• τfor τ( τ; τ; τ) javascript__statement';
    '134:510 javascript__iteration_statement=>• τfor τ( javascript__expression τ; τ; τ) javascript__statement';
    if( state.lexer._type  == 120 ){
    'Asserts [  do  ]';
    state.push_fn( set_production /*134*/, 134 );
    '"--LEAF--"';
    '134:484 javascript__iteration_statement=>• τdo javascript__statement τwhile τ( javascript__expression τ) javascript__asi';
    consume( state );
    state.push_fn( branch_c6f3389fe847ba79, 134 );
    return hc_javascript__statement( state, db, 0 )
} else if( state.lexer._type  == 121 ){
    'Asserts [  while  ]';
    state.push_fn( set_production /*134*/, 134 );
    '"--LEAF--"';
    '134:485 javascript__iteration_statement=>• τwhile τ( javascript__expression τ) javascript__statement';
    consume( state );
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_54734802f26697db, 134 );
        return hc_javascript__expression( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 122 ){
    'Asserts [  for  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  for  ]';
    '134:486 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:487 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:488 javascript__iteration_statement=>• τfor τ( javascript__for_declaration τin javascript__expression τ) javascript__statement';
    '134:489 javascript__iteration_statement=>• τfor τawait τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
    '134:490 javascript__iteration_statement=>• τfor τ( τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:491 javascript__iteration_statement=>• τfor τ( javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:492 javascript__iteration_statement=>• τfor τ( javascript__left_hand_side_expression τin javascript__expression τ) javascript__statement';
    '134:493 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_887_1_ τin javascript__expression τ) javascript__statement';
    '134:494 javascript__iteration_statement=>• τfor τawait τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    '134:495 javascript__iteration_statement=>• τfor τawait τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    '134:496 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; τ) javascript__statement';
    '134:498 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration javascript__expression τ; τ) javascript__statement';
    '134:500 javascript__iteration_statement=>• τfor τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
    '134:501 javascript__iteration_statement=>• τfor τ( τ; τ; javascript__expression τ) javascript__statement';
    '134:502 javascript__iteration_statement=>• τfor τ( τ; javascript__expression τ; τ) javascript__statement';
    '134:503 javascript__iteration_statement=>• τfor τ( javascript__expression τ; τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>• τfor τ( javascript__expression τ; javascript__expression τ; τ) javascript__statement';
    '134:505 javascript__iteration_statement=>• τfor τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    '134:506 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    '134:507 javascript__iteration_statement=>• τfor τ( javascript__iteration_statement_group_869_1_ τ; τ; τ) javascript__statement';
    '134:508 javascript__iteration_statement=>• τfor τ( javascript__lexical_declaration τ; τ) javascript__statement';
    '134:509 javascript__iteration_statement=>• τfor τ( τ; τ; τ) javascript__statement';
    '134:510 javascript__iteration_statement=>• τfor τ( javascript__expression τ; τ; τ) javascript__statement';
    'offset 3 peek_level0 [  await (  ]';
    '134:486 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:487 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:488 javascript__iteration_statement=>τfor • τ( javascript__for_declaration τin javascript__expression τ) javascript__statement';
    '134:490 javascript__iteration_statement=>τfor • τ( τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:491 javascript__iteration_statement=>τfor • τ( javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
    '134:492 javascript__iteration_statement=>τfor • τ( javascript__left_hand_side_expression τin javascript__expression τ) javascript__statement';
    '134:493 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_887_1_ τin javascript__expression τ) javascript__statement';
    '134:496 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression τ) javascript__statement';
    '134:497 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; τ) javascript__statement';
    '134:498 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration τ; javascript__expression τ) javascript__statement';
    '134:499 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration javascript__expression τ; τ) javascript__statement';
    '134:500 javascript__iteration_statement=>τfor • τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
    '134:501 javascript__iteration_statement=>τfor • τ( τ; τ; javascript__expression τ) javascript__statement';
    '134:502 javascript__iteration_statement=>τfor • τ( τ; javascript__expression τ; τ) javascript__statement';
    '134:503 javascript__iteration_statement=>τfor • τ( javascript__expression τ; τ; javascript__expression τ) javascript__statement';
    '134:504 javascript__iteration_statement=>τfor • τ( javascript__expression τ; javascript__expression τ; τ) javascript__statement';
    '134:505 javascript__iteration_statement=>τfor • τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    '134:506 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    '134:507 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; τ; τ) javascript__statement';
    '134:508 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration τ; τ) javascript__statement';
    '134:509 javascript__iteration_statement=>τfor • τ( τ; τ; τ) javascript__statement';
    '134:510 javascript__iteration_statement=>τfor • τ( javascript__expression τ; τ; τ) javascript__statement';
    '134:489 javascript__iteration_statement=>τfor • τawait τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
    '134:494 javascript__iteration_statement=>τfor • τawait τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
    '134:495 javascript__iteration_statement=>τfor • τawait τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
    scan( state.lexer, 412, 11 );
    if( state.lexer._type  == 123 ){
        'Asserts [  await  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  await  ]';
        '134:489 javascript__iteration_statement=>τfor • τawait τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
        '134:494 javascript__iteration_statement=>τfor • τawait τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
        '134:495 javascript__iteration_statement=>τfor • τawait τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
        'offset 6 peek_level-1 [  (  ]';
        '134:489 javascript__iteration_statement=>τfor τawait • τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
        '134:494 javascript__iteration_statement=>τfor τawait • τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
        '134:495 javascript__iteration_statement=>τfor τawait • τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
        scan( state.lexer, 10, 11 );
        if( state.lexer._type  == 36 ){
            'Assert Consume [  (  ]';
            consume( state );
            'offset 7 peek_level0 [  new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num let const var  ]';
            '134:489 javascript__iteration_statement=>τfor τawait τ( • javascript__for_declaration τof javascript__expression τ) javascript__statement';
            '134:494 javascript__iteration_statement=>τfor τawait τ( • javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
            '134:495 javascript__iteration_statement=>τfor τawait τ( • javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
            scan( state.lexer, 413, 9 );
            if( isTokenActive( state.lexer._type, 300 ) ){
                'Asserts [  new super import this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
                state.push_fn( set_production /*134*/, 134 );
                '"--LEAF--"';
                '134:494 javascript__iteration_statement=>τfor τawait τ( • javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
                state.push_fn( branch_4437a2dc118308df, 134 );
                return hc_javascript__left_hand_side_expression( state, db, 0 )
            } else if( state.lexer._type  == 125 || state.lexer._type  == 126 ){
                'Asserts [  let const  ]';
                state.push_fn( set_production /*134*/, 134 );
                '"--LEAF--"';
                '134:489 javascript__iteration_statement=>τfor τawait τ( • javascript__for_declaration τof javascript__expression τ) javascript__statement';
                state.push_fn( branch_4437a2dc118308df, 134 );
                return hc_javascript__for_declaration( state, db, 0 )
            } else {
                state.push_fn( set_production /*134*/, 134 );
                '"--LEAF--"';
                '134:495 javascript__iteration_statement=>τfor τawait τ( • javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
                state.push_fn( branch_4437a2dc118308df, 134 );
                return hc_javascript__iteration_statement_group_896_1_( state, db, 0 )
            }
        }
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  (  ]';
        '134:486 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:487 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:488 javascript__iteration_statement=>τfor • τ( javascript__for_declaration τin javascript__expression τ) javascript__statement';
        '134:490 javascript__iteration_statement=>τfor • τ( τ; javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:491 javascript__iteration_statement=>τfor • τ( javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:492 javascript__iteration_statement=>τfor • τ( javascript__left_hand_side_expression τin javascript__expression τ) javascript__statement';
        '134:493 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_887_1_ τin javascript__expression τ) javascript__statement';
        '134:496 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression τ) javascript__statement';
        '134:497 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; τ) javascript__statement';
        '134:498 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration τ; javascript__expression τ) javascript__statement';
        '134:499 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration javascript__expression τ; τ) javascript__statement';
        '134:500 javascript__iteration_statement=>τfor • τ( javascript__for_declaration τof javascript__expression τ) javascript__statement';
        '134:501 javascript__iteration_statement=>τfor • τ( τ; τ; javascript__expression τ) javascript__statement';
        '134:502 javascript__iteration_statement=>τfor • τ( τ; javascript__expression τ; τ) javascript__statement';
        '134:503 javascript__iteration_statement=>τfor • τ( javascript__expression τ; τ; javascript__expression τ) javascript__statement';
        '134:504 javascript__iteration_statement=>τfor • τ( javascript__expression τ; javascript__expression τ; τ) javascript__statement';
        '134:505 javascript__iteration_statement=>τfor • τ( javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
        '134:506 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
        '134:507 javascript__iteration_statement=>τfor • τ( javascript__iteration_statement_group_869_1_ τ; τ; τ) javascript__statement';
        '134:508 javascript__iteration_statement=>τfor • τ( javascript__lexical_declaration τ; τ) javascript__statement';
        '134:509 javascript__iteration_statement=>τfor • τ( τ; τ; τ) javascript__statement';
        '134:510 javascript__iteration_statement=>τfor • τ( javascript__expression τ; τ; τ) javascript__statement';
        'offset 6 peek_level0 [  async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num yield delete void typeof + ~ ! - ++ -- await let const var ;  ]';
        '134:486 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:493 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_887_1_ τin javascript__expression τ) javascript__statement';
        '134:496 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; τ; javascript__expression τ) javascript__statement';
        '134:497 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; javascript__expression τ; τ) javascript__statement';
        '134:506 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_896_1_ τof javascript__expression τ) javascript__statement';
        '134:507 javascript__iteration_statement=>τfor τ( • javascript__iteration_statement_group_869_1_ τ; τ; τ) javascript__statement';
        '134:487 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:488 javascript__iteration_statement=>τfor τ( • javascript__for_declaration τin javascript__expression τ) javascript__statement';
        '134:498 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration τ; javascript__expression τ) javascript__statement';
        '134:499 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration javascript__expression τ; τ) javascript__statement';
        '134:500 javascript__iteration_statement=>τfor τ( • javascript__for_declaration τof javascript__expression τ) javascript__statement';
        '134:508 javascript__iteration_statement=>τfor τ( • javascript__lexical_declaration τ; τ) javascript__statement';
        '134:490 javascript__iteration_statement=>τfor τ( • τ; javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:501 javascript__iteration_statement=>τfor τ( • τ; τ; javascript__expression τ) javascript__statement';
        '134:502 javascript__iteration_statement=>τfor τ( • τ; javascript__expression τ; τ) javascript__statement';
        '134:509 javascript__iteration_statement=>τfor τ( • τ; τ; τ) javascript__statement';
        '134:491 javascript__iteration_statement=>τfor τ( • javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
        '134:503 javascript__iteration_statement=>τfor τ( • javascript__expression τ; τ; javascript__expression τ) javascript__statement';
        '134:504 javascript__iteration_statement=>τfor τ( • javascript__expression τ; javascript__expression τ; τ) javascript__statement';
        '134:510 javascript__iteration_statement=>τfor τ( • javascript__expression τ; τ; τ) javascript__statement';
        '134:492 javascript__iteration_statement=>τfor τ( • javascript__left_hand_side_expression τin javascript__expression τ) javascript__statement';
        '134:505 javascript__iteration_statement=>τfor τ( • javascript__left_hand_side_expression τof javascript__expression τ) javascript__statement';
        scan( state.lexer, 414, 9 );
        if( isTokenActive( state.lexer._type, 300 ) ){
            'Asserts [  async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_81a5eb8bde8cca53, 134 );
            state.push_fn( branch_a6edf34acd0514af, 134 );
            return 0
        } else if( isTokenActive( state.lexer._type, 415 ) ){
            'Asserts [  yield delete void typeof + ~ ! - ++ -- await  ]';
            'offset 8 peek_level-1 [  126  ]';
            '134:491 javascript__iteration_statement=>τfor τ( • javascript__expression τ; javascript__expression τ; javascript__expression τ) javascript__statement';
            '134:503 javascript__iteration_statement=>τfor τ( • javascript__expression τ; τ; javascript__expression τ) javascript__statement';
            '134:504 javascript__iteration_statement=>τfor τ( • javascript__expression τ; javascript__expression τ; τ) javascript__statement';
            '134:510 javascript__iteration_statement=>τfor τ( • javascript__expression τ; τ; τ) javascript__statement';
            scan( state.lexer, 21, 11 );
            state.push_fn( branch_f6e6a26385e26aa9, 0 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 125 || state.lexer._type  == 126 ){
            'Asserts [  let const  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_ba51cf1d2a90dae6, 134 );
            state.push_fn( branch_5d5172fa8655c623, 134 );
            return 0
        } else if( state.lexer._type  == 68 ){
            'Asserts [  var  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_2f62a813056a7163, 134 );
            var fk2 = state.fork( db );;
            fk2.push_fn( branch_44c752a447173e09, 134 );
            state.push_fn( branch_5f1d4dd7e626b9f5, 134 );
            return 0
        } else if( state.lexer._type  == 17 ){
            'Asserts [  ;  ]';
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 8 peek_level-1 [  ;  ]';
            '134:490 javascript__iteration_statement=>τfor τ( • τ; javascript__expression τ; javascript__expression τ) javascript__statement';
            '134:501 javascript__iteration_statement=>τfor τ( • τ; τ; javascript__expression τ) javascript__statement';
            '134:502 javascript__iteration_statement=>τfor τ( • τ; javascript__expression τ; τ) javascript__statement';
            '134:509 javascript__iteration_statement=>τfor τ( • τ; τ; τ) javascript__statement';
            'offset 9 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ;  ]';
            '134:490 javascript__iteration_statement=>τfor τ( τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
            '134:502 javascript__iteration_statement=>τfor τ( τ; • javascript__expression τ; τ) javascript__statement';
            '134:501 javascript__iteration_statement=>τfor τ( τ; • τ; javascript__expression τ) javascript__statement';
            '134:509 javascript__iteration_statement=>τfor τ( τ; • τ; τ) javascript__statement';
            scan( state.lexer, 19, 9 );
            if( isTokenActive( state.lexer._type, 20 ) ){
                'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                'offset 11 peek_level-1 [  126  ]';
                '134:490 javascript__iteration_statement=>τfor τ( τ; • javascript__expression τ; javascript__expression τ) javascript__statement';
                '134:502 javascript__iteration_statement=>τfor τ( τ; • javascript__expression τ; τ) javascript__statement';
                scan( state.lexer, 21, 11 );
                state.push_fn( branch_7af222e51e94481e, 0 );
                return hc_javascript__expression( state, db, 0 )
            } else if( state.lexer._type  == 17 ){
                'Asserts [  ;  ]';
                consume( state );
                '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                'offset 11 peek_level-1 [  ;  ]';
                '134:501 javascript__iteration_statement=>τfor τ( τ; • τ; javascript__expression τ) javascript__statement';
                '134:509 javascript__iteration_statement=>τfor τ( τ; • τ; τ) javascript__statement';
                'offset 12 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await )  ]';
                '134:501 javascript__iteration_statement=>τfor τ( τ; τ; • javascript__expression τ) javascript__statement';
                '134:509 javascript__iteration_statement=>τfor τ( τ; τ; • τ) javascript__statement';
                scan( state.lexer, 22, 9 );
                if( isTokenActive( state.lexer._type, 20 ) ){
                    'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
                    state.push_fn( set_production /*134*/, 134 );
                    '"--LEAF--"';
                    '134:501 javascript__iteration_statement=>τfor τ( τ; τ; • javascript__expression τ) javascript__statement';
                    state.push_fn( branch_16833eb5dd17ab3b, 134 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    'Asserts [  )  ]';
                    state.push_fn( set_production /*134*/, 134 );
                    '"--LEAF--"';
                    '134:509 javascript__iteration_statement=>τfor τ( τ; τ; • τ) javascript__statement';
                    consume( state );
                    state.push_fn( branch_469783ee4b10f5a3, 134 );
                    return hc_javascript__statement( state, db, 0 )
                }
            }
        }
    }
};
    return - 1
}

function hc_javascript__lexical_declaration(state, db, prod){
    '"--LEAF--"';
    '135:511 javascript__lexical_declaration=>• javascript__let_or_const javascript__binding_list javascript__asi';
    state.push_fn( branch_d0393a2bdcb724db, 135 );
    return hc_javascript__let_or_const( state, db, 0 )
}

function hc_javascript__let_or_const(state, db, prod){
    scan( state.lexer, 108, 11 );
    'offset 0 peek_level-1 [  let const  ]';
    '136:512 javascript__let_or_const=>• τlet';
    '136:513 javascript__let_or_const=>• τconst';
    if( state.lexer._type  == 125 ){
    'Asserts [  let  ]';
    state.push_fn( set_production /*136*/, 136 );
    '"--LEAF--"';
    '136:512 javascript__let_or_const=>• τlet';
    consume( state );
    add_reduce( state, 1, 201 );
    return 0
} else if( state.lexer._type  == 126 ){
    'Asserts [  const  ]';
    state.push_fn( set_production /*136*/, 136 );
    '"--LEAF--"';
    '136:513 javascript__let_or_const=>• τconst';
    consume( state );
    add_reduce( state, 1, 202 );
    return 0
};
    return - 1
}

function hc_javascript__binding_list(state, db, prod){
    '"--LEAF--"';
    '137:514 javascript__binding_list=>• javascript__lexical_binding';
    state.push_fn( branch_48d2171bb0e25a48, 137 );
    return hc_javascript__lexical_binding( state, db, 0 )
}

function hc_javascript__binding_list_goto(state, db, prod){
    'offset 1 peek_level-1 [  , ; } nl END_OF_FILE  ]';
    '137:515 javascript__binding_list=>javascript__binding_list • τ, javascript__lexical_binding';
    '135:511 javascript__lexical_declaration=>javascript__let_or_const javascript__binding_list • javascript__asi';
    scan( state.lexer, 219, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( hc_javascript__binding_list_goto /*hc_javascript__binding_list_goto( state, db, 137 )*/, 137 );
    '"--LEAF--"';
    '137:515 javascript__binding_list=>javascript__binding_list • τ, javascript__lexical_binding';
    scan( state.lexer, 100, 11 );
    consume( state );
    state.push_fn( branch_a8b069c903e9e56e, 137 );
    return hc_javascript__lexical_binding( state, db, 0 )
};
    return ( prod  == 137 ) ? prod  : - 1
}

function hc_javascript__lexical_binding(state, db, prod){
    scan( state.lexer, 142, 11 );
    'offset 0 peek_level0 [  { [ 40  ]';
    '138:516 javascript__lexical_binding=>• javascript__binding_identifier';
    '138:517 javascript__lexical_binding=>• javascript__binding_identifier javascript__initializer';
    '138:518 javascript__lexical_binding=>• javascript__binding_pattern javascript__initializer';
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  { [  ]';
    state.push_fn( set_production /*138*/, 138 );
    '"--LEAF--"';
    '138:518 javascript__lexical_binding=>• javascript__binding_pattern javascript__initializer';
    state.push_fn( branch_df3ac9fd932b099a, 138 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    'offset 2 peek_level-1 [  55  ]';
    '138:516 javascript__lexical_binding=>• javascript__binding_identifier';
    '138:517 javascript__lexical_binding=>• javascript__binding_identifier javascript__initializer';
    scan( state.lexer, 275, 11 );
    state.push_fn( branch_b0812bdbb7de30d7, 0 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__for_binding(state, db, prod){
    scan( state.lexer, 142, 11 );
    'offset 0 peek_level0 [  { [ 40  ]';
    '139:519 javascript__for_binding=>• javascript__binding_identifier';
    '139:520 javascript__for_binding=>• javascript__binding_pattern';
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  { [  ]';
    state.push_fn( set_production /*139*/, 139 );
    '"--LEAF--"';
    '139:520 javascript__for_binding=>• javascript__binding_pattern';
    state.push_fn( set_production /*0*/, 139 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*139*/, 139 );
    '"--LEAF--"';
    '139:519 javascript__for_binding=>• javascript__binding_identifier';
    state.push_fn( set_production /*0*/, 139 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__for_declaration(state, db, prod){
    '"--LEAF--"';
    '140:521 javascript__for_declaration=>• javascript__let_or_const javascript__for_binding';
    state.push_fn( branch_8ab4c4fcc8a8c8cd, 140 );
    return hc_javascript__let_or_const( state, db, 0 )
}

function hc_javascript__switch_statement(state, db, prod){
    scan( state.lexer, 416, 11 );
    'offset 0 peek_level-1 [  switch  ]';
    '141:522 javascript__switch_statement=>• τswitch τ( javascript__expression τ) javascript__case_block';
    if( state.lexer._type  == 127 ){
    'Assert Consume [  switch  ]';
    consume( state );
    '"--LEAF--"';
    '141:522 javascript__switch_statement=>τswitch • τ( javascript__expression τ) javascript__case_block';
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_9afea872a2de7233, 141 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__case_block(state, db, prod){
    scan( state.lexer, 13, 11 );
    'offset 0 peek_level-1 [  {  ]';
    '142:523 javascript__case_block=>• τ{ javascript__case_clauses javascript__default_clause javascript__case_clauses τ}';
    '142:524 javascript__case_block=>• τ{ javascript__default_clause javascript__case_clauses τ}';
    '142:525 javascript__case_block=>• τ{ javascript__case_clauses javascript__case_clauses τ}';
    '142:526 javascript__case_block=>• τ{ javascript__case_clauses javascript__default_clause τ}';
    '142:527 javascript__case_block=>• τ{ javascript__case_clauses τ}';
    '142:528 javascript__case_block=>• τ{ javascript__default_clause τ}';
    '142:529 javascript__case_block=>• τ{ τ}';
    if( state.lexer._type  == 16 ){
    'Assert Consume [  {  ]';
    consume( state );
    'offset 1 peek_level0 [  case default }  ]';
    '142:523 javascript__case_block=>τ{ • javascript__case_clauses javascript__default_clause javascript__case_clauses τ}';
    '142:525 javascript__case_block=>τ{ • javascript__case_clauses javascript__case_clauses τ}';
    '142:526 javascript__case_block=>τ{ • javascript__case_clauses javascript__default_clause τ}';
    '142:527 javascript__case_block=>τ{ • javascript__case_clauses τ}';
    '142:524 javascript__case_block=>τ{ • javascript__default_clause javascript__case_clauses τ}';
    '142:528 javascript__case_block=>τ{ • javascript__default_clause τ}';
    '142:529 javascript__case_block=>τ{ • τ}';
    scan( state.lexer, 43, 11 );
    if( state.lexer._type  == 128 ){
        'Asserts [  case  ]';
        'offset 3 peek_level-1 [  143  ]';
        '142:523 javascript__case_block=>τ{ • javascript__case_clauses javascript__default_clause javascript__case_clauses τ}';
        '142:525 javascript__case_block=>τ{ • javascript__case_clauses javascript__case_clauses τ}';
        '142:526 javascript__case_block=>τ{ • javascript__case_clauses javascript__default_clause τ}';
        '142:527 javascript__case_block=>τ{ • javascript__case_clauses τ}';
        scan( state.lexer, 45, 11 );
        state.push_fn( branch_0e072fdc27530b37, 0 );
        return hc_javascript__case_clauses( state, db, 0 )
    } else if( state.lexer._type  == 67 ){
        'Asserts [  default  ]';
        'offset 3 peek_level-1 [  145  ]';
        '142:524 javascript__case_block=>τ{ • javascript__default_clause javascript__case_clauses τ}';
        '142:528 javascript__case_block=>τ{ • javascript__default_clause τ}';
        scan( state.lexer, 44, 11 );
        state.push_fn( branch_d2a8975db05dbfcf, 0 );
        return hc_javascript__default_clause( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        'Asserts [  }  ]';
        state.push_fn( set_production /*142*/, 142 );
        '"--LEAF--"';
        '142:529 javascript__case_block=>τ{ • τ}';
        consume( state );
        add_reduce( state, 2, 211 );
        return 0
    }
};
    return - 1
}

function hc_javascript__case_clauses(state, db, prod){
    '"--LEAF--"';
    '143:530 javascript__case_clauses=>• javascript__case_clause';
    state.push_fn( branch_a3e83d9faaa61cfd, 143 );
    return hc_javascript__case_clause( state, db, 0 )
}

function hc_javascript__case_clauses_goto(state, db, prod){
    'offset 1 peek_level0 [  default } case  ]';
    '143:531 javascript__case_clauses=>javascript__case_clauses • javascript__case_clause';
    '142:525 javascript__case_block=>τ{ javascript__case_clauses • javascript__case_clauses τ}';
    '142:523 javascript__case_block=>τ{ javascript__case_clauses • javascript__default_clause javascript__case_clauses τ}';
    '142:526 javascript__case_block=>τ{ javascript__case_clauses • javascript__default_clause τ}';
    '142:523 javascript__case_block=>τ{ javascript__case_clauses javascript__default_clause javascript__case_clauses • τ}';
    '142:524 javascript__case_block=>τ{ javascript__default_clause javascript__case_clauses • τ}';
    '142:525 javascript__case_block=>τ{ javascript__case_clauses javascript__case_clauses • τ}';
    '142:527 javascript__case_block=>τ{ javascript__case_clauses • τ}';
    scan( state.lexer, 43, 11 );
    if( state.lexer._type  == 67 || state.lexer._type  == 18 ){
    'Asserts [  default }  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 143
} else if( state.lexer._type  == 128 ){
    'Asserts [  case  ]';
    var fk1 = state.fork( db );;
    fk1.push_fn( branch_52041fe4709e52c2, 143 );
    state.push_fn( branch_174851bf7f7242b3, 143 );
    return 0
};
    return ( prod  == 143 ) ? prod  : - 1
}

function hc_javascript__case_clause(state, db, prod){
    scan( state.lexer, 45, 11 );
    'offset 0 peek_level-1 [  case  ]';
    '144:532 javascript__case_clause=>• τcase javascript__expression τ: javascript__statement_list';
    '144:533 javascript__case_clause=>• τcase javascript__expression τ:';
    if( state.lexer._type  == 128 ){
    'Assert Consume [  case  ]';
    consume( state );
    'offset 1 peek_level-1 [  126  ]';
    '144:532 javascript__case_clause=>τcase • javascript__expression τ: javascript__statement_list';
    '144:533 javascript__case_clause=>τcase • javascript__expression τ:';
    scan( state.lexer, 21, 11 );
    state.push_fn( branch_eed1dcb9fe6fb492, 0 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__default_clause(state, db, prod){
    scan( state.lexer, 44, 11 );
    'offset 0 peek_level-1 [  default  ]';
    '145:534 javascript__default_clause=>• τdefault τ: javascript__statement_list';
    '145:535 javascript__default_clause=>• τdefault τ:';
    if( state.lexer._type  == 67 ){
    'Assert Consume [  default  ]';
    consume( state );
    'offset 1 peek_level-1 [  :  ]';
    '145:534 javascript__default_clause=>τdefault • τ: javascript__statement_list';
    '145:535 javascript__default_clause=>τdefault • τ:';
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 70 ){
        'Assert Consume [  :  ]';
        consume( state );
        'offset 2 peek_level0 [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await } case END_OF_PRODUCTION  ]';
        '145:534 javascript__default_clause=>τdefault τ: • javascript__statement_list';
        '145:535 javascript__default_clause=>τdefault τ: •';
        scan( state.lexer, 417, 9 );
        if( isTokenActive( state.lexer._type, 104 ) ){
            'Asserts [  var ; if continue break return with throw try debugger class { 40 do while for switch async function let const yield ( new super import this [ / < true false null " " ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
            state.push_fn( set_production /*145*/, 145 );
            '"--LEAF--"';
            '145:534 javascript__default_clause=>τdefault τ: • javascript__statement_list';
            state.push_fn( branch_6cd1f1bf1a0c6078, 145 );
            return hc_javascript__statement_list( state, db, 0 )
        } else {
            '"--LEAF--"';
            '145:535 javascript__default_clause=>τdefault τ: •';
            add_reduce( state, 2, 215 );
            return 145
        }
    }
};
    return - 1
}

function hc_javascript__continue_statement(state, db, prod){
    scan( state.lexer, 418, 11 );
    'offset 0 peek_level-1 [  continue  ]';
    '146:536 javascript__continue_statement=>• τcontinue javascript__goto_label_identifier javascript__asi';
    '146:537 javascript__continue_statement=>• τcontinue javascript__asi';
    if( state.lexer._type  == 129 ){
    'Assert Consume [  continue  ]';
    consume( state );
    'offset 1 peek_level0 [  40 ; } nl END_OF_FILE  ]';
    '146:536 javascript__continue_statement=>τcontinue • javascript__goto_label_identifier javascript__asi';
    '146:537 javascript__continue_statement=>τcontinue • javascript__asi';
    scan( state.lexer, 419, 11 );
    if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( set_production /*146*/, 146 );
        '"--LEAF--"';
        '146:536 javascript__continue_statement=>τcontinue • javascript__goto_label_identifier javascript__asi';
        state.push_fn( branch_628f19130835c1c3, 146 );
        return hc_javascript__goto_label_identifier( state, db, 0 )
    } else {
        state.push_fn( set_production /*146*/, 146 );
        '"--LEAF--"';
        '146:537 javascript__continue_statement=>τcontinue • javascript__asi';
        state.push_fn( branch_213773c8f0ea25fb, 146 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__goto_label_identifier(state, db, prod){
    '"--LEAF--"';
    '147:538 javascript__goto_label_identifier=>• javascript__label_identifier';
    state.push_fn( branch_10f84fa89e47280d, 147 );
    return hc_javascript__label_identifier( state, db, 0 )
}

function hc_javascript__break_statement(state, db, prod){
    scan( state.lexer, 420, 11 );
    'offset 0 peek_level-1 [  break  ]';
    '148:539 javascript__break_statement=>• τbreak javascript__goto_label_identifier javascript__asi';
    '148:540 javascript__break_statement=>• τbreak javascript__asi';
    if( state.lexer._type  == 130 ){
    'Assert Consume [  break  ]';
    consume( state );
    'offset 1 peek_level0 [  40 ; } nl END_OF_FILE  ]';
    '148:539 javascript__break_statement=>τbreak • javascript__goto_label_identifier javascript__asi';
    '148:540 javascript__break_statement=>τbreak • javascript__asi';
    scan( state.lexer, 419, 11 );
    if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( set_production /*148*/, 148 );
        '"--LEAF--"';
        '148:539 javascript__break_statement=>τbreak • javascript__goto_label_identifier javascript__asi';
        state.push_fn( branch_6384e8ff46f7fb04, 148 );
        return hc_javascript__goto_label_identifier( state, db, 0 )
    } else {
        state.push_fn( set_production /*148*/, 148 );
        '"--LEAF--"';
        '148:540 javascript__break_statement=>τbreak • javascript__asi';
        state.push_fn( branch_1aef6b45df2168e6, 148 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__return_statement(state, db, prod){
    scan( state.lexer, 421, 11 );
    'offset 0 peek_level-1 [  return  ]';
    '149:541 javascript__return_statement=>• τreturn javascript__expression javascript__asi';
    '149:542 javascript__return_statement=>• τreturn javascript__asi';
    if( state.lexer._type  == 131 ){
    'Assert Consume [  return  ]';
    consume( state );
    'offset 1 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ; } nl END_OF_FILE  ]';
    '149:541 javascript__return_statement=>τreturn • javascript__expression javascript__asi';
    '149:542 javascript__return_statement=>τreturn • javascript__asi';
    scan( state.lexer, 422, 9 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*149*/, 149 );
        '"--LEAF--"';
        '149:541 javascript__return_statement=>τreturn • javascript__expression javascript__asi';
        state.push_fn( branch_6bdab82a0e6358f8, 149 );
        return hc_javascript__expression( state, db, 0 )
    } else {
        state.push_fn( set_production /*149*/, 149 );
        '"--LEAF--"';
        '149:542 javascript__return_statement=>τreturn • javascript__asi';
        state.push_fn( branch_a172f1ead2e33677, 149 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__with_statement(state, db, prod){
    scan( state.lexer, 423, 11 );
    'offset 0 peek_level-1 [  with  ]';
    '150:543 javascript__with_statement=>• τwith τ( javascript__expression τ) javascript__statement';
    if( state.lexer._type  == 132 ){
    'Assert Consume [  with  ]';
    consume( state );
    '"--LEAF--"';
    '150:543 javascript__with_statement=>τwith • τ( javascript__expression τ) javascript__statement';
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_3e4fb794d2fb933c, 150 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__throw_statement(state, db, prod){
    scan( state.lexer, 424, 11 );
    'offset 0 peek_level-1 [  throw  ]';
    '151:544 javascript__throw_statement=>• τthrow javascript__expression javascript__asi';
    if( state.lexer._type  == 133 ){
    'Assert Consume [  throw  ]';
    consume( state );
    '"--LEAF--"';
    '151:544 javascript__throw_statement=>τthrow • javascript__expression javascript__asi';
    scan( state.lexer, 21, 11 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
        state.push_fn( branch_fab5b28464651fa3, 151 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__try_statement(state, db, prod){
    scan( state.lexer, 425, 11 );
    'offset 0 peek_level-1 [  try  ]';
    '152:545 javascript__try_statement=>• τtry javascript__block javascript__catch';
    '152:546 javascript__try_statement=>• τtry javascript__block javascript__finally';
    '152:547 javascript__try_statement=>• τtry javascript__block javascript__catch javascript__finally';
    if( state.lexer._type  == 134 ){
    'Assert Consume [  try  ]';
    consume( state );
    'offset 1 peek_level-1 [  124  ]';
    '152:545 javascript__try_statement=>τtry • javascript__block javascript__catch';
    '152:546 javascript__try_statement=>τtry • javascript__block javascript__finally';
    '152:547 javascript__try_statement=>τtry • javascript__block javascript__catch javascript__finally';
    scan( state.lexer, 13, 11 );
    state.push_fn( branch_711a8495c94cb4d8, 0 );
    return hc_javascript__block( state, db, 0 )
};
    return - 1
}

function hc_javascript__catch(state, db, prod){
    scan( state.lexer, 113, 11 );
    'offset 0 peek_level-1 [  catch  ]';
    '153:548 javascript__catch=>• τcatch τ( javascript__catch_parameter τ) javascript__block';
    if( state.lexer._type  == 135 ){
    'Assert Consume [  catch  ]';
    consume( state );
    '"--LEAF--"';
    '153:548 javascript__catch=>τcatch • τ( javascript__catch_parameter τ) javascript__block';
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_c3841a874700c4e0, 153 );
        return hc_javascript__catch_parameter( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__catch_parameter(state, db, prod){
    scan( state.lexer, 142, 11 );
    'offset 0 peek_level0 [  { [ 40  ]';
    '154:549 javascript__catch_parameter=>• javascript__binding_identifier';
    '154:550 javascript__catch_parameter=>• javascript__binding_pattern';
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    'Asserts [  { [  ]';
    state.push_fn( set_production /*154*/, 154 );
    '"--LEAF--"';
    '154:550 javascript__catch_parameter=>• javascript__binding_pattern';
    state.push_fn( set_production /*0*/, 154 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*154*/, 154 );
    '"--LEAF--"';
    '154:549 javascript__catch_parameter=>• javascript__binding_identifier';
    state.push_fn( set_production /*0*/, 154 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__finally(state, db, prod){
    scan( state.lexer, 426, 11 );
    'offset 0 peek_level-1 [  finally  ]';
    '155:551 javascript__finally=>• τfinally javascript__block';
    if( state.lexer._type  == 136 ){
    'Assert Consume [  finally  ]';
    consume( state );
    '"--LEAF--"';
    '155:551 javascript__finally=>τfinally • javascript__block';
    scan( state.lexer, 13, 11 );
    if( ( state.lexer._type  == 16 ) ){
        state.push_fn( branch_06693284d683e088, 155 );
        return hc_javascript__block( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__debugger_statement(state, db, prod){
    scan( state.lexer, 427, 11 );
    'offset 0 peek_level-1 [  debugger  ]';
    '156:552 javascript__debugger_statement=>• τdebugger javascript__asi';
    if( state.lexer._type  == 137 ){
    'Assert Consume [  debugger  ]';
    consume( state );
    '"--LEAF--"';
    '156:552 javascript__debugger_statement=>τdebugger • javascript__asi';
    scan( state.lexer, 220, 11 );
    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
        state.push_fn( branch_2cf39bda1bef37de, 156 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__declaration(state, db, prod){
    scan( state.lexer, 428, 11 );
    'offset 0 peek_level0 [  async function let const class  ]';
    '157:553 javascript__declaration=>• javascript__class_declaration';
    '157:554 javascript__declaration=>• javascript__hoistable_declaration';
    '157:555 javascript__declaration=>• javascript__lexical_declaration';
    if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
    'Asserts [  async function  ]';
    state.push_fn( set_production /*157*/, 157 );
    '"--LEAF--"';
    '157:554 javascript__declaration=>• javascript__hoistable_declaration';
    state.push_fn( set_production /*0*/, 157 );
    return hc_javascript__hoistable_declaration( state, db, 0 )
} else if( state.lexer._type  == 125 || state.lexer._type  == 126 ){
    'Asserts [  let const  ]';
    state.push_fn( set_production /*157*/, 157 );
    '"--LEAF--"';
    '157:555 javascript__declaration=>• javascript__lexical_declaration';
    state.push_fn( set_production /*0*/, 157 );
    return hc_javascript__lexical_declaration( state, db, 0 )
} else {
    state.push_fn( set_production /*157*/, 157 );
    '"--LEAF--"';
    '157:553 javascript__declaration=>• javascript__class_declaration';
    state.push_fn( set_production /*0*/, 157 );
    return hc_javascript__class_declaration( state, db, 0 )
};
    return - 1
}

function hc_javascript__class_declaration(state, db, prod){
    scan( state.lexer, 429, 11 );
    'offset 0 peek_level-1 [  class  ]';
    '158:556 javascript__class_declaration=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '158:557 javascript__class_declaration=>• τclass javascript__class_heritage τ{ javascript__class_body τ}';
    '158:558 javascript__class_declaration=>• τclass javascript__binding_identifier τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>• τclass javascript__binding_identifier javascript__class_heritage τ{ τ}';
    '158:560 javascript__class_declaration=>• τclass τ{ javascript__class_body τ}';
    '158:561 javascript__class_declaration=>• τclass javascript__class_heritage τ{ τ}';
    '158:562 javascript__class_declaration=>• τclass javascript__binding_identifier τ{ τ}';
    '158:563 javascript__class_declaration=>• τclass τ{ τ}';
    if( state.lexer._type  == 138 ){
    'Assert Consume [  class  ]';
    consume( state );
    'offset 1 peek_level0 [  extends { 40  ]';
    '158:556 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '158:558 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
    '158:559 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
    '158:562 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ τ}';
    '158:557 javascript__class_declaration=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
    '158:561 javascript__class_declaration=>τclass • javascript__class_heritage τ{ τ}';
    '158:560 javascript__class_declaration=>τclass • τ{ javascript__class_body τ}';
    '158:563 javascript__class_declaration=>τclass • τ{ τ}';
    scan( state.lexer, 395, 11 );
    if( state.lexer._type  == 139 ){
        'Asserts [  extends  ]';
        'offset 3 peek_level-1 [  159  ]';
        '158:557 javascript__class_declaration=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
        '158:561 javascript__class_declaration=>τclass • javascript__class_heritage τ{ τ}';
        scan( state.lexer, 74, 11 );
        state.push_fn( branch_0fd9c6312c379f85, 0 );
        return hc_javascript__class_heritage( state, db, 0 )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  {  ]';
        '158:560 javascript__class_declaration=>τclass • τ{ javascript__class_body τ}';
        '158:563 javascript__class_declaration=>τclass • τ{ τ}';
        'offset 4 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
        '158:560 javascript__class_declaration=>τclass τ{ • javascript__class_body τ}';
        '158:563 javascript__class_declaration=>τclass τ{ • τ}';
        scan( state.lexer, 31, 11 );
        if( isTokenActive( state.lexer._type, 32 ) ){
            'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
            state.push_fn( set_production /*158*/, 158 );
            '"--LEAF--"';
            '158:560 javascript__class_declaration=>τclass τ{ • javascript__class_body τ}';
            state.push_fn( branch_989668520b64d0f9, 158 );
            return hc_javascript__class_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*158*/, 158 );
            '"--LEAF--"';
            '158:563 javascript__class_declaration=>τclass τ{ • τ}';
            consume( state );
            add_reduce( state, 3, 237 );
            return 0
        }
    } else {
        'offset 3 peek_level-1 [  55  ]';
        '158:556 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        '158:558 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
        '158:559 javascript__class_declaration=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
        '158:562 javascript__class_declaration=>τclass • javascript__binding_identifier τ{ τ}';
        scan( state.lexer, 275, 11 );
        state.push_fn( branch_446747d32eed8306, 0 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__class_heritage(state, db, prod){
    scan( state.lexer, 74, 11 );
    'offset 0 peek_level-1 [  extends  ]';
    '159:564 javascript__class_heritage=>• τextends javascript__left_hand_side_expression';
    if( state.lexer._type  == 139 ){
    'Assert Consume [  extends  ]';
    consume( state );
    '"--LEAF--"';
    '159:564 javascript__class_heritage=>τextends • javascript__left_hand_side_expression';
    scan( state.lexer, 146, 11 );
    if( ( isTokenActive( state.lexer._type, 300 ) ) ){
        state.push_fn( branch_021e47c347f3394c, 159 );
        return hc_javascript__left_hand_side_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__class_body(state, db, prod){
    scan( state.lexer, 33, 11 );
    'offset 0 peek_level0 [  hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num ;  ]';
    '160:565 javascript__class_body=>• javascript__class_element';
    '160:567 javascript__class_body=>• τ;';
    if( isTokenActive( state.lexer._type, 430 ) ){
    'Asserts [  hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( hc_javascript__class_body_goto /*hc_javascript__class_body_goto( state, db, 160 )*/, 160 );
    '"--LEAF--"';
    '160:565 javascript__class_body=>• javascript__class_element';
    state.push_fn( branch_5cb267bf74038e65, 160 );
    return hc_javascript__class_element( state, db, 0 )
} else if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( hc_javascript__class_body_goto /*hc_javascript__class_body_goto( state, db, 160 )*/, 160 );
    '"--LEAF--"';
    '160:567 javascript__class_body=>• τ;';
    consume( state );
    add_reduce( state, 1, 239 );
    return 0
};
    return - 1
}

function hc_javascript__class_body_goto(state, db, prod){
    'offset 1 peek_level0 [  hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
    '160:566 javascript__class_body=>javascript__class_body • javascript__class_element';
    '158:556 javascript__class_declaration=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body • τ}';
    '158:557 javascript__class_declaration=>τclass javascript__class_heritage τ{ javascript__class_body • τ}';
    '158:558 javascript__class_declaration=>τclass javascript__binding_identifier τ{ javascript__class_body • τ}';
    '158:560 javascript__class_declaration=>τclass τ{ javascript__class_body • τ}';
    '165:573 javascript__class_expression=>τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body • τ}';
    '165:574 javascript__class_expression=>τclass javascript__class_heritage τ{ javascript__class_body • τ}';
    '165:575 javascript__class_expression=>τclass javascript__binding_identifier τ{ javascript__class_body • τ}';
    '165:577 javascript__class_expression=>τclass τ{ javascript__class_body • τ}';
    scan( state.lexer, 431, 11 );
    if( isTokenActive( state.lexer._type, 430 ) ){
    'Asserts [  hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( hc_javascript__class_body_goto /*hc_javascript__class_body_goto( state, db, 160 )*/, 160 );
    '"--LEAF--"';
    '160:566 javascript__class_body=>javascript__class_body • javascript__class_element';
    scan( state.lexer, 432, 11 );
    if( ( isTokenActive( state.lexer._type, 430 ) ) ){
        state.push_fn( branch_7e54fb8dccbd647b, 160 );
        return hc_javascript__class_element( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 160
};
    return ( prod  == 160 ) ? prod  : - 1
}

function hc_javascript__class_element(state, db, prod){
    scan( state.lexer, 432, 11 );
    'offset 0 peek_level0 [  hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num hybrid-187393[[static]literal  [40]production_token]  ]';
    '161:568 javascript__class_element=>• javascript__method_definition';
    '161:569 javascript__class_element=>• τstatic javascript__method_definition';
    if( isTokenActive( state.lexer._type, 433 ) ){
    'Asserts [  hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( set_production /*161*/, 161 );
    '"--LEAF--"';
    '161:568 javascript__class_element=>• javascript__method_definition';
    state.push_fn( set_production /*0*/, 161 );
    return hc_javascript__method_definition( state, db, 0 )
} else if( state.lexer._type  == 187393 || state.lexer._type  == 140 || state.lexer._type  == 59 ){
    'Asserts [  hybrid-187393[[static]literal  [40]production_token]  ]';
    'offset 0 peek_level1 [  hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num (  ]';
    '161:569 javascript__class_element=>• τstatic javascript__method_definition';
    '161:568 javascript__class_element=>• javascript__method_definition';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 434, 11 );
    if( isTokenActive( pk._type, 433 ) ){
        'Asserts [  hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
        state.lexer._type  = 140;
        state.push_fn( set_production /*161*/, 161 );
        '"--LEAF--"';
        '161:569 javascript__class_element=>• τstatic javascript__method_definition';
        consume( state );
        state.push_fn( branch_4a3561aa31a801e8, 161 );
        return hc_javascript__method_definition( state, db, 0 )
    } else {
        state.lexer._type  = 59;
        state.push_fn( set_production /*161*/, 161 );
        '"--LEAF--"';
        '161:568 javascript__class_element=>• javascript__method_definition';
        state.push_fn( set_production /*0*/, 161 );
        return hc_javascript__method_definition( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__hoistable_declaration(state, db, prod){
    '"--LEAF--"';
    '162:570 javascript__hoistable_declaration=>• javascript__function_declaration';
    state.push_fn( set_production /*162*/, 162 );
    return hc_javascript__function_declaration( state, db, 0 )
}

function hc_javascript__property_set_parameter_list(state, db, prod){
    '"--LEAF--"';
    '163:571 javascript__property_set_parameter_list=>• javascript__formal_parameter';
    state.push_fn( set_production /*163*/, 163 );
    return hc_javascript__formal_parameter( state, db, 0 )
}

function hc_javascript__function_expression(state, db, prod){
    '"--LEAF--"';
    '164:572 javascript__function_expression=>• javascript__function_declaration';
    state.push_fn( branch_36d0fe3e2ce63a99, 164 );
    return hc_javascript__function_declaration( state, db, 0 )
}

function hc_javascript__class_expression(state, db, prod){
    scan( state.lexer, 429, 11 );
    'offset 0 peek_level-1 [  class  ]';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '165:574 javascript__class_expression=>• τclass javascript__class_heritage τ{ javascript__class_body τ}';
    '165:575 javascript__class_expression=>• τclass javascript__binding_identifier τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ τ}';
    '165:577 javascript__class_expression=>• τclass τ{ javascript__class_body τ}';
    '165:578 javascript__class_expression=>• τclass javascript__class_heritage τ{ τ}';
    '165:579 javascript__class_expression=>• τclass javascript__binding_identifier τ{ τ}';
    '165:580 javascript__class_expression=>• τclass τ{ τ}';
    if( state.lexer._type  == 138 ){
    'Assert Consume [  class  ]';
    consume( state );
    'offset 1 peek_level0 [  extends { 40  ]';
    '165:573 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '165:575 javascript__class_expression=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
    '165:576 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
    '165:579 javascript__class_expression=>τclass • javascript__binding_identifier τ{ τ}';
    '165:574 javascript__class_expression=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
    '165:578 javascript__class_expression=>τclass • javascript__class_heritage τ{ τ}';
    '165:577 javascript__class_expression=>τclass • τ{ javascript__class_body τ}';
    '165:580 javascript__class_expression=>τclass • τ{ τ}';
    scan( state.lexer, 395, 11 );
    if( state.lexer._type  == 139 ){
        'Asserts [  extends  ]';
        'offset 3 peek_level-1 [  159  ]';
        '165:574 javascript__class_expression=>τclass • javascript__class_heritage τ{ javascript__class_body τ}';
        '165:578 javascript__class_expression=>τclass • javascript__class_heritage τ{ τ}';
        scan( state.lexer, 74, 11 );
        state.push_fn( branch_c97aa6410788a467, 0 );
        return hc_javascript__class_heritage( state, db, 0 )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  {  ]';
        '165:577 javascript__class_expression=>τclass • τ{ javascript__class_body τ}';
        '165:580 javascript__class_expression=>τclass • τ{ τ}';
        'offset 4 peek_level0 [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num }  ]';
        '165:577 javascript__class_expression=>τclass τ{ • javascript__class_body τ}';
        '165:580 javascript__class_expression=>τclass τ{ • τ}';
        scan( state.lexer, 31, 11 );
        if( isTokenActive( state.lexer._type, 32 ) ){
            'Asserts [  ; hybrid-187393[[static]literal  [40]production_token] hybrid-76801[[async]literal  [40]production_token] hybrid-74753[[get]literal  [40]production_token] hybrid-73729[[set]literal  [40]production_token] * [ 40 " " 0X 0x 0O 0o 0B 0b num  ]';
            state.push_fn( set_production /*165*/, 165 );
            '"--LEAF--"';
            '165:577 javascript__class_expression=>τclass τ{ • javascript__class_body τ}';
            state.push_fn( branch_989668520b64d0f9, 165 );
            return hc_javascript__class_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            state.push_fn( set_production /*165*/, 165 );
            '"--LEAF--"';
            '165:580 javascript__class_expression=>τclass τ{ • τ}';
            consume( state );
            add_reduce( state, 3, 237 );
            return 0
        }
    } else {
        'offset 3 peek_level-1 [  55  ]';
        '165:573 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        '165:575 javascript__class_expression=>τclass • javascript__binding_identifier τ{ javascript__class_body τ}';
        '165:576 javascript__class_expression=>τclass • javascript__binding_identifier javascript__class_heritage τ{ τ}';
        '165:579 javascript__class_expression=>τclass • javascript__binding_identifier τ{ τ}';
        scan( state.lexer, 275, 11 );
        state.push_fn( branch_578fc70c5b21cd26, 0 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__regular_expression_literal(state, db, prod){
    scan( state.lexer, 124, 11 );
    'offset 0 peek_level-1 [  /  ]';
    '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '166:582 javascript__regular_expression_literal=>• τ/ τ/ default_productions__js_identifier';
    '166:583 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/';
    '166:584 javascript__regular_expression_literal=>• τ/ τ/';
    if( state.lexer._type  == 10 ){
    'Assert Consume [  /  ]';
    consume( state );
    'offset 1 peek_level0 [  / f:s/ nl sp sym num id f:s  ]';
    '166:581 javascript__regular_expression_literal=>τ/ • javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '166:583 javascript__regular_expression_literal=>τ/ • javascript__regular_expression_literal_list_1056 τ/';
    '166:582 javascript__regular_expression_literal=>τ/ • τ/ default_productions__js_identifier';
    '166:584 javascript__regular_expression_literal=>τ/ • τ/';
    scan( state.lexer, 435, 0 );
    if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 3 peek_level-1 [  /  ]';
        '166:582 javascript__regular_expression_literal=>τ/ • τ/ default_productions__js_identifier';
        '166:584 javascript__regular_expression_literal=>τ/ • τ/';
        'offset 4 peek_level0 [  168 ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
        '166:582 javascript__regular_expression_literal=>τ/ τ/ • default_productions__js_identifier';
        '166:584 javascript__regular_expression_literal=>τ/ τ/ •';
        scan( state.lexer, 125, 9 );
        if( state.lexer._type  == 141 ){
            'Asserts [  168  ]';
            state.push_fn( set_production /*166*/, 166 );
            '"--LEAF--"';
            '166:582 javascript__regular_expression_literal=>τ/ τ/ • default_productions__js_identifier';
            state.push_fn( branch_9e01aab23a7c11c1, 166 );
            return hc_default_productions__js_identifier( state, db, 0 )
        } else {
            '"--LEAF--"';
            '166:584 javascript__regular_expression_literal=>τ/ τ/ •';
            add_reduce( state, 2, 245 );
            return 166
        }
    } else {
        'offset 3 peek_level-1 [  287  ]';
        '166:581 javascript__regular_expression_literal=>τ/ • javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
        '166:583 javascript__regular_expression_literal=>τ/ • javascript__regular_expression_literal_list_1056 τ/';
        scan( state.lexer, 436, 278 );
        state.push_fn( branch_807d02544ae8b717, 0 );
        return hc_javascript__regular_expression_literal_list_1056( state, db, 0 )
    }
};
    return - 1
}

function hc_default_productions__js_identifier(state, db, prod){
    scan( state.lexer, 437, 9 );
    'offset 0 peek_level-1 [  168  ]';
    '167:585 default_productions__js_identifier=>• tk:default_productions__js_id_symbols';
    if( state.lexer._type  == 141 ){
    'Assert Consume [  168  ]';
    consume( state );
    '"--LEAF--"';
    '167:585 default_productions__js_identifier=>tk:default_productions__js_id_symbols •';
    scan( state.lexer, 9, 9 );
    return 167
};
    return - 1
}

function hc_default_productions__js_id_symbols(state, db, prod){
    scan( state.lexer, 438, 9 );
    'offset 0 peek_level-1 [  _ $ id  ]';
    '168:590 default_productions__js_id_symbols=>• τ_';
    '168:591 default_productions__js_id_symbols=>• τ$';
    '168:592 default_productions__js_id_symbols=>• θid';
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:590 default_productions__js_id_symbols=>• τ_';
    consume( state );
    return 0
} else if( state.lexer._type  == 61 ){
    'Asserts [  $  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:591 default_productions__js_id_symbols=>• τ$';
    consume( state );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:592 default_productions__js_id_symbols=>• θid';
    consume( state );
    return 0
};
    return - 1
}

function hc_default_productions__js_id_symbols_goto(state, db, prod){
    'offset 1 peek_level-1 [  _ $ id num  ]';
    '168:586 default_productions__js_id_symbols=>default_productions__js_id_symbols • θid';
    '168:587 default_productions__js_id_symbols=>default_productions__js_id_symbols • τ_';
    '168:588 default_productions__js_id_symbols=>default_productions__js_id_symbols • τ$';
    '168:589 default_productions__js_id_symbols=>default_productions__js_id_symbols • θnum';
    scan( state.lexer, 439, 0 );
    if( state.lexer._type  == 60 ){
    'Asserts [  _  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:587 default_productions__js_id_symbols=>default_productions__js_id_symbols • τ_';
    scan( state.lexer, 440, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 61 ){
    'Asserts [  $  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:588 default_productions__js_id_symbols=>default_productions__js_id_symbols • τ$';
    scan( state.lexer, 441, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:586 default_productions__js_id_symbols=>default_productions__js_id_symbols • θid';
    scan( state.lexer, 1, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    '"--LEAF--"';
    '168:589 default_productions__js_id_symbols=>default_productions__js_id_symbols • θnum';
    scan( state.lexer, 442, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 168 ) ? prod  : - 1
}

function hc_javascript__template_literal(state, db, prod){
    scan( state.lexer, 218, 11 );
    'offset 0 peek_level0 [  `  ]';
    '169:593 javascript__template_literal=>• javascript__no_substitute_template';
    '169:594 javascript__template_literal=>• javascript__substitute_template';
    if( state.lexer._type  == 142 ){
    'Asserts [  `  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  `  ]';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    'offset 3 peek_level-1 [  171  ]';
    '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
    scan( state.lexer, 304, 11 );
    if( state.lexer._type  == 143 ){
        'Assert Consume [  171  ]';
        consume( state );
        'offset 4 peek_level-1 [  ` ${  ]';
        '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
        '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
        scan( state.lexer, 128, 11 );
        if( state.lexer._type  == 142 ){
            'Asserts [  `  ]';
            state.push_fn( hc_javascript__template_literal_goto /*hc_javascript__template_literal_goto( state, db, 169 )*/, 169 );
            '"--LEAF--"';
            '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
            consume( state );
            add_reduce( state, 3, 246 );
            return 0
        } else if( state.lexer._type  == 144 ){
            'Asserts [  ${  ]';
            state.push_fn( hc_javascript__template_literal_goto /*hc_javascript__template_literal_goto( state, db, 175 )*/, 175 );
            '"--LEAF--"';
            '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
            consume( state );
            add_reduce( state, 3, 248 );
            return 0
        }
    }
};
    return - 1
}

function hc_javascript__template_literal_goto(state, db, prod){
    '"--LEAF--"';
    '174:610 javascript__substitute_template=>javascript__template_head • javascript__expression javascript__template_spans';
    scan( state.lexer, 21, 11 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
    state.push_fn( branch_e58fb523d7e39a7a, 169 );
    return hc_javascript__expression( state, db, 0 )
};
    return ( prod  == 169 ) ? prod  : - 1
}

function hc_javascript__no_substitute_template(state, db, prod){
    scan( state.lexer, 218, 11 );
    'offset 0 peek_level-1 [  `  ]';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    if( state.lexer._type  == 142 ){
    'Assert Consume [  `  ]';
    consume( state );
    '"--LEAF--"';
    '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
    scan( state.lexer, 304, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 218, 11 );
        if( ( state.lexer._type  == 142 ) ){
            consume( state );
            add_reduce( state, 3, 246 );
            return 170
        }
    }
};
    return - 1
}

function hc_javascript__template_string(state, db, prod){
    scan( state.lexer, 443, 278 );
    'offset 0 peek_level0 [  ${ ` nl sp sym num id f:s  ]';
    '171:596 javascript__template_string=>• javascript__template_string_list_1088 τ${-ns';
    '171:597 javascript__template_string=>• javascript__template_string_list_1088 τ`-ns';
    '171:598 javascript__template_string=>• τ${-ns';
    '171:599 javascript__template_string=>• τ`-ns';
    if( state.lexer._type  == 144 ){
    'Asserts [  ${  ]';
    state.push_fn( set_production /*171*/, 171 );
    '"--LEAF--"';
    '171:598 javascript__template_string=>• τ${-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 0
} else if( state.lexer._type  == 142 ){
    'Asserts [  `  ]';
    state.push_fn( set_production /*171*/, 171 );
    '"--LEAF--"';
    '171:599 javascript__template_string=>• τ`-ns';
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 0
} else {
    'offset 2 peek_level-1 [  288  ]';
    '171:596 javascript__template_string=>• javascript__template_string_list_1088 τ${-ns';
    '171:597 javascript__template_string=>• javascript__template_string_list_1088 τ`-ns';
    scan( state.lexer, 444, 278 );
    state.push_fn( branch_86950834db7306e2, 0 );
    return hc_javascript__template_string_list_1088( state, db, 0 )
};
    return - 1
}

function hc_javascript__template_string_data(state, db, prod){
    scan( state.lexer, 444, 278 );
    'offset 0 peek_level-1 [  f:s nl sp sym num id  ]';
    '172:600 javascript__template_string_data=>• θnl';
    '172:601 javascript__template_string_data=>• θsp';
    '172:602 javascript__template_string_data=>• θsym';
    '172:603 javascript__template_string_data=>• θnum';
    '172:604 javascript__template_string_data=>• θid';
    '172:605 javascript__template_string_data=>• javascript__template_escaped_sequence';
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( set_production /*172*/, 172 );
    '"--LEAF--"';
    '172:605 javascript__template_string_data=>• javascript__template_escaped_sequence';
    state.push_fn( set_production /*0*/, 172 );
    return hc_javascript__template_escaped_sequence( state, db, 0 )
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( set_production /*172*/, 172 );
    '"--LEAF--"';
    '172:600 javascript__template_string_data=>• θnl';
    consume( state );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( set_production /*172*/, 172 );
    '"--LEAF--"';
    '172:601 javascript__template_string_data=>• θsp';
    consume( state );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( set_production /*172*/, 172 );
    '"--LEAF--"';
    '172:602 javascript__template_string_data=>• θsym';
    consume( state );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( set_production /*172*/, 172 );
    '"--LEAF--"';
    '172:603 javascript__template_string_data=>• θnum';
    consume( state );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( set_production /*172*/, 172 );
    '"--LEAF--"';
    '172:604 javascript__template_string_data=>• θid';
    consume( state );
    return 0
};
    return - 1
}

function hc_javascript__template_escaped_sequence(state, db, prod){
    scan( state.lexer, 290, 11 );
    'offset 0 peek_level-1 [  f:s  ]';
    '173:606 javascript__template_escaped_sequence=>• τf:s θid';
    '173:607 javascript__template_escaped_sequence=>• τf:s θsp';
    '173:608 javascript__template_escaped_sequence=>• τf:s θsym';
    '173:609 javascript__template_escaped_sequence=>• τf:s θnum';
    if( state.lexer._type  == 65 ){
    'Assert Consume [  f:s  ]';
    consume( state );
    'offset 1 peek_level-1 [  id sp sym num  ]';
    '173:606 javascript__template_escaped_sequence=>τf:s • θid';
    '173:607 javascript__template_escaped_sequence=>τf:s • θsp';
    '173:608 javascript__template_escaped_sequence=>τf:s • θsym';
    '173:609 javascript__template_escaped_sequence=>τf:s • θnum';
    scan( state.lexer, 291, 445 );
    if( state.lexer._type  == 3 ){
        'Asserts [  id  ]';
        state.push_fn( set_production /*173*/, 173 );
        '"--LEAF--"';
        '173:606 javascript__template_escaped_sequence=>τf:s • θid';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 8 ){
        'Asserts [  sp  ]';
        state.push_fn( set_production /*173*/, 173 );
        '"--LEAF--"';
        '173:607 javascript__template_escaped_sequence=>τf:s • θsp';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 2 ){
        'Asserts [  sym  ]';
        state.push_fn( set_production /*173*/, 173 );
        '"--LEAF--"';
        '173:608 javascript__template_escaped_sequence=>τf:s • θsym';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    } else if( state.lexer._type  == 5 ){
        'Asserts [  num  ]';
        state.push_fn( set_production /*173*/, 173 );
        '"--LEAF--"';
        '173:609 javascript__template_escaped_sequence=>τf:s • θnum';
        consume( state );
        add_reduce( state, 2, 12 );
        return 0
    }
};
    return - 1
}

function hc_javascript__substitute_template(state, db, prod){
    '"--LEAF--"';
    '174:610 javascript__substitute_template=>• javascript__template_head javascript__expression javascript__template_spans';
    state.push_fn( branch_9db3115235becfe6, 174 );
    return hc_javascript__template_head( state, db, 0 )
}

function hc_javascript__template_head(state, db, prod){
    scan( state.lexer, 218, 11 );
    'offset 0 peek_level-1 [  `  ]';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    if( state.lexer._type  == 142 ){
    'Assert Consume [  `  ]';
    consume( state );
    '"--LEAF--"';
    '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
    scan( state.lexer, 304, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 446, 11 );
        if( ( state.lexer._type  == 144 ) ){
            consume( state );
            add_reduce( state, 3, 248 );
            return 175
        }
    }
};
    return - 1
}

function hc_javascript__template_spans(state, db, prod){
    scan( state.lexer, 14, 11 );
    'offset 0 peek_level0 [  }  ]';
    '176:612 javascript__template_spans=>• javascript__template_tail';
    '176:613 javascript__template_spans=>• javascript__template_middle_list javascript__template_tail';
    if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  }  ]';
    '177:614 javascript__template_tail=>• τ} tk:javascript__template_string τ`';
    '179:617 javascript__template_middle=>• τ} tk:javascript__template_string τ${';
    'offset 3 peek_level-1 [  171  ]';
    '177:614 javascript__template_tail=>τ} • tk:javascript__template_string τ`';
    '179:617 javascript__template_middle=>τ} • tk:javascript__template_string τ${';
    scan( state.lexer, 304, 11 );
    if( state.lexer._type  == 143 ){
        'Assert Consume [  171  ]';
        consume( state );
        'offset 4 peek_level-1 [  ` ${  ]';
        '177:614 javascript__template_tail=>τ} tk:javascript__template_string • τ`';
        '179:617 javascript__template_middle=>τ} tk:javascript__template_string • τ${';
        scan( state.lexer, 128, 11 );
        if( state.lexer._type  == 142 ){
            'Asserts [  `  ]';
            state.push_fn( hc_javascript__template_spans_goto /*hc_javascript__template_spans_goto( state, db, 176 )*/, 176 );
            '"--LEAF--"';
            '177:614 javascript__template_tail=>τ} tk:javascript__template_string • τ`';
            consume( state );
            add_reduce( state, 3, 250 );
            add_reduce( state, 1, 1 );
            return 0
        } else if( state.lexer._type  == 144 ){
            'Asserts [  ${  ]';
            state.push_fn( hc_javascript__template_spans_goto /*hc_javascript__template_spans_goto( state, db, 179 )*/, 179 );
            '"--LEAF--"';
            '179:617 javascript__template_middle=>τ} tk:javascript__template_string • τ${';
            consume( state );
            add_reduce( state, 3, 252 );
            return 0
        }
    }
};
    return - 1
}

function hc_javascript__template_spans_goto(state, db, prod){
    switch(prod){
    case 178: 
    {
        'offset 1 peek_level0 [  }  ]';
        '176:613 javascript__template_spans=>javascript__template_middle_list • javascript__template_tail';
        '178:616 javascript__template_middle_list=>javascript__template_middle_list • javascript__template_middle javascript__expression';
        scan( state.lexer, 14, 11 );
        if( state.lexer._type  == 18 ){
            'Asserts [  }  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_214050d95b3408e2, 178 );
            state.push_fn( branch_0673be5ff0aaa431, 176 );
            return 0
        };
        break
    }
    break;
    case 179: 
    {
        '"--LEAF--"';
        '178:615 javascript__template_middle_list=>javascript__template_middle • javascript__expression';
        scan( state.lexer, 21, 11 );
        if( ( isTokenActive( state.lexer._type, 20 ) ) ){
            state.push_fn( branch_55aa503dfc5a7a4e, 178 );
            return hc_javascript__expression( state, db, 0 )
        };
        break
    }
    break;
    default: 
    break
};
    return ( prod  == 176 ) ? prod  : - 1
}

function hc_javascript__template_tail(state, db, prod){
    scan( state.lexer, 14, 11 );
    'offset 0 peek_level-1 [  }  ]';
    '177:614 javascript__template_tail=>• τ} tk:javascript__template_string τ`';
    if( state.lexer._type  == 18 ){
    'Assert Consume [  }  ]';
    consume( state );
    '"--LEAF--"';
    '177:614 javascript__template_tail=>τ} • tk:javascript__template_string τ`';
    scan( state.lexer, 304, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 218, 11 );
        if( ( state.lexer._type  == 142 ) ){
            consume( state );
            add_reduce( state, 3, 250 );
            return 177
        }
    }
};
    return - 1
}

function hc_javascript__template_middle_list(state, db, prod){
    '"--LEAF--"';
    '178:615 javascript__template_middle_list=>• javascript__template_middle javascript__expression';
    state.push_fn( branch_ebe29aecfc6c6055, 178 );
    return hc_javascript__template_middle( state, db, 0 )
}

function hc_javascript__template_middle_list_goto(state, db, prod){
    'offset 1 peek_level0 [  }  ]';
    '178:616 javascript__template_middle_list=>javascript__template_middle_list • javascript__template_middle javascript__expression';
    '176:613 javascript__template_spans=>javascript__template_middle_list • javascript__template_tail';
    scan( state.lexer, 14, 11 );
    if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    var fk1 = state.fork( db );;
    fk1.push_fn( branch_e272769be8485173, 178 );
    state.push_fn( branch_ca2547f815f0bf6c, 178 );
    return 0
};
    return ( prod  == 178 ) ? prod  : - 1
}

function hc_javascript__template_middle(state, db, prod){
    scan( state.lexer, 14, 11 );
    'offset 0 peek_level-1 [  }  ]';
    '179:617 javascript__template_middle=>• τ} tk:javascript__template_string τ${';
    if( state.lexer._type  == 18 ){
    'Assert Consume [  }  ]';
    consume( state );
    '"--LEAF--"';
    '179:617 javascript__template_middle=>τ} • tk:javascript__template_string τ${';
    scan( state.lexer, 304, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 446, 11 );
        if( ( state.lexer._type  == 144 ) ){
            consume( state );
            add_reduce( state, 3, 252 );
            return 179
        }
    }
};
    return - 1
}

function hc_javascript__parenthesized(state, db, prod){
    scan( state.lexer, 10, 11 );
    'offset 0 peek_level-1 [  (  ]';
    '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    '"--LEAF--"';
    '180:618 javascript__parenthesized=>τ( • javascript__expression τ)';
    scan( state.lexer, 21, 11 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
        state.push_fn( branch_38a5d88cc49859fa, 180 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__identifier_name(state, db, prod){
    scan( state.lexer, 275, 11 );
    'offset 0 peek_level-1 [  40  ]';
    '181:619 javascript__identifier_name=>• tk:javascript__composite_identifier';
    if( state.lexer._type  == 59 ){
    'Assert Consume [  40  ]';
    consume( state );
    '"--LEAF--"';
    '181:619 javascript__identifier_name=>tk:javascript__composite_identifier •';
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 118 );
    return 181
};
    return - 1
}

function hc_javascript__super_property(state, db, prod){
    scan( state.lexer, 447, 11 );
    'offset 0 peek_level-1 [  super  ]';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    if( state.lexer._type  == 145 ){
    'Assert Consume [  super  ]';
    consume( state );
    'offset 1 peek_level-1 [  . [  ]';
    '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
    '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
    scan( state.lexer, 448, 11 );
    if( state.lexer._type  == 98 ){
        'Asserts [  .  ]';
        state.push_fn( set_production /*182*/, 182 );
        '"--LEAF--"';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        consume( state );
        state.push_fn( branch_968d2bd6f0ff599a, 182 );
        return hc_javascript__identifier_name( state, db, 0 )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( set_production /*182*/, 182 );
        '"--LEAF--"';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        consume( state );
        state.push_fn( branch_771b37a26d9f2dd6, 182 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__meta_property(state, db, prod){
    scan( state.lexer, 449, 11 );
    'offset 0 peek_level0 [  new import  ]';
    '183:622 javascript__meta_property=>• javascript__new_target';
    '183:623 javascript__meta_property=>• javascript__import_meta';
    if( state.lexer._type  == 99 ){
    'Asserts [  new  ]';
    state.push_fn( set_production /*183*/, 183 );
    '"--LEAF--"';
    '183:622 javascript__meta_property=>• javascript__new_target';
    state.push_fn( set_production /*0*/, 183 );
    return hc_javascript__new_target( state, db, 0 )
} else {
    state.push_fn( set_production /*183*/, 183 );
    '"--LEAF--"';
    '183:623 javascript__meta_property=>• javascript__import_meta';
    state.push_fn( set_production /*0*/, 183 );
    return hc_javascript__import_meta( state, db, 0 )
};
    return - 1
}

function hc_javascript__new_target(state, db, prod){
    scan( state.lexer, 450, 11 );
    'offset 0 peek_level-1 [  new  ]';
    '184:624 javascript__new_target=>• τnew τ. τtarget';
    if( state.lexer._type  == 99 ){
    'Assert Consume [  new  ]';
    consume( state );
    '"--LEAF--"';
    '184:624 javascript__new_target=>τnew • τ. τtarget';
    scan( state.lexer, 217, 11 );
    if( ( state.lexer._type  == 98 ) ){
        consume( state );
        scan( state.lexer, 301, 11 );
        if( ( state.lexer._type  == 146 ) ){
            consume( state );
            add_reduce( state, 3, 256 );
            return 184
        }
    }
};
    return - 1
}

function hc_javascript__import_meta(state, db, prod){
    scan( state.lexer, 272, 11 );
    'offset 0 peek_level-1 [  import  ]';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    if( state.lexer._type  == 13 ){
    'Assert Consume [  import  ]';
    consume( state );
    '"--LEAF--"';
    '185:625 javascript__import_meta=>τimport • τ. τmeta';
    scan( state.lexer, 217, 11 );
    if( ( state.lexer._type  == 98 ) ){
        consume( state );
        scan( state.lexer, 271, 11 );
        if( ( state.lexer._type  == 51 ) ){
            consume( state );
            add_reduce( state, 3, 257 );
            return 185
        }
    }
};
    return - 1
}

function hc_javascript__arguments(state, db, prod){
    scan( state.lexer, 10, 11 );
    'offset 0 peek_level-1 [  (  ]';
    '186:626 javascript__arguments=>• τ( javascript__argument_list τ, τ)';
    '186:627 javascript__arguments=>• τ( τ, τ)';
    '186:628 javascript__arguments=>• τ( javascript__argument_list τ)';
    '186:629 javascript__arguments=>• τ( τ)';
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 1 peek_level0 [  ... yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await , )  ]';
    '186:626 javascript__arguments=>τ( • javascript__argument_list τ, τ)';
    '186:628 javascript__arguments=>τ( • javascript__argument_list τ)';
    '186:627 javascript__arguments=>τ( • τ, τ)';
    '186:629 javascript__arguments=>τ( • τ)';
    scan( state.lexer, 57, 9 );
    if( isTokenActive( state.lexer._type, 362 ) ){
        'Asserts [  ... yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        'offset 3 peek_level-1 [  187  ]';
        '186:626 javascript__arguments=>τ( • javascript__argument_list τ, τ)';
        '186:628 javascript__arguments=>τ( • javascript__argument_list τ)';
        scan( state.lexer, 451, 11 );
        state.push_fn( branch_03a886e6dea22642, 0 );
        return hc_javascript__argument_list( state, db, 0 )
    } else if( state.lexer._type  == 58 ){
        'Asserts [  ,  ]';
        state.push_fn( set_production /*186*/, 186 );
        '"--LEAF--"';
        '186:627 javascript__arguments=>τ( • τ, τ)';
        consume( state );
        scan( state.lexer, 17, 11 );
        if( ( state.lexer._type  == 113 ) ){
            consume( state );
            add_reduce( state, 3, 259 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 113 ){
        'Asserts [  )  ]';
        state.push_fn( set_production /*186*/, 186 );
        '"--LEAF--"';
        '186:629 javascript__arguments=>τ( • τ)';
        consume( state );
        add_reduce( state, 2, 259 );
        return 0
    }
};
    return - 1
}

function hc_javascript__argument_list(state, db, prod){
    scan( state.lexer, 451, 11 );
    'offset 0 peek_level0 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ...  ]';
    '187:630 javascript__argument_list=>• javascript__argument_list_group_1152_1_';
    '187:632 javascript__argument_list=>• javascript__assignment_expression';
    if( isTokenActive( state.lexer._type, 20 ) ){
    'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
    '"--LEAF--"';
    '187:632 javascript__argument_list=>• javascript__assignment_expression';
    state.push_fn( branch_5cb267bf74038e65, 187 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
    '"--LEAF--"';
    '187:630 javascript__argument_list=>• javascript__argument_list_group_1152_1_';
    state.push_fn( branch_5cb267bf74038e65, 187 );
    return hc_javascript__argument_list_group_1152_1_( state, db, 0 )
};
    return - 1
}

function hc_javascript__argument_list_goto(state, db, prod){
    'offset 1 peek_level0 [  , )  ]';
    '187:631 javascript__argument_list=>javascript__argument_list • τ, javascript__argument_list_group_1152_1_';
    '187:633 javascript__argument_list=>javascript__argument_list • τ, javascript__assignment_expression';
    '186:626 javascript__arguments=>τ( javascript__argument_list • τ, τ)';
    '186:628 javascript__arguments=>τ( javascript__argument_list • τ)';
    scan( state.lexer, 16, 11 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ... )  ]';
    '187:631 javascript__argument_list=>javascript__argument_list • τ, javascript__argument_list_group_1152_1_';
    '187:633 javascript__argument_list=>javascript__argument_list • τ, javascript__assignment_expression';
    '186:626 javascript__arguments=>τ( javascript__argument_list τ, • τ)';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 310, 9 );
    if( isTokenActive( pk._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.lexer._type  = 149;
        state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
        '"--LEAF--"';
        '187:633 javascript__argument_list=>javascript__argument_list • τ, javascript__assignment_expression';
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 187 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else {
        state.lexer._type  = 111;
        state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
        '"--LEAF--"';
        '187:631 javascript__argument_list=>javascript__argument_list • τ, javascript__argument_list_group_1152_1_';
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 187 );
        return hc_javascript__argument_list_group_1152_1_( state, db, 0 )
    }
};
    return ( prod  == 187 ) ? prod  : - 1
}

function hc_javascript__call_expression(state, db, prod){
    scan( state.lexer, 146, 11 );
    'offset 0 peek_level0 [  new this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num super import  ]';
    '188:635 javascript__call_expression=>• javascript__super_call';
    '188:639 javascript__call_expression=>• javascript__cover_call_expression_and_async_arrow_head';
    '188:636 javascript__call_expression=>• javascript__import_call';
    if( isTokenActive( state.lexer._type, 452 ) ){
    'Asserts [  new this 40 [ { class / ( < true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
    '"--LEAF--"';
    '188:639 javascript__call_expression=>• javascript__cover_call_expression_and_async_arrow_head';
    state.push_fn( set_production /*0*/, 188 );
    return hc_javascript__cover_call_expression_and_async_arrow_head( state, db, 0 )
} else if( state.lexer._type  == 145 ){
    'Asserts [  super  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  super  ]';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    'offset 3 peek_level0 [  ( . [  ]';
    '189:641 javascript__super_call=>τsuper • javascript__arguments';
    '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
    '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
    scan( state.lexer, 302, 11 );
    if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
        '"--LEAF--"';
        '189:641 javascript__super_call=>τsuper • javascript__arguments';
        state.push_fn( branch_ccb7e21bf7959db5, 188 );
        return hc_javascript__arguments( state, db, 0 )
    } else if( state.lexer._type  == 98 ){
        'Asserts [  .  ]';
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        consume( state );
        state.push_fn( branch_968d2bd6f0ff599a, 75 );
        return hc_javascript__identifier_name( state, db, 0 )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        consume( state );
        state.push_fn( branch_771b37a26d9f2dd6, 75 );
        return hc_javascript__expression( state, db, 0 )
    }
} else if( state.lexer._type  == 13 ){
    'Asserts [  import  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  import  ]';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    'offset 3 peek_level-1 [  ( .  ]';
    '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
    '185:625 javascript__import_meta=>τimport • τ. τmeta';
    scan( state.lexer, 303, 11 );
    if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
        '"--LEAF--"';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        consume( state );
        state.push_fn( branch_21ae27b721c01292, 188 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 98 ){
        'Asserts [  .  ]';
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        consume( state );
        scan( state.lexer, 271, 11 );
        if( ( state.lexer._type  == 51 ) ){
            consume( state );
            add_reduce( state, 3, 257 );
            return 0
        };
        return - 1
    }
};
    return - 1
}

function hc_javascript__call_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                'offset 1 peek_level0 [  ( [ . `  ]';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                scan( state.lexer, 453, 11 );
                if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level-1 [  . ( [ ` of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION ?.  ]';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                '73:283 javascript__left_hand_side_expression=>javascript__call_expression •';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                scan( state.lexer, 454, 11 );
                if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 188 ) ? prod  : - 1
}

function hc_javascript__super_call(state, db, prod){
    scan( state.lexer, 447, 11 );
    'offset 0 peek_level-1 [  super  ]';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    if( state.lexer._type  == 145 ){
    'Assert Consume [  super  ]';
    consume( state );
    '"--LEAF--"';
    '189:641 javascript__super_call=>τsuper • javascript__arguments';
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        state.push_fn( branch_2b488808e04475e7, 189 );
        return hc_javascript__arguments( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__import_call(state, db, prod){
    scan( state.lexer, 272, 11 );
    'offset 0 peek_level-1 [  import  ]';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    if( state.lexer._type  == 13 ){
    'Assert Consume [  import  ]';
    consume( state );
    '"--LEAF--"';
    '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_da4c9bd7a10f970a, 190 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__cover_call_expression_and_async_arrow_head(state, db, prod){
    '"--LEAF--"';
    '191:643 javascript__cover_call_expression_and_async_arrow_head=>• javascript__member_expression javascript__arguments';
    state.push_fn( branch_76299b8f840122e3, 191 );
    return hc_javascript__member_expression( state, db, 0 )
}

function hc_javascript__optional_expression(state, db, prod){
    scan( state.lexer, 146, 11 );
    'offset 0 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    '192:644 javascript__optional_expression=>• javascript__member_expression javascript__optional_chain';
    '192:645 javascript__optional_expression=>• javascript__call_expression javascript__optional_chain';
    if( isTokenActive( state.lexer._type, 300 ) ){
    'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
    'offset 2 peek_level0 [  new this super class import true false null async function [ { / ( < " " ` 0X 0x 0O 0o 0B 0b 40 num  ]';
    '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
    '75:293 javascript__member_expression=>• τnew javascript__member_expression';
    '184:624 javascript__new_target=>• τnew τ. τtarget';
    '76:294 javascript__primary_expression=>• τthis';
    '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
    '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
    '189:641 javascript__super_call=>• τsuper javascript__arguments';
    '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
    '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
    '93:353 javascript__object_literal=>• τ{ τ}';
    '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
    '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
    '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
    '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
    '185:625 javascript__import_meta=>• τimport τ. τmeta';
    '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
    '79:310 javascript__boolean_literal=>• τtrue';
    '79:311 javascript__boolean_literal=>• τfalse';
    '80:312 javascript__null_literal=>• τnull';
    '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
    '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
    '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
    '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
    '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
    '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
    '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
    '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
    '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
    '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
    '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
    '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
    scan( state.lexer, 343, 9 );
    if( state.lexer._type  == 99 ){
        'Asserts [  new  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  new  ]';
        '75:292 javascript__member_expression=>• τnew javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>• τnew javascript__member_expression';
        '184:624 javascript__new_target=>• τnew τ. τtarget';
        'offset 5 peek_level0 [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num .  ]';
        '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
        '75:293 javascript__member_expression=>τnew • javascript__member_expression';
        '184:624 javascript__new_target=>τnew • τ. τtarget';
        scan( state.lexer, 299, 9 );
        if( isTokenActive( state.lexer._type, 300 ) ){
            'Asserts [  new this super 40 [ { class / ( < import true false null " " async function ` 0X 0x 0O 0o 0B 0b num  ]';
            'offset 7 peek_level-1 [  75  ]';
            '75:292 javascript__member_expression=>τnew • javascript__member_expression javascript__arguments';
            '75:293 javascript__member_expression=>τnew • javascript__member_expression';
            scan( state.lexer, 146, 11 );
            state.push_fn( branch_422261a32c8adeaa, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '184:624 javascript__new_target=>τnew • τ. τtarget';
            consume( state );
            scan( state.lexer, 301, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        'Asserts [  this  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '76:294 javascript__primary_expression=>• τthis';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 145 ){
        'Asserts [  super  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  super  ]';
        '182:620 javascript__super_property=>• τsuper τ. javascript__identifier_name';
        '182:621 javascript__super_property=>• τsuper τ[ javascript__expression τ]';
        '189:641 javascript__super_call=>• τsuper javascript__arguments';
        'offset 5 peek_level-1 [  . [ (  ]';
        '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
        '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
        '189:641 javascript__super_call=>τsuper • javascript__arguments';
        scan( state.lexer, 302, 11 );
        if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:620 javascript__super_property=>τsuper • τ. javascript__identifier_name';
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            'Asserts [  [  ]';
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '182:621 javascript__super_property=>τsuper • τ[ javascript__expression τ]';
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        } else {
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '189:641 javascript__super_call=>τsuper • javascript__arguments';
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        }
    } else if( state.lexer._type  == 138 ){
        'Asserts [  class  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '165:573 javascript__class_expression=>• τclass javascript__binding_identifier javascript__class_heritage τ{ javascript__class_body τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 13 ){
        'Asserts [  import  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  import  ]';
        '185:625 javascript__import_meta=>• τimport τ. τmeta';
        '190:642 javascript__import_call=>• τimport τ( javascript__assignment_expression τ)';
        'offset 5 peek_level-1 [  . (  ]';
        '185:625 javascript__import_meta=>τimport • τ. τmeta';
        '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
        scan( state.lexer, 303, 11 );
        if( state.lexer._type  == 98 ){
            'Asserts [  .  ]';
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            '"--LEAF--"';
            '185:625 javascript__import_meta=>τimport • τ. τmeta';
            consume( state );
            scan( state.lexer, 271, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
            '"--LEAF--"';
            '190:642 javascript__import_call=>τimport • τ( javascript__assignment_expression τ)';
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 101 ){
        'Asserts [  true  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:310 javascript__boolean_literal=>• τtrue';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 102 ){
        'Asserts [  false  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '79:311 javascript__boolean_literal=>• τfalse';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        'Asserts [  null  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '80:312 javascript__null_literal=>• τnull';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 116 ){
        'Asserts [  async  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:463 javascript__function_declaration=>• τasync τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 117 ){
        'Asserts [  function  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '130:464 javascript__function_declaration=>• τfunction τ* javascript__binding_identifier τ( javascript__formal_parameters τ) τ{ javascript__function_body τ}';
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '89:337 javascript__array_literal=>• τ[ javascript__elision τ]';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        'Asserts [  {  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '93:353 javascript__object_literal=>• τ{ τ}';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        'Asserts [  /  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '166:581 javascript__regular_expression_literal=>• τ/ javascript__regular_expression_literal_list_1056 τ/ default_productions__js_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '180:618 javascript__parenthesized=>• τ( javascript__expression τ)';
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        'Asserts [  <  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '17:56 html__TAG=>• τ< html__TAGNAME html__ATTRIBUTES τ> html__TAG_BODY τ</ html__TAGNAME τ>';
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:189 javascript__string_literal=>• τ" javascript__string_literal_list_342 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 32 ){
        'Asserts [  "  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '46:190 javascript__string_literal=>• τ" javascript__string_literal_list_345 τ"';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        'Asserts [  `  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  `  ]';
        '170:595 javascript__no_substitute_template=>• τ` tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>• τ` tk:javascript__template_string τ${';
        'offset 5 peek_level-1 [  171  ]';
        '170:595 javascript__no_substitute_template=>τ` • tk:javascript__template_string τ`';
        '175:611 javascript__template_head=>τ` • tk:javascript__template_string τ${';
        scan( state.lexer, 304, 11 );
        if( state.lexer._type  == 143 ){
            'Assert Consume [  171  ]';
            consume( state );
            'offset 6 peek_level-1 [  ` ${  ]';
            '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
            '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
            scan( state.lexer, 128, 11 );
            if( state.lexer._type  == 142 ){
                'Asserts [  `  ]';
                state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                '"--LEAF--"';
                '170:595 javascript__no_substitute_template=>τ` tk:javascript__template_string • τ`';
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                'Asserts [  ${  ]';
                state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 175 )*/, 175 );
                '"--LEAF--"';
                '175:611 javascript__template_head=>τ` tk:javascript__template_string • τ${';
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 105 ){
        'Asserts [  0X  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:325 javascript__hex_token=>• τ0X javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 106 ){
        'Asserts [  0x  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '86:326 javascript__hex_token=>• τ0x javascript__hex_token_list_606 javascript__hex_token_list_607';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 ){
        'Asserts [  0O  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:329 javascript__octal_token=>• τ0O javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 108 ){
        'Asserts [  0o  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '87:330 javascript__octal_token=>• τ0o javascript__octal_token_list_613 javascript__octal_token_list_614';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 ){
        'Asserts [  0B  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:333 javascript__binary_token=>• τ0B javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 110 ){
        'Asserts [  0b  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '88:334 javascript__binary_token=>• τ0b javascript__binary_token_list_620 javascript__binary_token_list_621';
        state.push_fn( branch_c9aa0f04d222f980, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 59 ){
        'Asserts [  40  ]';
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        '"--LEAF--"';
        '77:305 javascript__identifier_reference=>• tk:javascript__composite_identifier';
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 84 )*/, 84 );
        '"--LEAF--"';
        '84:322 javascript__int_token=>• θnum javascript__int_token_list_601';
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__optional_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                'offset 1 peek_level0 [  ?. [ . ` (  ]';
                '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                scan( state.lexer, 455, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:644 javascript__optional_expression=>javascript__member_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:287 javascript__member_expression=>javascript__member_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:288 javascript__member_expression=>javascript__member_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '75:289 javascript__member_expression=>javascript__member_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '191:643 javascript__cover_call_expression_and_async_arrow_head=>javascript__member_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 83: 
            {
                'offset 1 peek_level0 [  E e END_OF_PRODUCTION ( ` . [ ?. END_OF_FILE , ] } = *= ) /= : %= { += ; ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                '82:319 javascript__scientific_token=>javascript__float_token •';
                scan( state.lexer, 316, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    'Asserts [  E e  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '82:318 javascript__scientific_token=>javascript__float_token • javascript__scientific_token_group_593_0_';
                    scan( state.lexer, 317, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '82:319 javascript__scientific_token=>javascript__float_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                'offset 1 peek_level-1 [  n . END_OF_PRODUCTION E e ?. [ ` ( END_OF_FILE , ] } = *= ) /= : %= { += ; ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= of  ]';
                '85:324 javascript__big_token=>javascript__int_token • τn';
                '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                '83:321 javascript__float_token=>javascript__int_token •';
                scan( state.lexer, 318, 9 );
                if( state.lexer._type  == 104 ){
                    'Asserts [  n  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    '"--LEAF--"';
                    '85:324 javascript__big_token=>javascript__int_token • τn';
                    scan( state.lexer, 155, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    'offset 1 peek_level1 [  num 40 E e , ] } = *= ) /= ( : ?. %= { += ; [ . ` ++ -- ** * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ?? ? -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= END_OF_FILE of END_OF_PRODUCTION  ]';
                    '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 319, 11 );
                    if( pk._type  == 5 ){
                        'Asserts [  num  ]';
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 83 )*/, 83 );
                        '"--LEAF--"';
                        '83:320 javascript__float_token=>javascript__int_token • javascript__float_token_group_597_0_';
                        scan( state.lexer, 217, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        '"--LEAF--"';
                        '83:321 javascript__float_token=>javascript__int_token •';
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '83:321 javascript__float_token=>javascript__int_token •';
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                '"--LEAF--"';
                '174:610 javascript__substitute_template=>javascript__template_head • javascript__expression javascript__template_spans';
                scan( state.lexer, 21, 11 );
                if( ( isTokenActive( state.lexer._type, 20 ) ) ){
                    state.push_fn( branch_517ebbc64d1522d8, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                'offset 1 peek_level0 [  ?. . ( [ `  ]';
                '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                scan( state.lexer, 455, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:645 javascript__optional_expression=>javascript__call_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:634 javascript__call_expression=>javascript__call_expression • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:637 javascript__call_expression=>javascript__call_expression • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:638 javascript__call_expression=>javascript__call_expression • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    '"--LEAF--"';
                    '188:640 javascript__call_expression=>javascript__call_expression • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 192: 
            {
                'offset 1 peek_level0 [  of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION ?.  ]';
                '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                '73:284 javascript__left_hand_side_expression=>javascript__optional_expression •';
                scan( state.lexer, 456, 11 );
                if( state.lexer._type  == 147 ){
                    'Asserts [  ?.  ]';
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 192 )*/, 192 );
                    '"--LEAF--"';
                    '192:646 javascript__optional_expression=>javascript__optional_expression • javascript__optional_chain';
                    scan( state.lexer, 215, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 192 ) ? prod  : - 1
}

function hc_javascript__optional_chain(state, db, prod){
    scan( state.lexer, 215, 11 );
    'offset 0 peek_level-1 [  ?.  ]';
    '193:647 javascript__optional_chain=>• τ?. javascript__arguments';
    '193:648 javascript__optional_chain=>• τ?. τ[ javascript__expression τ]';
    '193:649 javascript__optional_chain=>• τ?. javascript__identifier_name';
    '193:650 javascript__optional_chain=>• τ?. javascript__template_literal';
    if( state.lexer._type  == 147 ){
    'Assert Consume [  ?.  ]';
    consume( state );
    'offset 1 peek_level0 [  ( [ ` 40  ]';
    '193:647 javascript__optional_chain=>τ?. • javascript__arguments';
    '193:648 javascript__optional_chain=>τ?. • τ[ javascript__expression τ]';
    '193:649 javascript__optional_chain=>τ?. • javascript__identifier_name';
    '193:650 javascript__optional_chain=>τ?. • javascript__template_literal';
    scan( state.lexer, 457, 11 );
    if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        '"--LEAF--"';
        '193:647 javascript__optional_chain=>τ?. • javascript__arguments';
        state.push_fn( branch_c417a0113f98071e, 193 );
        return hc_javascript__arguments( state, db, 0 )
    } else if( state.lexer._type  == 96 ){
        'Asserts [  [  ]';
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        '"--LEAF--"';
        '193:648 javascript__optional_chain=>τ?. • τ[ javascript__expression τ]';
        consume( state );
        state.push_fn( branch_d2f9c0255f04782b, 193 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 142 ){
        'Asserts [  `  ]';
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        '"--LEAF--"';
        '193:650 javascript__optional_chain=>τ?. • javascript__template_literal';
        state.push_fn( branch_c417a0113f98071e, 193 );
        return hc_javascript__template_literal( state, db, 0 )
    } else {
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        '"--LEAF--"';
        '193:649 javascript__optional_chain=>τ?. • javascript__identifier_name';
        state.push_fn( branch_c417a0113f98071e, 193 );
        return hc_javascript__identifier_name( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__optional_chain_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 193: 
            {
                'offset 1 peek_level0 [  ( [ . ` ?. = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- in of ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || { END_OF_PRODUCTION  ]';
                '193:651 javascript__optional_chain=>javascript__optional_chain • javascript__arguments';
                '193:652 javascript__optional_chain=>javascript__optional_chain • τ[ javascript__expression τ]';
                '193:653 javascript__optional_chain=>javascript__optional_chain • τ. javascript__identifier_name';
                '193:654 javascript__optional_chain=>javascript__optional_chain • javascript__template_literal';
                '192:644 javascript__optional_expression=>javascript__member_expression javascript__optional_chain •';
                '192:645 javascript__optional_expression=>javascript__call_expression javascript__optional_chain •';
                '192:646 javascript__optional_expression=>javascript__optional_expression javascript__optional_chain •';
                scan( state.lexer, 346, 11 );
                if( state.lexer._type  == 36 ){
                    'Asserts [  (  ]';
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    '"--LEAF--"';
                    '193:651 javascript__optional_chain=>javascript__optional_chain • javascript__arguments';
                    scan( state.lexer, 10, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 193 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    'Asserts [  [  ]';
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    '"--LEAF--"';
                    '193:652 javascript__optional_chain=>javascript__optional_chain • τ[ javascript__expression τ]';
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 193 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    'Asserts [  .  ]';
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    '"--LEAF--"';
                    '193:653 javascript__optional_chain=>javascript__optional_chain • τ. javascript__identifier_name';
                    scan( state.lexer, 217, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 193 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    'Asserts [  `  ]';
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    '"--LEAF--"';
                    '193:654 javascript__optional_chain=>javascript__optional_chain • javascript__template_literal';
                    scan( state.lexer, 218, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 193 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 193
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 193 ) ? prod  : - 1
}

function hc_javascript__await_expression(state, db, prod){
    scan( state.lexer, 458, 11 );
    'offset 0 peek_level-1 [  await  ]';
    '194:655 javascript__await_expression=>• τawait javascript__unary_expression';
    if( state.lexer._type  == 123 ){
    'Assert Consume [  await  ]';
    consume( state );
    '"--LEAF--"';
    '194:655 javascript__await_expression=>τawait • javascript__unary_expression';
    scan( state.lexer, 323, 11 );
    if( ( isTokenActive( state.lexer._type, 324 ) ) ){
        state.push_fn( branch_f224a880018b9ca0, 194 );
        return hc_javascript__unary_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__coalesce_expression(state, db, prod){
    '"--LEAF--"';
    '195:656 javascript__coalesce_expression=>• javascript__bitwise_or_expression τ?? javascript__bitwise_or_expression';
    state.push_fn( branch_acda0059542b066b, 195 );
    return hc_javascript__bitwise_or_expression( state, db, 0 )
}

function hc_javascript__coalesce_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 195: 
            {
                'offset 1 peek_level-1 [  ? ) ] : ; } nl END_OF_FILE , END_OF_PRODUCTION ??  ]';
                '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                '59:232 javascript__short_circuit_expression=>javascript__coalesce_expression •';
                scan( state.lexer, 459, 11 );
                if( state.lexer._type  == 148 ){
                    'Asserts [  ??  ]';
                    state.push_fn( hc_javascript__coalesce_expression_goto /*hc_javascript__coalesce_expression_goto( state, db, 195 )*/, 195 );
                    '"--LEAF--"';
                    '195:657 javascript__coalesce_expression=>javascript__coalesce_expression • τ?? javascript__bitwise_or_expression';
                    scan( state.lexer, 154, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 195 ) ? prod  : - 1
}

function hc_javascript__yield_expression(state, db, prod){
    scan( state.lexer, 460, 11 );
    'offset 0 peek_level-1 [  yield  ]';
    '196:658 javascript__yield_expression=>• τyield θnl';
    '196:659 javascript__yield_expression=>• τyield τ* javascript__assignment_expression';
    '196:660 javascript__yield_expression=>• τyield javascript__assignment_expression';
    if( state.lexer._type  == 149 ){
    'Assert Consume [  yield  ]';
    consume( state );
    'offset 1 peek_level-1 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await * nl  ]';
    '196:658 javascript__yield_expression=>τyield • θnl';
    '196:659 javascript__yield_expression=>τyield • τ* javascript__assignment_expression';
    '196:660 javascript__yield_expression=>τyield • javascript__assignment_expression';
    scan( state.lexer, 461, 68 );
    if( isTokenActive( state.lexer._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        state.push_fn( set_production /*196*/, 196 );
        '"--LEAF--"';
        '196:660 javascript__yield_expression=>τyield • javascript__assignment_expression';
        state.push_fn( branch_bb4f5446f0577f53, 196 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 62 ){
        'Asserts [  *  ]';
        state.push_fn( set_production /*196*/, 196 );
        '"--LEAF--"';
        '196:659 javascript__yield_expression=>τyield • τ* javascript__assignment_expression';
        consume( state );
        state.push_fn( branch_1e127a48a1672c9c, 196 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 7 ){
        'Asserts [  nl  ]';
        state.push_fn( set_production /*196*/, 196 );
        '"--LEAF--"';
        '196:658 javascript__yield_expression=>τyield • θnl';
        consume( state );
        add_reduce( state, 2, 269 );
        return 0
    }
};
    return - 1
}

function hc_javascript__arrow_function(state, db, prod){
    scan( state.lexer, 306, 11 );
    'offset 0 peek_level-1 [  async 40 (  ]';
    '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
    '197:662 javascript__arrow_function=>• javascript__arrow_parameters τ=> javascript__concise_body';
    if( state.lexer._type  == 116 ){
    'Asserts [  async  ]';
    state.push_fn( set_production /*197*/, 197 );
    '"--LEAF--"';
    '197:661 javascript__arrow_function=>• τasync javascript__arrow_parameters τ=> javascript__concise_body';
    consume( state );
    state.push_fn( branch_9f4d101a511d592f, 197 );
    return hc_javascript__arrow_parameters( state, db, 0 )
} else {
    state.push_fn( set_production /*197*/, 197 );
    '"--LEAF--"';
    '197:662 javascript__arrow_function=>• javascript__arrow_parameters τ=> javascript__concise_body';
    state.push_fn( branch_b90d0bc4f53c5817, 197 );
    return hc_javascript__arrow_parameters( state, db, 0 )
};
    return - 1
}

function hc_javascript__arrow_parameters(state, db, prod){
    scan( state.lexer, 309, 11 );
    'offset 0 peek_level0 [  ( 40  ]';
    '198:663 javascript__arrow_parameters=>• javascript__identifier_reference';
    '198:664 javascript__arrow_parameters=>• javascript__cover_parenthesized_expression_and_arrow_parameter_list';
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( set_production /*198*/, 198 );
    '"--LEAF--"';
    '198:664 javascript__arrow_parameters=>• javascript__cover_parenthesized_expression_and_arrow_parameter_list';
    state.push_fn( branch_3e004bbc82c6990d, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list( state, db, 0 )
} else {
    state.push_fn( set_production /*198*/, 198 );
    '"--LEAF--"';
    '198:663 javascript__arrow_parameters=>• javascript__identifier_reference';
    state.push_fn( branch_355e2ba0fc376e37, 198 );
    return hc_javascript__identifier_reference( state, db, 0 )
};
    return - 1
}

function hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list(state, db, prod){
    scan( state.lexer, 10, 11 );
    'offset 0 peek_level0 [  (  ]';
    '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( τ)';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, τ)';
    '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    '199:671 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• javascript__parenthesized';
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    'offset 0 peek_level1 [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await ) ...  ]';
    '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( τ)';
    '199:666 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, τ)';
    '199:669 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:670 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__expression τ, javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    '199:671 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• javascript__parenthesized';
    '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
    '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 310, 9 );
    if( isTokenActive( pk._type, 20 ) ){
        'Asserts [  yield async 40 ( new super import this [ { class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_f98bc4cea739b108, 199 );
        state.push_fn( branch_f21a693f443773a2, 199 );
        return 0
    } else if( pk._type  == 113 ){
        'Asserts [  )  ]';
        state.lexer._type  = 36;
        state.push_fn( set_production /*199*/, 199 );
        '"--LEAF--"';
        '199:665 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( τ)';
        consume( state );
        scan( state.lexer, 17, 11 );
        if( ( state.lexer._type  == 113 ) ){
            consume( state );
            add_reduce( state, 2, 276 );
            return 0
        };
        return - 1
    } else {
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 2 peek_level-1 [  (  ]';
        '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
        '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>• τ( javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
        'offset 3 peek_level0 [  ...  ]';
        '199:667 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_ τ)';
        '199:668 javascript__cover_parenthesized_expression_and_arrow_parameter_list=>τ( • javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_ τ)';
        scan( state.lexer, 462, 9 );
        if( state.lexer._type  == 111 ){
            'Asserts [  ...  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_bc3a70852c614b9e, 199 );
            state.push_fn( branch_bafc000a9c398ba6, 199 );
            return 0
        }
    }
};
    return - 1
}

function hc_javascript__concise_body(state, db, prod){
    scan( state.lexer, 21, 11 );
    'offset 0 peek_level0 [  yield async 40 ( new super import this [ class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await {  ]';
    '200:672 javascript__concise_body=>• javascript__assignment_expression';
    '200:673 javascript__concise_body=>• τ{ javascript__function_statement_list τ}';
    if( isTokenActive( state.lexer._type, 463 ) ){
    'Asserts [  yield async 40 ( new super import this [ class / < true false null " " function ` 0X 0x 0O 0o 0B 0b num delete void typeof + ~ ! - ++ -- await  ]';
    state.push_fn( set_production /*200*/, 200 );
    '"--LEAF--"';
    '200:672 javascript__concise_body=>• javascript__assignment_expression';
    state.push_fn( set_production /*0*/, 200 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    state.push_fn( set_production /*200*/, 200 );
    '"--LEAF--"';
    '200:673 javascript__concise_body=>• τ{ javascript__function_statement_list τ}';
    consume( state );
    state.push_fn( branch_6b6bbb456d65602e, 200 );
    return hc_javascript__function_statement_list( state, db, 0 )
};
    return - 1
}

function hc_javascript__assignment_operator(state, db, prod){
    scan( state.lexer, 211, 11 );
    'offset 0 peek_level-1 [  *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||=  ]';
    '201:674 javascript__assignment_operator=>• τ*=';
    '201:675 javascript__assignment_operator=>• τ/=';
    '201:676 javascript__assignment_operator=>• τ%=';
    '201:677 javascript__assignment_operator=>• τ+=';
    '201:678 javascript__assignment_operator=>• τ-=';
    '201:679 javascript__assignment_operator=>• τ<<=';
    '201:680 javascript__assignment_operator=>• τ>>=';
    '201:681 javascript__assignment_operator=>• τ>>>=';
    '201:682 javascript__assignment_operator=>• τ&=';
    '201:683 javascript__assignment_operator=>• τ^=';
    '201:684 javascript__assignment_operator=>• τ|=';
    '201:685 javascript__assignment_operator=>• τ**=';
    '201:686 javascript__assignment_operator=>• τ??=';
    '201:687 javascript__assignment_operator=>• τ&&=';
    '201:688 javascript__assignment_operator=>• τ||=';
    if( state.lexer._type  == 151 ){
    'Asserts [  *=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:674 javascript__assignment_operator=>• τ*=';
    consume( state );
    return 0
} else if( state.lexer._type  == 152 ){
    'Asserts [  /=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:675 javascript__assignment_operator=>• τ/=';
    consume( state );
    return 0
} else if( state.lexer._type  == 153 ){
    'Asserts [  %=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:676 javascript__assignment_operator=>• τ%=';
    consume( state );
    return 0
} else if( state.lexer._type  == 154 ){
    'Asserts [  +=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:677 javascript__assignment_operator=>• τ+=';
    consume( state );
    return 0
} else if( state.lexer._type  == 155 ){
    'Asserts [  -=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:678 javascript__assignment_operator=>• τ-=';
    consume( state );
    return 0
} else if( state.lexer._type  == 156 ){
    'Asserts [  <<=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:679 javascript__assignment_operator=>• τ<<=';
    consume( state );
    return 0
} else if( state.lexer._type  == 157 ){
    'Asserts [  >>=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:680 javascript__assignment_operator=>• τ>>=';
    consume( state );
    return 0
} else if( state.lexer._type  == 158 ){
    'Asserts [  >>>=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:681 javascript__assignment_operator=>• τ>>>=';
    consume( state );
    return 0
} else if( state.lexer._type  == 159 ){
    'Asserts [  &=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:682 javascript__assignment_operator=>• τ&=';
    consume( state );
    return 0
} else if( state.lexer._type  == 160 ){
    'Asserts [  ^=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:683 javascript__assignment_operator=>• τ^=';
    consume( state );
    return 0
} else if( state.lexer._type  == 161 ){
    'Asserts [  |=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:684 javascript__assignment_operator=>• τ|=';
    consume( state );
    return 0
} else if( state.lexer._type  == 162 ){
    'Asserts [  **=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:685 javascript__assignment_operator=>• τ**=';
    consume( state );
    return 0
} else if( state.lexer._type  == 163 ){
    'Asserts [  ??=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:686 javascript__assignment_operator=>• τ??=';
    consume( state );
    return 0
} else if( state.lexer._type  == 164 ){
    'Asserts [  &&=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:687 javascript__assignment_operator=>• τ&&=';
    consume( state );
    return 0
} else if( state.lexer._type  == 165 ){
    'Asserts [  ||=  ]';
    state.push_fn( set_production /*201*/, 201 );
    '"--LEAF--"';
    '201:688 javascript__assignment_operator=>• τ||=';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__CSS(state, db, prod){
    '"--LEAF--"';
    '202:689 css__CSS=>• css__STYLE_SHEET';
    state.push_fn( set_production /*202*/, 202 );
    return hc_css__STYLE_SHEET( state, db, 0 )
}

function hc_css__STYLE_SHEET(state, db, prod){
    scan( state.lexer, 464, 24 );
    'offset 0 peek_level0 [   @media @keyframes @supports * 216 # . [ : @import  ]';
    '203:690 css__STYLE_SHEET=>• css__STYLE_SHEET_list_1282 css__STYLE_SHEET_list_1283';
    '203:692 css__STYLE_SHEET=>• css__STYLE_SHEET_list_1282';
    '203:691 css__STYLE_SHEET=>• css__STYLE_SHEET_list_1283';
    '203:693 css__STYLE_SHEET=>• ɛ';
    if( state.lexer._type  == 57 ){
    'Asserts [    ]';
    state.push_fn( set_production /*203*/, 203 );
    '"--LEAF--"';
    '203:693 css__STYLE_SHEET=>• ɛ';
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 0
} else if( isTokenActive( state.lexer._type, 115 ) ){
    'Asserts [  @media @keyframes @supports * 216 # . [ :  ]';
    state.push_fn( set_production /*203*/, 203 );
    '"--LEAF--"';
    '203:691 css__STYLE_SHEET=>• css__STYLE_SHEET_list_1283';
    state.push_fn( branch_6e2c267667c82014, 203 );
    return hc_css__STYLE_SHEET_list_1283( state, db, 0 )
} else if( state.lexer._type  == 166 ){
    'Asserts [  @import  ]';
    'offset 2 peek_level-1 [  292  ]';
    '203:690 css__STYLE_SHEET=>• css__STYLE_SHEET_list_1282 css__STYLE_SHEET_list_1283';
    '203:692 css__STYLE_SHEET=>• css__STYLE_SHEET_list_1282';
    scan( state.lexer, 465, 24 );
    state.push_fn( branch_725ce3be88128be6, 0 );
    return hc_css__STYLE_SHEET_list_1282( state, db, 0 )
};
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 203
}

function hc_css__import(state, db, prod){
    scan( state.lexer, 465, 24 );
    'offset 0 peek_level-1 [  @import  ]';
    '204:694 css__import=>• τ@import css__url css__import_group_1287_0_ css__import_list_1289';
    '204:695 css__import=>• τ@import css__import_group_1285_0_ css__import_group_1287_0_ css__import_list_1289';
    '204:696 css__import=>• τ@import css__url css__import_list_1289';
    '204:697 css__import=>• τ@import css__import_group_1285_0_ css__import_list_1289';
    '204:698 css__import=>• τ@import css__url css__import_group_1287_0_';
    '204:699 css__import=>• τ@import css__import_group_1285_0_ css__import_group_1287_0_';
    '204:700 css__import=>• τ@import css__url';
    '204:701 css__import=>• τ@import css__import_group_1285_0_';
    if( state.lexer._type  == 166 ){
    'Assert Consume [  @import  ]';
    consume( state );
    'offset 1 peek_level0 [  url " "  ]';
    '204:694 css__import=>τ@import • css__url css__import_group_1287_0_ css__import_list_1289';
    '204:696 css__import=>τ@import • css__url css__import_list_1289';
    '204:698 css__import=>τ@import • css__url css__import_group_1287_0_';
    '204:700 css__import=>τ@import • css__url';
    '204:695 css__import=>τ@import • css__import_group_1285_0_ css__import_group_1287_0_ css__import_list_1289';
    '204:697 css__import=>τ@import • css__import_group_1285_0_ css__import_list_1289';
    '204:699 css__import=>τ@import • css__import_group_1285_0_ css__import_group_1287_0_';
    '204:701 css__import=>τ@import • css__import_group_1285_0_';
    scan( state.lexer, 466, 24 );
    if( state.lexer._type  == 167 ){
        'Asserts [  url  ]';
        'offset 3 peek_level-1 [  206  ]';
        '204:694 css__import=>τ@import • css__url css__import_group_1287_0_ css__import_list_1289';
        '204:696 css__import=>τ@import • css__url css__import_list_1289';
        '204:698 css__import=>τ@import • css__url css__import_group_1287_0_';
        '204:700 css__import=>τ@import • css__url';
        scan( state.lexer, 467, 24 );
        state.push_fn( branch_234c642b43045fcd, 0 );
        return hc_css__url( state, db, 0 )
    } else {
        'offset 3 peek_level-1 [  294  ]';
        '204:695 css__import=>τ@import • css__import_group_1285_0_ css__import_group_1287_0_ css__import_list_1289';
        '204:697 css__import=>τ@import • css__import_group_1285_0_ css__import_list_1289';
        '204:699 css__import=>τ@import • css__import_group_1285_0_ css__import_group_1287_0_';
        '204:701 css__import=>τ@import • css__import_group_1285_0_';
        scan( state.lexer, 166, 24 );
        state.push_fn( branch_796b814e914d04c9, 0 );
        return hc_css__import_group_1285_0_( state, db, 0 )
    }
};
    return - 1
}

function hc_css__string(state, db, prod){
    scan( state.lexer, 166, 24 );
    'offset 0 peek_level-1 [  " "  ]';
    '205:702 css__string=>• τ" css__string_value τ"';
    '205:703 css__string=>• τ" tk:css__string_value τ"';
    if( state.lexer._type  == 33 ){
    'Asserts [  "  ]';
    state.push_fn( set_production /*205*/, 205 );
    '"--LEAF--"';
    '205:702 css__string=>• τ" css__string_value τ"';
    consume( state );
    state.push_fn( branch_fc6c3c68168bfd69, 205 );
    return hc_css__string_value( state, db, 0 )
} else if( state.lexer._type  == 32 ){
    'Asserts [  "  ]';
    state.push_fn( set_production /*205*/, 205 );
    '"--LEAF--"';
    '205:703 css__string=>• τ" tk:css__string_value τ"';
    consume( state );
    scan( state.lexer, 235, 24 );
    if( ( state.lexer._type  == 23 ) ){
        consume( state );
        scan( state.lexer, 468, 24 );
        if( ( state.lexer._type  == 32 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 0
        }
    };
    return - 1
};
    return - 1
}

function hc_css__url(state, db, prod){
    scan( state.lexer, 467, 24 );
    'offset 0 peek_level-1 [  url  ]';
    '206:704 css__url=>• τurl τ( css__string τ)';
    if( state.lexer._type  == 167 ){
    'Assert Consume [  url  ]';
    consume( state );
    '"--LEAF--"';
    '206:704 css__url=>τurl • τ( css__string τ)';
    scan( state.lexer, 469, 24 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_22ce1f363dc8b465, 206 );
        return hc_css__string( state, db, 0 )
    }
};
    return - 1
}

function hc_css__supports_condition(state, db, prod){
    scan( state.lexer, 470, 24 );
    'offset 0 peek_level-1 [  not ( 216 selector  ]';
    '207:705 css__supports_condition=>• τnot css__supports_in_parens';
    '207:706 css__supports_condition=>• css__supports_in_parens css__supports_condition_list_1314';
    '207:707 css__supports_condition=>• css__supports_in_parens';
    if( state.lexer._type  == 168 ){
    'Asserts [  not  ]';
    state.push_fn( set_production /*207*/, 207 );
    '"--LEAF--"';
    '207:705 css__supports_condition=>• τnot css__supports_in_parens';
    consume( state );
    state.push_fn( branch_f8caa5d0bfd04c67, 207 );
    return hc_css__supports_in_parens( state, db, 0 )
} else {
    'offset 2 peek_level-1 [  208  ]';
    '207:706 css__supports_condition=>• css__supports_in_parens css__supports_condition_list_1314';
    '207:707 css__supports_condition=>• css__supports_in_parens';
    scan( state.lexer, 471, 24 );
    state.push_fn( branch_1cc8359472627aa2, 0 );
    return hc_css__supports_in_parens( state, db, 0 )
};
    return - 1
}

function hc_css__supports_in_parens(state, db, prod){
    scan( state.lexer, 471, 24 );
    'offset 0 peek_level0 [  ( selector 216  ]';
    '208:708 css__supports_in_parens=>• τ( css__supports_condition τ)';
    '208:709 css__supports_in_parens=>• css__supports_feature';
    '208:710 css__supports_in_parens=>• css__general_enclosed';
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    'offset 0 peek_level1 [  not ( 216 selector 230  ]';
    '208:708 css__supports_in_parens=>• τ( css__supports_condition τ)';
    '208:709 css__supports_in_parens=>• css__supports_feature';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 472, 24 );
    if( pk._type  == 168 || pk._type  == 36 || pk._type  == 170 || pk._type  == 169 ){
        'Asserts [  not ( 216 selector  ]';
        state.lexer._type  = 36;
        state.push_fn( set_production /*208*/, 208 );
        '"--LEAF--"';
        '208:708 css__supports_in_parens=>• τ( css__supports_condition τ)';
        consume( state );
        state.push_fn( branch_6ecaae111f21bbc9, 208 );
        return hc_css__supports_condition( state, db, 0 )
    } else {
        state.lexer._type  = 36;
        state.push_fn( set_production /*208*/, 208 );
        '"--LEAF--"';
        '208:709 css__supports_in_parens=>• css__supports_feature';
        state.push_fn( set_production /*0*/, 208 );
        return hc_css__supports_feature( state, db, 0 )
    }
} else if( state.lexer._type  == 169 ){
    'Asserts [  selector  ]';
    state.push_fn( set_production /*208*/, 208 );
    '"--LEAF--"';
    '208:709 css__supports_in_parens=>• css__supports_feature';
    state.push_fn( set_production /*0*/, 208 );
    return hc_css__supports_feature( state, db, 0 )
} else {
    state.push_fn( set_production /*208*/, 208 );
    '"--LEAF--"';
    '208:710 css__supports_in_parens=>• css__general_enclosed';
    state.push_fn( set_production /*0*/, 208 );
    return hc_css__general_enclosed( state, db, 0 )
};
    return - 1
}

function hc_css__supports_feature(state, db, prod){
    scan( state.lexer, 473, 24 );
    'offset 0 peek_level0 [  ( selector  ]';
    '209:711 css__supports_feature=>• css__supports_feature_fn';
    '209:712 css__supports_feature=>• css__supports_decl';
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( set_production /*209*/, 209 );
    '"--LEAF--"';
    '209:712 css__supports_feature=>• css__supports_decl';
    state.push_fn( set_production /*0*/, 209 );
    return hc_css__supports_decl( state, db, 0 )
} else {
    state.push_fn( set_production /*209*/, 209 );
    '"--LEAF--"';
    '209:711 css__supports_feature=>• css__supports_feature_fn';
    state.push_fn( set_production /*0*/, 209 );
    return hc_css__supports_feature_fn( state, db, 0 )
};
    return - 1
}

function hc_css__supports_feature_fn(state, db, prod){
    scan( state.lexer, 474, 24 );
    'offset 0 peek_level-1 [  selector  ]';
    '210:713 css__supports_feature_fn=>• θselector τ( css__COMPLEX_SELECTOR τ)';
    if( state.lexer._type  == 169 ){
    'Assert Consume [  selector  ]';
    consume( state );
    '"--LEAF--"';
    '210:713 css__supports_feature_fn=>θselector • τ( css__COMPLEX_SELECTOR τ)';
    scan( state.lexer, 469, 24 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_31b9023a720b5a97, 210 );
        return hc_css__COMPLEX_SELECTOR( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMPLEX_SELECTOR(state, db, prod){
    'offset 0 peek_level-1 [  212  ]';
    '211:714 css__COMPLEX_SELECTOR=>• css__COMPOUND_SELECTOR css__COMPLEX_SELECTOR_list_1327';
    '211:715 css__COMPLEX_SELECTOR=>• css__COMPOUND_SELECTOR';
    state.push_fn( branch_8d5a4f64190d3b68, 0 );
    return hc_css__COMPOUND_SELECTOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR(state, db, prod){
    scan( state.lexer, 475, 24 );
    'offset 0 peek_level0 [  # . [ * 216 :  ]';
    '212:716 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:718 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:719 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:720 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:724 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR θsp';
    '212:725 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330';
    '212:726 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329';
    '212:729 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR';
    '212:717 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:722 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:723 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:728 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329';
    '212:721 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:727 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1330';
    if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
    'Asserts [  # . [  ]';
    'offset 2 peek_level-1 [  299  ]';
    '212:717 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:722 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:723 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:728 css__COMPOUND_SELECTOR=>• css__COMPOUND_SELECTOR_list_1329';
    scan( state.lexer, 91, 24 );
    state.push_fn( branch_db506fe5bd3a0825, 0 );
    return hc_css__COMPOUND_SELECTOR_list_1329( state, db, 0 )
} else if( state.lexer._type  == 62 || state.lexer._type  == 170 ){
    'Asserts [  * 216  ]';
    'offset 2 peek_level-1 [  213  ]';
    '212:716 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:718 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 θsp';
    '212:719 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 θsp';
    '212:720 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330';
    '212:724 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR θsp';
    '212:725 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330';
    '212:726 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329';
    '212:729 css__COMPOUND_SELECTOR=>• css__TYPE_SELECTOR';
    scan( state.lexer, 476, 24 );
    state.push_fn( branch_40e43973fdcd258c, 0 );
    return hc_css__TYPE_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 70 ){
    'Asserts [  :  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  :  ]';
    '224:764 css__PSEUDO_CLASS_SELECTOR=>• τ: tk:css__identifier css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
    '224:765 css__PSEUDO_CLASS_SELECTOR=>• τ: tk:css__identifier';
    '226:774 css__PSEUDO_ELEMENT_SELECTOR=>• τ: css__PSEUDO_CLASS_SELECTOR';
    'offset 3 peek_level0 [  : 216  ]';
    '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: • tk:css__identifier css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
    '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: • tk:css__identifier';
    '226:774 css__PSEUDO_ELEMENT_SELECTOR=>τ: • css__PSEUDO_CLASS_SELECTOR';
    scan( state.lexer, 92, 63 );
    if( state.lexer._type  == 70 ){
        'Asserts [  :  ]';
        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 226 )*/, 226 );
        '"--LEAF--"';
        '226:774 css__PSEUDO_ELEMENT_SELECTOR=>τ: • css__PSEUDO_CLASS_SELECTOR';
        state.push_fn( branch_234af3a3ace7a700, 226 );
        return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
    } else if( state.lexer._type  == 170 ){
        'Asserts [  216  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  216  ]';
        '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: • tk:css__identifier css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
        '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: • tk:css__identifier';
        'offset 6 peek_level0 [  ( : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
        '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier • css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
        '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier •';
        scan( state.lexer, 477, 89 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )*/, 299 );
            '"--LEAF--"';
            '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier • css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
            state.push_fn( branch_a0197a3296fdfafb, 299 );
            return hc_css__PSEUDO_CLASS_SELECTOR_group_1405_0_( state, db, 0 )
        } else {
            '"--LEAF--"';
            '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier •';
            add_reduce( state, 2, 311 );
            add_reduce( state, 1, 1 );
            return hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )
        }
    }
};
    return - 1
}

function hc_css__COMPOUND_SELECTOR_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 226: 
            {
                'offset 1 peek_level0 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
                '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR • css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
                '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR •';
                scan( state.lexer, 88, 89 );
                if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    'offset 1 peek_level1 [  216 : sp * # . [ > + ~ || ) { , END_OF_PRODUCTION  ]';
                    '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR • css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
                    '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 62, 63 );
                    if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 300 )*/, 300 );
                        '"--LEAF--"';
                        '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR • css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
                        scan( state.lexer, 478, 9 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_9d871c26cf31d6ba, 300 );
                            return hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064( state, db, 0 )
                        };
                        return - 1
                    } else {
                        '"--LEAF--"';
                        '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR •';
                        scan( state.lexer, 89, 89 );
                        add_reduce( state, 1, 355 );
                        add_reduce( state, 1, 1 );
                        prod = 300;
                        continue
                    }
                } else {
                    '"--LEAF--"';
                    '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR •';
                    scan( state.lexer, 89, 89 );
                    add_reduce( state, 1, 355 );
                    add_reduce( state, 1, 1 );
                    prod = 300;
                    continue
                };
                break
            }
            break;
            case 299: 
            {
                'offset 1 peek_level0 [  # . [ : sp > + ~ || * ) , { END_OF_PRODUCTION 216  ]';
                '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                '212:728 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 •';
                '212:722 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • θsp';
                scan( state.lexer, 88, 89 );
                if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
                    'Asserts [  # . [  ]';
                    'offset 1 peek_level1 [  216  ]';
                    '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 90, 63 );
                    if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        state.lexer._type  = 171;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )*/, 299 );
                        '"--LEAF--"';
                        '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                        scan( state.lexer, 479, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    'offset 1 peek_level1 [  : 216  ]';
                    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                    '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 92, 63 );
                    if( pk._type  == 70 ){
                        'Asserts [  :  ]';
                        'offset 3 peek_level-1 [  300  ]';
                        '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                        '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                        scan( state.lexer, 93, 24 );
                        state.push_fn( branch_f61827cf07535744, 0 );
                        return hc_css__COMPOUND_SELECTOR_list_1330( state, db, 0 )
                    } else if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )*/, 299 );
                        '"--LEAF--"';
                        '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                        scan( state.lexer, 479, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 8 ){
                    'Asserts [  sp  ]';
                    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
                    '"--LEAF--"';
                    '212:722 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • θsp';
                    scan( state.lexer, 24, 63 );
                    consume( state );
                    add_reduce( state, 2, 299 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '212:728 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 •';
                    scan( state.lexer, 24, 24 );
                    add_reduce( state, 1, 299 );
                    prod = 212;
                    continue
                };
                break
            }
            break;
            case 300: 
            {
                'offset 1 peek_level-1 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
                '212:721 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1330 • θsp';
                '300:1039 css__COMPOUND_SELECTOR_list_1330=>css__COMPOUND_SELECTOR_list_1330 • css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
                '212:727 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1330 •';
                scan( state.lexer, 88, 89 );
                if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    'offset 1 peek_level1 [  :  ]';
                    '300:1039 css__COMPOUND_SELECTOR_list_1330=>css__COMPOUND_SELECTOR_list_1330 • css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 93, 24 );
                    if( pk._type  == 70 ){
                        'Asserts [  :  ]';
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 300 )*/, 300 );
                        '"--LEAF--"';
                        '300:1039 css__COMPOUND_SELECTOR_list_1330=>css__COMPOUND_SELECTOR_list_1330 • css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
                        scan( state.lexer, 478, 9 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 300 );
                            return hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0_( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 8 ){
                    'Asserts [  sp  ]';
                    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
                    '"--LEAF--"';
                    '212:721 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1330 • θsp';
                    scan( state.lexer, 24, 63 );
                    consume( state );
                    add_reduce( state, 2, 298 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '212:727 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1330 •';
                    scan( state.lexer, 24, 24 );
                    add_reduce( state, 1, 298 );
                    prod = 212;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 212 ) ? prod  : - 1
}

function hc_css__TYPE_SELECTOR(state, db, prod){
    scan( state.lexer, 476, 24 );
    'offset 0 peek_level0 [  * 216  ]';
    '213:730 css__TYPE_SELECTOR=>• css__WQ_NAME';
    '213:731 css__TYPE_SELECTOR=>• css__NS_PREFIX τ*';
    '213:732 css__TYPE_SELECTOR=>• τ*';
    if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    'offset 0 peek_level1 [  | # . [ : sp > + ~ || * ) { , END_OF_PRODUCTION  ]';
    '215:735 css__NS_PREFIX=>• τ* τ|';
    '213:732 css__TYPE_SELECTOR=>• τ*';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 480, 89 );
    if( pk._type  == 73 ){
        'Asserts [  |  ]';
        state.lexer._type  = 62;
        state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 215 )*/, 215 );
        '"--LEAF--"';
        '215:735 css__NS_PREFIX=>• τ* τ|';
        state.push_fn( set_production /*0*/, 215 );
        return hc_css__NS_PREFIX( state, db, prod )
    } else {
        state.lexer._type  = 62;
        state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 213 )*/, 213 );
        '"--LEAF--"';
        '213:732 css__TYPE_SELECTOR=>• τ*';
        consume( state );
        add_reduce( state, 1, 303 );
        return 0
    }
} else if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  216  ]';
    '214:734 css__WQ_NAME=>• tk:css__identifier';
    '215:736 css__NS_PREFIX=>• tk:css__identifier τ|';
    'offset 3 peek_level0 [  | ~= ^= $= *= = ] END_OF_PRODUCTION # . [ : sp * 216 > + ~ || ) { ,  ]';
    '214:734 css__WQ_NAME=>tk:css__identifier •';
    '215:736 css__NS_PREFIX=>tk:css__identifier • τ|';
    scan( state.lexer, 481, 63 );
    if( state.lexer._type  == 73 ){
        'Asserts [  |  ]';
        state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 215 )*/, 215 );
        '"--LEAF--"';
        '215:736 css__NS_PREFIX=>tk:css__identifier • τ|';
        consume( state );
        add_reduce( state, 2, 14 );
        return 0
    } else {
        '"--LEAF--"';
        '214:734 css__WQ_NAME=>tk:css__identifier •';
        add_reduce( state, 1, 305 );
        add_reduce( state, 1, 301 );
        return hc_css__TYPE_SELECTOR_goto( state, db, 213 )
    }
};
    return - 1
}

function hc_css__TYPE_SELECTOR_goto(state, db, prod){
    'offset 1 peek_level-1 [  * 216  ]';
    '214:733 css__WQ_NAME=>css__NS_PREFIX • tk:css__identifier';
    '213:731 css__TYPE_SELECTOR=>css__NS_PREFIX • τ*';
    scan( state.lexer, 476, 24 );
    if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 213 )*/, 213 );
    '"--LEAF--"';
    '213:731 css__TYPE_SELECTOR=>css__NS_PREFIX • τ*';
    scan( state.lexer, 482, 24 );
    consume( state );
    add_reduce( state, 2, 302 );
    return 0
} else if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 213 )*/, 213 );
    '"--LEAF--"';
    '214:733 css__WQ_NAME=>css__NS_PREFIX • tk:css__identifier';
    scan( state.lexer, 23, 24 );
    consume( state );
    add_reduce( state, 2, 304 );
    add_reduce( state, 1, 301 );
    return 0
};
    return ( prod  == 213 ) ? prod  : - 1
}

function hc_css__WQ_NAME(state, db, prod){
    scan( state.lexer, 476, 24 );
    'offset 0 peek_level0 [  * 216  ]';
    '214:733 css__WQ_NAME=>• css__NS_PREFIX tk:css__identifier';
    '214:734 css__WQ_NAME=>• tk:css__identifier';
    if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    state.push_fn( set_production /*214*/, 214 );
    '"--LEAF--"';
    '214:733 css__WQ_NAME=>• css__NS_PREFIX tk:css__identifier';
    state.push_fn( branch_e9a85b6810b0e90a, 214 );
    return hc_css__NS_PREFIX( state, db, 0 )
} else if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    'offset 0 peek_level1 [  | ~= ^= $= *= = ] # . [ : sp > + ~ || * ) , { END_OF_PRODUCTION  ]';
    '214:733 css__WQ_NAME=>• css__NS_PREFIX tk:css__identifier';
    '214:734 css__WQ_NAME=>• tk:css__identifier';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 483, 89 );
    if( pk._type  == 73 ){
        'Asserts [  |  ]';
        state.lexer._type  = 170;
        state.push_fn( set_production /*214*/, 214 );
        '"--LEAF--"';
        '214:733 css__WQ_NAME=>• css__NS_PREFIX tk:css__identifier';
        state.push_fn( branch_e9a85b6810b0e90a, 214 );
        return hc_css__NS_PREFIX( state, db, 0 )
    } else {
        state.lexer._type  = 170;
        state.push_fn( set_production /*214*/, 214 );
        '"--LEAF--"';
        '214:734 css__WQ_NAME=>• tk:css__identifier';
        consume( state );
        add_reduce( state, 1, 305 );
        return 0
    }
};
    return - 1
}

function hc_css__NS_PREFIX(state, db, prod){
    scan( state.lexer, 476, 24 );
    'offset 0 peek_level-1 [  * 216  ]';
    '215:735 css__NS_PREFIX=>• τ* τ|';
    '215:736 css__NS_PREFIX=>• tk:css__identifier τ|';
    if( state.lexer._type  == 62 ){
    'Asserts [  *  ]';
    state.push_fn( set_production /*215*/, 215 );
    '"--LEAF--"';
    '215:735 css__NS_PREFIX=>• τ* τ|';
    consume( state );
    scan( state.lexer, 484, 24 );
    if( ( state.lexer._type  == 73 ) ){
        consume( state );
        add_reduce( state, 2, 14 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    state.push_fn( set_production /*215*/, 215 );
    '"--LEAF--"';
    '215:736 css__NS_PREFIX=>• tk:css__identifier τ|';
    consume( state );
    scan( state.lexer, 484, 24 );
    if( ( state.lexer._type  == 73 ) ){
        consume( state );
        add_reduce( state, 2, 14 );
        return 0
    };
    return - 1
};
    return - 1
}

function hc_css__identifier(state, db, prod){
    '"--LEAF--"';
    '216:737 css__identifier=>• css__css_id_symbols';
    state.push_fn( set_production /*216*/, 216 );
    return hc_css__css_id_symbols( state, db, 0 )
}

function hc_css__css_id_symbols(state, db, prod){
    scan( state.lexer, 485, 24 );
    'offset 0 peek_level-1 [  $ - id  ]';
    '217:743 css__css_id_symbols=>• τ$';
    '217:744 css__css_id_symbols=>• θid';
    '217:745 css__css_id_symbols=>• τ-';
    if( state.lexer._type  == 61 ){
    'Asserts [  $  ]';
    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
    '"--LEAF--"';
    '217:743 css__css_id_symbols=>• τ$';
    consume( state );
    return 0
} else if( state.lexer._type  == 88 ){
    'Asserts [  -  ]';
    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
    '"--LEAF--"';
    '217:745 css__css_id_symbols=>• τ-';
    consume( state );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
    '"--LEAF--"';
    '217:744 css__css_id_symbols=>• θid';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__css_id_symbols_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 217: 
            {
                'offset 1 peek_level-1 [  _ - $ id num END_OF_PRODUCTION  ]';
                '217:738 css__css_id_symbols=>css__css_id_symbols • θid';
                '217:739 css__css_id_symbols=>css__css_id_symbols • τ_';
                '217:740 css__css_id_symbols=>css__css_id_symbols • τ-';
                '217:741 css__css_id_symbols=>css__css_id_symbols • τ$';
                '217:742 css__css_id_symbols=>css__css_id_symbols • θnum';
                '216:737 css__identifier=>css__css_id_symbols •';
                '230:782 css__declaration_id=>css__css_id_symbols •';
                scan( state.lexer, 486, 63 );
                if( state.lexer._type  == 60 ){
                    'Asserts [  _  ]';
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    '"--LEAF--"';
                    '217:739 css__css_id_symbols=>css__css_id_symbols • τ_';
                    scan( state.lexer, 487, 63 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    '"--LEAF--"';
                    '217:740 css__css_id_symbols=>css__css_id_symbols • τ-';
                    scan( state.lexer, 488, 63 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 61 ){
                    'Asserts [  $  ]';
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    '"--LEAF--"';
                    '217:741 css__css_id_symbols=>css__css_id_symbols • τ$';
                    scan( state.lexer, 489, 63 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 3 ){
                    'Asserts [  id  ]';
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    '"--LEAF--"';
                    '217:738 css__css_id_symbols=>css__css_id_symbols • θid';
                    scan( state.lexer, 490, 63 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 5 ){
                    'Asserts [  num  ]';
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    '"--LEAF--"';
                    '217:742 css__css_id_symbols=>css__css_id_symbols • θnum';
                    scan( state.lexer, 491, 63 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 217
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 217 ) ? prod  : - 1
}

function hc_css__SUBCLASS_SELECTOR(state, db, prod){
    scan( state.lexer, 91, 24 );
    'offset 0 peek_level0 [  # . [ :  ]';
    '218:746 css__SUBCLASS_SELECTOR=>• css__ID_SELECTOR';
    '218:747 css__SUBCLASS_SELECTOR=>• css__CLASS_SELECTOR';
    '218:748 css__SUBCLASS_SELECTOR=>• css__ATTRIBUTE_SELECTOR';
    '218:749 css__SUBCLASS_SELECTOR=>• css__PSEUDO_CLASS_SELECTOR';
    if( state.lexer._type  == 171 ){
    'Asserts [  #  ]';
    state.push_fn( set_production /*218*/, 218 );
    '"--LEAF--"';
    '218:746 css__SUBCLASS_SELECTOR=>• css__ID_SELECTOR';
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__ID_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 98 ){
    'Asserts [  .  ]';
    state.push_fn( set_production /*218*/, 218 );
    '"--LEAF--"';
    '218:747 css__SUBCLASS_SELECTOR=>• css__CLASS_SELECTOR';
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__CLASS_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 96 ){
    'Asserts [  [  ]';
    state.push_fn( set_production /*218*/, 218 );
    '"--LEAF--"';
    '218:748 css__SUBCLASS_SELECTOR=>• css__ATTRIBUTE_SELECTOR';
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__ATTRIBUTE_SELECTOR( state, db, 0 )
} else {
    state.push_fn( set_production /*218*/, 218 );
    '"--LEAF--"';
    '218:749 css__SUBCLASS_SELECTOR=>• css__PSEUDO_CLASS_SELECTOR';
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
};
    return - 1
}

function hc_css__ID_SELECTOR(state, db, prod){
    scan( state.lexer, 492, 24 );
    'offset 0 peek_level-1 [  #  ]';
    '219:750 css__ID_SELECTOR=>• τ# tk:css__identifier';
    if( state.lexer._type  == 171 ){
    'Assert Consume [  #  ]';
    consume( state );
    '"--LEAF--"';
    '219:750 css__ID_SELECTOR=>τ# • tk:css__identifier';
    scan( state.lexer, 90, 63 );
    if( ( state.lexer._type  == 170 ) ){
        consume( state );
        add_reduce( state, 2, 306 );
        return 219
    }
};
    return - 1
}

function hc_css__CLASS_SELECTOR(state, db, prod){
    scan( state.lexer, 493, 24 );
    'offset 0 peek_level-1 [  .  ]';
    '220:751 css__CLASS_SELECTOR=>• τ. tk:css__identifier';
    if( state.lexer._type  == 98 ){
    'Assert Consume [  .  ]';
    consume( state );
    '"--LEAF--"';
    '220:751 css__CLASS_SELECTOR=>τ. • tk:css__identifier';
    scan( state.lexer, 90, 63 );
    if( ( state.lexer._type  == 170 ) ){
        consume( state );
        add_reduce( state, 2, 307 );
        return 220
    }
};
    return - 1
}

function hc_css__ATTRIBUTE_SELECTOR(state, db, prod){
    scan( state.lexer, 494, 24 );
    'offset 0 peek_level-1 [  [  ]';
    '221:752 css__ATTRIBUTE_SELECTOR=>• τ[ css__WQ_NAME τ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>• τ[ css__WQ_NAME css__ATTR_MATCHER css__string css__ATTR_MODIFIER τ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>• τ[ css__WQ_NAME css__ATTR_MATCHER tk:css__identifier css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>• τ[ css__WQ_NAME css__ATTR_MATCHER css__string τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>• τ[ css__WQ_NAME css__ATTR_MATCHER tk:css__identifier τ]';
    if( state.lexer._type  == 96 ){
    'Assert Consume [  [  ]';
    consume( state );
    'offset 1 peek_level-1 [  214  ]';
    '221:752 css__ATTRIBUTE_SELECTOR=>τ[ • css__WQ_NAME τ]';
    '221:753 css__ATTRIBUTE_SELECTOR=>τ[ • css__WQ_NAME css__ATTR_MATCHER css__string css__ATTR_MODIFIER τ]';
    '221:754 css__ATTRIBUTE_SELECTOR=>τ[ • css__WQ_NAME css__ATTR_MATCHER tk:css__identifier css__ATTR_MODIFIER τ]';
    '221:755 css__ATTRIBUTE_SELECTOR=>τ[ • css__WQ_NAME css__ATTR_MATCHER css__string τ]';
    '221:756 css__ATTRIBUTE_SELECTOR=>τ[ • css__WQ_NAME css__ATTR_MATCHER tk:css__identifier τ]';
    scan( state.lexer, 476, 24 );
    state.push_fn( branch_a7bb0444cd5e8bab, 0 );
    return hc_css__WQ_NAME( state, db, 0 )
};
    return - 1
}

function hc_css__ATTR_MATCHER(state, db, prod){
    scan( state.lexer, 149, 24 );
    'offset 0 peek_level-1 [  ~= ^= $= *= =  ]';
    '222:757 css__ATTR_MATCHER=>• τ~=';
    '222:758 css__ATTR_MATCHER=>• τ^=';
    '222:759 css__ATTR_MATCHER=>• τ$=';
    '222:760 css__ATTR_MATCHER=>• τ*=';
    '222:761 css__ATTR_MATCHER=>• τ=';
    if( state.lexer._type  == 172 ){
    'Asserts [  ~=  ]';
    state.push_fn( set_production /*222*/, 222 );
    '"--LEAF--"';
    '222:757 css__ATTR_MATCHER=>• τ~=';
    consume( state );
    return 0
} else if( state.lexer._type  == 160 ){
    'Asserts [  ^=  ]';
    state.push_fn( set_production /*222*/, 222 );
    '"--LEAF--"';
    '222:758 css__ATTR_MATCHER=>• τ^=';
    consume( state );
    return 0
} else if( state.lexer._type  == 173 ){
    'Asserts [  $=  ]';
    state.push_fn( set_production /*222*/, 222 );
    '"--LEAF--"';
    '222:759 css__ATTR_MATCHER=>• τ$=';
    consume( state );
    return 0
} else if( state.lexer._type  == 151 ){
    'Asserts [  *=  ]';
    state.push_fn( set_production /*222*/, 222 );
    '"--LEAF--"';
    '222:760 css__ATTR_MATCHER=>• τ*=';
    consume( state );
    return 0
} else if( state.lexer._type  == 14 ){
    'Asserts [  =  ]';
    state.push_fn( set_production /*222*/, 222 );
    '"--LEAF--"';
    '222:761 css__ATTR_MATCHER=>• τ=';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__ATTR_MODIFIER(state, db, prod){
    scan( state.lexer, 495, 24 );
    'offset 0 peek_level-1 [  i s  ]';
    '223:762 css__ATTR_MODIFIER=>• τi';
    '223:763 css__ATTR_MODIFIER=>• τs';
    if( state.lexer._type  == 174 ){
    'Asserts [  i  ]';
    state.push_fn( set_production /*223*/, 223 );
    '"--LEAF--"';
    '223:762 css__ATTR_MODIFIER=>• τi';
    consume( state );
    return 0
} else if( state.lexer._type  == 175 ){
    'Asserts [  s  ]';
    state.push_fn( set_production /*223*/, 223 );
    '"--LEAF--"';
    '223:763 css__ATTR_MODIFIER=>• τs';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__PSEUDO_CLASS_SELECTOR(state, db, prod){
    scan( state.lexer, 93, 24 );
    'offset 0 peek_level-1 [  :  ]';
    '224:764 css__PSEUDO_CLASS_SELECTOR=>• τ: tk:css__identifier css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
    '224:765 css__PSEUDO_CLASS_SELECTOR=>• τ: tk:css__identifier';
    if( state.lexer._type  == 70 ){
    'Assert Consume [  :  ]';
    consume( state );
    'offset 1 peek_level-1 [  216  ]';
    '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: • tk:css__identifier css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
    '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: • tk:css__identifier';
    scan( state.lexer, 90, 63 );
    if( state.lexer._type  == 170 ){
        'Assert Consume [  216  ]';
        consume( state );
        'offset 2 peek_level0 [  ( : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
        '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier • css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
        '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier •';
        scan( state.lexer, 477, 89 );
        if( state.lexer._type  == 36 ){
            'Asserts [  (  ]';
            state.push_fn( set_production /*224*/, 224 );
            '"--LEAF--"';
            '224:764 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier • css__PSEUDO_CLASS_SELECTOR_group_1405_0_';
            state.push_fn( branch_9d5a7eab51c37cb0, 224 );
            return hc_css__PSEUDO_CLASS_SELECTOR_group_1405_0_( state, db, 0 )
        } else {
            '"--LEAF--"';
            '224:765 css__PSEUDO_CLASS_SELECTOR=>τ: tk:css__identifier •';
            add_reduce( state, 2, 311 );
            return 224
        }
    }
};
    return - 1
}

function hc_css__psuedo_class_value(state, db, prod){
    scan( state.lexer, 237, 63 );
    'offset 0 peek_level-1 [  sp id sym num  ]';
    '225:766 css__psuedo_class_value=>• θsp';
    '225:768 css__psuedo_class_value=>• θid';
    '225:769 css__psuedo_class_value=>• θsym';
    '225:770 css__psuedo_class_value=>• θnum';
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:766 css__psuedo_class_value=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:768 css__psuedo_class_value=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:769 css__psuedo_class_value=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:770 css__psuedo_class_value=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_css__psuedo_class_value_goto(state, db, prod){
    'offset 1 peek_level-1 [  sp id sym num  ]';
    '225:767 css__psuedo_class_value=>css__psuedo_class_value • θsp';
    '225:771 css__psuedo_class_value=>css__psuedo_class_value • θid';
    '225:772 css__psuedo_class_value=>css__psuedo_class_value • θsym';
    '225:773 css__psuedo_class_value=>css__psuedo_class_value • θnum';
    scan( state.lexer, 237, 63 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:767 css__psuedo_class_value=>css__psuedo_class_value • θsp';
    scan( state.lexer, 24, 63 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:771 css__psuedo_class_value=>css__psuedo_class_value • θid';
    scan( state.lexer, 239, 24 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:772 css__psuedo_class_value=>css__psuedo_class_value • θsym';
    scan( state.lexer, 240, 24 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    '"--LEAF--"';
    '225:773 css__psuedo_class_value=>css__psuedo_class_value • θnum';
    scan( state.lexer, 241, 24 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 225 ) ? prod  : - 1
}

function hc_css__PSEUDO_ELEMENT_SELECTOR(state, db, prod){
    scan( state.lexer, 93, 24 );
    'offset 0 peek_level-1 [  :  ]';
    '226:774 css__PSEUDO_ELEMENT_SELECTOR=>• τ: css__PSEUDO_CLASS_SELECTOR';
    if( state.lexer._type  == 70 ){
    'Assert Consume [  :  ]';
    consume( state );
    '"--LEAF--"';
    '226:774 css__PSEUDO_ELEMENT_SELECTOR=>τ: • css__PSEUDO_CLASS_SELECTOR';
    scan( state.lexer, 496, 63 );
    if( ( state.lexer._type  == 70 ) ){
        state.push_fn( branch_954c56e02bee4682, 226 );
        return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMBINATOR(state, db, prod){
    scan( state.lexer, 497, 24 );
    'offset 0 peek_level-1 [  > + ~ ||  ]';
    '227:775 css__COMBINATOR=>• τ>';
    '227:776 css__COMBINATOR=>• τ+';
    '227:777 css__COMBINATOR=>• τ~';
    '227:778 css__COMBINATOR=>• τ||';
    if( state.lexer._type  == 11 ){
    'Asserts [  >  ]';
    state.push_fn( set_production /*227*/, 227 );
    '"--LEAF--"';
    '227:775 css__COMBINATOR=>• τ>';
    consume( state );
    return 0
} else if( state.lexer._type  == 87 ){
    'Asserts [  +  ]';
    state.push_fn( set_production /*227*/, 227 );
    '"--LEAF--"';
    '227:776 css__COMBINATOR=>• τ+';
    consume( state );
    return 0
} else if( state.lexer._type  == 94 ){
    'Asserts [  ~  ]';
    state.push_fn( set_production /*227*/, 227 );
    '"--LEAF--"';
    '227:777 css__COMBINATOR=>• τ~';
    consume( state );
    return 0
} else if( state.lexer._type  == 71 ){
    'Asserts [  ||  ]';
    state.push_fn( set_production /*227*/, 227 );
    '"--LEAF--"';
    '227:778 css__COMBINATOR=>• τ||';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__supports_decl(state, db, prod){
    scan( state.lexer, 469, 24 );
    'offset 0 peek_level-1 [  (  ]';
    '228:779 css__supports_decl=>• τ( css__declaration τ)';
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    '"--LEAF--"';
    '228:779 css__supports_decl=>τ( • css__declaration τ)';
    scan( state.lexer, 498, 24 );
    if( ( state.lexer._type  == 176 ) ){
        state.push_fn( branch_46b2d3dfd3619fb7, 228 );
        return hc_css__declaration( state, db, 0 )
    }
};
    return - 1
}

function hc_css__declaration(state, db, prod){
    scan( state.lexer, 498, 24 );
    'offset 0 peek_level-1 [  230  ]';
    '229:780 css__declaration=>• tk:css__declaration_id τ: tk:css__declaration_values_sentineled τ! τimportant';
    '229:781 css__declaration=>• tk:css__declaration_id τ: tk:css__declaration_values_sentineled';
    if( state.lexer._type  == 176 ){
    'Assert Consume [  230  ]';
    consume( state );
    'offset 1 peek_level-1 [  :  ]';
    '229:780 css__declaration=>tk:css__declaration_id • τ: tk:css__declaration_values_sentineled τ! τimportant';
    '229:781 css__declaration=>tk:css__declaration_id • τ: tk:css__declaration_values_sentineled';
    scan( state.lexer, 93, 24 );
    if( state.lexer._type  == 70 ){
        'Assert Consume [  :  ]';
        consume( state );
        'offset 2 peek_level-1 [  231  ]';
        '229:780 css__declaration=>tk:css__declaration_id τ: • tk:css__declaration_values_sentineled τ! τimportant';
        '229:781 css__declaration=>tk:css__declaration_id τ: • tk:css__declaration_values_sentineled';
        scan( state.lexer, 499, 24 );
        if( state.lexer._type  == 177 ){
            'Assert Consume [  231  ]';
            consume( state );
            'offset 3 peek_level-1 [  ! ) } ; END_OF_PRODUCTION  ]';
            '229:780 css__declaration=>tk:css__declaration_id τ: tk:css__declaration_values_sentineled • τ! τimportant';
            '229:781 css__declaration=>tk:css__declaration_id τ: tk:css__declaration_values_sentineled •';
            scan( state.lexer, 500, 24 );
            if( state.lexer._type  == 35 ){
                'Asserts [  !  ]';
                state.push_fn( set_production /*229*/, 229 );
                '"--LEAF--"';
                '229:780 css__declaration=>tk:css__declaration_id τ: tk:css__declaration_values_sentineled • τ! τimportant';
                consume( state );
                scan( state.lexer, 501, 24 );
                if( ( state.lexer._type  == 178 ) ){
                    consume( state );
                    add_reduce( state, 5, 313 );
                    return 0
                };
                return - 1
            } else {
                '"--LEAF--"';
                '229:781 css__declaration=>tk:css__declaration_id τ: tk:css__declaration_values_sentineled •';
                add_reduce( state, 3, 313 );
                return 229
            }
        }
    }
};
    return - 1
}

function hc_css__declaration_id(state, db, prod){
    '"--LEAF--"';
    '230:782 css__declaration_id=>• css__css_id_symbols';
    state.push_fn( set_production /*230*/, 230 );
    return hc_css__css_id_symbols( state, db, 0 )
}

function hc_css__declaration_values_sentineled(state, db, prod){
    'offset 0 peek_level-1 [  232  ]';
    '231:783 css__declaration_values_sentineled=>• css__declaration_values τ;-ns';
    '231:784 css__declaration_values_sentineled=>• css__declaration_values τ}-ns';
    state.push_fn( branch_ff38f69fb2454a2a, 0 );
    return hc_css__declaration_values( state, db, 0 )
}

function hc_css__declaration_values(state, db, prod){
    '"--LEAF--"';
    '232:785 css__declaration_values=>• css__declaration_value';
    state.push_fn( hc_css__declaration_values_goto /*hc_css__declaration_values_goto( state, db, 232 )*/, 232 );
    return hc_css__declaration_value( state, db, 0 )
}

function hc_css__declaration_values_goto(state, db, prod){
    'offset 1 peek_level-1 [  ; } ( id sym num sp  ]';
    '232:786 css__declaration_values=>css__declaration_values • τ( css__declaration_values τ)';
    '232:787 css__declaration_values=>css__declaration_values • css__declaration_value';
    '231:783 css__declaration_values_sentineled=>css__declaration_values • τ;-ns';
    '231:784 css__declaration_values_sentineled=>css__declaration_values • τ}-ns';
    scan( state.lexer, 502, 63 );
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_css__declaration_values_goto /*hc_css__declaration_values_goto( state, db, 232 )*/, 232 );
    '"--LEAF--"';
    '232:786 css__declaration_values=>css__declaration_values • τ( css__declaration_values τ)';
    scan( state.lexer, 469, 24 );
    consume( state );
    state.push_fn( branch_af29ef54a1233fb1, 232 );
    return hc_css__declaration_values( state, db, 0 )
} else if( state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 || state.lexer._type  == 8 ){
    'Asserts [  id sym num sp  ]';
    state.push_fn( hc_css__declaration_values_goto /*hc_css__declaration_values_goto( state, db, 232 )*/, 232 );
    '"--LEAF--"';
    '232:787 css__declaration_values=>css__declaration_values • css__declaration_value';
    scan( state.lexer, 237, 63 );
    if( ( state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 || state.lexer._type  == 8 ) ){
        state.push_fn( branch_c417a0113f98071e, 232 );
        return hc_css__declaration_value( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 232 ) ? prod  : - 1
}

function hc_css__declaration_value(state, db, prod){
    scan( state.lexer, 237, 63 );
    'offset 0 peek_level-1 [  id sym num sp  ]';
    '233:788 css__declaration_value=>• θid';
    '233:789 css__declaration_value=>• θsym';
    '233:790 css__declaration_value=>• θnum';
    '233:791 css__declaration_value=>• θsp';
    if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( set_production /*233*/, 233 );
    '"--LEAF--"';
    '233:788 css__declaration_value=>• θid';
    consume( state );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( set_production /*233*/, 233 );
    '"--LEAF--"';
    '233:789 css__declaration_value=>• θsym';
    consume( state );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( set_production /*233*/, 233 );
    '"--LEAF--"';
    '233:790 css__declaration_value=>• θnum';
    consume( state );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( set_production /*233*/, 233 );
    '"--LEAF--"';
    '233:791 css__declaration_value=>• θsp';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__general_enclosed(state, db, prod){
    scan( state.lexer, 23, 24 );
    'offset 0 peek_level-1 [  216  ]';
    '234:792 css__general_enclosed=>• tk:css__identifier τ( css__general_enclosed_list_1466 τ)';
    '234:793 css__general_enclosed=>• tk:css__identifier τ( τ)';
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    'offset 1 peek_level-1 [  (  ]';
    '234:792 css__general_enclosed=>tk:css__identifier • τ( css__general_enclosed_list_1466 τ)';
    '234:793 css__general_enclosed=>tk:css__identifier • τ( τ)';
    scan( state.lexer, 469, 24 );
    if( state.lexer._type  == 36 ){
        'Assert Consume [  (  ]';
        consume( state );
        'offset 2 peek_level0 [  ) sp sym id  ]';
        '234:792 css__general_enclosed=>tk:css__identifier τ( • css__general_enclosed_list_1466 τ)';
        '234:793 css__general_enclosed=>tk:css__identifier τ( • τ)';
        scan( state.lexer, 503, 89 );
        if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( set_production /*234*/, 234 );
            '"--LEAF--"';
            '234:793 css__general_enclosed=>tk:css__identifier τ( • τ)';
            consume( state );
            add_reduce( state, 3, 315 );
            return 0
        } else {
            state.push_fn( set_production /*234*/, 234 );
            '"--LEAF--"';
            '234:792 css__general_enclosed=>tk:css__identifier τ( • css__general_enclosed_list_1466 τ)';
            state.push_fn( branch_a21bd1c476de366a, 234 );
            return hc_css__general_enclosed_list_1466( state, db, 0 )
        }
    }
};
    return - 1
}

function hc_css__import_declaration(state, db, prod){
    '"--LEAF--"';
    '235:794 css__import_declaration=>• css__declaration';
    state.push_fn( set_production /*235*/, 235 );
    return hc_css__declaration( state, db, 0 )
}

function hc_css__media_query(state, db, prod){
    scan( state.lexer, 504, 24 );
    'offset 0 peek_level0 [  not only ( 216  ]';
    '236:795 css__media_query=>• css__media_condition';
    '236:798 css__media_query=>• τnot css__media_type css__media_query_group_1473_0_';
    '236:801 css__media_query=>• τnot css__media_type';
    '236:797 css__media_query=>• css__media_type css__media_query_group_1473_0_';
    '236:800 css__media_query=>• css__media_type';
    '236:796 css__media_query=>• τonly css__media_type css__media_query_group_1473_0_';
    '236:799 css__media_query=>• τonly css__media_type';
    if( state.lexer._type  == 168 ){
    'Asserts [  not  ]';
    'offset 0 peek_level1 [  ( 216  ]';
    '236:795 css__media_query=>• css__media_condition';
    '236:798 css__media_query=>• τnot css__media_type css__media_query_group_1473_0_';
    '236:801 css__media_query=>• τnot css__media_type';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 505, 24 );
    if( pk._type  == 36 ){
        'Asserts [  (  ]';
        state.lexer._type  = 168;
        state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
        '"--LEAF--"';
        '236:795 css__media_query=>• css__media_condition';
        state.push_fn( branch_961fad18f3f0a5a7, 236 );
        return hc_css__media_condition( state, db, 0 )
    } else {
        'offset 0 peek_level2 [  ( , ; { END_OF_PRODUCTION and  ]';
        '236:795 css__media_query=>• css__media_condition';
        '236:798 css__media_query=>• τnot css__media_type css__media_query_group_1473_0_';
        '236:801 css__media_query=>• τnot css__media_type';
        pk.next(  );
        scan( pk, 506, 9 );
        if( pk._type  == 36 ){
            'Asserts [  (  ]';
            state.lexer._type  = 168;
            state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
            '"--LEAF--"';
            '236:795 css__media_query=>• css__media_condition';
            state.push_fn( branch_961fad18f3f0a5a7, 236 );
            return hc_css__media_condition( state, db, 0 )
        } else {
            consume( state );
            '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
            'offset 2 peek_level-1 [  not  ]';
            '236:798 css__media_query=>• τnot css__media_type css__media_query_group_1473_0_';
            '236:801 css__media_query=>• τnot css__media_type';
            'offset 3 peek_level-1 [  251  ]';
            '236:798 css__media_query=>τnot • css__media_type css__media_query_group_1473_0_';
            '236:801 css__media_query=>τnot • css__media_type';
            scan( state.lexer, 23, 24 );
            state.push_fn( branch_8ee67cd78057d7cc, 0 );
            return hc_css__media_type( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 179 ){
    'Asserts [  only  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  only  ]';
    '236:796 css__media_query=>• τonly css__media_type css__media_query_group_1473_0_';
    '236:799 css__media_query=>• τonly css__media_type';
    'offset 3 peek_level-1 [  251  ]';
    '236:796 css__media_query=>τonly • css__media_type css__media_query_group_1473_0_';
    '236:799 css__media_query=>τonly • css__media_type';
    scan( state.lexer, 23, 24 );
    state.push_fn( branch_d910a989515412be, 0 );
    return hc_css__media_type( state, db, 0 )
} else if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
    '"--LEAF--"';
    '236:795 css__media_query=>• css__media_condition';
    state.push_fn( branch_961fad18f3f0a5a7, 236 );
    return hc_css__media_condition( state, db, 0 )
} else if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  216  ]';
    '234:792 css__general_enclosed=>• tk:css__identifier τ( css__general_enclosed_list_1466 τ)';
    '234:793 css__general_enclosed=>• tk:css__identifier τ( τ)';
    '251:844 css__media_type=>• tk:css__identifier';
    'offset 3 peek_level0 [  ( and , { ; END_OF_PRODUCTION  ]';
    '234:792 css__general_enclosed=>tk:css__identifier • τ( css__general_enclosed_list_1466 τ)';
    '234:793 css__general_enclosed=>tk:css__identifier • τ( τ)';
    '251:844 css__media_type=>tk:css__identifier •';
    scan( state.lexer, 506, 9 );
    if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 5 peek_level-1 [  (  ]';
        '234:792 css__general_enclosed=>tk:css__identifier • τ( css__general_enclosed_list_1466 τ)';
        '234:793 css__general_enclosed=>tk:css__identifier • τ( τ)';
        'offset 6 peek_level0 [  ) sp sym id  ]';
        '234:792 css__general_enclosed=>tk:css__identifier τ( • css__general_enclosed_list_1466 τ)';
        '234:793 css__general_enclosed=>tk:css__identifier τ( • τ)';
        scan( state.lexer, 503, 89 );
        if( state.lexer._type  == 113 ){
            'Asserts [  )  ]';
            state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '234:793 css__general_enclosed=>tk:css__identifier τ( • τ)';
            consume( state );
            add_reduce( state, 3, 315 );
            return 0
        } else {
            state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '234:792 css__general_enclosed=>tk:css__identifier τ( • css__general_enclosed_list_1466 τ)';
            state.push_fn( branch_a21bd1c476de366a, 240 );
            return hc_css__general_enclosed_list_1466( state, db, 0 )
        }
    } else {
        '"--LEAF--"';
        '251:844 css__media_type=>tk:css__identifier •';
        add_reduce( state, 1, 330 );
        return hc_css__media_query_goto( state, db, 251 )
    }
};
    return - 1
}

function hc_css__media_query_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 240: 
            {
                'offset 1 peek_level0 [  or and , ; { END_OF_PRODUCTION )  ]';
                '238:806 css__media_condition_without_or=>css__media_in_parenths •';
                '250:843 css__media_or=>css__media_in_parenths • css__media_or_list_1605';
                '249:842 css__media_and=>css__media_in_parenths • css__media_and_list_1603';
                scan( state.lexer, 507, 9 );
                if( state.lexer._type  == 210 ){
                    'Asserts [  or  ]';
                    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
                    '"--LEAF--"';
                    '250:843 css__media_or=>css__media_in_parenths • css__media_or_list_1605';
                    scan( state.lexer, 508, 24 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_bfe024a32ddac392, 236 );
                        return hc_css__media_or_list_1605( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 209 ){
                    'Asserts [  and  ]';
                    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
                    '"--LEAF--"';
                    '249:842 css__media_and=>css__media_in_parenths • css__media_and_list_1603';
                    scan( state.lexer, 509, 24 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_bfe024a32ddac392, 236 );
                        return hc_css__media_and_list_1603( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '238:806 css__media_condition_without_or=>css__media_in_parenths •';
                    scan( state.lexer, 24, 24 );
                    add_reduce( state, 1, 316 );
                    prod = 236;
                    continue
                };
                break
            }
            break;
            case 251: 
            {
                'offset 1 peek_level0 [  and , ; { END_OF_PRODUCTION  ]';
                '236:797 css__media_query=>css__media_type • css__media_query_group_1473_0_';
                '236:800 css__media_query=>css__media_type •';
                scan( state.lexer, 134, 9 );
                if( state.lexer._type  == 209 ){
                    'Asserts [  and  ]';
                    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
                    '"--LEAF--"';
                    '236:797 css__media_query=>css__media_type • css__media_query_group_1473_0_';
                    scan( state.lexer, 509, 24 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_269c43f199e42297, 236 );
                        return hc_css__media_query_group_1473_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '236:800 css__media_query=>css__media_type •';
                    scan( state.lexer, 24, 24 );
                    add_reduce( state, 1, 316 );
                    prod = 236;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 236 ) ? prod  : - 1
}

function hc_css__media_condition(state, db, prod){
    scan( state.lexer, 510, 24 );
    'offset 0 peek_level0 [  not ( 216  ]';
    '237:802 css__media_condition=>• css__media_condition_without_or';
    '237:803 css__media_condition=>• css__media_or';
    if( state.lexer._type  == 168 ){
    'Asserts [  not  ]';
    state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 237 )*/, 237 );
    '"--LEAF--"';
    '237:802 css__media_condition=>• css__media_condition_without_or';
    state.push_fn( set_production /*0*/, 237 );
    return hc_css__media_condition_without_or( state, db, 0 )
} else if( state.lexer._type  == 36 || state.lexer._type  == 170 ){
    'Asserts [  ( 216  ]';
    'offset 2 peek_level0 [  ( 216  ]';
    '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
    '241:811 css__media_feature=>• τ( css__mf_range τ)';
    '241:812 css__media_feature=>• τ( css__mf_plain τ)';
    '241:813 css__media_feature=>• τ( css__mf_boolean τ)';
    '234:792 css__general_enclosed=>• tk:css__identifier τ( css__general_enclosed_list_1466 τ)';
    scan( state.lexer, 505, 24 );
    if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  (  ]';
        '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
        '241:811 css__media_feature=>• τ( css__mf_range τ)';
        '241:812 css__media_feature=>• τ( css__mf_plain τ)';
        '241:813 css__media_feature=>• τ( css__mf_boolean τ)';
        'offset 5 peek_level0 [  true false not ( 216 num  ]';
        '240:808 css__media_in_parenths=>τ( • css__media_condition τ)';
        '241:811 css__media_feature=>τ( • css__mf_range τ)';
        '241:812 css__media_feature=>τ( • css__mf_plain τ)';
        '241:813 css__media_feature=>τ( • css__mf_boolean τ)';
        scan( state.lexer, 511, 24 );
        if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
            'Asserts [  true false  ]';
            state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '241:813 css__media_feature=>τ( • css__mf_boolean τ)';
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_boolean( state, db, 0 )
        } else if( state.lexer._type  == 168 || state.lexer._type  == 36 ){
            'Asserts [  not (  ]';
            state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '240:808 css__media_in_parenths=>τ( • css__media_condition τ)';
            state.push_fn( branch_6ecaae111f21bbc9, 240 );
            return hc_css__media_condition( state, db, 0 )
        } else if( state.lexer._type  == 170 ){
            'Asserts [  216  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_8a2f9a55c66da970, 240 );
            var fk2 = state.fork( db );;
            fk2.push_fn( branch_82df08eff2757437, 240 );
            state.push_fn( branch_176ef10a2e42454b, 240 );
            return 0
        } else {
            state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '241:811 css__media_feature=>τ( • css__mf_range τ)';
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_range( state, db, 0 )
        }
    } else {
        state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
        '"--LEAF--"';
        '234:792 css__general_enclosed=>• tk:css__identifier τ( css__general_enclosed_list_1466 τ)';
        state.push_fn( set_production /*0*/, 240 );
        return hc_css__general_enclosed( state, db, prod )
    }
};
    return - 1
}

function hc_css__media_condition_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 240: 
            {
                'offset 1 peek_level0 [  and or , ; { END_OF_PRODUCTION )  ]';
                '238:806 css__media_condition_without_or=>css__media_in_parenths •';
                '249:842 css__media_and=>css__media_in_parenths • css__media_and_list_1603';
                '250:843 css__media_or=>css__media_in_parenths • css__media_or_list_1605';
                scan( state.lexer, 507, 9 );
                if( state.lexer._type  == 209 ){
                    'Asserts [  and  ]';
                    state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 237 )*/, 237 );
                    '"--LEAF--"';
                    '249:842 css__media_and=>css__media_in_parenths • css__media_and_list_1603';
                    scan( state.lexer, 509, 24 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_ee257523538089b2, 237 );
                        return hc_css__media_and_list_1603( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 210 ){
                    'Asserts [  or  ]';
                    state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 237 )*/, 237 );
                    '"--LEAF--"';
                    '250:843 css__media_or=>css__media_in_parenths • css__media_or_list_1605';
                    scan( state.lexer, 508, 24 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_ee257523538089b2, 237 );
                        return hc_css__media_or_list_1605( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '238:806 css__media_condition_without_or=>css__media_in_parenths •';
                    scan( state.lexer, 24, 24 );
                    prod = 237;
                    continue
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 237 ) ? prod  : - 1
}

function hc_css__media_condition_without_or(state, db, prod){
    scan( state.lexer, 510, 24 );
    'offset 0 peek_level0 [  not ( 216  ]';
    '238:804 css__media_condition_without_or=>• css__media_not';
    '238:805 css__media_condition_without_or=>• css__media_and';
    '238:806 css__media_condition_without_or=>• css__media_in_parenths';
    if( state.lexer._type  == 168 ){
    'Asserts [  not  ]';
    state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 238 )*/, 238 );
    '"--LEAF--"';
    '238:804 css__media_condition_without_or=>• css__media_not';
    state.push_fn( set_production /*0*/, 238 );
    return hc_css__media_not( state, db, 0 )
} else if( state.lexer._type  == 36 || state.lexer._type  == 170 ){
    'Asserts [  ( 216  ]';
    'offset 2 peek_level0 [  ( 216  ]';
    '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
    '241:811 css__media_feature=>• τ( css__mf_range τ)';
    '241:812 css__media_feature=>• τ( css__mf_plain τ)';
    '241:813 css__media_feature=>• τ( css__mf_boolean τ)';
    '234:792 css__general_enclosed=>• tk:css__identifier τ( css__general_enclosed_list_1466 τ)';
    scan( state.lexer, 505, 24 );
    if( state.lexer._type  == 36 ){
        'Asserts [  (  ]';
        consume( state );
        '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
        'offset 4 peek_level-1 [  (  ]';
        '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
        '241:811 css__media_feature=>• τ( css__mf_range τ)';
        '241:812 css__media_feature=>• τ( css__mf_plain τ)';
        '241:813 css__media_feature=>• τ( css__mf_boolean τ)';
        'offset 5 peek_level0 [  true false not ( 216 num  ]';
        '240:808 css__media_in_parenths=>τ( • css__media_condition τ)';
        '241:811 css__media_feature=>τ( • css__mf_range τ)';
        '241:812 css__media_feature=>τ( • css__mf_plain τ)';
        '241:813 css__media_feature=>τ( • css__mf_boolean τ)';
        scan( state.lexer, 511, 24 );
        if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
            'Asserts [  true false  ]';
            state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '241:813 css__media_feature=>τ( • css__mf_boolean τ)';
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_boolean( state, db, 0 )
        } else if( state.lexer._type  == 168 || state.lexer._type  == 36 ){
            'Asserts [  not (  ]';
            state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '240:808 css__media_in_parenths=>τ( • css__media_condition τ)';
            state.push_fn( branch_6ecaae111f21bbc9, 240 );
            return hc_css__media_condition( state, db, 0 )
        } else if( state.lexer._type  == 170 ){
            'Asserts [  216  ]';
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_7c66f8dfb3cecee6, 240 );
            var fk2 = state.fork( db );;
            fk2.push_fn( branch_a2d1e57f617f7d66, 240 );
            state.push_fn( branch_47ab1f8b0a0727c4, 240 );
            return 0
        } else {
            state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
            '"--LEAF--"';
            '241:811 css__media_feature=>τ( • css__mf_range τ)';
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_range( state, db, 0 )
        }
    } else {
        state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
        '"--LEAF--"';
        '234:792 css__general_enclosed=>• tk:css__identifier τ( css__general_enclosed_list_1466 τ)';
        state.push_fn( set_production /*0*/, 240 );
        return hc_css__general_enclosed( state, db, prod )
    }
};
    return - 1
}

function hc_css__media_condition_without_or_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 240: 
            {
                'offset 1 peek_level0 [  and , ; { ) END_OF_PRODUCTION  ]';
                '249:842 css__media_and=>css__media_in_parenths • css__media_and_list_1603';
                '238:806 css__media_condition_without_or=>css__media_in_parenths •';
                scan( state.lexer, 512, 9 );
                if( state.lexer._type  == 209 ){
                    'Asserts [  and  ]';
                    state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 238 )*/, 238 );
                    '"--LEAF--"';
                    '249:842 css__media_and=>css__media_in_parenths • css__media_and_list_1603';
                    scan( state.lexer, 509, 24 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_ee257523538089b2, 238 );
                        return hc_css__media_and_list_1603( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '238:806 css__media_condition_without_or=>css__media_in_parenths •';
                    scan( state.lexer, 24, 24 );
                    prod = 238;
                    continue
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 238 ) ? prod  : - 1
}

function hc_css__media_not(state, db, prod){
    scan( state.lexer, 513, 24 );
    'offset 0 peek_level-1 [  not  ]';
    '239:807 css__media_not=>• τnot css__media_in_parenths';
    if( state.lexer._type  == 168 ){
    'Assert Consume [  not  ]';
    consume( state );
    '"--LEAF--"';
    '239:807 css__media_not=>τnot • css__media_in_parenths';
    scan( state.lexer, 505, 24 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_76555673d7c8ae6c, 239 );
        return hc_css__media_in_parenths( state, db, 0 )
    }
};
    return - 1
}

function hc_css__media_in_parenths(state, db, prod){
    scan( state.lexer, 505, 24 );
    'offset 0 peek_level0 [  ( 216  ]';
    '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
    '240:809 css__media_in_parenths=>• css__media_feature';
    '240:810 css__media_in_parenths=>• css__general_enclosed';
    if( state.lexer._type  == 36 ){
    'Asserts [  (  ]';
    'offset 0 peek_level1 [  num true false not ( 216  ]';
    '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
    '240:809 css__media_in_parenths=>• css__media_feature';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 511, 24 );
    if( pk._type  == 5 || pk._type  == 101 || pk._type  == 102 ){
        'Asserts [  num true false  ]';
        state.lexer._type  = 36;
        state.push_fn( set_production /*240*/, 240 );
        '"--LEAF--"';
        '240:809 css__media_in_parenths=>• css__media_feature';
        state.push_fn( set_production /*0*/, 240 );
        return hc_css__media_feature( state, db, 0 )
    } else if( pk._type  == 168 || pk._type  == 36 ){
        'Asserts [  not (  ]';
        state.lexer._type  = 36;
        state.push_fn( set_production /*240*/, 240 );
        '"--LEAF--"';
        '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
        consume( state );
        state.push_fn( branch_6ecaae111f21bbc9, 240 );
        return hc_css__media_condition( state, db, 0 )
    } else {
        'offset 0 peek_level2 [  >= > <= < = : (  ]';
        '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
        '240:809 css__media_in_parenths=>• css__media_feature';
        pk.next(  );
        scan( pk, 514, 24 );
        if( isTokenActive( pk._type, 515 ) ){
            'Asserts [  >= > <= < = :  ]';
            state.lexer._type  = 36;
            state.push_fn( set_production /*240*/, 240 );
            '"--LEAF--"';
            '240:809 css__media_in_parenths=>• css__media_feature';
            state.push_fn( set_production /*0*/, 240 );
            return hc_css__media_feature( state, db, 0 )
        } else {
            state.lexer._type  = 36;
            state.push_fn( set_production /*240*/, 240 );
            '"--LEAF--"';
            '240:808 css__media_in_parenths=>• τ( css__media_condition τ)';
            consume( state );
            state.push_fn( branch_6ecaae111f21bbc9, 240 );
            return hc_css__media_condition( state, db, 0 )
        }
    }
} else {
    state.push_fn( set_production /*240*/, 240 );
    '"--LEAF--"';
    '240:810 css__media_in_parenths=>• css__general_enclosed';
    state.push_fn( set_production /*0*/, 240 );
    return hc_css__general_enclosed( state, db, 0 )
};
    return - 1
}

function hc_css__media_feature(state, db, prod){
    scan( state.lexer, 469, 24 );
    'offset 0 peek_level-1 [  (  ]';
    '241:811 css__media_feature=>• τ( css__mf_range τ)';
    '241:812 css__media_feature=>• τ( css__mf_plain τ)';
    '241:813 css__media_feature=>• τ( css__mf_boolean τ)';
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    'offset 1 peek_level0 [  true false 216 num  ]';
    '241:811 css__media_feature=>τ( • css__mf_range τ)';
    '241:812 css__media_feature=>τ( • css__mf_plain τ)';
    '241:813 css__media_feature=>τ( • css__mf_boolean τ)';
    scan( state.lexer, 516, 24 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        'Asserts [  true false  ]';
        state.push_fn( set_production /*241*/, 241 );
        '"--LEAF--"';
        '241:813 css__media_feature=>τ( • css__mf_boolean τ)';
        state.push_fn( branch_40e83532064d58de, 241 );
        return hc_css__mf_boolean( state, db, 0 )
    } else if( state.lexer._type  == 170 ){
        'Asserts [  216  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_04c6b273b0fc55f8, 241 );
        state.push_fn( branch_1861820f7a067d9d, 241 );
        return 0
    } else {
        state.push_fn( set_production /*241*/, 241 );
        '"--LEAF--"';
        '241:811 css__media_feature=>τ( • css__mf_range τ)';
        state.push_fn( branch_40e83532064d58de, 241 );
        return hc_css__mf_range( state, db, 0 )
    }
};
    return - 1
}

function hc_css__mf_plain(state, db, prod){
    '"--LEAF--"';
    '242:814 css__mf_plain=>• css__mf_name τ: css__mf_value';
    state.push_fn( branch_d066281b5241e9c3, 242 );
    return hc_css__mf_name( state, db, 0 )
}

function hc_css__mf_name(state, db, prod){
    scan( state.lexer, 23, 24 );
    'offset 0 peek_level-1 [  216  ]';
    '243:815 css__mf_name=>• tk:css__identifier';
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '243:815 css__mf_name=>tk:css__identifier •';
    scan( state.lexer, 24, 24 );
    return 243
};
    return - 1
}

function hc_css__mf_value(state, db, prod){
    scan( state.lexer, 517, 24 );
    'offset 0 peek_level0 [  num 216  ]';
    '244:816 css__mf_value=>• θnum';
    '244:817 css__mf_value=>• css__dimension';
    '244:819 css__mf_value=>• css__ratio';
    '244:818 css__mf_value=>• css__mf_name';
    if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    'offset 0 peek_level1 [  / < > <= >= = ) END_OF_PRODUCTION id  ]';
    '244:816 css__mf_value=>• θnum';
    '244:817 css__mf_value=>• css__dimension';
    '244:819 css__mf_value=>• css__ratio';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 518, 24 );
    if( pk._type  == 10 ){
        'Asserts [  /  ]';
        state.lexer._type  = 5;
        state.push_fn( set_production /*244*/, 244 );
        '"--LEAF--"';
        '244:819 css__mf_value=>• css__ratio';
        state.push_fn( set_production /*0*/, 244 );
        return hc_css__ratio( state, db, 0 )
    } else if( isTokenActive( pk._type, 519 ) ){
        'Asserts [  < > <= >= = ) END_OF_PRODUCTION  ]';
        state.lexer._type  = 5;
        state.push_fn( set_production /*244*/, 244 );
        '"--LEAF--"';
        '244:816 css__mf_value=>• θnum';
        consume( state );
        return 0
    } else {
        state.lexer._type  = 5;
        state.push_fn( set_production /*244*/, 244 );
        '"--LEAF--"';
        '244:817 css__mf_value=>• css__dimension';
        state.push_fn( set_production /*0*/, 244 );
        return hc_css__dimension( state, db, 0 )
    }
} else {
    state.push_fn( set_production /*244*/, 244 );
    '"--LEAF--"';
    '244:818 css__mf_value=>• css__mf_name';
    state.push_fn( set_production /*0*/, 244 );
    return hc_css__mf_name( state, db, 0 )
};
    return - 1
}

function hc_css__dimension(state, db, prod){
    scan( state.lexer, 241, 24 );
    'offset 0 peek_level-1 [  num  ]';
    '245:820 css__dimension=>• θnum θid';
    if( state.lexer._type  == 5 ){
    'Assert Consume [  num  ]';
    consume( state );
    '"--LEAF--"';
    '245:820 css__dimension=>θnum • θid';
    scan( state.lexer, 239, 24 );
    if( ( state.lexer._type  == 3 ) ){
        consume( state );
        add_reduce( state, 2, 323 );
        return 245
    }
};
    return - 1
}

function hc_css__ratio(state, db, prod){
    scan( state.lexer, 241, 24 );
    'offset 0 peek_level-1 [  num  ]';
    '246:821 css__ratio=>• θnum τ/ θnum';
    if( state.lexer._type  == 5 ){
    'Assert Consume [  num  ]';
    consume( state );
    '"--LEAF--"';
    '246:821 css__ratio=>θnum • τ/ θnum';
    scan( state.lexer, 520, 24 );
    if( ( state.lexer._type  == 10 ) ){
        consume( state );
        scan( state.lexer, 241, 24 );
        if( ( state.lexer._type  == 5 ) ){
            consume( state );
            add_reduce( state, 3, 324 );
            return 246
        }
    }
};
    return - 1
}

function hc_css__mf_boolean(state, db, prod){
    scan( state.lexer, 521, 24 );
    'offset 0 peek_level-1 [  true false  ]';
    '247:822 css__mf_boolean=>• τtrue';
    '247:823 css__mf_boolean=>• τfalse';
    if( state.lexer._type  == 101 ){
    'Asserts [  true  ]';
    state.push_fn( set_production /*247*/, 247 );
    '"--LEAF--"';
    '247:822 css__mf_boolean=>• τtrue';
    consume( state );
    add_reduce( state, 1, 325 );
    return 0
} else if( state.lexer._type  == 102 ){
    'Asserts [  false  ]';
    state.push_fn( set_production /*247*/, 247 );
    '"--LEAF--"';
    '247:823 css__mf_boolean=>• τfalse';
    consume( state );
    add_reduce( state, 1, 326 );
    return 0
};
    return - 1
}

function hc_css__mf_range(state, db, prod){
    scan( state.lexer, 517, 24 );
    'offset 0 peek_level0 [  216 num  ]';
    '243:815 css__mf_name=>• tk:css__identifier';
    '248:825 css__mf_range=>• css__mf_value τ= css__mf_name';
    '248:826 css__mf_range=>• css__mf_value τ>= tk:css__identifier τ>= css__mf_value';
    '248:827 css__mf_range=>• css__mf_value τ<= tk:css__identifier τ<= css__mf_value';
    '248:832 css__mf_range=>• css__mf_value τ< css__mf_name';
    '248:833 css__mf_range=>• css__mf_value τ<= css__mf_name';
    '248:834 css__mf_range=>• css__mf_value τ> css__mf_name';
    '248:835 css__mf_range=>• css__mf_value τ>= css__mf_name';
    '248:836 css__mf_range=>• css__mf_value τ> tk:css__identifier τ>= css__mf_value';
    '248:837 css__mf_range=>• css__mf_value τ>= tk:css__identifier τ> css__mf_value';
    '248:838 css__mf_range=>• css__mf_value τ< tk:css__identifier τ<= css__mf_value';
    '248:839 css__mf_range=>• css__mf_value τ<= tk:css__identifier τ< css__mf_value';
    '248:840 css__mf_range=>• css__mf_value τ> tk:css__identifier τ> css__mf_value';
    '248:841 css__mf_range=>• css__mf_value τ< tk:css__identifier τ< css__mf_value';
    if( state.lexer._type  == 170 ){
    'Asserts [  216  ]';
    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 243 )*/, 243 );
    '"--LEAF--"';
    '243:815 css__mf_name=>• tk:css__identifier';
    state.push_fn( set_production /*0*/, 243 );
    return hc_css__mf_name( state, db, prod )
} else {
    'offset 2 peek_level-1 [  244  ]';
    '248:825 css__mf_range=>• css__mf_value τ= css__mf_name';
    '248:826 css__mf_range=>• css__mf_value τ>= tk:css__identifier τ>= css__mf_value';
    '248:827 css__mf_range=>• css__mf_value τ<= tk:css__identifier τ<= css__mf_value';
    '248:832 css__mf_range=>• css__mf_value τ< css__mf_name';
    '248:833 css__mf_range=>• css__mf_value τ<= css__mf_name';
    '248:834 css__mf_range=>• css__mf_value τ> css__mf_name';
    '248:835 css__mf_range=>• css__mf_value τ>= css__mf_name';
    '248:836 css__mf_range=>• css__mf_value τ> tk:css__identifier τ>= css__mf_value';
    '248:837 css__mf_range=>• css__mf_value τ>= tk:css__identifier τ> css__mf_value';
    '248:838 css__mf_range=>• css__mf_value τ< tk:css__identifier τ<= css__mf_value';
    '248:839 css__mf_range=>• css__mf_value τ<= tk:css__identifier τ< css__mf_value';
    '248:840 css__mf_range=>• css__mf_value τ> tk:css__identifier τ> css__mf_value';
    '248:841 css__mf_range=>• css__mf_value τ< tk:css__identifier τ< css__mf_value';
    scan( state.lexer, 517, 24 );
    state.push_fn( branch_799342b36a99fa4d, 0 );
    return hc_css__mf_value( state, db, 0 )
};
    return - 1
}

function hc_css__mf_range_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 243: 
            {
                'offset 1 peek_level0 [  = < > <= >= ) END_OF_PRODUCTION  ]';
                '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                '244:818 css__mf_value=>css__mf_name •';
                '248:828 css__mf_range=>css__mf_name • τ< css__mf_value';
                '248:830 css__mf_range=>css__mf_name • τ> css__mf_value';
                '248:829 css__mf_range=>css__mf_name • τ<= css__mf_value';
                '248:831 css__mf_range=>css__mf_name • τ>= css__mf_value';
                scan( state.lexer, 118, 24 );
                if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    'offset 1 peek_level1 [  num 216  ]';
                    '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                    '244:818 css__mf_value=>css__mf_name •';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 517, 24 );
                    if( pk._type  == 5 ){
                        'Asserts [  num  ]';
                        state.lexer._type  = 14;
                        state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                        '"--LEAF--"';
                        '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                        scan( state.lexer, 522, 24 );
                        consume( state );
                        state.push_fn( branch_0d049e4db4484b03, 248 );
                        return hc_css__mf_value( state, db, 0 )
                    } else if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        'offset 1 peek_level2 [  >= > <= < = ) END_OF_PRODUCTION  ]';
                        '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                        '244:818 css__mf_value=>css__mf_name •';
                        pk.next(  );
                        scan( pk, 118, 24 );
                        if( isTokenActive( pk._type, 523 ) ){
                            'Asserts [  >= > <= < =  ]';
                            'offset 1 peek_level3 [  num 216  ]';
                            '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                            '244:818 css__mf_value=>css__mf_name •';
                            pk.next(  );
                            scan( pk, 517, 24 );
                            if( pk._type  == 5 || pk._type  == 170 ){
                                'Asserts [  num 216  ]';
                                'offset 1 peek_level4 [  ) END_OF_PRODUCTION = >= <= < > id /  ]';
                                '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                                '244:818 css__mf_value=>css__mf_name •';
                                pk.next(  );
                                scan( pk, 518, 24 );
                                if( pk._type  == 113 || pk._type  == - 1 ){
                                    'Asserts [  ) END_OF_PRODUCTION  ]';
                                    state.lexer._type  = 14;
                                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                                    '"--LEAF--"';
                                    '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                                    scan( state.lexer, 522, 24 );
                                    consume( state );
                                    state.push_fn( branch_0d049e4db4484b03, 248 );
                                    return hc_css__mf_value( state, db, 0 )
                                } else if( isTokenActive( pk._type, 524 ) ){
                                    'Asserts [  = >= <= < > id /  ]';
                                    'offset 1 peek_level5 [  216  ]';
                                    '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                                    pk.next(  );
                                    scan( pk, 23, 24 );
                                    if( pk._type  == 170 ){
                                        'Asserts [  216  ]';
                                        state.lexer._type  = 14;
                                        state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                                        '"--LEAF--"';
                                        '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                                        scan( state.lexer, 522, 24 );
                                        consume( state );
                                        state.push_fn( branch_0d049e4db4484b03, 248 );
                                        return hc_css__mf_value( state, db, 0 )
                                    }
                                }
                            }
                        } else if( pk._type  == 113 || pk._type  == - 1 ){
                            'Asserts [  ) END_OF_PRODUCTION  ]';
                            state.lexer._type  = 14;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            '"--LEAF--"';
                            '248:824 css__mf_range=>css__mf_name • τ= css__mf_value';
                            scan( state.lexer, 522, 24 );
                            consume( state );
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_value( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    'offset 1 peek_level1 [  216 num  ]';
                    '248:828 css__mf_range=>css__mf_name • τ< css__mf_value';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 517, 24 );
                    if( pk._type  == 170 || pk._type  == 5 ){
                        'Asserts [  216 num  ]';
                        state.lexer._type  = 27;
                        state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                        '"--LEAF--"';
                        '248:828 css__mf_range=>css__mf_name • τ< css__mf_value';
                        scan( state.lexer, 107, 24 );
                        consume( state );
                        state.push_fn( branch_0d049e4db4484b03, 248 );
                        return hc_css__mf_value( state, db, 0 )
                    }
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    '"--LEAF--"';
                    '248:830 css__mf_range=>css__mf_name • τ> css__mf_value';
                    scan( state.lexer, 66, 24 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_value( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    '"--LEAF--"';
                    '248:829 css__mf_range=>css__mf_name • τ<= css__mf_value';
                    scan( state.lexer, 25, 24 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_value( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    '"--LEAF--"';
                    '248:831 css__mf_range=>css__mf_name • τ>= css__mf_value';
                    scan( state.lexer, 96, 24 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_value( state, db, 0 )
                } else {
                    '"--LEAF--"';
                    '244:818 css__mf_value=>css__mf_name •';
                    scan( state.lexer, 24, 24 );
                    prod = 244;
                    continue
                };
                break
            }
            break;
            case 244: 
            {
                'offset 1 peek_level-1 [  = >= < <= >  ]';
                '248:825 css__mf_range=>css__mf_value • τ= css__mf_name';
                '248:826 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ>= css__mf_value';
                '248:835 css__mf_range=>css__mf_value • τ>= css__mf_name';
                '248:837 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ> css__mf_value';
                '248:827 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ<= css__mf_value';
                '248:833 css__mf_range=>css__mf_value • τ<= css__mf_name';
                '248:839 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ< css__mf_value';
                '248:832 css__mf_range=>css__mf_value • τ< css__mf_name';
                '248:838 css__mf_range=>css__mf_value • τ< tk:css__identifier τ<= css__mf_value';
                '248:841 css__mf_range=>css__mf_value • τ< tk:css__identifier τ< css__mf_value';
                '248:834 css__mf_range=>css__mf_value • τ> css__mf_name';
                '248:836 css__mf_range=>css__mf_value • τ> tk:css__identifier τ>= css__mf_value';
                '248:840 css__mf_range=>css__mf_value • τ> tk:css__identifier τ> css__mf_value';
                scan( state.lexer, 117, 24 );
                if( state.lexer._type  == 14 ){
                    'Asserts [  =  ]';
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    '"--LEAF--"';
                    '248:825 css__mf_range=>css__mf_value • τ= css__mf_name';
                    scan( state.lexer, 522, 24 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_name( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    'Asserts [  >=  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 3 peek_level-1 [  >=  ]';
                    '248:826 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ>= css__mf_value';
                    '248:835 css__mf_range=>css__mf_value • τ>= css__mf_name';
                    '248:837 css__mf_range=>css__mf_value • τ>= tk:css__identifier τ> css__mf_value';
                    'offset 4 peek_level0 [  216  ]';
                    '248:826 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ>= css__mf_value';
                    '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
                    '248:837 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ> css__mf_value';
                    scan( state.lexer, 23, 24 );
                    if( state.lexer._type  == 170 ){
                        'Asserts [  216  ]';
                        'offset 4 peek_level1 [  > >= ) END_OF_PRODUCTION <= < =  ]';
                        '248:826 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ>= css__mf_value';
                        '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
                        '248:837 css__mf_range=>css__mf_value τ>= • tk:css__identifier τ> css__mf_value';
                        var pk = state.lexer.copy_in_place(  );;
                        pk.next(  );
                        scan( pk, 118, 24 );
                        if( pk._type  == 11 ){
                            'Asserts [  >  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_cb167a3f9f07927a, 248 );
                            state.push_fn( branch_5167975d1d79c9c4, 248 );
                            return 0
                        } else if( pk._type  == 81 ){
                            'Asserts [  >=  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_a19db9d6844f32b3, 248 );
                            state.push_fn( branch_5167975d1d79c9c4, 248 );
                            return 0
                        } else {
                            state.lexer._type  = 170;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            '"--LEAF--"';
                            '248:835 css__mf_range=>css__mf_value τ>= • css__mf_name';
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_name( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 27 ){
                    'Asserts [  <  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 3 peek_level-1 [  <  ]';
                    '248:832 css__mf_range=>css__mf_value • τ< css__mf_name';
                    '248:838 css__mf_range=>css__mf_value • τ< tk:css__identifier τ<= css__mf_value';
                    '248:841 css__mf_range=>css__mf_value • τ< tk:css__identifier τ< css__mf_value';
                    'offset 4 peek_level0 [  216  ]';
                    '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
                    '248:838 css__mf_range=>css__mf_value τ< • tk:css__identifier τ<= css__mf_value';
                    '248:841 css__mf_range=>css__mf_value τ< • tk:css__identifier τ< css__mf_value';
                    scan( state.lexer, 23, 24 );
                    if( state.lexer._type  == 170 ){
                        'Asserts [  216  ]';
                        'offset 4 peek_level1 [  < <= ) END_OF_PRODUCTION >= > =  ]';
                        '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
                        '248:838 css__mf_range=>css__mf_value τ< • tk:css__identifier τ<= css__mf_value';
                        '248:841 css__mf_range=>css__mf_value τ< • tk:css__identifier τ< css__mf_value';
                        var pk = state.lexer.copy_in_place(  );;
                        pk.next(  );
                        scan( pk, 118, 24 );
                        if( pk._type  == 27 ){
                            'Asserts [  <  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_b7fd124f92fb523a, 248 );
                            state.push_fn( branch_3a05440f227854dd, 248 );
                            return 0
                        } else if( pk._type  == 80 ){
                            'Asserts [  <=  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_9891863a03e0793d, 248 );
                            state.push_fn( branch_3a05440f227854dd, 248 );
                            return 0
                        } else {
                            state.lexer._type  = 170;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            '"--LEAF--"';
                            '248:832 css__mf_range=>css__mf_value τ< • css__mf_name';
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_name( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 80 ){
                    'Asserts [  <=  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 3 peek_level-1 [  <=  ]';
                    '248:827 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ<= css__mf_value';
                    '248:833 css__mf_range=>css__mf_value • τ<= css__mf_name';
                    '248:839 css__mf_range=>css__mf_value • τ<= tk:css__identifier τ< css__mf_value';
                    'offset 4 peek_level0 [  216  ]';
                    '248:827 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ<= css__mf_value';
                    '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
                    '248:839 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ< css__mf_value';
                    scan( state.lexer, 23, 24 );
                    if( state.lexer._type  == 170 ){
                        'Asserts [  216  ]';
                        'offset 4 peek_level1 [  < <= ) END_OF_PRODUCTION >= > =  ]';
                        '248:827 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ<= css__mf_value';
                        '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
                        '248:839 css__mf_range=>css__mf_value τ<= • tk:css__identifier τ< css__mf_value';
                        var pk = state.lexer.copy_in_place(  );;
                        pk.next(  );
                        scan( pk, 118, 24 );
                        if( pk._type  == 27 ){
                            'Asserts [  <  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_597361ab2fc7ae53, 248 );
                            state.push_fn( branch_7023c83870a619b8, 248 );
                            return 0
                        } else if( pk._type  == 80 ){
                            'Asserts [  <=  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_af5a47252c447dea, 248 );
                            state.push_fn( branch_7023c83870a619b8, 248 );
                            return 0
                        } else {
                            state.lexer._type  = 170;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            '"--LEAF--"';
                            '248:833 css__mf_range=>css__mf_value τ<= • css__mf_name';
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_name( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 11 ){
                    'Asserts [  >  ]';
                    consume( state );
                    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
                    'offset 3 peek_level-1 [  >  ]';
                    '248:834 css__mf_range=>css__mf_value • τ> css__mf_name';
                    '248:836 css__mf_range=>css__mf_value • τ> tk:css__identifier τ>= css__mf_value';
                    '248:840 css__mf_range=>css__mf_value • τ> tk:css__identifier τ> css__mf_value';
                    'offset 4 peek_level0 [  216  ]';
                    '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
                    '248:836 css__mf_range=>css__mf_value τ> • tk:css__identifier τ>= css__mf_value';
                    '248:840 css__mf_range=>css__mf_value τ> • tk:css__identifier τ> css__mf_value';
                    scan( state.lexer, 23, 24 );
                    if( state.lexer._type  == 170 ){
                        'Asserts [  216  ]';
                        'offset 4 peek_level1 [  > >= ) END_OF_PRODUCTION <= < =  ]';
                        '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
                        '248:836 css__mf_range=>css__mf_value τ> • tk:css__identifier τ>= css__mf_value';
                        '248:840 css__mf_range=>css__mf_value τ> • tk:css__identifier τ> css__mf_value';
                        var pk = state.lexer.copy_in_place(  );;
                        pk.next(  );
                        scan( pk, 118, 24 );
                        if( pk._type  == 11 ){
                            'Asserts [  >  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_d34fa5c5e0e9d678, 248 );
                            state.push_fn( branch_b88a2a5e5e3bb6c7, 248 );
                            return 0
                        } else if( pk._type  == 81 ){
                            'Asserts [  >=  ]';
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_48a1dc14a604cb43, 248 );
                            state.push_fn( branch_b88a2a5e5e3bb6c7, 248 );
                            return 0
                        } else {
                            state.lexer._type  = 170;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            '"--LEAF--"';
                            '248:834 css__mf_range=>css__mf_value τ> • css__mf_name';
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_name( state, db, 0 )
                        }
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 248 ) ? prod  : - 1
}

function hc_css__media_and(state, db, prod){
    '"--LEAF--"';
    '249:842 css__media_and=>• css__media_in_parenths css__media_and_list_1603';
    state.push_fn( branch_31caa6b293f83425, 249 );
    return hc_css__media_in_parenths( state, db, 0 )
}

function hc_css__media_or(state, db, prod){
    '"--LEAF--"';
    '250:843 css__media_or=>• css__media_in_parenths css__media_or_list_1605';
    state.push_fn( branch_3ebe4858b661669c, 250 );
    return hc_css__media_in_parenths( state, db, 0 )
}

function hc_css__media_type(state, db, prod){
    scan( state.lexer, 23, 24 );
    'offset 0 peek_level-1 [  216  ]';
    '251:844 css__media_type=>• tk:css__identifier';
    if( state.lexer._type  == 170 ){
    'Assert Consume [  216  ]';
    consume( state );
    '"--LEAF--"';
    '251:844 css__media_type=>tk:css__identifier •';
    scan( state.lexer, 24, 24 );
    add_reduce( state, 1, 330 );
    return 251
};
    return - 1
}

function hc_css__STYLE_RULE(state, db, prod){
    'offset 0 peek_level-1 [  306  ]';
    '252:845 css__STYLE_RULE=>• css__STYLE_RULE_list_1607 τ{ css__declaration_list css__STYLE_RULE_list_1610 τ}';
    '252:846 css__STYLE_RULE=>• css__STYLE_RULE_list_1607 τ{ css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>• css__STYLE_RULE_list_1607 τ{ css__declaration_list τ}';
    '252:848 css__STYLE_RULE=>• css__STYLE_RULE_list_1607 τ{ τ}';
    state.push_fn( branch_50b33ac79bba457f, 0 );
    return hc_css__STYLE_RULE_list_1607( state, db, 0 )
}

function hc_css__declaration_list(state, db, prod){
    scan( state.lexer, 50, 24 );
    'offset 0 peek_level0 [  ; 230  ]';
    '253:849 css__declaration_list=>• css__STYLE_RULE_list_1610 css__declaration';
    '253:851 css__declaration_list=>• css__declaration';
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    state.push_fn( hc_css__declaration_list_goto /*hc_css__declaration_list_goto( state, db, 253 )*/, 253 );
    '"--LEAF--"';
    '253:849 css__declaration_list=>• css__STYLE_RULE_list_1610 css__declaration';
    state.push_fn( branch_18f55b22f3445351, 253 );
    return hc_css__STYLE_RULE_list_1610( state, db, 0 )
} else {
    state.push_fn( hc_css__declaration_list_goto /*hc_css__declaration_list_goto( state, db, 253 )*/, 253 );
    '"--LEAF--"';
    '253:851 css__declaration_list=>• css__declaration';
    state.push_fn( branch_5cb267bf74038e65, 253 );
    return hc_css__declaration( state, db, 0 )
};
    return - 1
}

function hc_css__declaration_list_goto(state, db, prod){
    'offset 1 peek_level0 [  ; }  ]';
    '253:850 css__declaration_list=>css__declaration_list • css__declaration_list_group_1615_0_';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • css__STYLE_RULE_list_1610 τ}';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ; τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • τ}';
    '260:867 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ}';
    scan( state.lexer, 47, 9 );
    if( state.lexer._type  == 17 ){
    'Asserts [  ;  ]';
    'offset 1 peek_level1 [  } ; 230 END_OF_PRODUCTION  ]';
    '253:850 css__declaration_list=>css__declaration_list • css__declaration_list_group_1615_0_';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list • css__STYLE_RULE_list_1610 τ}';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 τ{ css__declaration_list • τ; τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 95, 9 );
    if( pk._type  == 18 ){
        'Asserts [  }  ]';
        '"--LEAF--"';
        '"--leafy--"';
        return 253
    } else if( pk._type  == 17 || pk._type  == 176 ){
        'Asserts [  ; 230  ]';
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_59e0a72b9bdd04f5, 253 );
        state.push_fn( branch_de9917e08ce698f5, 253 );
        return 0
    } else if( pk._type  == - 1 ){
        'Asserts [  END_OF_PRODUCTION  ]';
        state.lexer._type  = 17;
        state.push_fn( hc_css__declaration_list_goto /*hc_css__declaration_list_goto( state, db, 253 )*/, 253 );
        '"--LEAF--"';
        '253:850 css__declaration_list=>css__declaration_list • css__declaration_list_group_1615_0_';
        scan( state.lexer, 163, 24 );
        if( ( state.lexer._type  == 17 ) ){
            state.push_fn( branch_0eccb3f60187246e, 253 );
            return hc_css__declaration_list_group_1615_0_( state, db, 0 )
        };
        return - 1
    }
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 253
};
    return ( prod  == 253 ) ? prod  : - 1
}

function hc_css__AT_RULE(state, db, prod){
    scan( state.lexer, 525, 24 );
    'offset 0 peek_level0 [  @media @keyframes @supports  ]';
    '254:852 css__AT_RULE=>• css__media τ;';
    '254:855 css__AT_RULE=>• css__media';
    '254:853 css__AT_RULE=>• css__keyframes τ;';
    '254:856 css__AT_RULE=>• css__keyframes';
    '254:854 css__AT_RULE=>• css__supports τ;';
    '254:857 css__AT_RULE=>• css__supports';
    if( state.lexer._type  == 180 ){
    'Asserts [  @media  ]';
    'offset 2 peek_level-1 [  255  ]';
    '254:852 css__AT_RULE=>• css__media τ;';
    '254:855 css__AT_RULE=>• css__media';
    scan( state.lexer, 526, 24 );
    state.push_fn( branch_3d6c5f5e0eea984a, 0 );
    return hc_css__media( state, db, 0 )
} else if( state.lexer._type  == 181 ){
    'Asserts [  @keyframes  ]';
    'offset 2 peek_level-1 [  258  ]';
    '254:853 css__AT_RULE=>• css__keyframes τ;';
    '254:856 css__AT_RULE=>• css__keyframes';
    scan( state.lexer, 527, 24 );
    state.push_fn( branch_09da1ad173d333a8, 0 );
    return hc_css__keyframes( state, db, 0 )
} else {
    'offset 2 peek_level-1 [  263  ]';
    '254:854 css__AT_RULE=>• css__supports τ;';
    '254:857 css__AT_RULE=>• css__supports';
    scan( state.lexer, 528, 24 );
    state.push_fn( branch_a8c1480cdd56a687, 0 );
    return hc_css__supports( state, db, 0 )
};
    return - 1
}

function hc_css__media(state, db, prod){
    scan( state.lexer, 526, 24 );
    'offset 0 peek_level-1 [  @media  ]';
    '255:858 css__media=>• τ@media css__media_queries τ{ css__GROUP_RULE_BODY τ}';
    '255:859 css__media=>• τ@media css__media_queries τ{ τ}';
    if( state.lexer._type  == 180 ){
    'Assert Consume [  @media  ]';
    consume( state );
    'offset 1 peek_level-1 [  256  ]';
    '255:858 css__media=>τ@media • css__media_queries τ{ css__GROUP_RULE_BODY τ}';
    '255:859 css__media=>τ@media • css__media_queries τ{ τ}';
    scan( state.lexer, 504, 24 );
    state.push_fn( branch_4b6222b74c9bae59, 0 );
    return hc_css__media_queries( state, db, 0 )
};
    return - 1
}

function hc_css__media_queries(state, db, prod){
    '"--LEAF--"';
    '256:860 css__media_queries=>• css__import_list_1289';
    state.push_fn( branch_ae070c57f7da2b64, 256 );
    return hc_css__import_list_1289( state, db, 0 )
}

function hc_css__GROUP_RULE_BODY(state, db, prod){
    '"--LEAF--"';
    '257:861 css__GROUP_RULE_BODY=>• css__STYLE_RULE';
    state.push_fn( branch_af679ef3125e0c9b, 257 );
    return hc_css__STYLE_RULE( state, db, 0 )
}

function hc_css__GROUP_RULE_BODY_goto(state, db, prod){
    'offset 1 peek_level0 [  * 216 # . [ : }  ]';
    '257:862 css__GROUP_RULE_BODY=>css__GROUP_RULE_BODY • css__STYLE_RULE';
    '255:858 css__media=>τ@media css__media_queries τ{ css__GROUP_RULE_BODY • τ}';
    '263:872 css__supports=>τ@supports css__supports_group_1652_0_ τ{ css__GROUP_RULE_BODY • τ}';
    scan( state.lexer, 529, 9 );
    if( isTokenActive( state.lexer._type, 98 ) ){
    'Asserts [  * 216 # . [ :  ]';
    state.push_fn( hc_css__GROUP_RULE_BODY_goto /*hc_css__GROUP_RULE_BODY_goto( state, db, 257 )*/, 257 );
    '"--LEAF--"';
    '257:862 css__GROUP_RULE_BODY=>css__GROUP_RULE_BODY • css__STYLE_RULE';
    scan( state.lexer, 475, 24 );
    if( ( isTokenActive( state.lexer._type, 98 ) ) ){
        state.push_fn( branch_449740ceb8df7fb1, 257 );
        return hc_css__STYLE_RULE( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    'Asserts [  }  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 257
};
    return ( prod  == 257 ) ? prod  : - 1
}

function hc_css__keyframes(state, db, prod){
    scan( state.lexer, 527, 24 );
    'offset 0 peek_level-1 [  @keyframes  ]';
    '258:863 css__keyframes=>• τ@keyframes css__keyframes_name τ{ css__keyframes_list_1637 τ}';
    if( state.lexer._type  == 181 ){
    'Assert Consume [  @keyframes  ]';
    consume( state );
    '"--LEAF--"';
    '258:863 css__keyframes=>τ@keyframes • css__keyframes_name τ{ css__keyframes_list_1637 τ}';
    scan( state.lexer, 530, 24 );
    if( ( state.lexer._type  == 3 || state.lexer._type  == 33 || state.lexer._type  == 32 ) ){
        state.push_fn( branch_0ca47ff3bbf8ae05, 258 );
        return hc_css__keyframes_name( state, db, 0 )
    }
};
    return - 1
}

function hc_css__keyframes_name(state, db, prod){
    scan( state.lexer, 530, 24 );
    'offset 0 peek_level-1 [  " " id  ]';
    '259:864 css__keyframes_name=>• θid';
    '259:865 css__keyframes_name=>• css__string';
    if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
    'Asserts [  " "  ]';
    state.push_fn( set_production /*259*/, 259 );
    '"--LEAF--"';
    '259:865 css__keyframes_name=>• css__string';
    state.push_fn( set_production /*0*/, 259 );
    return hc_css__string( state, db, 0 )
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( set_production /*259*/, 259 );
    '"--LEAF--"';
    '259:864 css__keyframes_name=>• θid';
    consume( state );
    return 0
};
    return - 1
}

function hc_css__keyframes_blocks(state, db, prod){
    'offset 0 peek_level-1 [  310  ]';
    '260:866 css__keyframes_blocks=>• css__keyframes_blocks_list_1641 τ{ css__declaration_list τ; τ}';
    '260:867 css__keyframes_blocks=>• css__keyframes_blocks_list_1641 τ{ css__declaration_list τ}';
    state.push_fn( branch_2071c9676039a462, 0 );
    return hc_css__keyframes_blocks_list_1641( state, db, 0 )
}

function hc_css__keyframe_selector(state, db, prod){
    scan( state.lexer, 531, 24 );
    'offset 0 peek_level-1 [  from to num  ]';
    '261:868 css__keyframe_selector=>• τfrom';
    '261:869 css__keyframe_selector=>• τto';
    '261:870 css__keyframe_selector=>• css__percentage';
    if( state.lexer._type  == 64 ){
    'Asserts [  from  ]';
    state.push_fn( set_production /*261*/, 261 );
    '"--LEAF--"';
    '261:868 css__keyframe_selector=>• τfrom';
    consume( state );
    add_reduce( state, 1, 340 );
    return 0
} else if( state.lexer._type  == 182 ){
    'Asserts [  to  ]';
    state.push_fn( set_production /*261*/, 261 );
    '"--LEAF--"';
    '261:869 css__keyframe_selector=>• τto';
    consume( state );
    add_reduce( state, 1, 340 );
    return 0
} else {
    state.push_fn( set_production /*261*/, 261 );
    '"--LEAF--"';
    '261:870 css__keyframe_selector=>• css__percentage';
    state.push_fn( branch_5c88b2f13f5585e4, 261 );
    return hc_css__percentage( state, db, 0 )
};
    return - 1
}

function hc_css__percentage(state, db, prod){
    scan( state.lexer, 241, 24 );
    'offset 0 peek_level-1 [  num  ]';
    '262:871 css__percentage=>• θnum τ%';
    if( state.lexer._type  == 5 ){
    'Assert Consume [  num  ]';
    consume( state );
    '"--LEAF--"';
    '262:871 css__percentage=>θnum • τ%';
    scan( state.lexer, 532, 24 );
    if( ( state.lexer._type  == 89 ) ){
        consume( state );
        add_reduce( state, 2, 341 );
        return 262
    }
};
    return - 1
}

function hc_css__supports(state, db, prod){
    scan( state.lexer, 528, 24 );
    'offset 0 peek_level-1 [  @supports  ]';
    '263:872 css__supports=>• τ@supports css__supports_group_1652_0_ τ{ css__GROUP_RULE_BODY τ}';
    '263:873 css__supports=>• τ@supports css__supports_group_1652_0_ τ{ τ}';
    if( state.lexer._type  == 183 ){
    'Assert Consume [  @supports  ]';
    consume( state );
    'offset 1 peek_level-1 [  311  ]';
    '263:872 css__supports=>τ@supports • css__supports_group_1652_0_ τ{ css__GROUP_RULE_BODY τ}';
    '263:873 css__supports=>τ@supports • css__supports_group_1652_0_ τ{ τ}';
    scan( state.lexer, 470, 24 );
    state.push_fn( branch_cf682186ca5859a9, 0 );
    return hc_css__supports_group_1652_0_( state, db, 0 )
};
    return - 1
}

function hc_javascript__script(state, db, prod){
    '"--LEAF--"';
    '264:874 javascript__script=>• javascript__script_body';
    state.push_fn( branch_03197776794950c3, 264 );
    return hc_javascript__script_body( state, db, 0 )
}

function hc_javascript__script_body(state, db, prod){
    '"--LEAF--"';
    '265:875 javascript__script_body=>• javascript__statement_list';
    state.push_fn( set_production /*265*/, 265 );
    return hc_javascript__statement_list( state, db, 0 )
}

function hc_javascript__comment_list_48(state, db, prod){
    scan( state.lexer, 233, 0 );
    'offset 0 peek_level-1 [  sym sp nl id num  ]';
    '266:876 javascript__comment_list_48=>• θsym';
    '266:878 javascript__comment_list_48=>• θsp';
    '266:879 javascript__comment_list_48=>• θnl';
    '266:880 javascript__comment_list_48=>• θid';
    '266:881 javascript__comment_list_48=>• θnum';
    if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:876 javascript__comment_list_48=>• θsym';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:878 javascript__comment_list_48=>• θsp';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:879 javascript__comment_list_48=>• θnl';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:880 javascript__comment_list_48=>• θid';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:881 javascript__comment_list_48=>• θnum';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
};
    return - 1
}

function hc_javascript__comment_list_48_goto(state, db, prod){
    'offset 1 peek_level-1 [  */ sym sp nl id num  ]';
    '266:877 javascript__comment_list_48=>javascript__comment_list_48 • θsym';
    '266:882 javascript__comment_list_48=>javascript__comment_list_48 • θsp';
    '266:883 javascript__comment_list_48=>javascript__comment_list_48 • θnl';
    '266:884 javascript__comment_list_48=>javascript__comment_list_48 • θid';
    '266:885 javascript__comment_list_48=>javascript__comment_list_48 • θnum';
    '7:23 javascript__comment=>τ/* javascript__comment_list_48 • τ*/';
    scan( state.lexer, 232, 0 );
    if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:877 javascript__comment_list_48=>javascript__comment_list_48 • θsym';
    scan( state.lexer, 249, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:882 javascript__comment_list_48=>javascript__comment_list_48 • θsp';
    scan( state.lexer, 9, 89 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:883 javascript__comment_list_48=>javascript__comment_list_48 • θnl';
    scan( state.lexer, 9, 250 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:884 javascript__comment_list_48=>javascript__comment_list_48 • θid';
    scan( state.lexer, 245, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    '"--LEAF--"';
    '266:885 javascript__comment_list_48=>javascript__comment_list_48 • θnum';
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
};
    return ( prod  == 266 ) ? prod  : - 1
}

function hc_javascript__comment_list_51(state, db, prod){
    scan( state.lexer, 233, 89 );
    'offset 0 peek_level-1 [  sym sp id num  ]';
    '267:886 javascript__comment_list_51=>• θsym';
    '267:888 javascript__comment_list_51=>• θsp';
    '267:889 javascript__comment_list_51=>• θid';
    '267:890 javascript__comment_list_51=>• θnum';
    if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:886 javascript__comment_list_51=>• θsym';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:888 javascript__comment_list_51=>• θsp';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:889 javascript__comment_list_51=>• θid';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:890 javascript__comment_list_51=>• θnum';
    consume( state );
    add_reduce( state, 1, 1 );
    return 0
};
    return - 1
}

function hc_javascript__comment_list_51_goto(state, db, prod){
    'offset 1 peek_level-1 [  sym sp id num nl  ]';
    '267:887 javascript__comment_list_51=>javascript__comment_list_51 • θsym';
    '267:891 javascript__comment_list_51=>javascript__comment_list_51 • θsp';
    '267:892 javascript__comment_list_51=>javascript__comment_list_51 • θid';
    '267:893 javascript__comment_list_51=>javascript__comment_list_51 • θnum';
    '7:24 javascript__comment=>τ// javascript__comment_list_51 • θnl';
    scan( state.lexer, 233, 0 );
    if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:887 javascript__comment_list_51=>javascript__comment_list_51 • θsym';
    scan( state.lexer, 249, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:891 javascript__comment_list_51=>javascript__comment_list_51 • θsp';
    scan( state.lexer, 9, 89 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:892 javascript__comment_list_51=>javascript__comment_list_51 • θid';
    scan( state.lexer, 245, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    '"--LEAF--"';
    '267:893 javascript__comment_list_51=>javascript__comment_list_51 • θnum';
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
};
    return ( prod  == 267 ) ? prod  : - 1
}

function hc_html__RESULT_list_72(state, db, prod){
    '"--LEAF--"';
    '268:894 html__RESULT_list_72=>• html__DTD';
    state.push_fn( branch_fac6e057d819742e, 268 );
    return hc_html__DTD( state, db, 0 )
}

function hc_html__RESULT_list_72_goto(state, db, prod){
    'offset 1 peek_level0 [  < <import <!  ]';
    '268:895 html__RESULT_list_72=>html__RESULT_list_72 • html__DTD';
    '11:37 html__RESULT=>html__RESULT_list_72 • html__BODY';
    scan( state.lexer, 242, 9 );
    if( state.lexer._type  == 24 ){
    'Asserts [  <!  ]';
    state.push_fn( hc_html__RESULT_list_72_goto /*hc_html__RESULT_list_72_goto( state, db, 268 )*/, 268 );
    '"--LEAF--"';
    '268:895 html__RESULT_list_72=>html__RESULT_list_72 • html__DTD';
    scan( state.lexer, 243, 9 );
    if( ( state.lexer._type  == 24 ) ){
        state.push_fn( branch_449740ceb8df7fb1, 268 );
        return hc_html__DTD( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 268 ) ? prod  : - 1
}

function hc_html__identifier_list_83(state, db, prod){
    scan( state.lexer, 533, 89 );
    'offset 0 peek_level-1 [  - : num id  ]';
    '269:896 html__identifier_list_83=>• θnum';
    '269:898 html__identifier_list_83=>• θid';
    '269:899 html__identifier_list_83=>• τ-';
    '269:900 html__identifier_list_83=>• τ:';
    if( state.lexer._type  == 88 ){
    'Asserts [  -  ]';
    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
    '"--LEAF--"';
    '269:899 html__identifier_list_83=>• τ-';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 70 ){
    'Asserts [  :  ]';
    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
    '"--LEAF--"';
    '269:900 html__identifier_list_83=>• τ:';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
    '"--LEAF--"';
    '269:896 html__identifier_list_83=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
    '"--LEAF--"';
    '269:898 html__identifier_list_83=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_html__identifier_list_83_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 269: 
            {
                'offset 1 peek_level-1 [  - : num / > /> " " import export END_OF_PRODUCTION 13 id  ]';
                '269:897 html__identifier_list_83=>html__identifier_list_83 • θnum';
                '269:901 html__identifier_list_83=>html__identifier_list_83 • θid';
                '269:902 html__identifier_list_83=>html__identifier_list_83 • τ-';
                '269:903 html__identifier_list_83=>html__identifier_list_83 • τ:';
                '13:41 html__identifier=>θid html__identifier_list_83 •';
                scan( state.lexer, 246, 89 );
                if( state.lexer._type  == 88 ){
                    'Asserts [  -  ]';
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    '"--LEAF--"';
                    '269:902 html__identifier_list_83=>html__identifier_list_83 • τ-';
                    scan( state.lexer, 534, 89 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    '"--LEAF--"';
                    '269:903 html__identifier_list_83=>html__identifier_list_83 • τ:';
                    scan( state.lexer, 535, 89 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 5 ){
                    'Asserts [  num  ]';
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    '"--LEAF--"';
                    '269:897 html__identifier_list_83=>html__identifier_list_83 • θnum';
                    scan( state.lexer, 536, 89 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 3 ){
                    'Asserts [  id  ]';
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    '"--LEAF--"';
                    '269:901 html__identifier_list_83=>html__identifier_list_83 • θid';
                    scan( state.lexer, 537, 89 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 269 ) ? prod  : - 1
}

function hc_html__ATTRIBUTE_group_169_0_(state, db, prod){
    scan( state.lexer, 65, 9 );
    'offset 0 peek_level-1 [  "  ]';
    '270:904 html__ATTRIBUTE_group_169_0_=>• τ" WICK_BINDING τ"';
    '270:905 html__ATTRIBUTE_group_169_0_=>• τ" τ"';
    if( state.lexer._type  == 33 ){
    'Assert Consume [  "  ]';
    consume( state );
    'offset 1 peek_level0 [  { {! "  ]';
    '270:904 html__ATTRIBUTE_group_169_0_=>τ" • WICK_BINDING τ"';
    '270:905 html__ATTRIBUTE_group_169_0_=>τ" • τ"';
    scan( state.lexer, 538, 9 );
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
        'Asserts [  { {!  ]';
        state.push_fn( set_production /*270*/, 270 );
        '"--LEAF--"';
        '270:904 html__ATTRIBUTE_group_169_0_=>τ" • WICK_BINDING τ"';
        state.push_fn( branch_a20c02ef4298dc95, 270 );
        return hc_WICK_BINDING( state, db, 0 )
    } else if( state.lexer._type  == 33 ){
        'Asserts [  "  ]';
        state.push_fn( set_production /*270*/, 270 );
        '"--LEAF--"';
        '270:905 html__ATTRIBUTE_group_169_0_=>τ" • τ"';
        consume( state );
        add_reduce( state, 2, 344 );
        return 0
    }
};
    return - 1
}

function hc_javascript__named_imports_list_331(state, db, prod){
    '"--LEAF--"';
    '271:906 javascript__named_imports_list_331=>• javascript__import_specifier';
    state.push_fn( branch_9af93c66ec6f1e19, 271 );
    return hc_javascript__import_specifier( state, db, 0 )
}

function hc_javascript__named_imports_list_331_goto(state, db, prod){
    'offset 1 peek_level0 [  , }  ]';
    '271:907 javascript__named_imports_list_331=>javascript__named_imports_list_331 • τ, javascript__import_specifier';
    '42:181 javascript__named_imports=>τ{ javascript__named_imports_list_331 • τ, τ}';
    '42:183 javascript__named_imports=>τ{ javascript__named_imports_list_331 • τ}';
    scan( state.lexer, 539, 9 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  } 40  ]';
    '271:907 javascript__named_imports_list_331=>javascript__named_imports_list_331 • τ, javascript__import_specifier';
    '42:181 javascript__named_imports=>τ{ javascript__named_imports_list_331 τ, • τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 540, 11 );
    if( pk._type  == 59 ){
        'Asserts [  40  ]';
        state.lexer._type  = 59;
        state.push_fn( hc_javascript__named_imports_list_331_goto /*hc_javascript__named_imports_list_331_goto( state, db, 271 )*/, 271 );
        '"--LEAF--"';
        '271:907 javascript__named_imports_list_331=>javascript__named_imports_list_331 • τ, javascript__import_specifier';
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 271 );
        return hc_javascript__import_specifier( state, db, 0 )
    }
};
    return ( prod  == 271 ) ? prod  : - 1
}

function hc_javascript__string_literal_list_342(state, db, prod){
    scan( state.lexer, 541, 0 );
    'offset 0 peek_level-1 [  f:s f:sf:s" nl sp sym num id  ]';
    '272:908 javascript__string_literal_list_342=>• τf:sf:s"';
    '272:910 javascript__string_literal_list_342=>• θnl';
    '272:911 javascript__string_literal_list_342=>• θsp';
    '272:912 javascript__string_literal_list_342=>• θsym';
    '272:913 javascript__string_literal_list_342=>• θnum';
    '272:914 javascript__string_literal_list_342=>• θid';
    '272:915 javascript__string_literal_list_342=>• javascript__escaped_sequence';
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:915 javascript__string_literal_list_342=>• javascript__escaped_sequence';
    state.push_fn( branch_a8b263dabb540262, 272 );
    return hc_javascript__escaped_sequence( state, db, 0 )
} else if( state.lexer._type  == 184 ){
    'Asserts [  f:sf:s"  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:908 javascript__string_literal_list_342=>• τf:sf:s"';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:910 javascript__string_literal_list_342=>• θnl';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:911 javascript__string_literal_list_342=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:912 javascript__string_literal_list_342=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:913 javascript__string_literal_list_342=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:914 javascript__string_literal_list_342=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_javascript__string_literal_list_342_goto(state, db, prod){
    'offset 1 peek_level-1 [  f:s f:sf:s" " nl sp sym num id  ]';
    '272:909 javascript__string_literal_list_342=>javascript__string_literal_list_342 • τf:sf:s"';
    '272:916 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θnl';
    '272:917 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θsp';
    '272:918 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θsym';
    '272:919 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θnum';
    '272:920 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θid';
    '272:921 javascript__string_literal_list_342=>javascript__string_literal_list_342 • javascript__escaped_sequence';
    '46:189 javascript__string_literal=>τ" javascript__string_literal_list_342 • τ"';
    scan( state.lexer, 288, 0 );
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:921 javascript__string_literal_list_342=>javascript__string_literal_list_342 • javascript__escaped_sequence';
    scan( state.lexer, 542, 9 );
    if( ( state.lexer._type  == 65 ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 272 );
        return hc_javascript__escaped_sequence( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 184 ){
    'Asserts [  f:sf:s"  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:909 javascript__string_literal_list_342=>javascript__string_literal_list_342 • τf:sf:s"';
    scan( state.lexer, 543, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:916 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θnl';
    scan( state.lexer, 9, 250 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:917 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θsp';
    scan( state.lexer, 9, 89 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:918 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θsym';
    scan( state.lexer, 249, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:919 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θnum';
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    '"--LEAF--"';
    '272:920 javascript__string_literal_list_342=>javascript__string_literal_list_342 • θid';
    scan( state.lexer, 245, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 272 ) ? prod  : - 1
}

function hc_javascript__string_literal_list_345(state, db, prod){
    scan( state.lexer, 544, 0 );
    'offset 0 peek_level-1 [  f:s f:sf:s" nl sp sym num id  ]';
    '273:922 javascript__string_literal_list_345=>• τf:sf:s"';
    '273:924 javascript__string_literal_list_345=>• θnl';
    '273:925 javascript__string_literal_list_345=>• θsp';
    '273:926 javascript__string_literal_list_345=>• θsym';
    '273:927 javascript__string_literal_list_345=>• θnum';
    '273:928 javascript__string_literal_list_345=>• θid';
    '273:929 javascript__string_literal_list_345=>• javascript__escaped_sequence';
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:929 javascript__string_literal_list_345=>• javascript__escaped_sequence';
    state.push_fn( branch_a8b263dabb540262, 273 );
    return hc_javascript__escaped_sequence( state, db, 0 )
} else if( state.lexer._type  == 185 ){
    'Asserts [  f:sf:s"  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:922 javascript__string_literal_list_345=>• τf:sf:s"';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:924 javascript__string_literal_list_345=>• θnl';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:925 javascript__string_literal_list_345=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:926 javascript__string_literal_list_345=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:927 javascript__string_literal_list_345=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:928 javascript__string_literal_list_345=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_javascript__string_literal_list_345_goto(state, db, prod){
    'offset 1 peek_level-1 [  f:s f:sf:s" " nl sp sym num id  ]';
    '273:923 javascript__string_literal_list_345=>javascript__string_literal_list_345 • τf:sf:s"';
    '273:930 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θnl';
    '273:931 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θsp';
    '273:932 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θsym';
    '273:933 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θnum';
    '273:934 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θid';
    '273:935 javascript__string_literal_list_345=>javascript__string_literal_list_345 • javascript__escaped_sequence';
    '46:190 javascript__string_literal=>τ" javascript__string_literal_list_345 • τ"';
    scan( state.lexer, 289, 0 );
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:935 javascript__string_literal_list_345=>javascript__string_literal_list_345 • javascript__escaped_sequence';
    scan( state.lexer, 542, 9 );
    if( ( state.lexer._type  == 65 ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 273 );
        return hc_javascript__escaped_sequence( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 185 ){
    'Asserts [  f:sf:s"  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:923 javascript__string_literal_list_345=>javascript__string_literal_list_345 • τf:sf:s"';
    scan( state.lexer, 545, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:930 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θnl';
    scan( state.lexer, 9, 250 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:931 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θsp';
    scan( state.lexer, 9, 89 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:932 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θsym';
    scan( state.lexer, 249, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:933 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θnum';
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    '"--LEAF--"';
    '273:934 javascript__string_literal_list_345=>javascript__string_literal_list_345 • θid';
    scan( state.lexer, 245, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 273 ) ? prod  : - 1
}

function hc_javascript__export_clause_list_399(state, db, prod){
    '"--LEAF--"';
    '274:936 javascript__export_clause_list_399=>• javascript__export_specifier';
    state.push_fn( branch_89ea6217e293f3ca, 274 );
    return hc_javascript__export_specifier( state, db, 0 )
}

function hc_javascript__export_clause_list_399_goto(state, db, prod){
    'offset 1 peek_level0 [  , }  ]';
    '274:937 javascript__export_clause_list_399=>javascript__export_clause_list_399 • τ, javascript__export_specifier';
    '50:210 javascript__export_clause=>τ{ javascript__export_clause_list_399 • τ, τ}';
    '50:212 javascript__export_clause=>τ{ javascript__export_clause_list_399 • τ}';
    scan( state.lexer, 539, 9 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    'offset 3 peek_level1 [  } 40  ]';
    '274:937 javascript__export_clause_list_399=>javascript__export_clause_list_399 • τ, javascript__export_specifier';
    '50:210 javascript__export_clause=>τ{ javascript__export_clause_list_399 τ, • τ}';
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 540, 11 );
    if( pk._type  == 59 ){
        'Asserts [  40  ]';
        state.lexer._type  = 59;
        state.push_fn( hc_javascript__export_clause_list_399_goto /*hc_javascript__export_clause_list_399_goto( state, db, 274 )*/, 274 );
        '"--LEAF--"';
        '274:937 javascript__export_clause_list_399=>javascript__export_clause_list_399 • τ, javascript__export_specifier';
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 274 );
        return hc_javascript__export_specifier( state, db, 0 )
    }
};
    return ( prod  == 274 ) ? prod  : - 1
}

function hc_javascript__scientific_token_group_593_0_(state, db, prod){
    scan( state.lexer, 546, 9 );
    'offset 0 peek_level0 [  E e  ]';
    '275:938 javascript__scientific_token_group_593_0_=>• τE τ- javascript__int_token';
    '275:940 javascript__scientific_token_group_593_0_=>• τE javascript__int_token';
    '275:939 javascript__scientific_token_group_593_0_=>• τe τ- javascript__int_token';
    '275:941 javascript__scientific_token_group_593_0_=>• τe javascript__int_token';
    if( state.lexer._type  == 186 ){
    'Asserts [  E  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  E  ]';
    '275:938 javascript__scientific_token_group_593_0_=>• τE τ- javascript__int_token';
    '275:940 javascript__scientific_token_group_593_0_=>• τE javascript__int_token';
    'offset 3 peek_level-1 [  - num  ]';
    '275:938 javascript__scientific_token_group_593_0_=>τE • τ- javascript__int_token';
    '275:940 javascript__scientific_token_group_593_0_=>τE • javascript__int_token';
    scan( state.lexer, 547, 9 );
    if( state.lexer._type  == 88 ){
        'Asserts [  -  ]';
        state.push_fn( set_production /*275*/, 275 );
        '"--LEAF--"';
        '275:938 javascript__scientific_token_group_593_0_=>τE • τ- javascript__int_token';
        consume( state );
        state.push_fn( branch_918124bffd412d50, 275 );
        return hc_javascript__int_token( state, db, 0 )
    } else {
        state.push_fn( set_production /*275*/, 275 );
        '"--LEAF--"';
        '275:940 javascript__scientific_token_group_593_0_=>τE • javascript__int_token';
        state.push_fn( branch_60d1f22634e1d8d8, 275 );
        return hc_javascript__int_token( state, db, 0 )
    }
} else if( state.lexer._type  == 187 ){
    'Asserts [  e  ]';
    consume( state );
    '"⤋⤋⤋  post-peek-consume ⤋⤋⤋"';
    'offset 2 peek_level-1 [  e  ]';
    '275:939 javascript__scientific_token_group_593_0_=>• τe τ- javascript__int_token';
    '275:941 javascript__scientific_token_group_593_0_=>• τe javascript__int_token';
    'offset 3 peek_level-1 [  - num  ]';
    '275:939 javascript__scientific_token_group_593_0_=>τe • τ- javascript__int_token';
    '275:941 javascript__scientific_token_group_593_0_=>τe • javascript__int_token';
    scan( state.lexer, 547, 9 );
    if( state.lexer._type  == 88 ){
        'Asserts [  -  ]';
        state.push_fn( set_production /*275*/, 275 );
        '"--LEAF--"';
        '275:939 javascript__scientific_token_group_593_0_=>τe • τ- javascript__int_token';
        consume( state );
        state.push_fn( branch_918124bffd412d50, 275 );
        return hc_javascript__int_token( state, db, 0 )
    } else {
        state.push_fn( set_production /*275*/, 275 );
        '"--LEAF--"';
        '275:941 javascript__scientific_token_group_593_0_=>τe • javascript__int_token';
        state.push_fn( branch_60d1f22634e1d8d8, 275 );
        return hc_javascript__int_token( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__float_token_group_597_0_(state, db, prod){
    scan( state.lexer, 548, 9 );
    'offset 0 peek_level-1 [  .  ]';
    '276:942 javascript__float_token_group_597_0_=>• τ. javascript__int_token';
    if( state.lexer._type  == 98 ){
    'Assert Consume [  .  ]';
    consume( state );
    '"--LEAF--"';
    '276:942 javascript__float_token_group_597_0_=>τ. • javascript__int_token';
    scan( state.lexer, 248, 9 );
    if( ( state.lexer._type  == 5 ) ){
        state.push_fn( branch_fc2d026dcaaf1c2c, 276 );
        return hc_javascript__int_token( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__int_token_list_601(state, db, prod){
    '"--LEAF--"';
    '277:943 javascript__int_token_list_601=>• javascript__int_token_list_601_group_1799_0_';
    state.push_fn( branch_a611ed844340118b, 277 );
    return hc_javascript__int_token_list_601_group_1799_0_( state, db, 0 )
}

function hc_javascript__int_token_list_601_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 277: 
            {
                'offset 1 peek_level0 [  _ n . E e : ( [ ` ?. = *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= ++ -- in of ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] ; } nl END_OF_FILE , && || { END_OF_PRODUCTION  ]';
                '277:944 javascript__int_token_list_601=>javascript__int_token_list_601 • javascript__int_token_list_601_group_1799_0_';
                '84:322 javascript__int_token=>θnum javascript__int_token_list_601 •';
                scan( state.lexer, 549, 9 );
                if( state.lexer._type  == 60 ){
                    'Asserts [  _  ]';
                    state.push_fn( hc_javascript__int_token_list_601_goto /*hc_javascript__int_token_list_601_goto( state, db, 277 )*/, 277 );
                    '"--LEAF--"';
                    '277:944 javascript__int_token_list_601=>javascript__int_token_list_601 • javascript__int_token_list_601_group_1799_0_';
                    scan( state.lexer, 550, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 277 );
                        return hc_javascript__int_token_list_601_group_1799_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 277 ) ? prod  : - 1
}

function hc_javascript__hex_token_list_606(state, db, prod){
    scan( state.lexer, 551, 9 );
    'offset 0 peek_level-1 [  F a b c d e f A B C D E num  ]';
    '278:945 javascript__hex_token_list_606=>• τF';
    '278:947 javascript__hex_token_list_606=>• θnum';
    '278:948 javascript__hex_token_list_606=>• τa';
    '278:949 javascript__hex_token_list_606=>• τb';
    '278:950 javascript__hex_token_list_606=>• τc';
    '278:951 javascript__hex_token_list_606=>• τd';
    '278:952 javascript__hex_token_list_606=>• τe';
    '278:953 javascript__hex_token_list_606=>• τf';
    '278:954 javascript__hex_token_list_606=>• τA';
    '278:955 javascript__hex_token_list_606=>• τB';
    '278:956 javascript__hex_token_list_606=>• τC';
    '278:957 javascript__hex_token_list_606=>• τD';
    '278:958 javascript__hex_token_list_606=>• τE';
    if( state.lexer._type  == 188 ){
    'Asserts [  F  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:945 javascript__hex_token_list_606=>• τF';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 189 ){
    'Asserts [  a  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:948 javascript__hex_token_list_606=>• τa';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 190 ){
    'Asserts [  b  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:949 javascript__hex_token_list_606=>• τb';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 191 ){
    'Asserts [  c  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:950 javascript__hex_token_list_606=>• τc';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 192 ){
    'Asserts [  d  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:951 javascript__hex_token_list_606=>• τd';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 187 ){
    'Asserts [  e  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:952 javascript__hex_token_list_606=>• τe';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 193 ){
    'Asserts [  f  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:953 javascript__hex_token_list_606=>• τf';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 194 ){
    'Asserts [  A  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:954 javascript__hex_token_list_606=>• τA';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 195 ){
    'Asserts [  B  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:955 javascript__hex_token_list_606=>• τB';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 196 ){
    'Asserts [  C  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:956 javascript__hex_token_list_606=>• τC';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 197 ){
    'Asserts [  D  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:957 javascript__hex_token_list_606=>• τD';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 186 ){
    'Asserts [  E  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:958 javascript__hex_token_list_606=>• τE';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
    '"--LEAF--"';
    '278:947 javascript__hex_token_list_606=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_javascript__hex_token_list_606_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 278: 
            {
                'offset 1 peek_level-1 [  F a b c d e f A B C D E num _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '278:946 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τF';
                '278:959 javascript__hex_token_list_606=>javascript__hex_token_list_606 • θnum';
                '278:960 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τa';
                '278:961 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τb';
                '278:962 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τc';
                '278:963 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τd';
                '278:964 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τe';
                '278:965 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τf';
                '278:966 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τA';
                '278:967 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τB';
                '278:968 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τC';
                '278:969 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τD';
                '278:970 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τE';
                '86:325 javascript__hex_token=>τ0X javascript__hex_token_list_606 • javascript__hex_token_list_607';
                '86:326 javascript__hex_token=>τ0x javascript__hex_token_list_606 • javascript__hex_token_list_607';
                '313:1064 javascript__hex_token_list_607_group_1847_0_=>τ_ javascript__hex_token_list_606 •';
                '86:327 javascript__hex_token=>τ0X javascript__hex_token_list_606 •';
                '86:328 javascript__hex_token=>τ0x javascript__hex_token_list_606 •';
                scan( state.lexer, 158, 9 );
                if( state.lexer._type  == 188 ){
                    'Asserts [  F  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:946 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τF';
                    scan( state.lexer, 552, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 189 ){
                    'Asserts [  a  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:960 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τa';
                    scan( state.lexer, 553, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 190 ){
                    'Asserts [  b  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:961 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τb';
                    scan( state.lexer, 554, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 191 ){
                    'Asserts [  c  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:962 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τc';
                    scan( state.lexer, 555, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 192 ){
                    'Asserts [  d  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:963 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τd';
                    scan( state.lexer, 556, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 187 ){
                    'Asserts [  e  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:964 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τe';
                    scan( state.lexer, 557, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 193 ){
                    'Asserts [  f  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:965 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τf';
                    scan( state.lexer, 558, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 194 ){
                    'Asserts [  A  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:966 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τA';
                    scan( state.lexer, 559, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 195 ){
                    'Asserts [  B  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:967 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τB';
                    scan( state.lexer, 560, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 196 ){
                    'Asserts [  C  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:968 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τC';
                    scan( state.lexer, 561, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 197 ){
                    'Asserts [  D  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:969 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τD';
                    scan( state.lexer, 562, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 186 ){
                    'Asserts [  E  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:970 javascript__hex_token_list_606=>javascript__hex_token_list_606 • τE';
                    scan( state.lexer, 563, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 5 ){
                    'Asserts [  num  ]';
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    '"--LEAF--"';
                    '278:959 javascript__hex_token_list_606=>javascript__hex_token_list_606 • θnum';
                    scan( state.lexer, 248, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 564 ) ){
                    'Asserts [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 278
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 278 ) ? prod  : - 1
}

function hc_javascript__hex_token_list_607(state, db, prod){
    '"--LEAF--"';
    '279:971 javascript__hex_token_list_607=>• javascript__hex_token_list_607_group_1847_0_';
    state.push_fn( branch_c33aa562df599c33, 279 );
    return hc_javascript__hex_token_list_607_group_1847_0_( state, db, 0 )
}

function hc_javascript__hex_token_list_607_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 279: 
            {
                'offset 1 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '279:972 javascript__hex_token_list_607=>javascript__hex_token_list_607 • javascript__hex_token_list_607_group_1847_0_';
                '86:325 javascript__hex_token=>τ0X javascript__hex_token_list_606 javascript__hex_token_list_607 •';
                '86:326 javascript__hex_token=>τ0x javascript__hex_token_list_606 javascript__hex_token_list_607 •';
                scan( state.lexer, 565, 9 );
                if( state.lexer._type  == 60 ){
                    'Asserts [  _  ]';
                    state.push_fn( hc_javascript__hex_token_list_607_goto /*hc_javascript__hex_token_list_607_goto( state, db, 279 )*/, 279 );
                    '"--LEAF--"';
                    '279:972 javascript__hex_token_list_607=>javascript__hex_token_list_607 • javascript__hex_token_list_607_group_1847_0_';
                    scan( state.lexer, 550, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 279 );
                        return hc_javascript__hex_token_list_607_group_1847_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 279
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 279 ) ? prod  : - 1
}

function hc_javascript__octal_token_list_613(state, db, prod){
    scan( state.lexer, 566, 9 );
    'offset 0 peek_level-1 [  7 0 1 2 3 4 5 6  ]';
    '280:973 javascript__octal_token_list_613=>• τ7';
    '280:975 javascript__octal_token_list_613=>• τ0';
    '280:976 javascript__octal_token_list_613=>• τ1';
    '280:977 javascript__octal_token_list_613=>• τ2';
    '280:978 javascript__octal_token_list_613=>• τ3';
    '280:979 javascript__octal_token_list_613=>• τ4';
    '280:980 javascript__octal_token_list_613=>• τ5';
    '280:981 javascript__octal_token_list_613=>• τ6';
    if( state.lexer._type  == 198 ){
    'Asserts [  7  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:973 javascript__octal_token_list_613=>• τ7';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 199 ){
    'Asserts [  0  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:975 javascript__octal_token_list_613=>• τ0';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 200 ){
    'Asserts [  1  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:976 javascript__octal_token_list_613=>• τ1';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 201 ){
    'Asserts [  2  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:977 javascript__octal_token_list_613=>• τ2';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 202 ){
    'Asserts [  3  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:978 javascript__octal_token_list_613=>• τ3';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 203 ){
    'Asserts [  4  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:979 javascript__octal_token_list_613=>• τ4';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 204 ){
    'Asserts [  5  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:980 javascript__octal_token_list_613=>• τ5';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 205 ){
    'Asserts [  6  ]';
    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
    '"--LEAF--"';
    '280:981 javascript__octal_token_list_613=>• τ6';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_javascript__octal_token_list_613_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 280: 
            {
                'offset 1 peek_level-1 [  7 0 1 2 3 4 5 6 _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '280:974 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ7';
                '280:982 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ0';
                '280:983 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ1';
                '280:984 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ2';
                '280:985 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ3';
                '280:986 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ4';
                '280:987 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ5';
                '280:988 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ6';
                '87:329 javascript__octal_token=>τ0O javascript__octal_token_list_613 • javascript__octal_token_list_614';
                '87:330 javascript__octal_token=>τ0o javascript__octal_token_list_613 • javascript__octal_token_list_614';
                '314:1065 javascript__octal_token_list_614_group_1880_0_=>τ_ javascript__octal_token_list_613 •';
                '87:331 javascript__octal_token=>τ0O javascript__octal_token_list_613 •';
                '87:332 javascript__octal_token=>τ0o javascript__octal_token_list_613 •';
                scan( state.lexer, 59, 9 );
                if( state.lexer._type  == 198 ){
                    'Asserts [  7  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:974 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ7';
                    scan( state.lexer, 567, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 199 ){
                    'Asserts [  0  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:982 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ0';
                    scan( state.lexer, 568, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 200 ){
                    'Asserts [  1  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:983 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ1';
                    scan( state.lexer, 569, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 201 ){
                    'Asserts [  2  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:984 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ2';
                    scan( state.lexer, 570, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 202 ){
                    'Asserts [  3  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:985 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ3';
                    scan( state.lexer, 571, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 203 ){
                    'Asserts [  4  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:986 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ4';
                    scan( state.lexer, 572, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 204 ){
                    'Asserts [  5  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:987 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ5';
                    scan( state.lexer, 573, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 205 ){
                    'Asserts [  6  ]';
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    '"--LEAF--"';
                    '280:988 javascript__octal_token_list_613=>javascript__octal_token_list_613 • τ6';
                    scan( state.lexer, 574, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 564 ) ){
                    'Asserts [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 280
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 280 ) ? prod  : - 1
}

function hc_javascript__octal_token_list_614(state, db, prod){
    '"--LEAF--"';
    '281:989 javascript__octal_token_list_614=>• javascript__octal_token_list_614_group_1880_0_';
    state.push_fn( branch_c02448e2673e27f3, 281 );
    return hc_javascript__octal_token_list_614_group_1880_0_( state, db, 0 )
}

function hc_javascript__octal_token_list_614_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 281: 
            {
                'offset 1 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '281:990 javascript__octal_token_list_614=>javascript__octal_token_list_614 • javascript__octal_token_list_614_group_1880_0_';
                '87:329 javascript__octal_token=>τ0O javascript__octal_token_list_613 javascript__octal_token_list_614 •';
                '87:330 javascript__octal_token=>τ0o javascript__octal_token_list_613 javascript__octal_token_list_614 •';
                scan( state.lexer, 565, 9 );
                if( state.lexer._type  == 60 ){
                    'Asserts [  _  ]';
                    state.push_fn( hc_javascript__octal_token_list_614_goto /*hc_javascript__octal_token_list_614_goto( state, db, 281 )*/, 281 );
                    '"--LEAF--"';
                    '281:990 javascript__octal_token_list_614=>javascript__octal_token_list_614 • javascript__octal_token_list_614_group_1880_0_';
                    scan( state.lexer, 550, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 281 );
                        return hc_javascript__octal_token_list_614_group_1880_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 281
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 281 ) ? prod  : - 1
}

function hc_javascript__binary_token_list_620(state, db, prod){
    scan( state.lexer, 575, 9 );
    'offset 0 peek_level-1 [  1 0  ]';
    '282:991 javascript__binary_token_list_620=>• τ1';
    '282:993 javascript__binary_token_list_620=>• τ0';
    if( state.lexer._type  == 200 ){
    'Asserts [  1  ]';
    state.push_fn( hc_javascript__binary_token_list_620_goto /*hc_javascript__binary_token_list_620_goto( state, db, 282 )*/, 282 );
    '"--LEAF--"';
    '282:991 javascript__binary_token_list_620=>• τ1';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 199 ){
    'Asserts [  0  ]';
    state.push_fn( hc_javascript__binary_token_list_620_goto /*hc_javascript__binary_token_list_620_goto( state, db, 282 )*/, 282 );
    '"--LEAF--"';
    '282:993 javascript__binary_token_list_620=>• τ0';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_javascript__binary_token_list_620_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 282: 
            {
                'offset 1 peek_level-1 [  1 0 _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '282:992 javascript__binary_token_list_620=>javascript__binary_token_list_620 • τ1';
                '282:994 javascript__binary_token_list_620=>javascript__binary_token_list_620 • τ0';
                '88:333 javascript__binary_token=>τ0B javascript__binary_token_list_620 • javascript__binary_token_list_621';
                '88:334 javascript__binary_token=>τ0b javascript__binary_token_list_620 • javascript__binary_token_list_621';
                '315:1066 javascript__binary_token_list_621_group_1895_0_=>τ_ javascript__binary_token_list_620 •';
                '88:335 javascript__binary_token=>τ0B javascript__binary_token_list_620 •';
                '88:336 javascript__binary_token=>τ0b javascript__binary_token_list_620 •';
                scan( state.lexer, 102, 9 );
                if( state.lexer._type  == 200 ){
                    'Asserts [  1  ]';
                    state.push_fn( hc_javascript__binary_token_list_620_goto /*hc_javascript__binary_token_list_620_goto( state, db, 282 )*/, 282 );
                    '"--LEAF--"';
                    '282:992 javascript__binary_token_list_620=>javascript__binary_token_list_620 • τ1';
                    scan( state.lexer, 569, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 199 ){
                    'Asserts [  0  ]';
                    state.push_fn( hc_javascript__binary_token_list_620_goto /*hc_javascript__binary_token_list_620_goto( state, db, 282 )*/, 282 );
                    '"--LEAF--"';
                    '282:994 javascript__binary_token_list_620=>javascript__binary_token_list_620 • τ0';
                    scan( state.lexer, 568, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 564 ) ){
                    'Asserts [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 282
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 282 ) ? prod  : - 1
}

function hc_javascript__binary_token_list_621(state, db, prod){
    '"--LEAF--"';
    '283:995 javascript__binary_token_list_621=>• javascript__binary_token_list_621_group_1895_0_';
    state.push_fn( branch_471c9fa4798d33cf, 283 );
    return hc_javascript__binary_token_list_621_group_1895_0_( state, db, 0 )
}

function hc_javascript__binary_token_list_621_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 283: 
            {
                'offset 1 peek_level0 [  _ ?. ( ` . [ of in -- ++ *= /= %= += -= <<= >>= >>>= &= ^= |= **= ??= &&= ||= = { ** * / % - + << >> >>> instanceof >= <= > < == != === !== & ^ ?? | ? ) ] : ; } nl END_OF_FILE , && || END_OF_PRODUCTION  ]';
                '283:996 javascript__binary_token_list_621=>javascript__binary_token_list_621 • javascript__binary_token_list_621_group_1895_0_';
                '88:333 javascript__binary_token=>τ0B javascript__binary_token_list_620 javascript__binary_token_list_621 •';
                '88:334 javascript__binary_token=>τ0b javascript__binary_token_list_620 javascript__binary_token_list_621 •';
                scan( state.lexer, 565, 9 );
                if( state.lexer._type  == 60 ){
                    'Asserts [  _  ]';
                    state.push_fn( hc_javascript__binary_token_list_621_goto /*hc_javascript__binary_token_list_621_goto( state, db, 283 )*/, 283 );
                    '"--LEAF--"';
                    '283:996 javascript__binary_token_list_621=>javascript__binary_token_list_621 • javascript__binary_token_list_621_group_1895_0_';
                    scan( state.lexer, 550, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 283 );
                        return hc_javascript__binary_token_list_621_group_1895_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 283
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 283 ) ? prod  : - 1
}

function hc_javascript__iteration_statement_group_869_1_(state, db, prod){
    scan( state.lexer, 576, 9 );
    'offset 0 peek_level-1 [  var  ]';
    '284:997 javascript__iteration_statement_group_869_1_=>• τvar javascript__variable_declaration_list';
    if( state.lexer._type  == 68 ){
    'Assert Consume [  var  ]';
    consume( state );
    '"--LEAF--"';
    '284:997 javascript__iteration_statement_group_869_1_=>τvar • javascript__variable_declaration_list';
    scan( state.lexer, 577, 9 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_2df7000832ab9616, 284 );
        return hc_javascript__variable_declaration_list( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__iteration_statement_group_887_1_(state, db, prod){
    scan( state.lexer, 576, 9 );
    'offset 0 peek_level-1 [  var  ]';
    '285:998 javascript__iteration_statement_group_887_1_=>• τvar javascript__for_binding';
    if( state.lexer._type  == 68 ){
    'Assert Consume [  var  ]';
    consume( state );
    '"--LEAF--"';
    '285:998 javascript__iteration_statement_group_887_1_=>τvar • javascript__for_binding';
    scan( state.lexer, 577, 9 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_9e986e4e875bdfda, 285 );
        return hc_javascript__for_binding( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__iteration_statement_group_896_1_(state, db, prod){
    scan( state.lexer, 576, 9 );
    'offset 0 peek_level-1 [  var  ]';
    '286:999 javascript__iteration_statement_group_896_1_=>• τvar javascript__for_binding';
    if( state.lexer._type  == 68 ){
    'Assert Consume [  var  ]';
    consume( state );
    '"--LEAF--"';
    '286:999 javascript__iteration_statement_group_896_1_=>τvar • javascript__for_binding';
    scan( state.lexer, 577, 9 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_e33a81b49710a4c7, 286 );
        return hc_javascript__for_binding( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__regular_expression_literal_list_1056(state, db, prod){
    scan( state.lexer, 578, 0 );
    'offset 0 peek_level-1 [  f:s f:s/ nl sp sym num id  ]';
    '287:1000 javascript__regular_expression_literal_list_1056=>• τf:s/';
    '287:1002 javascript__regular_expression_literal_list_1056=>• θnl';
    '287:1003 javascript__regular_expression_literal_list_1056=>• θsp';
    '287:1004 javascript__regular_expression_literal_list_1056=>• θsym';
    '287:1005 javascript__regular_expression_literal_list_1056=>• θnum';
    '287:1006 javascript__regular_expression_literal_list_1056=>• θid';
    '287:1007 javascript__regular_expression_literal_list_1056=>• javascript__escaped_sequence';
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1007 javascript__regular_expression_literal_list_1056=>• javascript__escaped_sequence';
    state.push_fn( branch_a8b263dabb540262, 287 );
    return hc_javascript__escaped_sequence( state, db, 0 )
} else if( state.lexer._type  == 206 ){
    'Asserts [  f:s/  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1000 javascript__regular_expression_literal_list_1056=>• τf:s/';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1002 javascript__regular_expression_literal_list_1056=>• θnl';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1003 javascript__regular_expression_literal_list_1056=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1004 javascript__regular_expression_literal_list_1056=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1005 javascript__regular_expression_literal_list_1056=>• θnum';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1006 javascript__regular_expression_literal_list_1056=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_javascript__regular_expression_literal_list_1056_goto(state, db, prod){
    'offset 1 peek_level-1 [  f:s f:s/ / nl sp sym num id  ]';
    '287:1001 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • τf:s/';
    '287:1008 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θnl';
    '287:1009 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θsp';
    '287:1010 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θsym';
    '287:1011 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θnum';
    '287:1012 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θid';
    '287:1013 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • javascript__escaped_sequence';
    '166:581 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 • τ/ default_productions__js_identifier';
    '166:583 javascript__regular_expression_literal=>τ/ javascript__regular_expression_literal_list_1056 • τ/';
    scan( state.lexer, 435, 0 );
    if( state.lexer._type  == 65 ){
    'Asserts [  f:s  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1013 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • javascript__escaped_sequence';
    scan( state.lexer, 542, 9 );
    if( ( state.lexer._type  == 65 ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 287 );
        return hc_javascript__escaped_sequence( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 206 ){
    'Asserts [  f:s/  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1001 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • τf:s/';
    scan( state.lexer, 579, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 10 ){
    'Asserts [  /  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 287
} else if( state.lexer._type  == 7 ){
    'Asserts [  nl  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1008 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θnl';
    scan( state.lexer, 9, 250 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1009 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θsp';
    scan( state.lexer, 9, 89 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1010 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θsym';
    scan( state.lexer, 249, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    'Asserts [  num  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1011 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θnum';
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    '"--LEAF--"';
    '287:1012 javascript__regular_expression_literal_list_1056=>javascript__regular_expression_literal_list_1056 • θid';
    scan( state.lexer, 245, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 287 ) ? prod  : - 1
}

function hc_javascript__template_string_list_1088(state, db, prod){
    '"--LEAF--"';
    '288:1014 javascript__template_string_list_1088=>• javascript__template_string_data';
    state.push_fn( branch_cdf7eba05b87dc47, 288 );
    return hc_javascript__template_string_data( state, db, 0 )
}

function hc_javascript__template_string_list_1088_goto(state, db, prod){
    'offset 1 peek_level0 [  ${ ` nl sp sym num id f:s  ]';
    '288:1015 javascript__template_string_list_1088=>javascript__template_string_list_1088 • javascript__template_string_data';
    '171:596 javascript__template_string=>javascript__template_string_list_1088 • τ${-ns';
    '171:597 javascript__template_string=>javascript__template_string_list_1088 • τ`-ns';
    scan( state.lexer, 4, 0 );
    if( isTokenActive( state.lexer._type, 580 ) ){
    'Asserts [  nl sp sym num id f:s  ]';
    state.push_fn( hc_javascript__template_string_list_1088_goto /*hc_javascript__template_string_list_1088_goto( state, db, 288 )*/, 288 );
    '"--LEAF--"';
    '288:1015 javascript__template_string_list_1088=>javascript__template_string_list_1088 • javascript__template_string_data';
    scan( state.lexer, 580, 0 );
    if( ( isTokenActive( state.lexer._type, 580 ) ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 288 );
        return hc_javascript__template_string_data( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 288 ) ? prod  : - 1
}

function hc_javascript__argument_list_group_1152_1_(state, db, prod){
    scan( state.lexer, 462, 9 );
    'offset 0 peek_level-1 [  ...  ]';
    '289:1016 javascript__argument_list_group_1152_1_=>• τ... javascript__assignment_expression';
    if( state.lexer._type  == 111 ){
    'Assert Consume [  ...  ]';
    consume( state );
    '"--LEAF--"';
    '289:1016 javascript__argument_list_group_1152_1_=>τ... • javascript__assignment_expression';
    scan( state.lexer, 230, 9 );
    if( ( isTokenActive( state.lexer._type, 20 ) ) ){
        state.push_fn( branch_fb8401b9afc524e1, 289 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_(state, db, prod){
    scan( state.lexer, 462, 9 );
    'offset 0 peek_level-1 [  ...  ]';
    '290:1017 javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_=>• τ... javascript__binding_identifier';
    if( state.lexer._type  == 111 ){
    'Assert Consume [  ...  ]';
    consume( state );
    '"--LEAF--"';
    '290:1017 javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1240_0_=>τ... • javascript__binding_identifier';
    scan( state.lexer, 581, 9 );
    if( ( state.lexer._type  == 59 ) ){
        state.push_fn( branch_e48bfd912460c186, 290 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_(state, db, prod){
    scan( state.lexer, 462, 9 );
    'offset 0 peek_level-1 [  ...  ]';
    '291:1018 javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_=>• τ... javascript__binding_pattern';
    if( state.lexer._type  == 111 ){
    'Assert Consume [  ...  ]';
    consume( state );
    '"--LEAF--"';
    '291:1018 javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1244_0_=>τ... • javascript__binding_pattern';
    scan( state.lexer, 582, 9 );
    if( ( state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_0aa85f4426bcd38c, 291 );
        return hc_javascript__binding_pattern( state, db, 0 )
    }
};
    return - 1
}

function hc_css__STYLE_SHEET_list_1282(state, db, prod){
    '"--LEAF--"';
    '292:1019 css__STYLE_SHEET_list_1282=>• css__STYLE_SHEET_list_1282_group_1941_0_';
    state.push_fn( branch_9d64d8ab25932416, 292 );
    return hc_css__STYLE_SHEET_list_1282_group_1941_0_( state, db, 0 )
}

function hc_css__STYLE_SHEET_list_1282_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 292: 
            {
                'offset 1 peek_level0 [  @import @media @keyframes @supports * 216 # . [ : </ END_OF_PRODUCTION  ]';
                '292:1020 css__STYLE_SHEET_list_1282=>css__STYLE_SHEET_list_1282 • css__STYLE_SHEET_list_1282_group_1941_0_';
                '203:690 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 • css__STYLE_SHEET_list_1283';
                '203:692 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 •';
                scan( state.lexer, 114, 9 );
                if( state.lexer._type  == 166 ){
                    'Asserts [  @import  ]';
                    state.push_fn( hc_css__STYLE_SHEET_list_1282_goto /*hc_css__STYLE_SHEET_list_1282_goto( state, db, 292 )*/, 292 );
                    '"--LEAF--"';
                    '292:1020 css__STYLE_SHEET_list_1282=>css__STYLE_SHEET_list_1282 • css__STYLE_SHEET_list_1282_group_1941_0_';
                    scan( state.lexer, 583, 9 );
                    if( ( state.lexer._type  == 166 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 292 );
                        return hc_css__STYLE_SHEET_list_1282_group_1941_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 292 ) ? prod  : - 1
}

function hc_css__STYLE_SHEET_list_1283(state, db, prod){
    scan( state.lexer, 584, 9 );
    'offset 0 peek_level0 [  * 216 # . [ : @media @keyframes @supports  ]';
    '293:1021 css__STYLE_SHEET_list_1283=>• css__AT_RULE';
    '293:1023 css__STYLE_SHEET_list_1283=>• css__STYLE_RULE';
    if( isTokenActive( state.lexer._type, 98 ) ){
    'Asserts [  * 216 # . [ :  ]';
    state.push_fn( hc_css__STYLE_SHEET_list_1283_goto /*hc_css__STYLE_SHEET_list_1283_goto( state, db, 293 )*/, 293 );
    '"--LEAF--"';
    '293:1023 css__STYLE_SHEET_list_1283=>• css__STYLE_RULE';
    state.push_fn( branch_5cb267bf74038e65, 293 );
    return hc_css__STYLE_RULE( state, db, 0 )
} else {
    state.push_fn( hc_css__STYLE_SHEET_list_1283_goto /*hc_css__STYLE_SHEET_list_1283_goto( state, db, 293 )*/, 293 );
    '"--LEAF--"';
    '293:1021 css__STYLE_SHEET_list_1283=>• css__AT_RULE';
    state.push_fn( branch_5cb267bf74038e65, 293 );
    return hc_css__AT_RULE( state, db, 0 )
};
    return - 1
}

function hc_css__STYLE_SHEET_list_1283_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 293: 
            {
                'offset 1 peek_level0 [  * 216 # . [ : @media @keyframes @supports </ END_OF_PRODUCTION  ]';
                '293:1022 css__STYLE_SHEET_list_1283=>css__STYLE_SHEET_list_1283 • css__AT_RULE';
                '293:1024 css__STYLE_SHEET_list_1283=>css__STYLE_SHEET_list_1283 • css__STYLE_RULE';
                '203:690 css__STYLE_SHEET=>css__STYLE_SHEET_list_1282 css__STYLE_SHEET_list_1283 •';
                '203:691 css__STYLE_SHEET=>css__STYLE_SHEET_list_1283 •';
                scan( state.lexer, 585, 9 );
                if( isTokenActive( state.lexer._type, 98 ) ){
                    'Asserts [  * 216 # . [ :  ]';
                    state.push_fn( hc_css__STYLE_SHEET_list_1283_goto /*hc_css__STYLE_SHEET_list_1283_goto( state, db, 293 )*/, 293 );
                    '"--LEAF--"';
                    '293:1024 css__STYLE_SHEET_list_1283=>css__STYLE_SHEET_list_1283 • css__STYLE_RULE';
                    scan( state.lexer, 586, 9 );
                    if( ( isTokenActive( state.lexer._type, 98 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 293 );
                        return hc_css__STYLE_RULE( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 180 || state.lexer._type  == 181 || state.lexer._type  == 183 ){
                    'Asserts [  @media @keyframes @supports  ]';
                    state.push_fn( hc_css__STYLE_SHEET_list_1283_goto /*hc_css__STYLE_SHEET_list_1283_goto( state, db, 293 )*/, 293 );
                    '"--LEAF--"';
                    '293:1022 css__STYLE_SHEET_list_1283=>css__STYLE_SHEET_list_1283 • css__AT_RULE';
                    scan( state.lexer, 587, 9 );
                    if( ( state.lexer._type  == 180 || state.lexer._type  == 181 || state.lexer._type  == 183 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 293 );
                        return hc_css__AT_RULE( state, db, 0 )
                    };
                    return - 1
                } else {
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 293
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 293 ) ? prod  : - 1
}

function hc_css__import_group_1285_0_(state, db, prod){
    '"--LEAF--"';
    '294:1025 css__import_group_1285_0_=>• css__string';
    state.push_fn( branch_cff5c6dc70998e82, 294 );
    return hc_css__string( state, db, 0 )
}

function hc_css__import_group_1287_0_(state, db, prod){
    scan( state.lexer, 588, 9 );
    'offset 0 peek_level-1 [  supports  ]';
    '295:1026 css__import_group_1287_0_=>• τsupports τ( css__import_declaration τ)';
    '295:1027 css__import_group_1287_0_=>• τsupports τ( css__supports_condition τ)';
    if( state.lexer._type  == 207 ){
    'Assert Consume [  supports  ]';
    consume( state );
    'offset 1 peek_level-1 [  (  ]';
    '295:1026 css__import_group_1287_0_=>τsupports • τ( css__import_declaration τ)';
    '295:1027 css__import_group_1287_0_=>τsupports • τ( css__supports_condition τ)';
    scan( state.lexer, 589, 9 );
    if( state.lexer._type  == 36 ){
        'Assert Consume [  (  ]';
        consume( state );
        'offset 2 peek_level0 [  not ( 216 selector 230  ]';
        '295:1026 css__import_group_1287_0_=>τsupports τ( • css__import_declaration τ)';
        '295:1027 css__import_group_1287_0_=>τsupports τ( • css__supports_condition τ)';
        scan( state.lexer, 472, 24 );
        if( state.lexer._type  == 168 || state.lexer._type  == 36 || state.lexer._type  == 170 || state.lexer._type  == 169 ){
            'Asserts [  not ( 216 selector  ]';
            state.push_fn( set_production /*295*/, 295 );
            '"--LEAF--"';
            '295:1027 css__import_group_1287_0_=>τsupports τ( • css__supports_condition τ)';
            state.push_fn( branch_8b7f6cc58ff0fe5a, 295 );
            return hc_css__supports_condition( state, db, 0 )
        } else {
            state.push_fn( set_production /*295*/, 295 );
            '"--LEAF--"';
            '295:1026 css__import_group_1287_0_=>τsupports τ( • css__import_declaration τ)';
            state.push_fn( branch_8b7f6cc58ff0fe5a, 295 );
            return hc_css__import_declaration( state, db, 0 )
        }
    }
};
    return - 1
}

function hc_css__import_list_1289(state, db, prod){
    '"--LEAF--"';
    '296:1028 css__import_list_1289=>• css__media_query';
    state.push_fn( branch_7c53a45a4c458e09, 296 );
    return hc_css__media_query( state, db, 0 )
}

function hc_css__import_list_1289_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 296: 
            {
                'offset 1 peek_level-1 [  , { END_OF_PRODUCTION ;  ]';
                '296:1029 css__import_list_1289=>css__import_list_1289 • τ, css__media_query';
                '204:694 css__import=>τ@import css__url css__import_group_1287_0_ css__import_list_1289 •';
                '204:695 css__import=>τ@import css__import_group_1285_0_ css__import_group_1287_0_ css__import_list_1289 •';
                '204:696 css__import=>τ@import css__url css__import_list_1289 •';
                '204:697 css__import=>τ@import css__import_group_1285_0_ css__import_list_1289 •';
                '256:860 css__media_queries=>css__import_list_1289 •';
                scan( state.lexer, 590, 9 );
                if( state.lexer._type  == 58 ){
                    'Asserts [  ,  ]';
                    state.push_fn( hc_css__import_list_1289_goto /*hc_css__import_list_1289_goto( state, db, 296 )*/, 296 );
                    '"--LEAF--"';
                    '296:1029 css__import_list_1289=>css__import_list_1289 • τ, css__media_query';
                    scan( state.lexer, 591, 9 );
                    consume( state );
                    state.push_fn( branch_a8b069c903e9e56e, 296 );
                    return hc_css__media_query( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == - 1 ){
                    'Assert End [  ; END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 296
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 296 ) ? prod  : - 1
}

function hc_css__supports_condition_list_1314(state, db, prod){
    scan( state.lexer, 592, 9 );
    'offset 0 peek_level0 [  or and  ]';
    '297:1030 css__supports_condition_list_1314=>• css__supports_condition_list_1314_group_1971_1_';
    '297:1032 css__supports_condition_list_1314=>• css__supports_condition_list_1314_group_1971_0_';
    if( state.lexer._type  == 210 ){
    'Asserts [  or  ]';
    state.push_fn( hc_css__supports_condition_list_1314_goto /*hc_css__supports_condition_list_1314_goto( state, db, 297 )*/, 297 );
    '"--LEAF--"';
    '297:1030 css__supports_condition_list_1314=>• css__supports_condition_list_1314_group_1971_1_';
    state.push_fn( branch_5cb267bf74038e65, 297 );
    return hc_css__supports_condition_list_1314_group_1971_1_( state, db, 0 )
} else {
    state.push_fn( hc_css__supports_condition_list_1314_goto /*hc_css__supports_condition_list_1314_goto( state, db, 297 )*/, 297 );
    '"--LEAF--"';
    '297:1032 css__supports_condition_list_1314=>• css__supports_condition_list_1314_group_1971_0_';
    state.push_fn( branch_5cb267bf74038e65, 297 );
    return hc_css__supports_condition_list_1314_group_1971_0_( state, db, 0 )
};
    return - 1
}

function hc_css__supports_condition_list_1314_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 297: 
            {
                'offset 1 peek_level0 [  or and ) { END_OF_PRODUCTION  ]';
                '297:1031 css__supports_condition_list_1314=>css__supports_condition_list_1314 • css__supports_condition_list_1314_group_1971_1_';
                '297:1033 css__supports_condition_list_1314=>css__supports_condition_list_1314 • css__supports_condition_list_1314_group_1971_0_';
                '207:706 css__supports_condition=>css__supports_in_parens css__supports_condition_list_1314 •';
                scan( state.lexer, 593, 9 );
                if( state.lexer._type  == 210 ){
                    'Asserts [  or  ]';
                    state.push_fn( hc_css__supports_condition_list_1314_goto /*hc_css__supports_condition_list_1314_goto( state, db, 297 )*/, 297 );
                    '"--LEAF--"';
                    '297:1031 css__supports_condition_list_1314=>css__supports_condition_list_1314 • css__supports_condition_list_1314_group_1971_1_';
                    scan( state.lexer, 594, 9 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 297 );
                        return hc_css__supports_condition_list_1314_group_1971_1_( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 209 ){
                    'Asserts [  and  ]';
                    state.push_fn( hc_css__supports_condition_list_1314_goto /*hc_css__supports_condition_list_1314_goto( state, db, 297 )*/, 297 );
                    '"--LEAF--"';
                    '297:1033 css__supports_condition_list_1314=>css__supports_condition_list_1314 • css__supports_condition_list_1314_group_1971_0_';
                    scan( state.lexer, 595, 9 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 297 );
                        return hc_css__supports_condition_list_1314_group_1971_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 297 ) ? prod  : - 1
}

function hc_css__COMPLEX_SELECTOR_list_1327(state, db, prod){
    '"--LEAF--"';
    '298:1034 css__COMPLEX_SELECTOR_list_1327=>• css__COMPLEX_SELECTOR_list_1327_group_1980_0_';
    state.push_fn( branch_4e0c9d8faf1a7cd4, 298 );
    return hc_css__COMPLEX_SELECTOR_list_1327_group_1980_0_( state, db, 0 )
}

function hc_css__COMPLEX_SELECTOR_list_1327_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 298: 
            {
                'offset 1 peek_level0 [  > + ~ || * 216 # . [ : ) { , END_OF_PRODUCTION  ]';
                '298:1035 css__COMPLEX_SELECTOR_list_1327=>css__COMPLEX_SELECTOR_list_1327 • css__COMPLEX_SELECTOR_list_1327_group_1980_0_';
                '211:714 css__COMPLEX_SELECTOR=>css__COMPOUND_SELECTOR css__COMPLEX_SELECTOR_list_1327 •';
                scan( state.lexer, 88, 9 );
                if( isTokenActive( state.lexer._type, 133 ) ){
                    'Asserts [  > + ~ || * 216 # . [ :  ]';
                    state.push_fn( hc_css__COMPLEX_SELECTOR_list_1327_goto /*hc_css__COMPLEX_SELECTOR_list_1327_goto( state, db, 298 )*/, 298 );
                    '"--LEAF--"';
                    '298:1035 css__COMPLEX_SELECTOR_list_1327=>css__COMPLEX_SELECTOR_list_1327 • css__COMPLEX_SELECTOR_list_1327_group_1980_0_';
                    scan( state.lexer, 596, 9 );
                    if( ( isTokenActive( state.lexer._type, 133 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 298 );
                        return hc_css__COMPLEX_SELECTOR_list_1327_group_1980_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 298 ) ? prod  : - 1
}

function hc_css__COMPOUND_SELECTOR_list_1329(state, db, prod){
    '"--LEAF--"';
    '299:1036 css__COMPOUND_SELECTOR_list_1329=>• css__SUBCLASS_SELECTOR';
    state.push_fn( branch_c36ee5fcf9976925, 299 );
    return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1329_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 299: 
            {
                'offset 1 peek_level0 [  # . [ : sp > + ~ || * ) , { END_OF_PRODUCTION  ]';
                '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                '212:726 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 •';
                '212:728 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 •';
                '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                '212:719 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • θsp';
                '212:722 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • θsp';
                scan( state.lexer, 88, 89 );
                if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
                    'Asserts [  # . [  ]';
                    'offset 1 peek_level1 [  216  ]';
                    '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 90, 63 );
                    if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        state.lexer._type  = 171;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1329_goto /*hc_css__COMPOUND_SELECTOR_list_1329_goto( state, db, 299 )*/, 299 );
                        '"--LEAF--"';
                        '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                        scan( state.lexer, 479, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    'offset 1 peek_level1 [  : 216  ]';
                    '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                    '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                    '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330 θsp';
                    '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                    '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 • css__COMPOUND_SELECTOR_list_1330';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 92, 63 );
                    if( pk._type  == 70 ){
                        'Asserts [  :  ]';
                        '"--LEAF--"';
                        '"--leafy--"';
                        return 299
                    } else if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1329_goto /*hc_css__COMPOUND_SELECTOR_list_1329_goto( state, db, 299 )*/, 299 );
                        '"--LEAF--"';
                        '299:1037 css__COMPOUND_SELECTOR_list_1329=>css__COMPOUND_SELECTOR_list_1329 • css__SUBCLASS_SELECTOR';
                        scan( state.lexer, 479, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( isTokenActive( state.lexer._type, 597 ) ){
                    'Asserts [  sp > + ~ || * ) , { END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 299
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 299 ) ? prod  : - 1
}

function hc_css__COMPOUND_SELECTOR_list_1330(state, db, prod){
    '"--LEAF--"';
    '300:1038 css__COMPOUND_SELECTOR_list_1330=>• css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
    state.push_fn( branch_a626995fc08c9472, 300 );
    return hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0_( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1330_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 300: 
            {
                'offset 1 peek_level0 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION  ]';
                '300:1039 css__COMPOUND_SELECTOR_list_1330=>css__COMPOUND_SELECTOR_list_1330 • css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
                '212:720 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
                '212:723 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 •';
                '212:725 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 •';
                '212:727 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1330 •';
                '212:716 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
                '212:717 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1329 css__COMPOUND_SELECTOR_list_1330 • θsp';
                '212:718 css__COMPOUND_SELECTOR=>css__TYPE_SELECTOR css__COMPOUND_SELECTOR_list_1330 • θsp';
                '212:721 css__COMPOUND_SELECTOR=>css__COMPOUND_SELECTOR_list_1330 • θsp';
                scan( state.lexer, 88, 89 );
                if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    'offset 1 peek_level1 [  :  ]';
                    '300:1039 css__COMPOUND_SELECTOR_list_1330=>css__COMPOUND_SELECTOR_list_1330 • css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 93, 24 );
                    if( pk._type  == 70 ){
                        'Asserts [  :  ]';
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1330_goto /*hc_css__COMPOUND_SELECTOR_list_1330_goto( state, db, 300 )*/, 300 );
                        '"--LEAF--"';
                        '300:1039 css__COMPOUND_SELECTOR_list_1330=>css__COMPOUND_SELECTOR_list_1330 • css__COMPOUND_SELECTOR_list_1330_group_1990_0_';
                        scan( state.lexer, 478, 9 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 300 );
                            return hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0_( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( isTokenActive( state.lexer._type, 598 ) ){
                    'Asserts [  sp > + ~ || * # . [ ) , { END_OF_PRODUCTION  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 300
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 300 ) ? prod  : - 1
}

function hc_css__PSEUDO_CLASS_SELECTOR_group_1405_0_(state, db, prod){
    scan( state.lexer, 589, 9 );
    'offset 0 peek_level-1 [  (  ]';
    '301:1040 css__PSEUDO_CLASS_SELECTOR_group_1405_0_=>• τ( tk:css__psuedo_class_value τ)';
    if( state.lexer._type  == 36 ){
    'Assert Consume [  (  ]';
    consume( state );
    '"--LEAF--"';
    '301:1040 css__PSEUDO_CLASS_SELECTOR_group_1405_0_=>τ( • tk:css__psuedo_class_value τ)';
    scan( state.lexer, 599, 9 );
    if( ( state.lexer._type  == 208 ) ){
        consume( state );
        scan( state.lexer, 132, 9 );
        if( ( state.lexer._type  == 113 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 301
        }
    }
};
    return - 1
}

function hc_css__general_enclosed_list_1466(state, db, prod){
    scan( state.lexer, 600, 89 );
    'offset 0 peek_level-1 [  sp sym id  ]';
    '302:1041 css__general_enclosed_list_1466=>• θsp';
    '302:1043 css__general_enclosed_list_1466=>• θsym';
    '302:1044 css__general_enclosed_list_1466=>• θid';
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__general_enclosed_list_1466_goto /*hc_css__general_enclosed_list_1466_goto( state, db, 302 )*/, 302 );
    '"--LEAF--"';
    '302:1041 css__general_enclosed_list_1466=>• θsp';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_css__general_enclosed_list_1466_goto /*hc_css__general_enclosed_list_1466_goto( state, db, 302 )*/, 302 );
    '"--LEAF--"';
    '302:1043 css__general_enclosed_list_1466=>• θsym';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__general_enclosed_list_1466_goto /*hc_css__general_enclosed_list_1466_goto( state, db, 302 )*/, 302 );
    '"--LEAF--"';
    '302:1044 css__general_enclosed_list_1466=>• θid';
    consume( state );
    add_reduce( state, 1, 11 );
    return 0
};
    return - 1
}

function hc_css__general_enclosed_list_1466_goto(state, db, prod){
    'offset 1 peek_level-1 [  ) sp sym id  ]';
    '302:1042 css__general_enclosed_list_1466=>css__general_enclosed_list_1466 • θsp';
    '302:1045 css__general_enclosed_list_1466=>css__general_enclosed_list_1466 • θsym';
    '302:1046 css__general_enclosed_list_1466=>css__general_enclosed_list_1466 • θid';
    '234:792 css__general_enclosed=>tk:css__identifier τ( css__general_enclosed_list_1466 • τ)';
    scan( state.lexer, 503, 89 );
    if( state.lexer._type  == 8 ){
    'Asserts [  sp  ]';
    state.push_fn( hc_css__general_enclosed_list_1466_goto /*hc_css__general_enclosed_list_1466_goto( state, db, 302 )*/, 302 );
    '"--LEAF--"';
    '302:1042 css__general_enclosed_list_1466=>css__general_enclosed_list_1466 • θsp';
    scan( state.lexer, 9, 89 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    'Asserts [  sym  ]';
    state.push_fn( hc_css__general_enclosed_list_1466_goto /*hc_css__general_enclosed_list_1466_goto( state, db, 302 )*/, 302 );
    '"--LEAF--"';
    '302:1045 css__general_enclosed_list_1466=>css__general_enclosed_list_1466 • θsym';
    scan( state.lexer, 249, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    'Asserts [  id  ]';
    state.push_fn( hc_css__general_enclosed_list_1466_goto /*hc_css__general_enclosed_list_1466_goto( state, db, 302 )*/, 302 );
    '"--LEAF--"';
    '302:1046 css__general_enclosed_list_1466=>css__general_enclosed_list_1466 • θid';
    scan( state.lexer, 245, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 302 ) ? prod  : - 1
}

function hc_css__media_query_group_1473_0_(state, db, prod){
    scan( state.lexer, 595, 9 );
    'offset 0 peek_level-1 [  and  ]';
    '303:1047 css__media_query_group_1473_0_=>• τand css__media_condition_without_or';
    if( state.lexer._type  == 209 ){
    'Assert Consume [  and  ]';
    consume( state );
    '"--LEAF--"';
    '303:1047 css__media_query_group_1473_0_=>τand • css__media_condition_without_or';
    scan( state.lexer, 601, 9 );
    if( ( state.lexer._type  == 168 || state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_c72e6f9542bb18eb, 303 );
        return hc_css__media_condition_without_or( state, db, 0 )
    }
};
    return - 1
}

function hc_css__media_and_list_1603(state, db, prod){
    '"--LEAF--"';
    '304:1048 css__media_and_list_1603=>• css__media_and_list_1603_group_2013_0_';
    state.push_fn( branch_1c5b7dbf6da7b7b6, 304 );
    return hc_css__media_and_list_1603_group_2013_0_( state, db, 0 )
}

function hc_css__media_and_list_1603_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 304: 
            {
                'offset 1 peek_level0 [  and ) , { ; END_OF_PRODUCTION  ]';
                '304:1049 css__media_and_list_1603=>css__media_and_list_1603 • css__media_and_list_1603_group_2013_0_';
                '249:842 css__media_and=>css__media_in_parenths css__media_and_list_1603 •';
                scan( state.lexer, 602, 9 );
                if( state.lexer._type  == 209 ){
                    'Asserts [  and  ]';
                    state.push_fn( hc_css__media_and_list_1603_goto /*hc_css__media_and_list_1603_goto( state, db, 304 )*/, 304 );
                    '"--LEAF--"';
                    '304:1049 css__media_and_list_1603=>css__media_and_list_1603 • css__media_and_list_1603_group_2013_0_';
                    scan( state.lexer, 595, 9 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 304 );
                        return hc_css__media_and_list_1603_group_2013_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 304 ) ? prod  : - 1
}

function hc_css__media_or_list_1605(state, db, prod){
    '"--LEAF--"';
    '305:1050 css__media_or_list_1605=>• css__media_or_list_1605_group_2019_0_';
    state.push_fn( branch_fbb5c57c5a37a9d6, 305 );
    return hc_css__media_or_list_1605_group_2019_0_( state, db, 0 )
}

function hc_css__media_or_list_1605_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 305: 
            {
                'offset 1 peek_level0 [  or ) , ; { END_OF_PRODUCTION  ]';
                '305:1051 css__media_or_list_1605=>css__media_or_list_1605 • css__media_or_list_1605_group_2019_0_';
                '250:843 css__media_or=>css__media_in_parenths css__media_or_list_1605 •';
                scan( state.lexer, 603, 9 );
                if( state.lexer._type  == 210 ){
                    'Asserts [  or  ]';
                    state.push_fn( hc_css__media_or_list_1605_goto /*hc_css__media_or_list_1605_goto( state, db, 305 )*/, 305 );
                    '"--LEAF--"';
                    '305:1051 css__media_or_list_1605=>css__media_or_list_1605 • css__media_or_list_1605_group_2019_0_';
                    scan( state.lexer, 594, 9 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 305 );
                        return hc_css__media_or_list_1605_group_2019_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 305 ) ? prod  : - 1
}

function hc_css__STYLE_RULE_list_1607(state, db, prod){
    '"--LEAF--"';
    '306:1052 css__STYLE_RULE_list_1607=>• css__COMPLEX_SELECTOR';
    state.push_fn( branch_e84512e4653d7482, 306 );
    return hc_css__COMPLEX_SELECTOR( state, db, 0 )
}

function hc_css__STYLE_RULE_list_1607_goto(state, db, prod){
    'offset 1 peek_level-1 [  , {  ]';
    '306:1053 css__STYLE_RULE_list_1607=>css__STYLE_RULE_list_1607 • τ, css__COMPLEX_SELECTOR';
    '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ css__declaration_list css__STYLE_RULE_list_1610 τ}';
    '252:846 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ css__STYLE_RULE_list_1610 τ}';
    '252:847 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ css__declaration_list τ}';
    '252:848 css__STYLE_RULE=>css__STYLE_RULE_list_1607 • τ{ τ}';
    scan( state.lexer, 604, 9 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( hc_css__STYLE_RULE_list_1607_goto /*hc_css__STYLE_RULE_list_1607_goto( state, db, 306 )*/, 306 );
    '"--LEAF--"';
    '306:1053 css__STYLE_RULE_list_1607=>css__STYLE_RULE_list_1607 • τ, css__COMPLEX_SELECTOR';
    scan( state.lexer, 591, 9 );
    consume( state );
    state.push_fn( branch_a8b069c903e9e56e, 306 );
    return hc_css__COMPLEX_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 306
};
    return ( prod  == 306 ) ? prod  : - 1
}

function hc_css__STYLE_RULE_list_1610(state, db, prod){
    scan( state.lexer, 156, 9 );
    'offset 0 peek_level-1 [  ;  ]';
    '307:1054 css__STYLE_RULE_list_1610=>• τ;';
    if( state.lexer._type  == 17 ){
    'Assert Consume [  ;  ]';
    consume( state );
    '"--LEAF--"';
    '307:1054 css__STYLE_RULE_list_1610=>τ; •';
    scan( state.lexer, 9, 9 );
    add_reduce( state, 1, 1 );
    return hc_css__STYLE_RULE_list_1610_goto( state, db, 307 )
};
    return - 1
}

function hc_css__STYLE_RULE_list_1610_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 307: 
            {
                'offset 1 peek_level0 [  ; } 230 END_OF_PRODUCTION  ]';
                '307:1055 css__STYLE_RULE_list_1610=>css__STYLE_RULE_list_1610 • τ;';
                '308:1057 css__declaration_list_group_1615_0_=>css__STYLE_RULE_list_1610 •';
                '252:845 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__declaration_list css__STYLE_RULE_list_1610 • τ}';
                '252:846 css__STYLE_RULE=>css__STYLE_RULE_list_1607 τ{ css__STYLE_RULE_list_1610 • τ}';
                '253:849 css__declaration_list=>css__STYLE_RULE_list_1610 • css__declaration';
                '308:1056 css__declaration_list_group_1615_0_=>css__STYLE_RULE_list_1610 • css__declaration';
                scan( state.lexer, 95, 9 );
                if( state.lexer._type  == 17 ){
                    'Asserts [  ;  ]';
                    'offset 1 peek_level1 [  } ; END_OF_PRODUCTION  ]';
                    '307:1055 css__STYLE_RULE_list_1610=>css__STYLE_RULE_list_1610 • τ;';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 47, 9 );
                    if( pk._type  == 18 || pk._type  == 17 || pk._type  == - 1 ){
                        'Asserts [  } ; END_OF_PRODUCTION  ]';
                        state.lexer._type  = 17;
                        state.push_fn( hc_css__STYLE_RULE_list_1610_goto /*hc_css__STYLE_RULE_list_1610_goto( state, db, 307 )*/, 307 );
                        '"--LEAF--"';
                        '307:1055 css__STYLE_RULE_list_1610=>css__STYLE_RULE_list_1610 • τ;';
                        scan( state.lexer, 156, 9 );
                        consume( state );
                        add_reduce( state, 2, 2 );
                        return 0
                    }
                } else if( state.lexer._type  == 18 || state.lexer._type  == 176 ){
                    'Asserts [  } 230  ]';
                    '"--LEAF--"';
                    '"--leafy--"';
                    return 307
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 307 ) ? prod  : - 1
}

function hc_css__declaration_list_group_1615_0_(state, db, prod){
    'offset 0 peek_level-1 [  307  ]';
    '308:1056 css__declaration_list_group_1615_0_=>• css__STYLE_RULE_list_1610 css__declaration';
    '308:1057 css__declaration_list_group_1615_0_=>• css__STYLE_RULE_list_1610';
    state.push_fn( branch_47078fc4fa0fef1c, 0 );
    return hc_css__STYLE_RULE_list_1610( state, db, 0 )
}

function hc_css__keyframes_list_1637(state, db, prod){
    '"--LEAF--"';
    '309:1058 css__keyframes_list_1637=>• css__keyframes_blocks';
    state.push_fn( branch_c725997775810dfc, 309 );
    return hc_css__keyframes_blocks( state, db, 0 )
}

function hc_css__keyframes_list_1637_goto(state, db, prod){
    'offset 1 peek_level0 [  from to num }  ]';
    '309:1059 css__keyframes_list_1637=>css__keyframes_list_1637 • css__keyframes_blocks';
    '258:863 css__keyframes=>τ@keyframes css__keyframes_name τ{ css__keyframes_list_1637 • τ}';
    scan( state.lexer, 605, 9 );
    if( state.lexer._type  == 64 || state.lexer._type  == 182 || state.lexer._type  == 5 ){
    'Asserts [  from to num  ]';
    state.push_fn( hc_css__keyframes_list_1637_goto /*hc_css__keyframes_list_1637_goto( state, db, 309 )*/, 309 );
    '"--LEAF--"';
    '309:1059 css__keyframes_list_1637=>css__keyframes_list_1637 • css__keyframes_blocks';
    scan( state.lexer, 606, 9 );
    if( ( state.lexer._type  == 64 || state.lexer._type  == 182 || state.lexer._type  == 5 ) ){
        state.push_fn( branch_449740ceb8df7fb1, 309 );
        return hc_css__keyframes_blocks( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 309 ) ? prod  : - 1
}

function hc_css__keyframes_blocks_list_1641(state, db, prod){
    '"--LEAF--"';
    '310:1060 css__keyframes_blocks_list_1641=>• css__keyframe_selector';
    state.push_fn( branch_e4d733a71edfa6fb, 310 );
    return hc_css__keyframe_selector( state, db, 0 )
}

function hc_css__keyframes_blocks_list_1641_goto(state, db, prod){
    'offset 1 peek_level-1 [  , {  ]';
    '310:1061 css__keyframes_blocks_list_1641=>css__keyframes_blocks_list_1641 • τ, css__keyframe_selector';
    '260:866 css__keyframes_blocks=>css__keyframes_blocks_list_1641 • τ{ css__declaration_list τ; τ}';
    '260:867 css__keyframes_blocks=>css__keyframes_blocks_list_1641 • τ{ css__declaration_list τ}';
    scan( state.lexer, 604, 9 );
    if( state.lexer._type  == 58 ){
    'Asserts [  ,  ]';
    state.push_fn( hc_css__keyframes_blocks_list_1641_goto /*hc_css__keyframes_blocks_list_1641_goto( state, db, 310 )*/, 310 );
    '"--LEAF--"';
    '310:1061 css__keyframes_blocks_list_1641=>css__keyframes_blocks_list_1641 • τ, css__keyframe_selector';
    scan( state.lexer, 591, 9 );
    consume( state );
    state.push_fn( branch_a8b069c903e9e56e, 310 );
    return hc_css__keyframe_selector( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    'Asserts [  {  ]';
    '"--LEAF--"';
    '"--leafy--"';
    return 310
};
    return ( prod  == 310 ) ? prod  : - 1
}

function hc_css__supports_group_1652_0_(state, db, prod){
    '"--LEAF--"';
    '311:1062 css__supports_group_1652_0_=>• css__supports_condition';
    state.push_fn( branch_017e32e2623dd334, 311 );
    return hc_css__supports_condition( state, db, 0 )
}

function hc_javascript__int_token_list_601_group_1799_0_(state, db, prod){
    scan( state.lexer, 550, 9 );
    'offset 0 peek_level-1 [  _  ]';
    '312:1063 javascript__int_token_list_601_group_1799_0_=>• τ_ θnum';
    if( state.lexer._type  == 60 ){
    'Assert Consume [  _  ]';
    consume( state );
    '"--LEAF--"';
    '312:1063 javascript__int_token_list_601_group_1799_0_=>τ_ • θnum';
    scan( state.lexer, 248, 9 );
    if( ( state.lexer._type  == 5 ) ){
        consume( state );
        add_reduce( state, 2, 12 );
        return 312
    }
};
    return - 1
}

function hc_javascript__hex_token_list_607_group_1847_0_(state, db, prod){
    scan( state.lexer, 550, 9 );
    'offset 0 peek_level-1 [  _  ]';
    '313:1064 javascript__hex_token_list_607_group_1847_0_=>• τ_ javascript__hex_token_list_606';
    if( state.lexer._type  == 60 ){
    'Assert Consume [  _  ]';
    consume( state );
    '"--LEAF--"';
    '313:1064 javascript__hex_token_list_607_group_1847_0_=>τ_ • javascript__hex_token_list_606';
    scan( state.lexer, 551, 9 );
    if( ( isTokenActive( state.lexer._type, 607 ) ) ){
        state.push_fn( branch_270cd6bea07a58a0, 313 );
        return hc_javascript__hex_token_list_606( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__octal_token_list_614_group_1880_0_(state, db, prod){
    scan( state.lexer, 550, 9 );
    'offset 0 peek_level-1 [  _  ]';
    '314:1065 javascript__octal_token_list_614_group_1880_0_=>• τ_ javascript__octal_token_list_613';
    if( state.lexer._type  == 60 ){
    'Assert Consume [  _  ]';
    consume( state );
    '"--LEAF--"';
    '314:1065 javascript__octal_token_list_614_group_1880_0_=>τ_ • javascript__octal_token_list_613';
    scan( state.lexer, 566, 9 );
    if( ( isTokenActive( state.lexer._type, 608 ) ) ){
        state.push_fn( branch_3f7f5076b38bcdae, 314 );
        return hc_javascript__octal_token_list_613( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binary_token_list_621_group_1895_0_(state, db, prod){
    scan( state.lexer, 550, 9 );
    'offset 0 peek_level-1 [  _  ]';
    '315:1066 javascript__binary_token_list_621_group_1895_0_=>• τ_ javascript__binary_token_list_620';
    if( state.lexer._type  == 60 ){
    'Assert Consume [  _  ]';
    consume( state );
    '"--LEAF--"';
    '315:1066 javascript__binary_token_list_621_group_1895_0_=>τ_ • javascript__binary_token_list_620';
    scan( state.lexer, 575, 9 );
    if( ( state.lexer._type  == 200 || state.lexer._type  == 199 ) ){
        state.push_fn( branch_c01b7e540a0470ae, 315 );
        return hc_javascript__binary_token_list_620( state, db, 0 )
    }
};
    return - 1
}

function hc_css__STYLE_SHEET_list_1282_group_1941_0_(state, db, prod){
    '"--LEAF--"';
    '316:1067 css__STYLE_SHEET_list_1282_group_1941_0_=>• css__import τ;';
    state.push_fn( branch_bbdf222a52f0a3f4, 316 );
    return hc_css__import( state, db, 0 )
}

function hc_css__supports_condition_list_1314_group_1971_0_(state, db, prod){
    scan( state.lexer, 595, 9 );
    'offset 0 peek_level-1 [  and  ]';
    '317:1068 css__supports_condition_list_1314_group_1971_0_=>• τand css__supports_in_parens';
    if( state.lexer._type  == 209 ){
    'Assert Consume [  and  ]';
    consume( state );
    '"--LEAF--"';
    '317:1068 css__supports_condition_list_1314_group_1971_0_=>τand • css__supports_in_parens';
    scan( state.lexer, 609, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 || state.lexer._type  == 169 ) ){
        state.push_fn( branch_36d0702fdc0ac5ee, 317 );
        return hc_css__supports_in_parens( state, db, 0 )
    }
};
    return - 1
}

function hc_css__supports_condition_list_1314_group_1971_1_(state, db, prod){
    scan( state.lexer, 594, 9 );
    'offset 0 peek_level-1 [  or  ]';
    '318:1069 css__supports_condition_list_1314_group_1971_1_=>• τor css__supports_in_parens';
    if( state.lexer._type  == 210 ){
    'Assert Consume [  or  ]';
    consume( state );
    '"--LEAF--"';
    '318:1069 css__supports_condition_list_1314_group_1971_1_=>τor • css__supports_in_parens';
    scan( state.lexer, 609, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 || state.lexer._type  == 169 ) ){
        state.push_fn( branch_71c00b5275f03638, 318 );
        return hc_css__supports_in_parens( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMPLEX_SELECTOR_list_1327_group_1980_0_(state, db, prod){
    scan( state.lexer, 596, 9 );
    'offset 0 peek_level0 [  * 216 # . [ : > + ~ ||  ]';
    '319:1070 css__COMPLEX_SELECTOR_list_1327_group_1980_0_=>• css__COMPLEX_SELECTOR_list_1327_group_1980_0__group_2059_0_ css__COMPOUND_SELECTOR';
    '319:1071 css__COMPLEX_SELECTOR_list_1327_group_1980_0_=>• css__COMPOUND_SELECTOR';
    if( isTokenActive( state.lexer._type, 98 ) ){
    'Asserts [  * 216 # . [ :  ]';
    state.push_fn( set_production /*319*/, 319 );
    '"--LEAF--"';
    '319:1071 css__COMPLEX_SELECTOR_list_1327_group_1980_0_=>• css__COMPOUND_SELECTOR';
    state.push_fn( branch_5cb267bf74038e65, 319 );
    return hc_css__COMPOUND_SELECTOR( state, db, 0 )
} else {
    state.push_fn( set_production /*319*/, 319 );
    '"--LEAF--"';
    '319:1070 css__COMPLEX_SELECTOR_list_1327_group_1980_0_=>• css__COMPLEX_SELECTOR_list_1327_group_1980_0__group_2059_0_ css__COMPOUND_SELECTOR';
    state.push_fn( branch_f52f125c2a796e7b, 319 );
    return hc_css__COMPLEX_SELECTOR_list_1327_group_1980_0__group_2059_0_( state, db, 0 )
};
    return - 1
}

function hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0_(state, db, prod){
    'offset 0 peek_level-1 [  226  ]';
    '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>• css__PSEUDO_ELEMENT_SELECTOR css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064';
    '320:1073 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>• css__PSEUDO_ELEMENT_SELECTOR';
    state.push_fn( branch_3e18bb7aa0105ea8, 0 );
    return hc_css__PSEUDO_ELEMENT_SELECTOR( state, db, 0 )
}

function hc_css__media_and_list_1603_group_2013_0_(state, db, prod){
    scan( state.lexer, 595, 9 );
    'offset 0 peek_level-1 [  and  ]';
    '321:1074 css__media_and_list_1603_group_2013_0_=>• τand css__media_in_parenths';
    if( state.lexer._type  == 209 ){
    'Assert Consume [  and  ]';
    consume( state );
    '"--LEAF--"';
    '321:1074 css__media_and_list_1603_group_2013_0_=>τand • css__media_in_parenths';
    scan( state.lexer, 610, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_c4799025e7c55b46, 321 );
        return hc_css__media_in_parenths( state, db, 0 )
    }
};
    return - 1
}

function hc_css__media_or_list_1605_group_2019_0_(state, db, prod){
    scan( state.lexer, 594, 9 );
    'offset 0 peek_level-1 [  or  ]';
    '322:1075 css__media_or_list_1605_group_2019_0_=>• τor css__media_in_parenths';
    if( state.lexer._type  == 210 ){
    'Assert Consume [  or  ]';
    consume( state );
    '"--LEAF--"';
    '322:1075 css__media_or_list_1605_group_2019_0_=>τor • css__media_in_parenths';
    scan( state.lexer, 610, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_c1851f0a1e44b8ad, 322 );
        return hc_css__media_in_parenths( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMPLEX_SELECTOR_list_1327_group_1980_0__group_2059_0_(state, db, prod){
    '"--LEAF--"';
    '323:1076 css__COMPLEX_SELECTOR_list_1327_group_1980_0__group_2059_0_=>• css__COMBINATOR';
    state.push_fn( branch_36f22698b835f22a, 323 );
    return hc_css__COMBINATOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064(state, db, prod){
    '"--LEAF--"';
    '324:1077 css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064=>• css__PSEUDO_CLASS_SELECTOR';
    state.push_fn( branch_81d7589e5ba94b1b, 324 );
    return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 324: 
            {
                'offset 1 peek_level0 [  : sp > + ~ || * # . [ ) , { END_OF_PRODUCTION 216  ]';
                '324:1078 css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064=>css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064 • css__PSEUDO_CLASS_SELECTOR';
                '320:1072 css__COMPOUND_SELECTOR_list_1330_group_1990_0_=>css__PSEUDO_ELEMENT_SELECTOR css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064 •';
                scan( state.lexer, 88, 89 );
                if( state.lexer._type  == 70 ){
                    'Asserts [  :  ]';
                    'offset 1 peek_level1 [  216  ]';
                    '324:1078 css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064=>css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064 • css__PSEUDO_CLASS_SELECTOR';
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 90, 63 );
                    if( pk._type  == 170 ){
                        'Asserts [  216  ]';
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064_goto /*hc_css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064_goto( state, db, 324 )*/, 324 );
                        '"--LEAF--"';
                        '324:1078 css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064=>css__COMPOUND_SELECTOR_list_1330_group_1990_0__list_2064 • css__PSEUDO_CLASS_SELECTOR';
                        scan( state.lexer, 535, 89 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 324 );
                            return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 324 ) ? prod  : - 1
} 

        function recognize_primary( string, production){

            //create the input data buffer. 
            const temp_buffer = new Uint8Array(string.length * 4);
            
            const actual_length = fillByteBufferWithUTF8FromString(string, temp_buffer, temp_buffer.length);

            const resolved_buffer = new Uint8Array(temp_buffer.buffer, 0, actual_length);

            switch(production){
                case 0 : return recognize(resolved_buffer, actual_length, 1, hc_COMPONENT);
                case 1 : return recognize(resolved_buffer, actual_length, 17, hc_html__TAG);
                case 2 : return recognize(resolved_buffer, actual_length, 126, hc_javascript__expression);
                case 3 : return recognize(resolved_buffer, actual_length, 203, hc_css__STYLE_SHEET);
                case 4 : return recognize(resolved_buffer, actual_length, 211, hc_css__COMPLEX_SELECTOR);
            }
    
            return {invalid: {}, valid:{}};
        }

        return {
            init_table: ()=> {
                const table = new Uint8Array(382976);
                init_table(table);
                return table;
            },
            recognize: recognize_primary,
            create_iterator: data => new ParserStateIterator(data)
        };
    });

    const reduce_functions = [(_,s)=>s[s.length-1], (env, sym, pos)=> ([sym[0]]) /*0*/,
(env, sym, pos)=> ((sym[0].push(sym[1]),sym[0])) /*1*/,
(env, sym, pos)=> ({type:env.typ.HTML_IMPORT,tag:"IMPORT",attributes:sym[1]||[],nodes:[],VOID:true,pos}) /*2*/,
(env, sym, pos)=> ({type:env.typ.HTML_IMPORT,tag:"IMPORT",attributes:null||[],nodes:[],VOID:true,pos}) /*3*/,
(env, sym, pos)=> ({type:env.typ.HTMLImportAttribute,name:sym[0],value:sym[2],pos}) /*4*/,
(env, sym, pos)=> ({type:env.typ.HTMLExportAttribute,name:sym[0],value:sym[2],pos}) /*5*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:sym[1],secondary_ast:sym[3],DEBUG:sym[1].length==2,pos}) /*6*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:sym[1],secondary_ast:null,DEBUG:sym[1].length==2,pos}) /*7*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:null,secondary_ast:sym[2],DEBUG:null.length==2,pos}) /*8*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:null,secondary_ast:null,DEBUG:null.length==2,pos}) /*9*/,
(env, sym, pos)=> (sym[0]+"") /*10*/,
(env, sym, pos)=> (sym[0]+sym[1]) /*11*/,
(env, sym, pos)=> (sym[1].DTD=sym[0],sym[1]) /*12*/,
(env, sym, pos)=> (sym[0]) /*13*/,
(env, sym, pos)=> ({type:"DTD",tag:sym[1]||"",value:sym[3]}) /*14*/,
(env, sym, pos)=> ({type:"DTD",tag:null||"",value:sym[2]}) /*15*/,
(env, sym, pos)=> ((sym[1].import_list=sym[0],sym[1])) /*16*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:sym[4]||[],VOID:false,pos}) /*17*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:[],VOID:false,pos}) /*18*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:[],VOID:true,pos}) /*19*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:sym[2]||[],nodes:[sym[4]],pos}) /*20*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:sym[3]||[],VOID:false,pos}) /*21*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:[],VOID:false,pos}) /*22*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:[],VOID:true,pos}) /*23*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:null||[],nodes:[sym[3]],pos}) /*24*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:sym[2]||[],nodes:[null],pos}) /*25*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:null||[],nodes:[null],pos}) /*26*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:sym[2],IS_BINDING:false,pos}) /*27*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:"",IS_BINDING:false,pos}) /*28*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:sym[2]||"",IS_BINDING:!!sym[2],pos}) /*29*/,
(env, sym, pos)=> (sym[1]) /*30*/,
(env, sym, pos)=> (sym[0].slice(1,-1)) /*31*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:sym[2]||[],nodes:[sym[4]],pos}) /*32*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:null||[],nodes:[sym[3]],pos}) /*33*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:sym[2]||[],nodes:[null],pos}) /*34*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:null||[],nodes:[null],pos}) /*35*/,
(env, sym, pos)=> ({type:env.typ.HTMLText,data:sym[0],IS_BINDING:false,pos}) /*36*/,
(env, sym, pos)=> (env.IS_MODULE=false,sym[0]) /*37*/,
(env, sym, pos)=> ({type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:sym[0]||[],pos}) /*38*/,
(env, sym, pos)=> ({type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:[],pos}) /*39*/,
(env, sym, pos)=> (env.IS_MODULE=true,sym[0]) /*40*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1],sym[2]],pos}) /*41*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1]],pos}) /*42*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0]],pos}) /*43*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0],sym[2]],pos}) /*44*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierDefault,sym[0]) /*45*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierModule,sym[0]) /*46*/,
(env, sym, pos)=> ({type:env.typ.Identifier,value:sym[0],pos}) /*47*/,
(env, sym, pos)=> ({type:env.typ.NameSpaceImport,nodes:[sym[2]],pos}) /*48*/,
(env, sym, pos)=> ({type:env.typ.NamedImports,nodes:sym[1]||[],pos}) /*49*/,
(env, sym, pos)=> ({type:env.typ.NamedImports,nodes:null||[],pos}) /*50*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0]],pos}) /*51*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0],sym[2]],pos}) /*52*/,
(env, sym, pos)=> ({type:env.typ.FromClause,nodes:[sym[1]],pos}) /*53*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:sym[1]||"",pos}) /*54*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:null||"",pos}) /*55*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[null,sym[2]],DEFAULT:false,pos}) /*56*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1],sym[2]],DEFAULT:false,pos}) /*57*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1]],DEFAULT:false,pos}) /*58*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[2]],DEFAULT:true,pos}) /*59*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1],null],DEFAULT:false,pos}) /*60*/,
(env, sym, pos)=> ({type:env.typ.ExportClause,nodes:sym[1]||[],pos}) /*61*/,
(env, sym, pos)=> ({type:env.typ.ExportClause,nodes:null||[],pos}) /*62*/,
(env, sym, pos)=> ({type:env.typ.VariableStatement,nodes:sym[1],pos}) /*63*/,
(env, sym, pos)=> ((sym[0].push(sym[2]),sym[0])) /*64*/,
(env, sym, pos)=> ({type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*65*/,
(env, sym, pos)=> ({type:env.typ.IdentifierBinding,value:sym[0]}) /*66*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:"=",nodes:[sym[0],sym[2]],pos}) /*67*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*68*/,
(env, sym, pos)=> ({type:env.typ.ConditionalExpression,nodes:[sym[0],sym[2],sym[4]],pos}) /*69*/,
(env, sym, pos)=> ({type:env.typ.LogicalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*70*/,
(env, sym, pos)=> ({type:env.typ.BitwiseExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*71*/,
(env, sym, pos)=> ({type:env.typ.EqualityExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*72*/,
(env, sym, pos)=> ({type:env.typ.RelationalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*73*/,
(env, sym, pos)=> ({type:env.typ.InstanceOfExpression,nodes:[sym[0],sym[2]],pos}) /*74*/,
(env, sym, pos)=> ({type:env.typ.InExpression,nodes:[sym[0],sym[2]],pos}) /*75*/,
(env, sym, pos)=> ({type:env.typ.ShiftExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*76*/,
(env, sym, pos)=> ({type:env.typ.AdditiveExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*77*/,
(env, sym, pos)=> ({type:env.typ.MultiplicativeExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*78*/,
(env, sym, pos)=> ({type:env.typ.ExponentiationExpression,nodes:[sym[0],sym[2]],pos}) /*79*/,
(env, sym, pos)=> ({type:env.typ.DeleteExpression,nodes:[sym[1]],pos}) /*80*/,
(env, sym, pos)=> ({type:env.typ.VoidExpression,nodes:[sym[1]],pos}) /*81*/,
(env, sym, pos)=> ({type:env.typ.TypeofExpression,nodes:[sym[1]],pos}) /*82*/,
(env, sym, pos)=> ({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*83*/,
(env, sym, pos)=> ((sym[1].type==env.typ.NumericLiteral||sym[1].type==env.typ.BigIntLiteral)?(sym[1].NEGATIVE=true,sym[1]):({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos})) /*84*/,
(env, sym, pos)=> ({type:env.typ.PostExpression,symbol:sym[1],nodes:[sym[0]],pos}) /*85*/,
(env, sym, pos)=> ({type:env.typ.PreExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*86*/,
(env, sym, pos)=> ({type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:true}) /*87*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:false})) /*88*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:true}) /*89*/,
(env, sym, pos)=> ({type:env.typ.NewInstanceExpression,nodes:[sym[1],sym[2]],pos}) /*90*/,
(env, sym, pos)=> ({type:env.typ.NewExpression,nodes:[sym[1]],pos}) /*91*/,
(env, sym, pos)=> ({type:env.typ.ThisLiteral,pos}) /*92*/,
(env, sym, pos)=> env.functions.reinterpretParenthesized (env, sym, pos)/*93*/,
(env, sym, pos)=> ({type:env.typ.IdentifierReference,value:sym[0]}) /*94*/,
(env, sym, pos)=> ({type:env.typ.BooleanLiteral,value:sym[0],pos}) /*95*/,
(env, sym, pos)=> ({type:env.typ.NullLiteral,pos}) /*96*/,
(env, sym, pos)=> ({type:env.typ.NumericLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*97*/,
(env, sym, pos)=> ({type:env.typ.BigIntLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*98*/,
(env, sym, pos)=> (sym[0]+sym[1]+sym[2]) /*99*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[sym[1]],pos}) /*100*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:sym[1],pos}) /*101*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1],sym[3]],pos}) /*102*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[],pos}) /*103*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1]],pos}) /*104*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:0,pos}) /*105*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:sym[0].count+1,pos}) /*106*/,
(env, sym, pos)=> ([sym[0],sym[1]]) /*107*/,
(env, sym, pos)=> ([...sym[0],sym[2],sym[3]]) /*108*/,
(env, sym, pos)=> ([...sym[0],sym[2]]) /*109*/,
(env, sym, pos)=> ({type:env.typ.Spread,nodes:[sym[1]],pos}) /*110*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:[],pos}) /*111*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:sym[1],pos}) /*112*/,
(env, sym, pos)=> (sym[0].push(sym[2]),sym[0]) /*113*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,sym[0]) /*114*/,
(env, sym, pos)=> ({type:env.typ.PropertyBinding,nodes:[sym[0],sym[2]],pos}) /*115*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*116*/,
(env, sym, pos)=> ({type:env.typ.IdentifierName,value:sym[0],pos}) /*117*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*118*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1],sym[5]],pos}) /*119*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3],sym[6]],pos}) /*120*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],sym[6]],pos}) /*121*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*122*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*123*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*124*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1]],pos}) /*125*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3]],pos}) /*126*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],sym[5]],pos}) /*127*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,sym[5]],pos}) /*128*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],null],pos}) /*129*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*130*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*131*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*132*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,sym[4]],pos}) /*133*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],null],pos}) /*134*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,null],pos}) /*135*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*136*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,null],pos}) /*137*/,
(env, sym, pos)=> ({type:env.typ.ComputedProperty,nodes:[sym[1]],pos}) /*138*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[sym[0]],pos}) /*139*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:sym[0],pos}) /*140*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[...sym[0],sym[2]],pos}) /*141*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[],pos}) /*142*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[sym[1]],pos}) /*143*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1]],pos}) /*144*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1],sym[3]],pos}) /*145*/,
(env, sym, pos)=> (sym[1]?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}:sym[0]) /*146*/,
(env, sym, pos)=> (null?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0]],pos}:sym[0]) /*147*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1],sym[2]],pos}) /*148*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1]],pos}) /*149*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3],sym[4]],pos}) /*150*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1]],pos}) /*151*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3]],pos}) /*152*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[],pos}) /*153*/,
(env, sym, pos)=> ([...sym[0],...sym[2]]) /*154*/,
(env, sym, pos)=> ({type:env.typ.FunctionBody,nodes:sym[0]||[],pos}) /*155*/,
(env, sym, pos)=> ([...sym[0],sym[1]]) /*156*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:sym[1]||[],pos}) /*157*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:null||[],pos}) /*158*/,
(env, sym, pos)=> ({type:env.typ.ExpressionStatement,nodes:[sym[0]],pos}) /*159*/,
(env, sym, pos)=> ((sym[0].type==env.typ.ExpressionList?(sym[0].nodes.push(sym[2]),sym[0]):{type:env.typ.ExpressionList,nodes:[sym[0],sym[2]],pos})) /*160*/,
(env, sym, pos)=> ({type:env.typ.LabeledStatement,nodes:[sym[0],sym[2]],pos}) /*161*/,
(env, sym, pos)=> ({type:env.typ.IdentifierLabel,value:sym[0]}) /*162*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos}) /*163*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*164*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos}) /*165*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],sym[7]],pos}) /*166*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos}) /*167*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*168*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],sym[6]],pos}) /*169*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*170*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],sym[6]],pos}) /*171*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos}) /*172*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,sym[6]],pos}) /*173*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],sym[5]],pos}) /*174*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*175*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,sym[5]],pos}) /*176*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,sym[5]],pos}) /*177*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,sym[4]],pos}) /*178*/,
(env, sym, pos)=> ({type:env.typ.EmptyStatement,pos}) /*179*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*180*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],null],pos}) /*181*/,
(env, sym, pos)=> ({type:env.typ.DoStatement,nodes:[sym[1],sym[4]],pos}) /*182*/,
(env, sym, pos)=> ({type:env.typ.WhileStatement,nodes:[sym[2],sym[4]],pos}) /*183*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],sym[6],sym[8]],LEX:false,pos}) /*184*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],sym[5],sym[7]],LEX:true,pos}) /*185*/,
(env, sym, pos)=> ({type:env.typ.ForInStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*186*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[3],sym[5],sym[7]],pos,AWAIT:!!sym[1]}) /*187*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],sym[5],sym[7]],LEX:false,pos}) /*188*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[5],sym[7]],LEX:false,pos}) /*189*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],null,sym[7]],LEX:false,pos}) /*190*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[4],sym[6]],LEX:true,pos}) /*191*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],null,sym[6]],LEX:true,pos}) /*192*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[2],sym[4],sym[6]],pos,AWAIT:!!null}) /*193*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,sym[4],sym[6]],LEX:false,pos}) /*194*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],null,sym[6]],LEX:false,pos}) /*195*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[6]],LEX:false,pos}) /*196*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[5]],LEX:true,pos}) /*197*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,null,sym[5]],LEX:false,pos}) /*198*/,
(env, sym, pos)=> ({type:env.typ.LexicalDeclaration,symbol:sym[0],nodes:sym[1],pos}) /*199*/,
(env, sym, pos)=> ("let") /*200*/,
(env, sym, pos)=> ("const") /*201*/,
(env, sym, pos)=> ({type:env.typ.LexicalBinding,nodes:[sym[1]],symbol:sym[0],pos}) /*202*/,
(env, sym, pos)=> ({type:env.typ.SwitchStatement,nodes:[sym[2],sym[4]],pos}) /*203*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2],...sym[3]],pos}) /*204*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1],...sym[2]],pos}) /*205*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],...sym[2]],pos}) /*206*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2]],pos}) /*207*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1]],pos}) /*208*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1]],pos}) /*209*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[],pos}) /*210*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1],...sym[3]],pos}) /*211*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1]],pos}) /*212*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[...sym[2]],pos}) /*213*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[],pos}) /*214*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:sym[1]?[sym[1]]:[],pos}) /*215*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:null?[null]:[],pos}) /*216*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[sym[1]],pos}) /*217*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[null],pos}) /*218*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[sym[1]],pos}) /*219*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[],pos}) /*220*/,
(env, sym, pos)=> ({type:env.typ.WithStatement,nodes:[sym[2],sym[4]],pos}) /*221*/,
(env, sym, pos)=> ({type:env.typ.ThrowStatement,nodes:[sym[1]],pos}) /*222*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],null],pos}) /*223*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],null,sym[2]],pos}) /*224*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],sym[3]],pos}) /*225*/,
(env, sym, pos)=> ({type:env.typ.CatchClause,nodes:[sym[2],sym[4]],pos}) /*226*/,
(env, sym, pos)=> ({type:env.typ.FinallyClause,nodes:[sym[1]],pos}) /*227*/,
(env, sym, pos)=> ({type:env.typ.DebuggerStatement,pos}) /*228*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2],...sym[4]],pos}) /*229*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1],...sym[3]],pos}) /*230*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null,...sym[3]],pos}) /*231*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2]],pos}) /*232*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null,...sym[2]],pos}) /*233*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1]],pos}) /*234*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null],pos}) /*235*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null],pos}) /*236*/,
(env, sym, pos)=> (sym[0].concat(sym[1])) /*237*/,
(env, sym, pos)=> ([]) /*238*/,
(env, sym, pos)=> ((sym[1].STATIC=true,sym[1])) /*239*/,
(env, sym, pos)=> ((sym[0].type=env.typ.FunctionExpression,sym[0])) /*240*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],flags:sym[3],pos}) /*241*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,flags:sym[2],pos}) /*242*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],pos}) /*243*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,pos}) /*244*/,
(env, sym, pos)=> ({type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,value:sym[1],pos}],NO_SUBSTITUTE:true,pos}) /*245*/,
(env, sym, pos)=> (sym[2].unshift(sym[0],sym[1]),{type:env.typ.Template,nodes:sym[2],pos}) /*246*/,
(env, sym, pos)=> ({type:env.typ.TemplateHead,value:sym[1],pos}) /*247*/,
(env, sym, pos)=> (sym[0].push(sym[1]),sym[0]) /*248*/,
(env, sym, pos)=> ({type:env.typ.TemplateTail,value:sym[1],pos}) /*249*/,
(env, sym, pos)=> (sym[0].push(sym[1],sym[2]),sym[0]) /*250*/,
(env, sym, pos)=> ({type:env.typ.TemplateMiddle,value:sym[1],pos}) /*251*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1]],pos}) /*252*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:false})) /*253*/,
(env, sym, pos)=> ({type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:true}) /*254*/,
(env, sym, pos)=> ({type:env.typ.NewTarget,pos}) /*255*/,
(env, sym, pos)=> ({type:env.typ.ImportMeta,pos}) /*256*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:sym[1]||[],pos}) /*257*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:null||[],pos}) /*258*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:false}) /*259*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[2]],pos,TEMPLATE:true}) /*260*/,
(env, sym, pos)=> ({type:env.typ.SuperCall,nodes:[sym[1]],pos}) /*261*/,
(env, sym, pos)=> ({type:env.typ.ImportCall,nodes:[sym[2]],pos}) /*262*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos}) /*263*/,
(env, sym, pos)=> ({type:env.typ.OptionalMemberExpression,nodes:[sym[0],sym[1].type=="computed"?sym[1].val:sym[1]],pos,COMPUTED:sym[1].type=="computed"}) /*264*/,
(env, sym, pos)=> ({type:"computed",val:sym[2]}) /*265*/,
(env, sym, pos)=> ({type:env.typ.AwaitExpression,nodes:[sym[1]],pos}) /*266*/,
(env, sym, pos)=> ({type:env.typ.CoalesceExpression,nodes:[sym[0],sym[2]],pos}) /*267*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[],pos}) /*268*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[2]],pos,GENERATOR:!!sym[1]}) /*269*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[1]],pos,GENERATOR:!!null}) /*270*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!sym[0],nodes:[sym[1],sym[3]],pos}) /*271*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!null,nodes:[sym[0],sym[2]],pos}) /*272*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierBinding,sym[0]) /*273*/,
(env, sym, pos)=> env.functions.reinterpretArrowParameters (env, sym, pos)/*274*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[],pos}) /*275*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1],sym[3]],pos}) /*276*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:sym[1],pos}) /*277*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:sym[0],nodes:sym[1],pos}) /*278*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:null,nodes:sym[0],pos}) /*279*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:sym[0],nodes:null,pos}) /*280*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:null,nodes:null,pos}) /*281*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],sym[2],...(sym[3]||[])],pos}) /*282*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],null,...(sym[2]||[])],pos}) /*283*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],sym[2],...(null||[])],pos}) /*284*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],null,...(null||[])],pos}) /*285*/,
(env, sym, pos)=> (new env.fn.url(sym[2])) /*286*/,
(env, sym, pos)=> ([{type:env.typ.Not,nodes:[sym[1]],pos}]) /*287*/,
(env, sym, pos)=> ([sym[0],...sym[1]]) /*288*/,
(env, sym, pos)=> ({type:env.typ.Parenthesis,nodes:[sym[1]],pos}) /*289*/,
(env, sym, pos)=> ({type:env.typ.Function,nodes:[sym[2]],pos}) /*290*/,
(env, sym, pos)=> ((sym[0]&&sym[1])?{type:env.typ.ComplexSelector,nodes:[sym[0],...((sym[1]).flat(2))],pos}:sym[0]) /*291*/,
(env, sym, pos)=> ((sym[0]&&null)?{type:env.typ.ComplexSelector,nodes:[sym[0]],pos}:sym[0]) /*292*/,
(env, sym, pos)=> ((sym[0]&&!(sym[1]||sym[2]))?sym[0]:(sym[1]&&sym[1].length==1&&!(sym[0]||sym[2]))?sym[1][0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1],...sym[2]],pos}) /*293*/,
(env, sym, pos)=> ((null&&!(sym[0]||sym[1]))?null:(sym[0]&&sym[0].length==1&&!(null||sym[1]))?sym[0][0]:{type:env.typ.CompoundSelector,nodes:[...sym[0],...sym[1]],pos}) /*294*/,
(env, sym, pos)=> ((sym[0]&&!(null||sym[1]))?sym[0]:(null&&null.length==1&&!(sym[0]||sym[1]))?null[0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1]],pos}) /*295*/,
(env, sym, pos)=> ((sym[0]&&!(sym[1]||null))?sym[0]:(sym[1]&&sym[1].length==1&&!(sym[0]||null))?sym[1][0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1]],pos}) /*296*/,
(env, sym, pos)=> ((null&&!(null||sym[0]))?null:(null&&null.length==1&&!(null||sym[0]))?null[0]:{type:env.typ.CompoundSelector,nodes:[...sym[0]],pos}) /*297*/,
(env, sym, pos)=> ((null&&!(sym[0]||null))?null:(sym[0]&&sym[0].length==1&&!(null||null))?sym[0][0]:{type:env.typ.CompoundSelector,nodes:[...sym[0]],pos}) /*298*/,
(env, sym, pos)=> ((sym[0]&&!(null||null))?sym[0]:(null&&null.length==1&&!(sym[0]||null))?null[0]:{type:env.typ.CompoundSelector,nodes:[sym[0]],pos}) /*299*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[sym[0]],pos,precedence:env.typ.D_SPECIFIER}) /*300*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[{type:env.typ.QualifiedName,ns:sym[0]||"",val:"*",pos,precedence:0}],pos}) /*301*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[{type:env.typ.QualifiedName,ns:"",val:"*",pos,precedence:0}],pos}) /*302*/,
(env, sym, pos)=> ({type:env.typ.QualifiedName,ns:sym[0]||"",val:sym[1],pos}) /*303*/,
(env, sym, pos)=> ({type:env.typ.QualifiedName,ns:"",val:sym[0],pos}) /*304*/,
(env, sym, pos)=> ({type:env.typ.IdSelector,val:sym[1],pos,precedence:env.typ.B_SPECIFIER}) /*305*/,
(env, sym, pos)=> ({type:env.typ.ClassSelector,val:sym[1],pos,precedence:env.typ.C_SPECIFIER}) /*306*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],pos,precedence:env.typ.C_SPECIFIER}) /*307*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],match_type:sym[2],match_val:sym[3],mod:sym[4],pos,precedence:env.typ.C_SPECIFIER}) /*308*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],match_type:sym[2],match_val:sym[3],pos,precedence:env.typ.C_SPECIFIER}) /*309*/,
(env, sym, pos)=> ({type:env.typ.PseudoClassSelector,id:sym[1],val:sym[2],pos,precedence:env.typ.C_SPECIFIER}) /*310*/,
(env, sym, pos)=> (sym[1].type=env.typ.PseudoElementSelector,sym[1].precedence=env.typ.D_SPECIFIER,sym[1]) /*311*/,
(env, sym, pos)=> env.functions.parseDeclaration (env, sym, pos)/*312*/,
(env, sym, pos)=> ({type:env.typ.MediaFunction,nodes:[sym[2]],pos}) /*313*/,
(env, sym, pos)=> ({type:env.typ.MediaFunction,nodes:[],pos}) /*314*/,
(env, sym, pos)=> ({type:env.typ.Query,nodes:[sym[0]],pos}) /*315*/,
(env, sym, pos)=> ({type:env.typ.Query,condition:sym[0],nodes:[sym[1],sym[2]],pos}) /*316*/,
(env, sym, pos)=> ({type:env.typ.Query,nodes:[sym[0],sym[1]],pos}) /*317*/,
(env, sym, pos)=> ({type:env.typ.Query,condition:sym[0],nodes:[sym[1]],pos}) /*318*/,
(env, sym, pos)=> ({type:env.typ.Not,nodes:[sym[1]],pos}) /*319*/,
(env, sym, pos)=> ({type:env.typ.MediaFeature,nodes:[sym[1]],pos}) /*320*/,
(env, sym, pos)=> ({type:env.typ.MediaValue,key:sym[0],val:sym[2],pos}) /*321*/,
(env, sym, pos)=> (new env.fn.length(sym[0]+sym[1])) /*322*/,
(env, sym, pos)=> ({type:"ratio",num:sym[0],den:sym[2]}) /*323*/,
(env, sym, pos)=> ({type:env.typ.Boolean,val:true,pos}) /*324*/,
(env, sym, pos)=> ({type:env.typ.Boolean,val:false,pos}) /*325*/,
(env, sym, pos)=> ({type:env.typ.MediaEquality,sym:sym[1],left:sym[0],right:sym[2],pos}) /*326*/,
(env, sym, pos)=> ({type:env.typ.MediaRangeDescending,sym:sym[1],max:sym[0],id:sym[2],min:sym[4],pos}) /*327*/,
(env, sym, pos)=> ({type:env.typ.MediaRangeAscending,sym:sym[1],min:sym[0],id:sym[2],max:sym[4],pos}) /*328*/,
(env, sym, pos)=> ({type:env.typ.MediaType,val:sym[0],pos}) /*329*/,
(env, sym, pos)=> ({type:env.typ.Rule,selectors:sym[0],props:new Map((sym[2]||[]).map(s=>[s.name,s])),pos,precedence:0}) /*330*/,
(env, sym, pos)=> ({type:env.typ.Rule,selectors:sym[0],props:new Map((null||[]).map(s=>[s.name,s])),pos,precedence:0}) /*331*/,
(env, sym, pos)=> ([sym[1]]) /*332*/,
(env, sym, pos)=> (sym[1]?sym[0].concat(sym[1]):sym[0]) /*333*/,
(env, sym, pos)=> ({media:"@media",type:env.typ.Media,nodes:[sym[1],...sym[3]],pos}) /*334*/,
(env, sym, pos)=> ({media:"@media",type:env.typ.Media,nodes:[sym[1]],pos}) /*335*/,
(env, sym, pos)=> ({queries:true,type:env.typ.MediaQueries,nodes:sym[0],pos}) /*336*/,
(env, sym, pos)=> ({keyframes:"@keyframes",type:env.typ.Keyframes,name:sym[1],nodes:[sym[3]],pos}) /*337*/,
(env, sym, pos)=> ({type:env.typ.KeyframeBlock,nodes:[{type:env.type.KeyframeSelectors,nodes:sym[0],pos},sym[2]],pos}) /*338*/,
(env, sym, pos)=> ({type:env.typ.KeyframeSelector,val:sym[0],pos}) /*339*/,
(env, sym, pos)=> (new env.fn.percentage(sym[0]+sym[1])) /*340*/,
(env, sym, pos)=> ({type:env.typ.Supports,nodes:[sym[1],sym[2]],pos}) /*341*/,
(env, sym, pos)=> ({type:env.typ.Script,nodes:sym[0],pos}) /*342*/,
(env, sym, pos)=> (null) /*343*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:sym[1],pos}) /*344*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:[sym[1]],pos}) /*345*/,
(env, sym, pos)=> (new env.fn.url(sym[0])) /*346*/,
(env, sym, pos)=> (sym[2]) /*347*/,
(env, sym, pos)=> ({type:env.typ.And,nodes:[sym[1]],pos}) /*348*/,
(env, sym, pos)=> (sym[1]||null) /*349*/,
(env, sym, pos)=> (null||null) /*350*/,
(env, sym, pos)=> ({type:env.typ.SupportConditions,nodes:sym[0],pos}) /*351*/,
(env, sym, pos)=> ({type:env.typ.Or,nodes:[sym[1]],pos}) /*352*/,
(env, sym, pos)=> ({type:env.typ.PseudoSelector,nodes:[sym[0],...sym[1]],pos}) /*353*/,
(env, sym, pos)=> ({type:env.typ.PseudoSelector,nodes:[sym[0]],pos}) /*354*/,
(env, sym, pos)=> ({type:env.typ.Combinator,val:sym[0]}) /*355*/];

    export default ParserFactory
        (reduce_functions, undefined, recognizer_initializer, {COMPONENT:0,html__TAG:1,javascript__expression:2,css__STYLE_SHEET:3,css__COMPLEX_SELECTOR:4});