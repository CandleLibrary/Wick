
    import { 
        ParserFactoryGamma as ParserFactory, 
        fillByteBufferWithUTF8FromString,
        ParserCore
    } from "@candlelib/hydrocarbon";

    const recognizer_initializer = (()=>{
        
        const {
            add_reduce,
            add_skip,
            compare,
            token_production,
            is_output_enabled,
            consume,
            recognize,
            init_table,
            set_production,
            ParserStateIterator
        } = ParserCore;
    

        var token_lookup = new Uint32Array([300,0,0,0,0,0,0,8,0,0,0,0,0,0,0,3,0,0,0,0,0,8,805306368,0,0,0,0,0,428,0,2,0,81920,0,0,8,536870912,16777216,0,0,0,0,5242880,0,0,0,0,0,0,1048576,0,0,0,0,0,0,2432,0,0,0,0,0,0,384,0,0,0,0,0,0,384,0,0,131072,0,0,524288,384,0,0,0,0,0,524288,65920,0,0,0,0,0,524288,201794976,167772187,4185915408,4017127161,2246270,0,0,201532448,167772187,4185915408,4017127161,2246270,0,0,262528,0,0,0,0,0,524288,384,0,64,0,0,0,524288,469968288,134217755,4185915408,4017127161,2246270,0,0,201532448,134217755,4185915408,4017127161,2246270,0,0,384,64,0,0,0,0,0,134236544,0,196608,0,0,0,1048576,384,0,0,0,0,0,1048576,384,0,0,0,0,1024,1048576,134236544,0,196608,131072,0,1024,1048576,3456,0,0,0,0,0,0,201813410,1275068435,2281701348,271744767,4288300032,63,524288,384,0,0,131072,0,0,1048576,67968,1140850688,1082130624,131077,0,3072,0,128,0,0,0,0,0,0,128,0,0,0,0,1024,1048576,128,0,0,0,0,0,1048576,393632,1207959555,0,884225,4096,0,524288,131104,1207959555,0,884225,4096,0,0,131488,1207959555,0,884225,4096,0,524288,201739650,1140850704,2281701284,5,4288167936,63,524288,134218112,0,0,0,0,0,1048576,262528,0,8,0,1,0,524288,384,0,8,0,0,0,524288,65920,0,0,0,2048,0,524288,384,0,0,0,2048,0,524288,384,0,131072,0,0,0,1048576,384,16,0,0,0,0,524288,65920,134217728,0,163841,0,0,524288,201813410,1275068435,2281701348,271744767,4288300032,63,0,201401760,201326619,4185915392,137559801,2245632,0,0,201401376,201326619,4185915392,137559801,2245632,0,0,268435840,0,0,0,0,0,0,384,201326592,1,0,0,0,524288,65920,1073741824,0,0,0,0,524288,134218112,0,0,0,0,0,0,1408,0,0,0,0,0,0,384,160,0,0,0,0,0,131456,0,0,0,0,0,524288,201401760,134217755,4185915392,137527033,2245632,0,0,201401376,134217755,4185915392,137395961,2245632,0,0,384,0,0,2,0,0,1048576,393600,0,0,0,0,0,0,2432,0,0,0,0,0,1048576,262528,0,0,0,0,0,0,384,0,0,2,0,0,524288,384,0,65536,0,0,0,1048576,262528,67108864,0,0,0,0,524288,262528,0,0,32768,0,0,524288,384,2,0,0,0,0,0,384,67108864,0,131072,0,0,524288,384,0,0,163840,0,0,524288,384,0,0,32770,0,0,524288,256,0,0,0,0,0,524288,384,0,0,0,384,0,524288,384,0,0,0,128,0,524288,67968,1140850688,1082130624,131077,0,3072,1048576,393600,0,0,0,0,0,1048576,384,67108864,0,0,0,0,524288,570468736,3,0,0,0,0,0,33595392,3,0,0,0,0,0,33595776,3,0,0,0,0,0,420020652,0,0,0,0,0,0,151585196,0,0,0,0,0,0,384,0,0,268435456,0,0,524288,393600,0,0,0,0,65536,0,134222720,0,0,0,0,0,0,201794978,201326619,4185915492,137527035,148480,0,0,262528,0,0,0,0,0,1048576,3221225856,0,0,0,0,0,0,201805218,1409286160,2281701348,268566535,4288167936,4227858495,63,384,0,0,0,4194304,0,524288,384,0,524288,268435456,0,0,524288,65920,0,0,0,0,0,1048576,131456,0,0,0,0,65536,1048576,131456,0,0,0,0,0,1048576,131456,16,0,0,0,525568,32768,262528,0,0,0,1,0,524288,65920,134217728,0,1,0,0,524288,268435840,1107296256,64,5,0,11537472,0,0,1107296256,64,5,0,11537472,0,384,1107296256,64,5,0,11537472,0,384,0,64,0,0,0,1048576,262528,2348810240,0,0,0,0,0,131456,19,0,0,0,525568,32768,384,0,0,0,0,0,1081344,344448,67108864,0,131075,0,0,524288,384,67108864,0,2,0,0,524288,384,67108864,0,32770,0,0,524288,201805186,1409286160,2281701348,268566535,4288167936,63,384,384,0,0,0,1,0,524288,201805218,1140850704,2281701348,268566535,4288167936,201326655,0,416,0,0,0,0,0,524288,409986,201326592,4,0,0,0,524288,201401760,201326619,4185915392,137428729,2245632,0,524288,201532832,134217755,4185915392,137395961,2245632,0,0,201401760,134217755,4185915392,137395961,2245632,0,524288,268566912,1073741824,64,5,0,11537408,1048576,570486144,3,0,0,0,0,0,590248,6,0,0,0,0,0,384,1,0,0,0,0,0,384,0,0,1610612736,0,0,524288,201805186,1409286160,2281701348,268566535,4288167936,63,16320,384,0,0,131072,0,0,0,470263202,134217755,4185915416,4025515769,2246271,0,0,201532832,134217755,4185915408,2406514425,2246270,0,0,201532448,134217755,4185915408,2406514425,2246270,0,0,65920,134217728,0,32769,0,0,524288,134292896,134217747,0,3178233,148480,0,524288,67109248,0,0,0,0,0,0,384,0,524288,0,0,0,524288,278912,201326592,0,131074,0,0,524288,384,0,0,2,0,49152,1048576,262528,1073741824,64,5,0,3072,1048576,0,1073741824,64,5,0,3072,0,384,2,0,0,0,0,524288,65920,201326592,0,1,0,0,524288,470263202,134217755,4185915416,4025515769,2246655,0,0,196992,67108864,0,0,0,1024,131072,65920,201326592,0,131073,0,0,524288,384,67108864,0,163840,0,0,524288,384,0,16,0,0,0,524288,201401760,134217755,4185915392,137428729,2245632,0,0,16768,0,0,2,8388608,12289,1048576,16384,0,0,0,8388608,12289,0,16768,0,0,0,8388608,12289,1048576,33598848,3,0,0,0,0,0,201794976,134217755,4185915480,4017127161,2246271,0,0,384,0,0,256,0,0,524288,131456,0,0,0,0,0,0,201532832,134217755,4185915408,4017127161,2246270,0,0,67314720,134217755,4185915408,4017127161,2246270,0,0,3254781312,33554176,0,0,0,0,0,3254779904,33554176,0,0,0,0,0,536873344,0,0,0,0,0,0,384,3,0,0,0,1024,1048576,384,3,0,0,0,0,1048576,393602,0,5,0,0,0,524288,384,1,0,0,0,0,524288,384,0,0,33554432,0,0,524288,2048,1073741824,1082130624,5,0,3072,0,268435840,1073741824,64,5,0,11537472,0,0,1073741824,64,5,0,11537408,0,384,0,0,0,81920,0,524288,201532832,134217755,4185915408,2406514425,2246270,0,524288,131456,16,0,0,0,525696,32768,384,0,64,5,0,2048,1048576,128,0,64,0,0,1024,1048576,65920,16,0,131072,0,1536,393216,2097536,0,0,0,0,0,524288,201797026,1275068435,2281701348,3309307,1197056,0,0,1408,0,0,0,0,0,524288,201805186,1140850704,2281701348,268566535,4288176128,63,0,384,2,0,0,0,0,1048576,218343328,167772187,4185915408,4017127161,2246270,0,0,67347488,167772187,4185915408,4017127161,2246270,0,0,201805218,1275068435,2281701284,3178229,4288168960,63,0,201565602,134217755,4185915408,4017127161,2246270,0,0,201565216,134217755,4185915408,4017127161,2246270,0,0,201565600,134217755,4185915408,4017127161,2246270,0,524288,201794978,201326619,4185915492,137527035,148480,0,524288,384,0,32,0,0,0,524288,201794978,201326619,4185915620,137527035,148480,0,524288,384,0,128,0,0,0,524288,201794978,201326619,4185915876,137527035,148480,0,524288,384,0,256,0,0,0,524288,201794978,201326619,4185916388,137527035,1197056,0,524288,384,0,512,0,0,0,524288,393218,67108864,36,0,0,0,0,201794978,201326619,4185915812,137395961,1197056,0,524288,393218,67108864,96,131074,1048576,0,0,201794978,201326619,4185917412,137527035,1197056,0,524288,384,0,1024,0,0,0,524288,201794978,201326619,4185919460,137527035,1197056,0,524288,384,0,2048,0,0,0,524288,201794978,201326619,4185980900,137527035,1197056,0,524288,384,0,4096,0,0,0,524288,384,0,8192,0,0,0,524288,384,0,16384,0,0,0,524288,384,0,32768,0,0,0,524288,201797026,201326619,4186963940,137527035,1197056,0,524288,384,0,262144,0,0,0,524288,134218112,0,0,0,0,0,524288,2432,0,0,0,0,0,524288,384,0,65536,0,0,0,524288,384,0,131072,0,0,0,524288,201797026,201326619,4194303972,137527035,1197056,0,524288,384,0,1048576,0,0,0,524288,384,0,2097152,0,0,0,524288,384,0,4194304,0,0,0,524288,384,0,8388608,0,0,0,524288,384,0,16777216,0,0,0,524288,201797026,1275068443,4227858404,137527035,1197056,0,524288,384,1073741824,0,0,0,0,524288,384,0,33554432,0,0,0,524288,201797026,1275068435,2281701348,3309307,1197056,0,524288,384,0,67108864,0,0,0,524288,201813410,1275068435,2281701348,3309307,4287775744,63,0,0,0,0,0,4286578688,63,0,384,0,0,0,4286578688,63,524288,16768,0,0,0,0,0,524288,384,0,2147483648,0,0,0,524288,67109248,0,0,0,0,0,524288,384,0,0,0,524288,0,524288,384,0,0,1,0,0,524288,384,0,0,4,0,0,524288,384,0,0,0,16384,0,524288,393602,67108864,4,0,0,0,524288,393602,0,4,0,0,0,524288,201813410,1275068435,2281701348,271744763,4288300032,63,524288,201794978,201326619,4185915492,137527035,1197056,0,524288,384,0,0,0,1048576,0,524288,134218624,0,0,0,0,0,0,896,0,0,0,0,0,0,8576,0,0,0,0,0,0,16768,0,0,0,0,0,0,33152,0,0,0,0,0,0,590208,0,0,0,0,0,0,201794976,134217755,4185915392,137395961,2245632,0,0,201401760,134217755,4185915392,137395961,2245632,0,0,5243264,0,0,0,0,0,524288,2097580,0,0,0,0,0,0,428,0,0,0,0,0,0,1048960,0,0,0,0,0,1048576,8388992,0,0,0,0,0,1048576,2097536,0,0,0,0,0,1048576,428,0,0,0,0,0,1048576,428,2,0,0,0,0,1048576,392,0,0,0,0,0,1048576,388,0,0,0,0,0,1048576,416,0,0,0,0,0,1048576,150995840,0,0,0,0,0,0,16777600,0,0,0,0,0,0,100663680,0,0,0,0,0,0,392,0,0,0,0,0,0,570469544,3,16777280,0,0,0,0,487129516,0,0,0,0,0,0,416,0,0,0,0,0,0,388,0,0,0,0,0,0,256,0,0,0,0,0,0,3254780288,33554176,0,0,0,0,0,0,33554176,0,0,0,0,0,384,33554176,0,0,0,0,0,33597824,3,0,0,0,0,0,33554816,0,0,0,0,0,0,570469760,3,0,0,0,0,0,33554816,3,0,0,0,0,0,424,4,0,0,0,0,0,384,3,0,0,0,0,0,428,26,0,0,0,0,0,428,25,0,0,0,0,0,428,27,0,0,0,0,0,428,24,0,0,0,0,0,3254780288,33554400,0,0,0,0,0,384,32,0,0,0,0,0,384,128,0,0,0,0,0,590252,0,0,0,0,0,0,201565600,167772187,4185915408,4017127161,2246270,0,524288,201524256,134217755,4185915408,4017127161,2246270,0,0,65920,1207959571,0,4,0,0,524288,384,524288,0,0,0,0,524288,8576,0,0,0,0,0,524288,65920,1207959555,0,0,0,0,524288,65920,1207959552,0,0,0,0,524288,384,134217728,0,0,0,0,524288,392,805306368,0,0,0,0,524288,40,805306368,0,0,0,0,524288,0,0,0,0,0,0,524288,0,268435456,0,0,0,0,524288,0,536870912,0,0,0,0,524288,8,0,0,0,0,0,524288,32,0,0,0,0,0,524288,384,2147483648,0,0,0,0,524288,262528,201326592,0,0,0,0,524288,262528,2348810240,1,0,0,0,0,384,0,1,0,0,0,524288,384,3,0,0,0,0,524288,428,2,2,0,0,16777216,0,428,1,2,0,0,33554432,0,384,0,2,0,0,0,524288,428,0,0,0,0,0,524288,33152,0,0,0,0,0,524288,65920,1073741824,24,1613758464,1024,0,524288,0,0,0,1613758464,1024,0,0,201401376,134217755,4185915392,134250233,2244608,0,0,393602,67108864,4,0,0,0,0,134292512,3,0,2129657,148480,0,0,134292896,3,0,2129657,148480,0,0,134292896,134217747,0,3178237,148480,0,0,134292512,134217747,0,3178233,148480,0,0,384,0,0,0,262144,0,524288,384,16,0,5,0,0,524288,384,16,0,4,0,0,524288,384,0,0,0,32768,0,524288,67108864,8,4185915392,134217728,0,0,0,384,134217744,0,1048576,0,0,524288,384,134217744,0,2097152,0,0,524288,384,1207959568,0,0,0,0,524288,384,134217744,0,0,0,0,524288,201401760,134217755,4185915392,137559801,2245632,0,0,201794978,201326619,4185915488,137527035,148480,0,524288,201794978,201326619,4185915616,137527035,148480,0,524288,201794978,201326619,4185915872,137527035,148480,0,524288,201401762,134217755,4185915808,137395961,1197056,0,524288,201813410,1275068435,2281701344,271744767,4288300032,63,524288,201412002,1207959571,2281701280,3178229,4292363264,63,524288,201805218,1140850704,2281701344,268566535,4288167936,201326655,0,384,0,0,0,0,201326592,524288,201805218,1140850704,2281701344,268566791,4288167936,201326655,0,201805218,1275068432,2281701344,268566535,4288167936,201326655,524288,201813410,1275068435,2281701344,271744763,4288300032,63,524288,201794978,201326619,4185915488,137527035,1197056,0,524288,0,0,0,0,4194304,0,0,201401760,134217755,4185915392,137395961,148480,0,524288,201401376,134217755,4185915392,137395961,148480,0,0,201401760,134217755,4185915392,137395961,148480,0,0,0,8,2038431744,0,0,0,0,201794978,201326619,4185915620,137527035,148480,0,0,201401762,134217755,4185915776,137395961,1197056,0,524288,393218,67108864,484,131074,0,0,0,201797026,1275068435,2281701344,3309307,1197056,0,524288,201794978,201326619,4185915492,137527035,1197056,0,0,393602,67108864,224,131074,0,0,524288,393602,67108864,484,131074,0,0,524288,393602,67108864,996,131074,1048576,0,524288,393602,67108864,2020,131074,1048576,0,524288,393602,67108864,4068,131074,1048576,0,524288,393602,67108864,65508,131074,1048576,0,524288,134613378,67108864,1048548,131074,1048576,0,524288,134613378,67108864,8388580,131074,1048576,0,524288,134613378,67108864,33554404,131074,1048576,0,524288,134614402,1140850688,67108836,131074,1048576,0,524288,0,8,2038431744,134217728,0,0,0,201401376,134217747,2147483648,3178233,148480,0,0,201401760,134217747,2147483648,3178233,148480,0,0,201401760,134217747,2147483648,3178233,148480,0,524288,134292896,134217747,0,3178233,148480,0,0,201813410,1275068435,2281701348,271744763,4288300032,63,0,134284320,134217747,0,3178225,17408,0,0,201805186,1140850704,2281701348,268566535,4288167936,63,524288,134284704,134217747,0,3178225,17408,0,524288,32,3,0,32480,0,0,0,416,3,0,32480,0,0,524288,32,0,0,32256,0,0,0,384,0,0,96,0,0,524288,384,0,0,128,0,0,524288,416,0,0,32256,0,0,524288,201805218,1409286160,2281701348,268566791,4288167936,201326655,0,384,0,0,1536,0,0,524288,416,0,0,0,0,4227858432,524351,384,0,0,6144,0,0,524288,384,0,0,0,0,0,540608,384,0,0,24576,0,0,524288,384,0,0,0,0,0,524672,201401760,201326619,4185915392,137428731,2245632,0,0,201401376,134217755,4185915392,137428729,2245632,0,0,201335840,27,4185915392,137395962,2245632,0,0,384,0,0,32768,0,0,524288,262560,1207959555,0,916993,0,0,524288,32,1207959555,0,916993,0,0,0,416,1207959555,0,916993,0,0,524288,32,3,0,32257,0,0,0,416,3,0,32257,0,0,524288,0,134217728,0,851968,0,0,0,384,134217728,0,851968,0,0,524288,16800,1207959571,64,32257,0,0,524288,32,1207959555,0,32257,0,0,0,16800,134217747,64,32257,0,0,524288,32,134217731,0,32257,0,0,0,278912,201326608,64,0,0,0,524288,262528,67108880,64,0,0,0,524288,384,16,64,0,0,0,524288,416,1207959555,0,884225,0,0,524288,416,134217731,0,32257,0,0,524288,416,1207959571,0,32257,0,0,524288,416,134217747,0,32257,0,0,524288,32,134217731,0,32256,0,0,0,416,134217731,0,32256,0,0,524288,65920,0,0,1,0,0,524288,262560,134217731,0,65025,0,0,524288,475522,67108880,524356,268566530,2048,0,524288,0,0,64,0,0,0,0,65920,201326592,0,32771,0,0,524288,65920,201326592,0,163841,0,0,524288,201532832,167772187,4185915408,4017127161,2246270,0,524288,470230432,134217755,4185915416,4017127161,2246271,0,0,201532832,134217755,4185915408,4017127161,2246270,0,524288,201532448,134217755,4185915408,2403368697,2245246,0,0,384,0,0,3145728,1024,0,524288,65920,134217728,0,0,2048,0,524288,201739650,1140850704,2281701284,3145733,4288167936,63,524288,201532832,134217755,4185915408,2404417273,2245246,0,524288,201335840,27,4185915392,135298809,2244608,0,0,201739650,1275068432,2281701348,5,4292362240,63,524288,201805218,1275068435,2281701284,3178229,4292363264,63,524288,201794976,134217755,4185915408,4017127161,2246270,0,0,393602,67108864,68,131074,0,0,0,131074,0,68,131074,0,0,0,201532448,134217755,4185915408,2403368697,2246270,0,0,384,0,0,3145728,0,0,524288,470281634,1275068443,4294967228,4025515773,4290397823,63,524288,201739266,1140850704,2281701284,5,4288167936,63,0,384,0,0,2097152,0,0,524288,384,0,0,4194304,0,0,524288,384,0,0,2264924160,0,0,524288,384,0,0,117440512,0,0,524288,384,16,0,134217728,0,0,524288,134292896,134217747,16,1613790969,148480,0,0,201532832,134217755,4185915408,1748008697,2245632,0,0,67108864,8,4185915392,134217728,2097152,0,0,384,0,0,2147483648,0,0,524288,201794976,134217755,4185915472,4017127161,2246271,0,0,384,0,0,0,2,0,524288,393602,134217728,4,0,0,0,524288,384,0,0,0,4,0,524288,384,0,0,0,8,0,524288,201794978,134217755,4185915396,137395961,2245632,0,0,384,0,0,0,16,0,524288,384,0,0,0,32,0,524288,384,0,0,0,64,0,524288,384,0,0,0,256,0,524288,384,0,0,0,512,0,524288,384,0,0,1613758464,1024,0,524288,384,0,0,0,1024,0,524288,32,1207959555,0,884225,4096,0,0,262560,1207959555,0,884225,4096,0,524288,416,1207959555,0,884225,4096,0,524288,32,1207959555,0,884225,0,0,0,416,1207959571,0,884225,0,0,524288,1452,0,2,0,0,0,16384,428,0,2,0,0,0,540672,384,0,0,0,8192,0,0,392,805306368,0,0,0,0,0,40,805306368,0,0,0,0,0,0,268435456,0,0,0,0,0,0,536870912,0,0,0,0,0,32,0,0,0,0,0,0,428,0,2,0,81920,0,524288,428,0,2,0,0,0,524288,128,0,0,0,0,0,524288,384,0,0,0,65536,0,524288,384,0,0,0,131072,0,524288,384,0,0,5,0,0,524288,8576,0,0,8,0,0,524288,384,0,0,8,0,0,524288,201401760,134217755,4185915392,137428729,2245632,0,524288,134284320,134217747,0,3178233,17408,0,0,384,16,0,5,16384,0,524288,201805186,1140850704,2281701344,268566535,4288167936,63,524288,384,16,0,5,540672,0,524288,201805186,1140850688,2281701344,268566530,4288151552,63,524288,384,134217744,0,1,16384,0,524288,384,0,0,134217728,0,0,524288,393602,67108864,96,131074,1048576,0,524288,384,0,0,0,2097152,0,524288,201401760,1207959579,4185915392,137395961,2245632,0,524288,384,0,0,32768,0,0,0,201335840,134217755,4185915392,137395961,2245632,0,0,384,1107296256,64,5,0,11537472,1048576,384,0,0,0,0,64,1048576,384,3,0,0,0,128,1048576,384,0,0,0,0,128,1048576,384,1,0,0,0,0,1048576,384,16,0,0,0,0,1048576,384,16,0,0,0,1792,1048576,384,16,0,0,0,1536,1048576,384,16,0,0,0,67328,1048576,384,16,0,0,0,512,1048576,384,0,0,0,0,512,1048576,384,1073741824,64,5,0,3072,1048576,384,1073741824,0,0,0,1024,1048576,67968,1140850704,1082130624,131077,0,3072,0,384,0,64,0,0,0,0,384,0,64,5,0,2048,0,67968,1140850688,1082131136,131077,0,2048,0,84352,1140850688,1082131136,131079,8388608,15361,1048576,384,1073741824,0,0,0,0,1048576,84352,1140850688,1082131136,131079,8388608,15361,0,384,0,512,0,0,0,1048576,392,536870912,16777216,0,0,0,1048576,168,805306368,16777216,0,0,0,1048576,128,268435456,0,0,0,0,1048576,128,0,16777216,0,0,0,1048576,128,536870912,0,0,0,0,1048576,136,0,0,0,0,0,1048576,160,0,0,0,0,0,1048576,384,0,0,0,0,2048,1048576,384,0,0,4,0,0,1048576,384,0,0,1,0,0,1048576,384,0,0,0,0,49152,1048576,128,0,64,0,0,0,1048576,2432,0,1082130560,0,0,0,1048576,384,0,0,0,0,65536,1048576,384,0,0,0,0,131072,1048576,393600,8,0,131072,0,0,1048576,384,0,0,0,0,262144,1048576,393644,16,0,131072,0,0,1048576,396,0,0,131072,0,0,0,384,16,0,0,0,525568,1048576,384,16,0,0,0,1024,1048576,196992,67108880,0,0,0,1024,131072,196992,67108880,0,131072,0,1024,393216,384,0,0,0,0,0,1310720,384,0,0,0,0,0,1179648,384,16,0,0,0,1280,1048576,416,16,0,96,0,1280,1048576,196992,67108880,0,131072,0,1024,131072,384,0,0,0,0,256,1048576,134236544,16,196672,0,0,0,1048576,134236160,0,196672,0,0,0,0,416,0,0,96,0,1024,1048576,416,0,0,0,0,1024,1048576,134237608,0,196608,131072,0,0,1048576,134236160,0,196608,131072,0,0,0,1408,0,0,0,0,0,1048576,384,0,0,96,0,0,1048576,16768,0,0,0,0,0,1048576,134236160,0,196608,0,0,0,0,134237192,0,196608,0,0,0,0,384,0,0,0,0,11534336,1048576,384,0,0,0,0,1048576,1048576,384,0,0,0,0,2097152,1048576,384,0,0,0,0,8388608,1048576,262528,1073741824,64,5,0,3072,0,392,3,0,0,0,0,1048576,416,0,1,0,0,4194304,1048576,384,0,33554432,0,0,0,1048576,168,0,16777280,0,0,0,0,128,0,16777216,0,0,0,0,128,0,64,0,0,0,0,160,0,0,0,0,0,0,136,0,0,0,0,0,0,590208,2,0,0,0,0,0,262528,67108864,0,0,0,0,0,262528,134217728,0,0,0,0,524288,428,0,2,0,0,16777216,0,428,0,0,0,0,16777216,0,384,0,2,0,0,0,0,384,0,0,0,0,16777216,0,428,0,2,0,0,33554432,0,428,0,0,0,0,33554432,0,384,0,0,0,0,33554432,0,384,0,0,0,0,201326592,0,416,0,16777216,0,0,0,0,384,0,0,4,0,0,0,201805186,1409286160,2281701344,268566791,4288167936,201326655,0,384,268435456,0,0,0,0,0,416,0,0,0,0,4227858432,63,32,0,0,0,0,4227858432,63,384,0,0,0,0,268435456,0,384,0,0,0,0,536870912,0,384,0,0,0,0,1073741824,0,384,0,0,0,0,2147483648,0,384,0,0,0,0,0,1,384,0,0,0,0,134217728,0,384,0,0,0,0,0,2,384,0,0,0,0,0,4,384,0,0,0,0,0,8,384,0,0,0,0,0,16,384,0,0,0,0,0,32,384,0,0,0,0,67108864,0,201804802,1409286160,2281701348,268566535,4288167936,63,0,201805186,1409286160,2281701348,268566535,4288167936,63,0,384,0,0,0,0,0,16320,0,0,0,0,0,0,16320,384,0,0,0,0,0,64,384,0,0,0,0,0,128,384,0,0,0,0,0,256,384,0,0,0,0,0,512,384,0,0,0,0,0,1024,384,0,0,0,0,0,2048,384,0,0,0,0,0,4096,384,0,0,0,0,0,8192,384,0,0,0,0,0,384,384,0,16,0,0,0,0,65920,134217728,0,1,0,0,0,428,0,2,0,0,0,16384,428,0,0,0,0,0,16384,384,0,0,0,0,0,16384,428,0,2,0,0,0,0,384,134217728,0,0,0,0,0,65920,0,0,1,0,0,0,384,0,0,0,0,64,0,384,1073741824,64,5,0,11537408,0,268435840,1073741824,64,5,0,11537408,0,384,1073741824,64,5,0,3072,0,384,0,0,0,0,11534336,0,384,0,0,0,0,0,32768,384,16,0,0,0,0,0,196992,67108864,0,0,0,0,0,384,67108864,0,0,0,0,0,384,0,0,0,0,0,393216,65920,0,0,131072,0,0,393216,384,0,0,0,0,0,262144,384,0,0,0,0,0,131072,2432,1073741824,1082130624,5,0,3072,0,67840,1140850688,1082130560,131072,0,0,0,67840,1140850688,1082130560,131077,0,2048,0,384,0,0,0,0,0,65536,396,0,0,0,0,0,0,384,16,0,0,0,1280,0,196992,67108864,0,131072,0,0,131072,196992,67108864,0,131072,0,0,262144,65920,67108864,0,0,0,0,0,262560,0,1,0,0,4194304,0,416,0,1,0,0,4194304,0,384,16,0,0,0,1536,0,384,16,0,0,0,1024,0]);;
        var token_sequence_lookup = new Uint8Array([60,105,109,112,111,114,116,62,47,42,62,62,62,61,61,61,123,33,59,125,42,42,61,45,45,39,34,33,61,61,40,44,95,36,123,92,92,34,63,63,61,58,124,124,61,38,38,61,94,61,43,43,37,61,126,61,91,93,46,46,46,48,88,41,96,64,107,101,121,102,114,97,109,101,115,35,69,78,68,95,79,70,95,80,82,79,68,85,67,84,73,79,78,105,110,115,116,97,110,99,101,111,102,101,120,116,101,110,100,115,83,67,82,73,80,84,115,117,112,112,111,114,116,115,106,115,97,115,121,110,99,98,114,101,97,107,99,111,110,116,105,110,117,101,104,114,107,101,121,103,101,110,108,105,110,107,109,101,116,97,112,97,114,97,109,116,121,112,101,111,102,119,104,105,108,101,102,117,110,99,116,105,111,110,100,101,98,117,103,103,101,114,118,111,105,100,110,117,108,108,103,101,116,111,110,108,121,114,101,116,117,114,110,121,105,101,108,100,117,114,108,65,66,55,49,50,51,52,53,54,60,60,61,47,47,61,62,42,47,45,61,36,61,92,92,39,63,46,43,61,48,120,64,115,117,112,112,111,114,116,115,105,109,112,111,114,116,97,110,116,101,120,112,111,114,116,83,84,89,76,69,115,99,114,105,112,116,97,119,97,105,116,98,97,115,101,99,111,109,109,97,110,100,108,101,116,97,114,103,101,116,119,105,116,104,102,105,110,97,108,108,121,100,101,102,97,117,108,116,118,97,114,110,101,119,60,33,60,47,62,92,47,48,79,48,111,48,66,48,98,64,105,109,112,111,114,116,64,109,101,100,105,97,105,110,112,117,116,105,109,103,105,102,101,109,98,101,100,101,108,115,101,115,111,117,114,99,101,115,119,105,116,99,104,115,116,97,116,105,99,115,116,121,108,101,115,117,112,101,114,115,101,116,97,114,101,97,99,111,110,115,116,99,97,116,99,104,99,108,97,115,115,99,97,115,101,99,111,108,116,114,97,99,107,116,104,114,111,119,116,104,105,115,116,114,117,101,116,114,121,119,98,114,102,97,108,115,101,102,114,111,109,102,111,114,100,101,108,101,116,101,100,111,110,111,116]);;
        function isTokenActive(token_id, row){
    var index  = ( row  * 7 ) + ( token_id  >> 5 );;
    var shift  = 1 << ( 31 & ( token_id ) );;
    return ( token_lookup[index] & shift ) != 0
};
        function scan_core(lexer, tk_row){
    switch(( lexer.get_byte_at( lexer.byte_offset ) & 127 )){
    case 33: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 33 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 79, tk_row ) ){
                        lexer.setToken( 79, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 77, tk_row ) ){
                    lexer.setToken( 77, 2, 2 );
                    return
                }
            } else if( isTokenActive( 35, tk_row ) ){
                lexer.setToken( 35, 1, 1 );
                return
            }
        }
    }
    break;
    case 34: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 34 ){
            if( isTokenActive( 34, tk_row ) && token_production( lexer, hc_html__ATTRIBUTE_STRING_VALUE, 23, 34, 4 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 33, tk_row ) ){
                lexer.setToken( 33, 1, 1 );
                return
            }
        }
    }
    break;
    case 35: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 35 ){
            if( isTokenActive( 171, tk_row ) ){
                lexer.setToken( 171, 1, 1 );
                return
            }
        }
    }
    break;
    case 36: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 36 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 123 ){
                if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 144, tk_row ) ){
                    lexer.setToken( 144, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 173, tk_row ) ){
                    lexer.setToken( 173, 2, 2 );
                    return
                }
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 61, tk_row ) ){
                lexer.setToken( 61, 1, 1 );
                return
            }
        }
    }
    break;
    case 37: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 37 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 153, tk_row ) ){
                    lexer.setToken( 153, 2, 2 );
                    return
                }
            } else if( isTokenActive( 89, tk_row ) ){
                lexer.setToken( 89, 1, 1 );
                return
            }
        }
    }
    break;
    case 38: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 38 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 38 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 164, tk_row ) ){
                        lexer.setToken( 164, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 72, tk_row ) ){
                    lexer.setToken( 72, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 159, tk_row ) ){
                    lexer.setToken( 159, 2, 2 );
                    return
                }
            } else if( isTokenActive( 75, tk_row ) ){
                lexer.setToken( 75, 1, 1 );
                return
            }
        }
    }
    break;
    case 39: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 39 ){
            if( isTokenActive( 34, tk_row ) && token_production( lexer, hc_html__ATTRIBUTE_STRING_VALUE, 23, 34, 4 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 32, tk_row ) ){
                lexer.setToken( 32, 1, 1 );
                return
            }
        }
    }
    break;
    case 40: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 40 ){
            if( isTokenActive( 36, tk_row ) ){
                lexer.setToken( 36, 1, 1 );
                return
            }
        }
    }
    break;
    case 41: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 41 ){
            if( isTokenActive( 113, tk_row ) ){
                lexer.setToken( 113, 1, 1 );
                return
            }
        }
    }
    break;
    case 42: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 42 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 42 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 162, tk_row ) ){
                        lexer.setToken( 162, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 90, tk_row ) ){
                    lexer.setToken( 90, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 21, tk_row ) ){
                    lexer.setToken( 21, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 151, tk_row ) ){
                    lexer.setToken( 151, 2, 2 );
                    return
                }
            } else if( isTokenActive( 62, tk_row ) ){
                lexer.setToken( 62, 1, 1 );
                return
            }
        }
    }
    break;
    case 43: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 43 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 43 ){
                if( isTokenActive( 95, tk_row ) ){
                    lexer.setToken( 95, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 154, tk_row ) ){
                    lexer.setToken( 154, 2, 2 );
                    return
                }
            } else if( isTokenActive( 87, tk_row ) ){
                lexer.setToken( 87, 1, 1 );
                return
            }
        }
    }
    break;
    case 44: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 44 ){
            if( isTokenActive( 58, tk_row ) ){
                lexer.setToken( 58, 1, 1 );
                return
            }
        }
    }
    break;
    case 45: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 45 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 45 ){
                if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 26, tk_row ) ){
                    lexer.setToken( 26, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 155, tk_row ) ){
                    lexer.setToken( 155, 2, 2 );
                    return
                }
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 88, tk_row ) ){
                lexer.setToken( 88, 1, 1 );
                return
            }
        }
    }
    break;
    case 46: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 46 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 111, tk_row ) && lexer.get_byte_at( lexer.byte_offset  + 2 ) == 46 ){
                    lexer.setToken( 111, 3, 3 );
                    return
                }
            } else if( isTokenActive( 98, tk_row ) ){
                lexer.setToken( 98, 1, 1 );
                return
            }
        }
    }
    break;
    case 47: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 47 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 42 ){
                if( isTokenActive( 211, tk_row ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 212, tk_row ) && token_production( lexer, hc_css__comment, 8, 212, 2048 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 20, tk_row ) ){
                    lexer.setToken( 20, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 211, tk_row ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 22, tk_row ) ){
                    lexer.setToken( 22, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 29, tk_row ) ){
                    lexer.setToken( 29, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 152, tk_row ) ){
                    lexer.setToken( 152, 2, 2 );
                    return
                }
            } else if( isTokenActive( 211, tk_row ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 212, tk_row ) && token_production( lexer, hc_css__comment, 8, 212, 2048 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 10, tk_row ) ){
                lexer.setToken( 10, 1, 1 );
                return
            }
        }
    }
    break;
    case 48: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 48 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 88 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 105, tk_row ) ){
                    lexer.setToken( 105, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 120 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 106, tk_row ) ){
                    lexer.setToken( 106, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 79 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 107, tk_row ) ){
                    lexer.setToken( 107, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 108, tk_row ) ){
                    lexer.setToken( 108, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 66 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 109, tk_row ) ){
                    lexer.setToken( 109, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 98 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 110, tk_row ) ){
                    lexer.setToken( 110, 2, 2 );
                    return
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 199, tk_row ) ){
                lexer.setToken( 199, 1, 1 );
                return
            }
        }
    }
    break;
    case 49: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 49 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 200, tk_row ) ){
                lexer.setToken( 200, 1, 1 );
                return
            }
        }
    }
    break;
    case 50: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 50 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 201, tk_row ) ){
                lexer.setToken( 201, 1, 1 );
                return
            }
        }
    }
    break;
    case 51: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 51 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 202, tk_row ) ){
                lexer.setToken( 202, 1, 1 );
                return
            }
        }
    }
    break;
    case 52: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 52 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 203, tk_row ) ){
                lexer.setToken( 203, 1, 1 );
                return
            }
        }
    }
    break;
    case 53: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 53 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 204, tk_row ) ){
                lexer.setToken( 204, 1, 1 );
                return
            }
        }
    }
    break;
    case 54: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 54 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 205, tk_row ) ){
                lexer.setToken( 205, 1, 1 );
                return
            }
        }
    }
    break;
    case 55: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 55 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 198, tk_row ) ){
                lexer.setToken( 198, 1, 1 );
                return
            }
        }
    }
    break;
    case 58: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 58 ){
            if( isTokenActive( 70, tk_row ) ){
                lexer.setToken( 70, 1, 1 );
                return
            }
        }
    }
    break;
    case 59: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 59 ){
            if( isTokenActive( 17, tk_row ) ){
                lexer.setToken( 17, 1, 1 );
                return
            }
        }
    }
    break;
    case 60: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 60 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 5 == compare( lexer, lexer.byte_offset  + 2, 2, 5, token_sequence_lookup ) ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 7 ) == 62 ){
                        if( isTokenActive( 12, tk_row ) ){
                            lexer.setToken( 12, 8, 8 );
                            return
                        }
                    } else if( isTokenActive( 9, tk_row ) ){
                        lexer.setToken( 9, 7, 7 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 60 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 156, tk_row ) ){
                        lexer.setToken( 156, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 84, tk_row ) ){
                    lexer.setToken( 84, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 33 ){
                if( isTokenActive( 24, tk_row ) ){
                    lexer.setToken( 24, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 28, tk_row ) ){
                    lexer.setToken( 28, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 80, tk_row ) ){
                    lexer.setToken( 80, 2, 2 );
                    return
                }
            } else if( isTokenActive( 27, tk_row ) ){
                lexer.setToken( 27, 1, 1 );
                return
            }
        }
    }
    break;
    case 61: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 61 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 78, tk_row ) ){
                        lexer.setToken( 78, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 76, tk_row ) ){
                    lexer.setToken( 76, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 150, tk_row ) ){
                    lexer.setToken( 150, 2, 2 );
                    return
                }
            } else if( isTokenActive( 14, tk_row ) ){
                lexer.setToken( 14, 1, 1 );
                return
            }
        }
    }
    break;
    case 62: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 62 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 62 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 62 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 61 ){
                        if( isTokenActive( 158, tk_row ) ){
                            lexer.setToken( 158, 4, 4 );
                            return
                        }
                    } else if( isTokenActive( 86, tk_row ) ){
                        lexer.setToken( 86, 3, 3 );
                        return
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 157, tk_row ) ){
                        lexer.setToken( 157, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 85, tk_row ) ){
                    lexer.setToken( 85, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 81, tk_row ) ){
                    lexer.setToken( 81, 2, 2 );
                    return
                }
            } else if( isTokenActive( 11, tk_row ) ){
                lexer.setToken( 11, 1, 1 );
                return
            }
        }
    }
    break;
    case 63: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 63 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 63 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 163, tk_row ) ){
                        lexer.setToken( 163, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 148, tk_row ) ){
                    lexer.setToken( 148, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 147, tk_row ) ){
                    lexer.setToken( 147, 2, 2 );
                    return
                }
            } else if( isTokenActive( 69, tk_row ) ){
                lexer.setToken( 69, 1, 1 );
                return
            }
        }
    }
    break;
    case 64: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 64 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 107 ){
                if( isTokenActive( 181, tk_row ) && 8 == compare( lexer, lexer.byte_offset  + 2, 67, 8, token_sequence_lookup ) ){
                    lexer.setToken( 181, 10, 10 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 183, tk_row ) && 7 == compare( lexer, lexer.byte_offset  + 2, 254, 7, token_sequence_lookup ) ){
                    lexer.setToken( 183, 9, 9 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( isTokenActive( 166, tk_row ) && 5 == compare( lexer, lexer.byte_offset  + 2, 352, 5, token_sequence_lookup ) ){
                    lexer.setToken( 166, 7, 7 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 109 ){
                if( isTokenActive( 180, tk_row ) && 4 == compare( lexer, lexer.byte_offset  + 2, 359, 4, token_sequence_lookup ) ){
                    lexer.setToken( 180, 6, 6 );
                    return
                }
            }
        }
    }
    break;
    case 65: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 65 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 194, tk_row ) ){
                lexer.setToken( 194, 1, 1 );
                return
            }
        }
    }
    break;
    case 66: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 66 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 195, tk_row ) ){
                lexer.setToken( 195, 1, 1 );
                return
            }
        }
    }
    break;
    case 67: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 67 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 196, tk_row ) ){
                lexer.setToken( 196, 1, 1 );
                return
            }
        }
    }
    break;
    case 68: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 68 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 197, tk_row ) ){
                lexer.setToken( 197, 1, 1 );
                return
            }
        }
    }
    break;
    case 69: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 69 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 186, tk_row ) ){
                lexer.setToken( 186, 1, 1 );
                return
            }
        }
    }
    break;
    case 70: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 70 ){
            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 188, tk_row ) ){
                lexer.setToken( 188, 1, 1 );
                return
            }
        }
    }
    break;
    case 83: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 83 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 67 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 112, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 37, tk_row ) ){
                        lexer.setToken( 37, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 84 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 278, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 30, tk_row ) ){
                        lexer.setToken( 30, 5, 5 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 91: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 91 ){
            if( isTokenActive( 96, tk_row ) ){
                lexer.setToken( 96, 1, 1 );
                return
            }
        }
    }
    break;
    case 92: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 92 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 92 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 34 ){
                    if( isTokenActive( 184, tk_row ) ){
                        lexer.setToken( 184, 3, 3 );
                        return
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 39 ){
                    if( isTokenActive( 185, tk_row ) ){
                        lexer.setToken( 185, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 206, tk_row ) ){
                    lexer.setToken( 206, 2, 2 );
                    return
                }
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 65, tk_row ) ){
                lexer.setToken( 65, 1, 1 );
                return
            }
        }
    }
    break;
    case 93: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 93 ){
            if( isTokenActive( 97, tk_row ) ){
                lexer.setToken( 97, 1, 1 );
                return
            }
        }
    }
    break;
    case 94: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 94 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 160, tk_row ) ){
                    lexer.setToken( 160, 2, 2 );
                    return
                }
            } else if( isTokenActive( 74, tk_row ) ){
                lexer.setToken( 74, 1, 1 );
                return
            }
        }
    }
    break;
    case 95: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 95 ){
            if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 60, tk_row ) ){
                lexer.setToken( 60, 1, 1 );
                return
            }
        }
    }
    break;
    case 96: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 96 ){
            if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 142, tk_row ) ){
                lexer.setToken( 142, 1, 1 );
                return
            }
        }
    }
    break;
    case 97: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 97 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 115 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 129, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 116, tk_row ) ){
                            lexer.setToken( 116, 5, 5 );
                            return
                        } else if( isTokenActive( 112, tk_row ) ){
                            lexer.setToken( 112, 5, 5 );
                            return
                        }
                    }
                } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 63, tk_row ) ){
                    lexer.setToken( 63, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 119 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 289, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 123, tk_row ) ){
                        lexer.setToken( 123, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 415, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 41, tk_row ) ){
                        lexer.setToken( 41, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 110 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 100 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 209, tk_row ) ){
                        lexer.setToken( 209, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 189, tk_row ) ){
                lexer.setToken( 189, 1, 1 );
                return
            }
        }
    }
    break;
    case 98: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 98 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 101 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 134, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 130, tk_row ) ){
                            lexer.setToken( 130, 5, 5 );
                            return
                        }
                    }
                } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 43, tk_row ) ){
                    lexer.setToken( 43, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 294, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 42, tk_row ) ){
                        lexer.setToken( 42, 4, 4 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 190, tk_row ) ){
                lexer.setToken( 190, 1, 1 );
                return
            }
        }
    }
    break;
    case 99: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 99 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 110 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 116 ){
                        if( 4 == compare( lexer, lexer.byte_offset  + 4, 140, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 129, tk_row ) ){
                                lexer.setToken( 129, 8, 8 );
                                return
                            }
                        }
                    } else if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 115 ){
                        if( lexer.get_byte_at( lexer.byte_offset  + 4 ) == 116 ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 126, tk_row ) ){
                                lexer.setToken( 126, 5, 5 );
                                return
                            }
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 109 ){
                    if( 4 == compare( lexer, lexer.byte_offset  + 3, 299, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 45, tk_row ) ){
                            lexer.setToken( 45, 7, 7 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 108 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 44, tk_row ) ){
                        lexer.setToken( 44, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 425, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 135, tk_row ) ){
                            lexer.setToken( 135, 5, 5 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 115 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 128, tk_row ) ){
                            lexer.setToken( 128, 4, 4 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 108 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 429, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 138, tk_row ) ){
                        lexer.setToken( 138, 5, 5 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 191, tk_row ) ){
                lexer.setToken( 191, 1, 1 );
                return
            }
        }
    }
    break;
    case 100: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 100 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 98 ){
                    if( 5 == compare( lexer, lexer.byte_offset  + 3, 187, 5, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                            return
                        } else if( isTokenActive( 137, tk_row ) ){
                            lexer.setToken( 137, 8, 8 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 102 ){
                    if( 4 == compare( lexer, lexer.byte_offset  + 3, 325, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 67, tk_row ) ){
                            lexer.setToken( 67, 7, 7 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 108 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 478, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 91, tk_row ) ){
                            lexer.setToken( 91, 6, 6 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 120, tk_row ) ){
                    lexer.setToken( 120, 2, 2 );
                    return
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 192, tk_row ) ){
                lexer.setToken( 192, 1, 1 );
                return
            }
        }
    }
    break;
    case 101: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 101 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 120 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( 4 == compare( lexer, lexer.byte_offset  + 3, 106, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                            return
                        } else if( isTokenActive( 139, tk_row ) ){
                            lexer.setToken( 139, 7, 7 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 273, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 15, tk_row ) ){
                            lexer.setToken( 15, 6, 6 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 109 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 375, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 46, tk_row ) ){
                        lexer.setToken( 46, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 108 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 380, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 119, tk_row ) ){
                        lexer.setToken( 119, 4, 4 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 187, tk_row ) ){
                lexer.setToken( 187, 1, 1 );
                return
            }
        }
    }
    break;
    case 102: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 102 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 117 ){
                if( 6 == compare( lexer, lexer.byte_offset  + 2, 178, 6, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                        return
                    } else if( isTokenActive( 117, tk_row ) ){
                        lexer.setToken( 117, 8, 8 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 5 == compare( lexer, lexer.byte_offset  + 2, 317, 5, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 7 ){
                        return
                    } else if( isTokenActive( 136, tk_row ) ){
                        lexer.setToken( 136, 7, 7 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 465, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 102, tk_row ) ){
                        lexer.setToken( 102, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 470, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 64, tk_row ) ){
                        lexer.setToken( 64, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 122, tk_row ) ){
                        lexer.setToken( 122, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 56, tk_row ) ){
                lexer.setToken( 56, 1, 1 );
                return
            } else if( isTokenActive( 193, tk_row ) ){
                lexer.setToken( 193, 1, 1 );
                return
            }
        }
    }
    break;
    case 103: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 103 ){
            if( 2 == compare( lexer, lexer.byte_offset  + 1, 201, 2, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 114, tk_row ) ){
                    lexer.setToken( 114, 3, 3 );
                    return
                }
            }
        }
    }
    break;
    case 104: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 104 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 47, tk_row ) ){
                    lexer.setToken( 47, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 105: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 105 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 110 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 115 ){
                    if( 7 == compare( lexer, lexer.byte_offset  + 3, 96, 7, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 10 ){
                            return
                        } else if( isTokenActive( 82, tk_row ) ){
                            lexer.setToken( 82, 10, 10 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 366, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 40, tk_row ) ){
                            lexer.setToken( 40, 5, 5 );
                            return
                        }
                    }
                } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 83, tk_row ) ){
                    lexer.setToken( 83, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 109 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 264, 3, token_sequence_lookup ) ){
                        if( lexer.get_byte_at( lexer.byte_offset  + 6 ) == 97 ){
                            if( 2 == compare( lexer, lexer.byte_offset  + 7, 268, 2, token_sequence_lookup ) ){
                                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 9 ){
                                    return
                                } else if( isTokenActive( 178, tk_row ) ){
                                    lexer.setToken( 178, 9, 9 );
                                    return
                                }
                            }
                        } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 13, tk_row ) ){
                            lexer.setToken( 13, 6, 6 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 103 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 48, tk_row ) ){
                        lexer.setToken( 48, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 118, tk_row ) ){
                    lexer.setToken( 118, 2, 2 );
                    return
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 174, tk_row ) ){
                lexer.setToken( 174, 1, 1 );
                return
            }
        }
    }
    break;
    case 106: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 106 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 38, tk_row ) ){
                    lexer.setToken( 38, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 107: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 107 ){
            if( 5 == compare( lexer, lexer.byte_offset  + 1, 147, 5, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 49, tk_row ) ){
                    lexer.setToken( 49, 6, 6 );
                    return
                }
            }
        }
    }
    break;
    case 108: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 108 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 154, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 50, tk_row ) ){
                        lexer.setToken( 50, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 125, tk_row ) ){
                        lexer.setToken( 125, 3, 3 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 109: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 109 ){
            if( 3 == compare( lexer, lexer.byte_offset  + 1, 157, 3, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                    return
                } else if( isTokenActive( 51, tk_row ) ){
                    lexer.setToken( 51, 4, 4 );
                    return
                }
            }
        }
    }
    break;
    case 110: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 110 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 117 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 198, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 103, tk_row ) ){
                        lexer.setToken( 103, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 119 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 99, tk_row ) ){
                        lexer.setToken( 99, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 168, tk_row ) ){
                        lexer.setToken( 168, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 104, tk_row ) ){
                lexer.setToken( 104, 1, 1 );
                return
            }
        }
    }
    break;
    case 111: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 111 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 110 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 205, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 179, tk_row ) ){
                        lexer.setToken( 179, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 124, tk_row ) ){
                    lexer.setToken( 124, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 210, tk_row ) ){
                    lexer.setToken( 210, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 112: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 112 ){
            if( 4 == compare( lexer, lexer.byte_offset  + 1, 161, 4, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 52, tk_row ) ){
                    lexer.setToken( 52, 5, 5 );
                    return
                }
            }
        }
    }
    break;
    case 114: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 114 ){
            if( 5 == compare( lexer, lexer.byte_offset  + 1, 208, 5, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                    return
                } else if( isTokenActive( 131, tk_row ) ){
                    lexer.setToken( 131, 6, 6 );
                    return
                }
            }
        }
    }
    break;
    case 115: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 115 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 117 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 112 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 112 ){
                        if( 4 == compare( lexer, lexer.byte_offset  + 4, 120, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 8 ){
                                return
                            } else if( isTokenActive( 207, tk_row ) ){
                                lexer.setToken( 207, 8, 8 );
                                return
                            }
                        }
                    } else if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 101 ){
                        if( lexer.get_byte_at( lexer.byte_offset  + 4 ) == 114 ){
                            if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                                return
                            } else if( isTokenActive( 145, tk_row ) ){
                                lexer.setToken( 145, 5, 5 );
                                return
                            }
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 99 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 283, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 39, tk_row ) ){
                        lexer.setToken( 39, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 384, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 53, tk_row ) ){
                        lexer.setToken( 53, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 119 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 390, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 127, tk_row ) ){
                        lexer.setToken( 127, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 116 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 97 ){
                    if( 3 == compare( lexer, lexer.byte_offset  + 3, 397, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                            return
                        } else if( isTokenActive( 140, tk_row ) ){
                            lexer.setToken( 140, 6, 6 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 403, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 31, tk_row ) ){
                            lexer.setToken( 31, 5, 5 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 101 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 115, tk_row ) ){
                        lexer.setToken( 115, 3, 3 );
                        return
                    }
                }
            } else if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 1 ){
                return
            } else if( isTokenActive( 175, tk_row ) ){
                lexer.setToken( 175, 1, 1 );
                return
            }
        }
    }
    break;
    case 116: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 116 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 121 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 167, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 93, tk_row ) ){
                        lexer.setToken( 93, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( 4 == compare( lexer, lexer.byte_offset  + 2, 307, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 6 ){
                        return
                    } else if( isTokenActive( 146, tk_row ) ){
                        lexer.setToken( 146, 6, 6 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 114 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 97 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 442, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 54, tk_row ) ){
                            lexer.setToken( 54, 5, 5 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 117 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 101, tk_row ) ){
                            lexer.setToken( 101, 4, 4 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 121 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 134, tk_row ) ){
                        lexer.setToken( 134, 3, 3 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 104 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( 2 == compare( lexer, lexer.byte_offset  + 3, 447, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                            return
                        } else if( isTokenActive( 133, tk_row ) ){
                            lexer.setToken( 133, 5, 5 );
                            return
                        }
                    }
                } else if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 105 ){
                    if( lexer.get_byte_at( lexer.byte_offset  + 3 ) == 115 ){
                        if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                            return
                        } else if( isTokenActive( 100, tk_row ) ){
                            lexer.setToken( 100, 4, 4 );
                            return
                        }
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 2 ){
                    return
                } else if( isTokenActive( 182, tk_row ) ){
                    lexer.setToken( 182, 2, 2 );
                    return
                }
            }
        }
    }
    break;
    case 117: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 117 ){
            if( 2 == compare( lexer, lexer.byte_offset  + 1, 219, 2, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                    return
                } else if( isTokenActive( 167, tk_row ) ){
                    lexer.setToken( 167, 3, 3 );
                    return
                }
            }
        }
    }
    break;
    case 118: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 118 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 111 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 194, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 92, tk_row ) ){
                        lexer.setToken( 92, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 97 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 68, tk_row ) ){
                        lexer.setToken( 68, 3, 3 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 119: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 119 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 104 ){
                if( 3 == compare( lexer, lexer.byte_offset  + 2, 173, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                        return
                    } else if( isTokenActive( 121, tk_row ) ){
                        lexer.setToken( 121, 5, 5 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 105 ){
                if( 2 == compare( lexer, lexer.byte_offset  + 2, 313, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 4 ){
                        return
                    } else if( isTokenActive( 132, tk_row ) ){
                        lexer.setToken( 132, 4, 4 );
                        return
                    }
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 98 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 3 ){
                        return
                    } else if( isTokenActive( 55, tk_row ) ){
                        lexer.setToken( 55, 3, 3 );
                        return
                    }
                }
            }
        }
    }
    break;
    case 121: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 121 ){
            if( 4 == compare( lexer, lexer.byte_offset  + 1, 214, 4, token_sequence_lookup ) ){
                if( isTokenActive( 23, tk_row ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 25, tk_row ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 59, tk_row ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 141, tk_row ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 143, tk_row ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 170, tk_row ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 176, tk_row ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 177, tk_row ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 208, tk_row ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) && lexer.byte_length  > 5 ){
                    return
                } else if( isTokenActive( 149, tk_row ) ){
                    lexer.setToken( 149, 5, 5 );
                    return
                }
            }
        }
    }
    break;
    case 123: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 123 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 33 ){
                if( isTokenActive( 19, tk_row ) ){
                    lexer.setToken( 19, 2, 2 );
                    return
                }
            } else if( isTokenActive( 16, tk_row ) ){
                lexer.setToken( 16, 1, 1 );
                return
            }
        }
    }
    break;
    case 124: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 124 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 124 ){
                if( lexer.get_byte_at( lexer.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 165, tk_row ) ){
                        lexer.setToken( 165, 3, 3 );
                        return
                    }
                } else if( isTokenActive( 71, tk_row ) ){
                    lexer.setToken( 71, 2, 2 );
                    return
                }
            } else if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 161, tk_row ) ){
                    lexer.setToken( 161, 2, 2 );
                    return
                }
            } else if( isTokenActive( 73, tk_row ) ){
                lexer.setToken( 73, 1, 1 );
                return
            }
        }
    }
    break;
    case 125: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 125 ){
            if( isTokenActive( 18, tk_row ) ){
                lexer.setToken( 18, 1, 1 );
                return
            }
        }
    }
    break;
    case 126: 
    {
        if( lexer.get_byte_at( lexer.byte_offset  ) == 126 ){
            if( lexer.get_byte_at( lexer.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 172, tk_row ) ){
                    lexer.setToken( 172, 2, 2 );
                    return
                }
            } else if( isTokenActive( 94, tk_row ) ){
                lexer.setToken( 94, 1, 1 );
                return
            }
        }
    }
    break;
    default: 
    break
};
    if( isTokenActive( 23, tk_row ) && pre_scan( lexer, 0 ) && token_production( lexer, hc_css__string_value, 9, 23, 1 ) ){
    return
} else if( isTokenActive( 25, tk_row ) && pre_scan( lexer, 1 ) && token_production( lexer, hc_html__identifier, 13, 25, 2 ) ){
    return
} else if( isTokenActive( 34, tk_row ) && pre_scan( lexer, 2 ) && token_production( lexer, hc_html__ATTRIBUTE_STRING_VALUE, 23, 34, 4 ) ){
    return
} else if( isTokenActive( 59, tk_row ) && pre_scan( lexer, 3 ) && token_production( lexer, hc_javascript__composite_identifier, 40, 59, 8 ) ){
    return
} else if( isTokenActive( 141, tk_row ) && pre_scan( lexer, 3 ) && token_production( lexer, hc_default_productions__js_id_symbols, 168, 141, 16 ) ){
    return
} else if( isTokenActive( 143, tk_row ) && pre_scan( lexer, 4 ) && token_production( lexer, hc_javascript__template_string, 171, 143, 32 ) ){
    return
} else if( isTokenActive( 170, tk_row ) && pre_scan( lexer, 5 ) && token_production( lexer, hc_css__identifier, 216, 170, 64 ) ){
    return
} else if( isTokenActive( 176, tk_row ) && pre_scan( lexer, 5 ) && token_production( lexer, hc_css__declaration_id, 230, 176, 128 ) ){
    return
} else if( isTokenActive( 177, tk_row ) && pre_scan( lexer, 0 ) && token_production( lexer, hc_css__declaration_values_sentineled, 231, 177, 256 ) ){
    return
} else if( isTokenActive( 208, tk_row ) && pre_scan( lexer, 0 ) && token_production( lexer, hc_css__psuedo_class_value, 225, 208, 512 ) ){
    return
} else if( isTokenActive( 211, tk_row ) && pre_scan( lexer, 6 ) && token_production( lexer, hc_javascript__comment, 7, 211, 1024 ) ){
    return
} else if( isTokenActive( 212, tk_row ) && pre_scan( lexer, 7 ) && token_production( lexer, hc_css__comment, 8, 212, 2048 ) ){
    return
} else if( isTokenActive( 8, tk_row ) && lexer.isSP( true ) ){
    return
} else if( isTokenActive( 3, tk_row ) && lexer.isUniID(  ) ){
    return
} else if( isTokenActive( 2, tk_row ) && lexer.isSym( true ) ){
    return
} else if( isTokenActive( 7, tk_row ) && lexer.isNL(  ) ){
    return
} else if( isTokenActive( 5, tk_row ) && lexer.isNum(  ) ){
    return
} else if( isTokenActive( 169, tk_row ) && false ){
    return
}
}

function scan(lexer, tk_row, pk_row){
    if( ( ( lexer._type ) <= 0 ) )scan_core( lexer, tk_row );;
    if( isTokenActive( 66, tk_row ) && nocap_lb_6725b1140c2474a9( lexer ) ){
    return
};
    if( ( pk_row  > 0 && isTokenActive( lexer._type, pk_row ) ) ){
    while( ( isTokenActive( lexer._type, pk_row ) ) ) {
            lexer.next(  );
            scan_core( lexer, tk_row )
        }
}
}
        function pre_scan(lexer, tk_row){
    var tk_length = lexer.token_length;;
    var bt_length = lexer.byte_length;;
    var type_cache = lexer._type;;
    scan( lexer, tk_row, 0 );
    var type_out = lexer._type;;
    lexer._type  = type_cache;
    lexer.token_length  = tk_length;
    lexer.byte_length  = bt_length;
    return type_out  > 0
}

function branch_0072fd18d3aeca7c(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 7, 19 );
    return 0
};
    return - 1
}

function branch_00a95b716fd904b5(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 13, 9 );
        if( isTokenActive( state.lexer._type, 14 ) ){
            state.push_fn( set_production /*98*/, 98 );
            state.push_fn( branch_a63db2704b3d0c43, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*98*/, 98 );
            consume( state );
            add_reduce( state, 8, 125 );
            return 0
        }
    }
};
    return - 1
}

function branch_017e32e2623dd334(state, db, prod){
    add_reduce( state, 1, 352 );
    return 311
}

function branch_0197a94536844bcf(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 174 );
    return 0
};
    return - 1
}

function branch_019c7374ac20dbc0(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 13, 9 );
        if( isTokenActive( state.lexer._type, 14 ) ){
            state.push_fn( set_production /*98*/, 98 );
            state.push_fn( branch_5121fc23773fe257, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*98*/, 98 );
            consume( state );
            add_reduce( state, 7, 130 );
            return 0
        }
    }
};
    return - 1
}

function branch_021e47c347f3394c(state, db, prod){
    add_reduce( state, 2, 0 );
    return 159
}

function branch_029533987ebaf81f(state, db, prod){
    scan( state.lexer, 16, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_f35d7e4ef9d5bd98, 110 );
    return hc_javascript__binding_element( state, db, 0 )
};
    return - 1
}

function branch_02c2da985a5a312a(state, db, prod){
    state.push_fn( branch_38d7ec245d2d4794, 241 );
    return hc_css__mf_range( state, db, 0 )
}

function branch_03197776794950c3(state, db, prod){
    add_reduce( state, 1, 343 );
    return 264
}

function branch_0420b34e5168643c(state, db, prod){
    add_reduce( state, 1, 94 );
    return 0
}

function branch_04913e5fc0e0ed8b(state, db, prod){
    state.push_fn( branch_a473dd18c6f44f50, 35 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_05a7b2d72e7bffc5(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 17, 9 );
    if( isTokenActive( state.lexer._type, 18 ) ){
        state.push_fn( set_production /*27*/, 27 );
        state.push_fn( branch_45f25cea93eb325d, 27 );
        return hc_javascript__script( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        state.push_fn( set_production /*27*/, 27 );
        consume( state );
        scan( state.lexer, 19, 9 );
        if( ( state.lexer._type  == 38 ) ){
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 35 );
                return 0
            }
        };
        return - 1
    }
};
    return - 1
}

function branch_05f770f30d6a4ff1(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__exponentiation_expression_goto( state, db, 75 )
}

function branch_0649ffc971b3f0f3(state, db, prod){
    scan( state.lexer, 20, 21 );
    if( state.lexer._type  == 81 || state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 23, 21 );
        if( pk._type  == 11 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_1aea634484900352, 248 );
            state.push_fn( branch_4cee85cd83034401, 248 );
            return 0
        } else if( pk._type  == 81 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_1296864446b6a526, 248 );
            state.push_fn( branch_4cee85cd83034401, 248 );
            return 0
        } else {
            state.lexer._type  = 170;
            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
            state.push_fn( branch_0d049e4db4484b03, 248 );
            return hc_css__mf_name( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 80 || state.lexer._type  == 27 ){
    consume( state );
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 23, 21 );
        if( pk._type  == 27 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_0f3d729daf7f4bfc, 248 );
            state.push_fn( branch_4cee85cd83034401, 248 );
            return 0
        } else if( pk._type  == 80 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_1d92407f51f88ac9, 248 );
            state.push_fn( branch_4cee85cd83034401, 248 );
            return 0
        } else {
            state.lexer._type  = 170;
            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
            state.push_fn( branch_0d049e4db4484b03, 248 );
            return hc_css__mf_name( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 14 ){
    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
    consume( state );
    state.push_fn( branch_0d049e4db4484b03, 248 );
    return hc_css__mf_name( state, db, 0 )
};
    return - 1
}

function branch_06693284d683e088(state, db, prod){
    add_reduce( state, 2, 228 );
    return 155
}

function branch_06baf88f7890c41a(state, db, prod){
    add_reduce( state, 7, 187 );
    return 134
}

function branch_083a58ff2488f082(state, db, prod){
    scan( state.lexer, 24, 9 );
    if( state.lexer._type  == 10 ){
    state.push_fn( set_production /*17*/, 17 );
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 5, 20 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 11 ){
    state.push_fn( set_production /*17*/, 17 );
    consume( state );
    add_reduce( state, 4, 20 );
    return 0
};
    return - 1
}

function branch_089788feedc77437(state, db, prod){
    scan( state.lexer, 25, 11 );
    if( state.lexer._type  == 36 ){
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    add_reduce( state, 2, 92 );
    return hc_javascript__assignment_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_08ae789b89d7d863(state, db, prod){
    add_reduce( state, 2, 12 );
    add_reduce( state, 1, 98 );
    add_reduce( state, 1, 115 );
    return 0
}

function branch_0912092e7d3508ca(state, db, prod){
    add_reduce( state, 3, 53 );
    return 0
}

function branch_0984293846c4da1e(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return hc_css__media_condition_without_or_goto( state, db, 240 )
};
    return - 1
}

function branch_09d2837f5e44e6cd(state, db, prod){
    {
    add_reduce( state, 4, 234 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_0aa85f4426bcd38c(state, db, prod){
    add_reduce( state, 2, 0 );
    return 291
}

function branch_0bd7f6bd9ca86d44(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_43b3d05903540d0d, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_0c1614bd99f02e4b(state, db, prod){
    scan( state.lexer, 27, 28 );
    if( state.lexer._type  == 70 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 29, 30 );
    if( pk._type  == 170 ){
        state.lexer._type  = 70;
        state.push_fn( set_production /*320*/, 320 );
        state.push_fn( branch_adb349d37dbc5acd, 320 );
        return hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062( state, db, 0 )
    }
} else {
    add_reduce( state, 1, 355 );
    return 320
};
    return - 1
}

function branch_0c8cb59ae1d05865(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 8, 18 );
    return 0
};
    return - 1
}

function branch_0c91deeca65ee5a0(state, db, prod){
    add_reduce( state, 1, 37 );
    return 0
}

function branch_0d049e4db4484b03(state, db, prod){
    add_reduce( state, 3, 327 );
    return 0
}

function branch_0d1d3f19019f1922(state, db, prod){
    state.push_fn( branch_3c131ed7e769316a, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_0df9a43df12905f5(state, db, prod){
    {
    add_reduce( state, 4, 235 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_0e5bfd99d33a90b9(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        scan( state.lexer, 33, 11 );
        state.push_fn( branch_8242424279821ad4, 0 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        consume( state );
        scan( state.lexer, 34, 11 );
        if( state.lexer._type  == 1 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_bcc295c748e8c268, 75 );
            state.push_fn( branch_0df9a43df12905f5, 121 );
            return 0
        } else {
            add_reduce( state, 4, 235 );
            return hc_javascript__statement_list_item_goto( state, db, 75 )
        }
    }
};
    return - 1
}

function branch_0e8dacddd33b72aa(state, db, prod){
    add_reduce( state, 1, 156 );
    return 118
}

function branch_0eccb3f60187246e(state, db, prod){
    add_reduce( state, 2, 334 );
    return 0
}

function branch_0f00c7498fddac84(state, db, prod){
    add_reduce( state, 2, 160 );
    return 0
}

function branch_0f32ea116410b4fe(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_8cfd40537685bdce, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_0f3d729daf7f4bfc(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 35, 21 );
    if( ( state.lexer._type  == 27 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_0f4b91c57196f73b(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 5, 277 );
    add_reduce( state, 1, 275 );
    return hc_javascript__assignment_expression_goto( state, db, 198 )
};
    return - 1
}

function branch_0fe66212a51c45d8(state, db, prod){
    {
    add_reduce( state, 1, 14 );
    return hc_COMPONENT_goto( state, db, 1 )
};
    return - 1
}

function branch_1076c04cb306ccfd(state, db, prod){
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 67 ){
    scan( state.lexer, 37, 11 );
    state.push_fn( branch_a800b67648cdbb27, 0 );
    return hc_javascript__default_clause( state, db, 0 )
} else if( state.lexer._type  == 128 ){
    state.push_fn( set_production /*142*/, 142 );
    state.push_fn( branch_b746cdddf9c0321b, 142 );
    return hc_javascript__case_clauses( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*142*/, 142 );
    consume( state );
    add_reduce( state, 3, 209 );
    return 0
};
    return - 1
}

function branch_10781e15aafe628f(state, db, prod){
    {
    add_reduce( state, 4, 236 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_10b1b41c67b5a780(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__formal_parameter_list_goto( state, db, 116 )
}

function branch_10f84fa89e47280d(state, db, prod){
    add_reduce( state, 1, 163 );
    return 147
}

function branch_1258f37abbcc16f9(state, db, prod){
    state.push_fn( branch_05f770f30d6a4ff1, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_125f0d21f938f9b8(state, db, prod){
    scan( state.lexer, 38, 11 );
    if( state.lexer._type  == 139 ){
    scan( state.lexer, 39, 11 );
    state.push_fn( branch_b9a558fcfb21ffa9, 0 );
    return hc_javascript__class_heritage( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        scan( state.lexer, 33, 11 );
        state.push_fn( branch_46af5f0b633291dd, 0 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        consume( state );
        scan( state.lexer, 34, 11 );
        if( state.lexer._type  == 1 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_10781e15aafe628f, 75 );
            state.push_fn( branch_9d55e0f9b7f96271, 121 );
            return 0
        } else {
            add_reduce( state, 4, 236 );
            return hc_javascript__statement_list_item_goto( state, db, 75 )
        }
    }
};
    return - 1
}

function branch_126d081659a3131a(state, db, prod){
    {
    add_reduce( state, 5, 232 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_1289d97c0883dcfa(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 175 );
    return 0
};
    return - 1
}

function branch_1296864446b6a526(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 40, 21 );
    if( ( state.lexer._type  == 81 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_1444c31aded2e42c(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return hc_css__media_condition_goto( state, db, 240 )
};
    return - 1
}

function branch_14ab177b06cc4386(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( set_production /*130*/, 130 );
        state.push_fn( branch_49591abc5220b3dc, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*130*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_561bb2612752fd0b, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_14aca82e21b76ddc(state, db, prod){
    {
    add_reduce( state, 4, 234 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_14f14dd858272b3f(state, db, prod){
    scan( state.lexer, 43, 9 );
    if( state.lexer._type  == 36 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 44, 9 );
    if( isTokenActive( pk._type, 45 ) ){
        state.lexer._type  = 36;
        state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_33df3cbb370be24b, 75 );
        return hc_javascript__arguments( state, db, 0 )
    }
} else {
    add_reduce( state, 2, 92 );
    return hc_javascript__member_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_152680e8cb3da748(state, db, prod){
    add_reduce( state, 1, 14 );
    return 0
}

function branch_1534b63df6946ea5(state, db, prod){
    scan( state.lexer, 46, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    state.push_fn( branch_c5145e9e61ff30dc, 17 );
    return hc_html__TAGNAME( state, db, 0 )
};
    return - 1
}

function branch_1543b2803f9b2557(state, db, prod){
    add_reduce( state, 2, 108 );
    return hc_javascript__template_middle_list_goto( state, db, 178 )
}

function branch_1584ff69a4f940b9(state, db, prod){
    scan( state.lexer, 47, 11 );
    if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 48, 11 );
    if( state.lexer._type  == 62 ){
        state.push_fn( set_production /*36*/, 36 );
        state.push_fn( branch_f8a3663a4a4d8c1f, 36 );
        return hc_javascript__name_space_import( state, db, 0 )
    } else {
        state.push_fn( set_production /*36*/, 36 );
        state.push_fn( branch_f8a3663a4a4d8c1f, 36 );
        return hc_javascript__named_imports( state, db, 0 )
    }
} else {
    add_reduce( state, 1, 44 );
    return 36
};
    return - 1
}

function branch_15d1336bfdd6ebd0(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__media_or_list_1603_goto( state, db, 305 )
}

function branch_15ec4d96e9777cff(state, db, prod){
    state.push_fn( branch_30a4c728783b8373, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_15fb703721f556f9(state, db, prod){
    add_reduce( state, 2, 265 );
    return 0
}

function branch_160ff32f93ae8805(state, db, prod){
    state.push_fn( branch_e5a644df6613b5fc, 20 );
    return hc_html__ATTRIBUTE_group_169_0_( state, db, 0 )
}

function branch_164819ffed8dd429(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        state.push_fn( branch_fbbc8cca8d1bd3a4, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_7056a44b19c04c51, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_167a9fad43e803f3(state, db, prod){
    scan( state.lexer, 49, 9 );
    if( state.lexer._type  == 27 ){
    consume( state );
    scan( state.lexer, 50, 9 );
    if( state.lexer._type  == 10 ){
        consume( state );
        scan( state.lexer, 51, 9 );
        if( state.lexer._type  == 37 || state.lexer._type  == 39 ){
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 9, 33 );
                return 27
            }
        }
    }
};
    return - 1
}

function branch_16833eb5dd17ab3b(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_e1f39354fa05cc4a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_174a4749802a5aed(state, db, prod){
    add_reduce( state, 2, 66 );
    return 0
}

function branch_17836977a30611f6(state, db, prod){
    scan( state.lexer, 52, 11 );
    if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 53, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        state.push_fn( set_production /*134*/, 134 );
        state.push_fn( branch_9b524494e1babaea, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*134*/, 134 );
        consume( state );
        state.push_fn( branch_97f2f316d8c39806, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_17a3282d8d9c8a2d(state, db, prod){
    scan( state.lexer, 55, 21 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 6, 309 );
    return 0
};
    return - 1
}

function branch_1805f48b1dee4d53(state, db, prod){
    scan( state.lexer, 56, 9 );
    if( state.lexer._type  == 17 ){
    state.push_fn( set_production /*252*/, 252 );
    state.push_fn( branch_d039753938d9cd05, 252 );
    return hc_css__STYLE_RULE_list_1608( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*252*/, 252 );
    consume( state );
    add_reduce( state, 4, 331 );
    return 0
};
    return - 1
}

function branch_1834f1484cdf99dd(state, db, prod){
    {
    return hc_javascript__labeled_item_goto( state, db, 61 )
};
    return - 1
}

function branch_18f55b22f3445351(state, db, prod){
    state.push_fn( branch_c342c3a3a0f47eb9, 253 );
    return hc_css__declaration( state, db, 0 )
}

function branch_18f83925f4c80938(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 129 );
    return 0
};
    return - 1
}

function branch_1a8a0499b7033f46(state, db, prod){
    add_reduce( state, 3, 28 );
    return 20
}

function branch_1ab9bb0b1d889bbd(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 6, 230 );
    return 0
};
    return - 1
}

function branch_1aea634484900352(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 57, 21 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        state.push_fn( branch_b5b9637d18ae7c84, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_1aef6b45df2168e6(state, db, prod){
    add_reduce( state, 2, 219 );
    return 0
}

function branch_1b53e170eb324054(state, db, prod){
    state.push_fn( branch_3aa15af582de1f9d, 126 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function branch_1bfba5b008b85e0e(state, db, prod){
    state.push_fn( branch_ad7dad5f3826f56b, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1238_0_( state, db, 0 )
}

function branch_1ca21e19d7b5554b(state, db, prod){
    scan( state.lexer, 58, 9 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 9 );
    return 0
};
    return - 1
}

function branch_1d78657759a3522f(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 149 );
    return 0
};
    return - 1
}

function branch_1d92407f51f88ac9(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 60, 21 );
    if( ( state.lexer._type  == 80 ) ){
        consume( state );
        state.push_fn( branch_9e534ae5b4265198, 248 );
        return hc_css__mf_value( state, db, 0 )
    }
};
    return - 1
}

function branch_1df29885fc317625(state, db, prod){
    add_reduce( state, 4, 58 );
    return 0
}

function branch_1e127a48a1672c9c(state, db, prod){
    add_reduce( state, 3, 270 );
    return 0
}

function branch_1f6913935f69fbcf(state, db, prod){
    scan( state.lexer, 61, 11 );
    if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*107*/, 107 );
    consume( state );
    add_reduce( state, 3, 145 );
    return 0
} else if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 62, 11 );
    if( state.lexer._type  == 111 ){
        state.push_fn( set_production /*107*/, 107 );
        state.push_fn( branch_493b803ab79f60fb, 107 );
        return hc_javascript__binding_rest_property( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*107*/, 107 );
        consume( state );
        add_reduce( state, 4, 145 );
        return 0
    }
};
    return - 1
}

function branch_213773c8f0ea25fb(state, db, prod){
    add_reduce( state, 2, 217 );
    return 0
}

function branch_21507767bc1ef64d(state, db, prod){
    state.push_fn( branch_609621b618d4f6c2, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_21ae27b721c01292(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 263 );
    return 0
};
    return - 1
}

function branch_21d5feaed1391ad3(state, db, prod){
    add_reduce( state, 2, 87 );
    return 72
}

function branch_22ce1f363dc8b465(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 287 );
    return 206
};
    return - 1
}

function branch_233769891365127b(state, db, prod){
    state.push_fn( branch_a8b99bb69233a624, 35 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_234af3a3ace7a700(state, db, prod){
    add_reduce( state, 2, 312 );
    return 0
}

function branch_234c298a886b6207(state, db, prod){
    add_reduce( state, 3, 223 );
    return 151
}

function branch_235fb58f233a87be(state, db, prod){
    add_reduce( state, 3, 77 );
    return 0
}

function branch_2374c682d05e30d1(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 231 );
    return 0
};
    return - 1
}

function branch_23dcfc00944b531f(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 6, 179 );
    return 0
};
    return - 1
}

function branch_257bb8351529e8a4(state, db, prod){
    state.push_fn( branch_903716b58564713c, 34 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_269033d650d0c821(state, db, prod){
    add_reduce( state, 3, 327 );
    return hc_css__mf_range_goto( state, db, 248 )
}

function branch_269c43f199e42297(state, db, prod){
    add_reduce( state, 2, 318 );
    return 0
}

function branch_269f6a16e9c5b940(state, db, prod){
    {
    return hc_javascript__statement_goto( state, db, 61 )
};
    return - 1
}

function branch_26e4f8c956bf63bf(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_dc7c5993763c3f24, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_270cd6bea07a58a0(state, db, prod){
    add_reduce( state, 2, 12 );
    return 313
}

function branch_272a792aedf83485(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__property_definition_list_goto( state, db, 94 )
}

function branch_27bc4029a4df3225(state, db, prod){
    scan( state.lexer, 63, 9 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_28e677e707d79ecf(state, db, prod){
    add_reduce( state, 3, 75 );
    return 0
}

function branch_29b41779382392c1(state, db, prod){
    state.push_fn( set_production /*199*/, 199 );
    return hc_javascript__parenthesized( state, db, 0 )
}

function branch_29b5d1c37ed65e28(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__template_literal_goto( state, db, 169 )
}

function branch_2a1990963919bde5(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 178 );
    return 0
};
    return - 1
}

function branch_2a2f4d3afa13bdfd(state, db, prod){
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 113 ){
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 180 )*/, 180 );
    consume( state );
    add_reduce( state, 3, 253 );
    return 0
} else if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 65, 11 );
    if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 198 )*/, 198 );
        consume( state );
        add_reduce( state, 4, 253 );
        add_reduce( state, 1, 275 );
        return 0
    } else {
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_55108c88c1d1d3c2, 198 );
        state.push_fn( branch_cbe43ee9520e0e8e, 198 );
        return 0
    }
};
    return - 1
}

function branch_2a582097d07e1590(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPLEX_SELECTOR_list_1325_goto( state, db, 298 )
}

function branch_2a5899d8653d895f(state, db, prod){
    add_reduce( state, 3, 155 );
    return hc_javascript__binding_element_list_goto( state, db, 114 )
}

function branch_2a647859d36041a1(state, db, prod){
    scan( state.lexer, 66, 11 );
    if( state.lexer._type  == 111 ){
    state.push_fn( set_production /*113*/, 113 );
    state.push_fn( branch_893277c7cc35ec31, 113 );
    return hc_javascript__binding_rest_element( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    state.push_fn( set_production /*113*/, 113 );
    consume( state );
    add_reduce( state, 5, 153 );
    return 0
};
    return - 1
}

function branch_2b04bb2753137935(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_14aca82e21b76ddc, 121 );
        state.push_fn( branch_09d2837f5e44e6cd, 75 );
        return 0
    } else {
        add_reduce( state, 4, 234 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_2b2d85e5be5c1335(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 124 );
    return 0
};
    return - 1
}

function branch_2b488808e04475e7(state, db, prod){
    add_reduce( state, 2, 262 );
    return 189
}

function branch_2cf39bda1bef37de(state, db, prod){
    add_reduce( state, 2, 229 );
    return 156
}

function branch_2d45a6a494c79015(state, db, prod){
    scan( state.lexer, 11, 67 );
    if( ( state.lexer._type  == 7 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_2d7669ac99ce0b44(state, db, prod){
    add_reduce( state, 3, 225 );
    return 0
}

function branch_2deb0e3060b5d925(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__short_circuit_expression_goto( state, db, 75 )
}

function branch_2df7000832ab9616(state, db, prod){
    add_reduce( state, 2, 345 );
    return 284
}

function branch_2e15b3f2cf883bd6(state, db, prod){
    state.push_fn( branch_1a8a0499b7033f46, 20 );
    return hc_html__ATTRIBUTE_BODY( state, db, 0 )
}

function branch_2e80393084f100d8(state, db, prod){
    state.push_fn( branch_6d47b92cb0b4983a, 240 );
    return hc_css__media_condition( state, db, 0 )
}

function branch_2ec447559632659b(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 88 );
    return 0
};
    return - 1
}

function branch_2ecbe230ba67bdbb(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( set_production /*130*/, 130 );
        state.push_fn( branch_695fb15b8fbd4b08, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*130*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_b6b33baa71b23679, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_2fc67da1a9340210(state, db, prod){
    scan( state.lexer, 68, 11 );
    if( state.lexer._type  == 135 ){
    scan( state.lexer, 69, 11 );
    state.push_fn( branch_a0085d90d349dd4e, 0 );
    return hc_javascript__catch( state, db, 0 )
} else {
    state.push_fn( set_production /*152*/, 152 );
    state.push_fn( branch_2d7669ac99ce0b44, 152 );
    return hc_javascript__finally( state, db, 0 )
};
    return - 1
}

function branch_2fe8a09a6a152881(state, db, prod){
    add_reduce( state, 3, 251 );
    return hc_javascript__template_middle_list_goto( state, db, 178 )
}

function branch_30123d859b6fc832(state, db, prod){
    scan( state.lexer, 70, 30 );
    if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    consume( state );
    add_reduce( state, 3, 295 );
    return 0
} else {
    add_reduce( state, 2, 295 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_301ee0f2b94f32bf(state, db, prod){
    scan( state.lexer, 43, 9 );
    if( state.lexer._type  == 36 ){
    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    add_reduce( state, 2, 92 );
    return hc_javascript__optional_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_30a4c728783b8373(state, db, prod){
    add_reduce( state, 4, 60 );
    return 49
}

function branch_31b9023a720b5a97(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 291 );
    return 210
};
    return - 1
}

function branch_31cbf1fc4243461f(state, db, prod){
    scan( state.lexer, 38, 11 );
    if( state.lexer._type  == 139 ){
    scan( state.lexer, 39, 11 );
    state.push_fn( branch_bdae3a69a56879e0, 0 );
    return hc_javascript__class_heritage( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        state.push_fn( set_production /*158*/, 158 );
        state.push_fn( branch_96cd7ea0bcc998f9, 158 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*158*/, 158 );
        consume( state );
        add_reduce( state, 4, 236 );
        return 0
    }
};
    return - 1
}

function branch_31efc3d71dadfd9b(state, db, prod){
    scan( state.lexer, 46, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    scan( state.lexer, 19, 9 );
    if( ( state.lexer._type  == 38 ) ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 34 );
            return 0
        }
    }
};
    return - 1
}

function branch_31f56a86ab029b21(state, db, prod){
    scan( state.lexer, 71, 21 );
    if( state.lexer._type  == 17 || state.lexer._type  == 18 ){
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 231
};
    return - 1
}

function branch_323543e55199868c(state, db, prod){
    add_reduce( state, 3, 317 );
    return 0
}

function branch_3292a050f79b7f65(state, db, prod){
    scan( state.lexer, 72, 11 );
    if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 65, 11 );
    if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*199*/, 199 );
        consume( state );
        add_reduce( state, 4, 253 );
        return 0
    } else {
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_1bfba5b008b85e0e, 199 );
        state.push_fn( branch_eb884692c177d1ca, 199 );
        return 0
    }
};
    return - 1
}

function branch_32fa069ae31013c7(state, db, prod){
    {
    add_reduce( state, 5, 233 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_330e8cad8b23421b(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 169 );
    return 0
};
    return - 1
}

function branch_33357b08811d62f2(state, db, prod){
    add_reduce( state, 2, 85 );
    return 0
}

function branch_333c57caa5474a61(state, db, prod){
    add_reduce( state, 3, 155 );
    return 0
}

function branch_336b56052286e267(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    state.push_fn( branch_e64f3615854135b9, 176 );
    return hc_javascript__template_tail( state, db, 0 )
};
    return - 1
}

function branch_3392ed8b64ea54b8(state, db, prod){
    add_reduce( state, 5, 222 );
    return 150
}

function branch_33df3cbb370be24b(state, db, prod){
    add_reduce( state, 3, 91 );
    return 0
}

function branch_33e252200ed2fecc(state, db, prod){
    {
    return hc_javascript__statement_goto( state, db, 195 )
};
    return - 1
}

function branch_33ee13500b9e8885(state, db, prod){
    state.push_fn( branch_3ae99e428f1e6724, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1238_0_( state, db, 0 )
}

function branch_344f60932931ec0d(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_54868d6ec9436dfd, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_34ba99cd8ae03d85(state, db, prod){
    state.push_fn( branch_e43eb34a5f9a8782, 174 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_3538fbaecdb8c233(state, db, prod){
    scan( state.lexer, 73, 9 );
    if( isTokenActive( state.lexer._type, 74 ) ){
    scan( state.lexer, 75, 9 );
    state.push_fn( branch_c091602b1228e77d, 0 );
    return hc_html__ATTRIBUTES( state, db, 0 )
} else if( state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 76, 0 );
    if( isTokenActive( state.lexer._type, 77 ) ){
        state.push_fn( set_production /*17*/, 17 );
        state.push_fn( branch_1534b63df6946ea5, 17 );
        return hc_html__TAG_BODY( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        state.push_fn( set_production /*17*/, 17 );
        consume( state );
        state.push_fn( branch_3fa175778affbf08, 17 );
        return hc_html__TAGNAME( state, db, 0 )
    }
} else if( state.lexer._type  == 29 ){
    state.push_fn( set_production /*17*/, 17 );
    consume( state );
    add_reduce( state, 3, 23 );
    return 0
};
    return - 1
}

function branch_3552ea689089b4a2(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_3e48760a1eb8ef3f, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_355e2ba0fc376e37(state, db, prod){
    add_reduce( state, 1, 274 );
    return 0
}

function branch_362fd4881d3ad593(state, db, prod){
    scan( state.lexer, 38, 11 );
    if( state.lexer._type  == 139 ){
    scan( state.lexer, 39, 11 );
    state.push_fn( branch_9bfc0ad41c3aa2bc, 0 );
    return hc_javascript__class_heritage( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        state.push_fn( set_production /*165*/, 165 );
        state.push_fn( branch_96cd7ea0bcc998f9, 165 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*165*/, 165 );
        consume( state );
        add_reduce( state, 4, 236 );
        return 0
    }
};
    return - 1
}

function branch_36d0702fdc0ac5ee(state, db, prod){
    add_reduce( state, 2, 349 );
    return 317
}

function branch_36d0fe3e2ce63a99(state, db, prod){
    add_reduce( state, 1, 241 );
    return 164
}

function branch_36e005b0df7c2673(state, db, prod){
    {
    add_reduce( state, 5, 231 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_36f22698b835f22a(state, db, prod){
    add_reduce( state, 1, 356 );
    return 323
}

function branch_370e1e2004e6751a(state, db, prod){
    scan( state.lexer, 78, 11 );
    if( ( state.lexer._type  == 124 ) ){
    consume( state );
    state.push_fn( branch_489c8ea4d96b642e, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_3769c897b0ea6e58(state, db, prod){
    scan( state.lexer, 79, 9 );
    if( state.lexer._type  == 176 ){
    state.push_fn( set_production /*308*/, 308 );
    state.push_fn( branch_e6708846c9d22f70, 308 );
    return hc_css__declaration( state, db, 0 )
} else {
    add_reduce( state, 1, 351 );
    return 308
};
    return - 1
}

function branch_37850b65e7b52769(state, db, prod){
    state.push_fn( branch_3ddc67fa91a0db2c, 49 );
    return hc_javascript__hoistable_declaration( state, db, 0 )
}

function branch_37f6b15929b1ba63(state, db, prod){
    add_reduce( state, 1, 44 );
    return 0
}

function branch_3804e081362f1c98(state, db, prod){
    add_reduce( state, 3, 79 );
    return 0
}

function branch_385bdfd293a09ccb(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 177 );
    return 0
};
    return - 1
}

function branch_388c23e0a1f966be(state, db, prod){
    add_reduce( state, 2, 264 );
    return 0
}

function branch_38a5d88cc49859fa(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 253 );
    return 180
};
    return - 1
}

function branch_38d7ec245d2d4794(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return 241
};
    return - 1
}

function branch_38e4b0517223c47e(state, db, prod){
    add_reduce( state, 3, 76 );
    return 0
}

function branch_39273fed7b1fb285(state, db, prod){
    {
    add_reduce( state, 5, 232 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_3a137a7af15d1e96(state, db, prod){
    scan( state.lexer, 24, 9 );
    if( state.lexer._type  == 10 ){
    consume( state );
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
        consume( state );
        scan( state.lexer, 80, 9 );
        if( state.lexer._type  == 12 ){
            state.push_fn( set_production /*3*/, 3 );
            consume( state );
            add_reduce( state, 5, 3 );
            return 0
        } else {
            add_reduce( state, 4, 3 );
            return 3
        }
    }
} else if( state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 80, 9 );
    if( state.lexer._type  == 12 ){
        state.push_fn( set_production /*3*/, 3 );
        consume( state );
        add_reduce( state, 4, 3 );
        return 0
    } else {
        add_reduce( state, 3, 3 );
        return 3
    }
};
    return - 1
}

function branch_3a1afcc89656b700(state, db, prod){
    scan( state.lexer, 81, 9 );
    if( state.lexer._type  == 69 ){
    state.push_fn( set_production /*58*/, 58 );
    consume( state );
    state.push_fn( branch_c34374128f2f73d0, 58 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    return 58
};
    return - 1
}

function branch_3a9a122a9b11f3b5(state, db, prod){
    scan( state.lexer, 82, 21 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 342 );
    return 0
};
    return - 1
}

function branch_3aa15af582de1f9d(state, db, prod){
    add_reduce( state, 3, 69 );
    return 0
}

function branch_3ae99e428f1e6724(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 253 );
    add_reduce( state, 1, 275 );
    return hc_javascript__assignment_expression_goto( state, db, 198 )
};
    return - 1
}

function branch_3c131ed7e769316a(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__assignment_expression_goto( state, db, 75 )
}

function branch_3c13403716c5bcac(state, db, prod){
    add_reduce( state, 1, 38 );
    return 30
}

function branch_3c4f01ef2afc29d8(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 121 );
    return 0
};
    return - 1
}

function branch_3cad422980e6ab08(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPOUND_SELECTOR_list_1328_goto( state, db, 300 )
}

function branch_3ddc67fa91a0db2c(state, db, prod){
    add_reduce( state, 3, 60 );
    return 49
}

function branch_3e004bbc82c6990d(state, db, prod){
    add_reduce( state, 1, 275 );
    return 0
}

function branch_3e04b31bb2428b1a(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        state.push_fn( set_production /*158*/, 158 );
        state.push_fn( branch_2374c682d05e30d1, 158 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*158*/, 158 );
        consume( state );
        add_reduce( state, 4, 235 );
        return 0
    }
};
    return - 1
}

function branch_3e48760a1eb8ef3f(state, db, prod){
    add_reduce( state, 7, 194 );
    return 0
}

function branch_3e4fb794d2fb933c(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_3392ed8b64ea54b8, 150 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_3f7f5076b38bcdae(state, db, prod){
    add_reduce( state, 2, 12 );
    return 314
}

function branch_3fa175778affbf08(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 6, 23 );
    return 0
};
    return - 1
}

function branch_3ff64859598e5222(state, db, prod){
    add_reduce( state, 2, 289 );
    return 250
}

function branch_40ae507d79a220a3(state, db, prod){
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 58 ){
    state.push_fn( set_production /*186*/, 186 );
    consume( state );
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
        consume( state );
        add_reduce( state, 4, 258 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 113 ){
    state.push_fn( set_production /*186*/, 186 );
    consume( state );
    add_reduce( state, 3, 258 );
    return 0
};
    return - 1
}

function branch_40d86a772abb43fb(state, db, prod){
    add_reduce( state, 7, 193 );
    return 0
}

function branch_40e83532064d58de(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return 0
};
    return - 1
}

function branch_4121537ff4d5913d(state, db, prod){
    scan( state.lexer, 46, 9 );
    if( state.lexer._type  == 28 ){
    consume( state );
    scan( state.lexer, 83, 9 );
    if( state.lexer._type  == 30 || state.lexer._type  == 31 ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 21 );
            return 17
        }
    }
};
    return - 1
}

function branch_428e0d9b97f7997f(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__left_hand_side_expression_goto( state, db, 75 )
}

function branch_43618494a708de03(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 5, 103 );
    return 0
};
    return - 1
}

function branch_436d1ddb68fa8250(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_ebe4eb780050d256, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_43b3d05903540d0d(state, db, prod){
    add_reduce( state, 7, 192 );
    return 0
}

function branch_4437a2dc118308df(state, db, prod){
    scan( state.lexer, 78, 11 );
    if( ( state.lexer._type  == 124 ) ){
    consume( state );
    state.push_fn( branch_436d1ddb68fa8250, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_4472010bc24c98af(state, db, prod){
    add_reduce( state, 1, 98 );
    return hc_javascript__assignment_expression_goto( state, db, 75 )
}

function branch_449740ceb8df7fb1(state, db, prod){
    add_reduce( state, 2, 2 );
    return 0
}

function branch_45f25cea93eb325d(state, db, prod){
    scan( state.lexer, 46, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    scan( state.lexer, 19, 9 );
    if( ( state.lexer._type  == 38 ) ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 8, 33 );
            return 0
        }
    }
};
    return - 1
}

function branch_4612958bc6c06ac0(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_d3c83c6593b0d214, 75 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_c2c3998afc2615b5, 75 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_461c4abd2b84d737(state, db, prod){
    add_reduce( state, 1, 98 );
    return hc_javascript__left_hand_side_expression_goto( state, db, 75 )
}

function branch_46565819d563ece2(state, db, prod){
    scan( state.lexer, 84, 9 );
    if( state.lexer._type  == 60 ){
    state.push_fn( set_production /*86*/, 86 );
    state.push_fn( branch_918124bffd412d50, 86 );
    return hc_javascript__hex_token_list_607( state, db, 0 )
} else {
    add_reduce( state, 2, 12 );
    return 86
};
    return - 1
}

function branch_4656c4977caeeecb(state, db, prod){
    scan( state.lexer, 85, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_a8fbaf0f87323457, 126 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_469783ee4b10f5a3(state, db, prod){
    add_reduce( state, 6, 199 );
    return 0
}

function branch_46af5f0b633291dd(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_126d081659a3131a, 121 );
        state.push_fn( branch_39273fed7b1fb285, 75 );
        return 0
    } else {
        add_reduce( state, 5, 232 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_46b2d3dfd3619fb7(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return 228
};
    return - 1
}

function branch_471c9fa4798d33cf(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__binary_token_list_621_goto( state, db, 283 )
}

function branch_471fe0324dcbb53e(state, db, prod){
    scan( state.lexer, 86, 11 );
    if( state.lexer._type  == 83 ){
    state.push_fn( set_production /*134*/, 134 );
    consume( state );
    state.push_fn( branch_b9bf377dde48a035, 134 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 124 ){
    state.push_fn( set_production /*134*/, 134 );
    consume( state );
    state.push_fn( branch_3552ea689089b4a2, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_472b2c778a3a0605(state, db, prod){
    add_reduce( state, 4, 283 );
    return 0
}

function branch_489c8ea4d96b642e(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_62df213a8814611c, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_48d2171bb0e25a48(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__binding_list_goto( state, db, 137 )
}

function branch_493b803ab79f60fb(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 146 );
    return 0
};
    return - 1
}

function branch_49591abc5220b3dc(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_330e8cad8b23421b, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_49909cbad1e3be1b(state, db, prod){
    scan( state.lexer, 87, 21 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 79, 9 );
    if( state.lexer._type  == 17 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_fe20d18918c58e78, 252 );
        state.push_fn( branch_9a39513815f7708a, 252 );
        return 0
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*252*/, 252 );
        consume( state );
        add_reduce( state, 3, 332 );
        return 0
    } else {
        scan( state.lexer, 88, 21 );
        state.push_fn( branch_1805f48b1dee4d53, 0 );
        return hc_css__declaration_list( state, db, 0 )
    }
};
    return - 1
}

function branch_49d53a19b4f867c5(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 174 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_4a3561aa31a801e8(state, db, prod){
    add_reduce( state, 2, 240 );
    return 0
}

function branch_4ac208c842f53bc8(state, db, prod){
    scan( state.lexer, 89, 21 );
    if( ( state.lexer._type  == 17 ) ){
    state.push_fn( branch_9aea9847880627fd, 253 );
    return hc_css__declaration_list_group_1613_0_( state, db, 0 )
};
    return - 1
}

function branch_4aea69899aef47c7(state, db, prod){
    add_reduce( state, 5, 70 );
    return 0
}

function branch_4b0c1b846c575618(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    state.push_fn( branch_97e43eab108ae67e, 178 );
    return hc_javascript__template_middle( state, db, 0 )
};
    return - 1
}

function branch_4cee85cd83034401(state, db, prod){
    state.push_fn( branch_269033d650d0c821, 248 );
    return hc_css__mf_name( state, db, 0 )
}

function branch_4d7fd88348267c40(state, db, prod){
    state.push_fn( branch_7ea803938e050e09, 240 );
    return hc_css__mf_plain( state, db, 0 )
}

function branch_4e2e39620f32f239(state, db, prod){
    state.push_fn( branch_c80d25956108cfaf, 135 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_4e73c85e3b71fd44(state, db, prod){
    add_reduce( state, 2, 17 );
    return 0
}

function branch_4f71a16bc828273c(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 166 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_4fd3a991a1b9ed16(state, db, prod){
    scan( state.lexer, 90, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    state.push_fn( set_production /*204*/, 204 );
    state.push_fn( branch_472b2c778a3a0605, 204 );
    return hc_css__import_list_1287( state, db, 0 )
} else {
    add_reduce( state, 3, 285 );
    return 204
};
    return - 1
}

function branch_5121fc23773fe257(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 122 );
    return 0
};
    return - 1
}

function branch_517ebbc64d1522d8(state, db, prod){
    state.push_fn( branch_eb243dbfad70f5ba, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_532ddb9eed202d84(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 170 );
    return 0
};
    return - 1
}

function branch_544e1b40f4ff560c(state, db, prod){
    scan( state.lexer, 91, 11 );
    if( state.lexer._type  == 128 ){
    state.push_fn( set_production /*142*/, 142 );
    state.push_fn( branch_9b60da2eca0fe01f, 142 );
    return hc_javascript__case_clauses( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*142*/, 142 );
    consume( state );
    add_reduce( state, 3, 210 );
    return 0
};
    return - 1
}

function branch_54734802f26697db(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_dc03aeac2b86612a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_54868d6ec9436dfd(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 167 );
    return 0
};
    return - 1
}

function branch_54fddfcde161dfcd(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        state.push_fn( set_production /*165*/, 165 );
        state.push_fn( branch_2374c682d05e30d1, 165 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*165*/, 165 );
        consume( state );
        add_reduce( state, 4, 235 );
        return 0
    }
};
    return - 1
}

function branch_55108c88c1d1d3c2(state, db, prod){
    state.push_fn( branch_0f4b91c57196f73b, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1238_0_( state, db, 0 )
}

function branch_551ee1767d3b4951(state, db, prod){
    add_reduce( state, 2, 203 );
    return 140
}

function branch_55aa503dfc5a7a4e(state, db, prod){
    add_reduce( state, 2, 108 );
    return hc_javascript__template_spans_goto( state, db, 178 )
}

function branch_561bb2612752fd0b(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 176 );
    return 0
};
    return - 1
}

function branch_56eb0ca60d23ff70(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__module_body_goto( state, db, 33 )
}

function branch_57c28651e57cc9cb(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 13, 9 );
        if( isTokenActive( state.lexer._type, 14 ) ){
            state.push_fn( set_production /*98*/, 98 );
            state.push_fn( branch_a999f6308f78bcf5, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*98*/, 98 );
            consume( state );
            add_reduce( state, 7, 132 );
            return 0
        }
    }
};
    return - 1
}

function branch_57e41fefd1828c85(state, db, prod){
    state.push_fn( branch_bc231d7404cbc712, 89 );
    return hc_javascript__elision( state, db, 0 )
}

function branch_58bf8b08e6ecc2ff(state, db, prod){
    add_reduce( state, 1, 98 );
    add_reduce( state, 1, 115 );
    return hc_javascript__property_definition_goto( state, db, 99 )
}

function branch_58d6e17b00f4e677(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 92, 11 );
    state.push_fn( branch_9577149070d44530, 0 );
    return hc_javascript__property_set_parameter_list( state, db, 0 )
};
    return - 1
}

function branch_597965bbd31b89f6(state, db, prod){
    add_reduce( state, 5, 204 );
    return 141
}

function branch_5a2f701a2fefa730(state, db, prod){
    add_reduce( state, 3, 80 );
    return 0
}

function branch_5c7a571f043390ca(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 93, 9 );
    if( isTokenActive( state.lexer._type, 94 ) ){
        scan( state.lexer, 95, 9 );
        state.push_fn( branch_4121537ff4d5913d, 0 );
        return hc_css__CSS( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        consume( state );
        scan( state.lexer, 83, 9 );
        if( state.lexer._type  == 30 || state.lexer._type  == 31 ){
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 7, 26 );
                return 17
            }
        }
    }
};
    return - 1
}

function branch_5c88b2f13f5585e4(state, db, prod){
    add_reduce( state, 1, 340 );
    return 0
}

function branch_5ca1d17079e9fcd0(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__variable_declaration_list_goto( state, db, 53 )
}

function branch_5cb267bf74038e65(state, db, prod){
    add_reduce( state, 1, 1 );
    return 0
}

function branch_5ded9ad43fb0bdaf(state, db, prod){
    scan( state.lexer, 70, 30 );
    if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    consume( state );
    add_reduce( state, 3, 296 );
    return 0
} else {
    add_reduce( state, 2, 296 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_5e04f36dc03b5f73(state, db, prod){
    add_reduce( state, 3, 161 );
    return 0
}

function branch_5e58e2b817f7eaa6(state, db, prod){
    add_reduce( state, 1, 241 );
    return hc_javascript__short_circuit_expression_goto( state, db, 75 )
}

function branch_609621b618d4f6c2(state, db, prod){
    add_reduce( state, 4, 60 );
    return 0
}

function branch_60d1f22634e1d8d8(state, db, prod){
    add_reduce( state, 2, 12 );
    return 0
}

function branch_618e7a9e413278fa(state, db, prod){
    scan( state.lexer, 27, 28 );
    if( state.lexer._type  == 70 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 96, 21 );
    if( pk._type  == 70 ){
        scan( state.lexer, 96, 21 );
        state.push_fn( branch_d28d9a934b3fc105, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1328( state, db, 0 )
    }
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    consume( state );
    add_reduce( state, 3, 297 );
    return 0
} else {
    add_reduce( state, 2, 297 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_61e634f78d764fd5(state, db, prod){
    add_reduce( state, 3, 68 );
    return 0
}

function branch_62371e09d07c7934(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_7b74e4f5b1724881, 134 );
    return hc_javascript__asi( state, db, 0 )
};
    return - 1
}

function branch_625784590dfb6990(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 253 );
    return 199
};
    return - 1
}

function branch_628f19130835c1c3(state, db, prod){
    state.push_fn( branch_ede0f885ef9d3d87, 146 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_62df213a8814611c(state, db, prod){
    add_reduce( state, 7, 194 );
    return 134
}

function branch_631d27ed95564d12(state, db, prod){
    scan( state.lexer, 97, 9 );
    if( state.lexer._type  == 63 ){
    state.push_fn( set_production /*51*/, 51 );
    consume( state );
    state.push_fn( branch_0912092e7d3508ca, 51 );
    return hc_javascript__identifier( state, db, 0 )
} else {
    add_reduce( state, 1, 52 );
    return 51
};
    return - 1
}

function branch_6329a1fb9c53c5ab(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_532ddb9eed202d84, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_633b21482b250800(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__STYLE_RULE_list_1605_goto( state, db, 306 )
}

function branch_63673f200ce997a5(state, db, prod){
    state.push_fn( branch_2deb0e3060b5d925, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_6384e8ff46f7fb04(state, db, prod){
    state.push_fn( branch_c36ec8b885763224, 148 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_647439ca9e7ea686(state, db, prod){
    add_reduce( state, 3, 273 );
    return 0
}

function branch_65677324ec109fc4(state, db, prod){
    scan( state.lexer, 98, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    state.push_fn( set_production /*204*/, 204 );
    state.push_fn( branch_ca532a3862fc90d3, 204 );
    return hc_css__import_list_1287( state, db, 0 )
} else if( state.lexer._type  == 207 ){
    scan( state.lexer, 99, 21 );
    state.push_fn( branch_4fd3a991a1b9ed16, 0 );
    return hc_css__import_group_1285_0_( state, db, 0 )
} else {
    add_reduce( state, 2, 286 );
    return 204
};
    return - 1
}

function branch_659029be4454979b(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 3, 152 );
    return 0
};
    return - 1
}

function branch_6828526c58499fc5(state, db, prod){
    {
    return hc_javascript__short_circuit_expression_goto( state, db, 61 )
};
    return - 1
}

function branch_682f1129d3fa40db(state, db, prod){
    scan( state.lexer, 100, 11 );
    if( state.lexer._type  == 14 ){
    state.push_fn( set_production /*112*/, 112 );
    state.push_fn( branch_a7de5534b43714bf, 112 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    add_reduce( state, 1, 148 );
    return 112
};
    return - 1
}

function branch_690ccf52e0bef75b(state, db, prod){
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 97 ){
    state.push_fn( set_production /*113*/, 113 );
    consume( state );
    add_reduce( state, 3, 150 );
    return 0
} else if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 102, 11 );
    if( state.lexer._type  == 58 ){
        scan( state.lexer, 72, 11 );
        state.push_fn( branch_2a647859d36041a1, 0 );
        return hc_javascript__elision( state, db, 0 )
    } else if( state.lexer._type  == 111 ){
        state.push_fn( set_production /*113*/, 113 );
        state.push_fn( branch_72a90fe47ea2dd7d, 113 );
        return hc_javascript__binding_rest_element( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        state.push_fn( set_production /*113*/, 113 );
        consume( state );
        add_reduce( state, 4, 150 );
        return 0
    }
};
    return - 1
}

function branch_695fb15b8fbd4b08(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_a6259fc3edd7737c, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_69f0baed6b66626f(state, db, prod){
    scan( state.lexer, 103, 9 );
    if( state.lexer._type  == 60 ){
    state.push_fn( set_production /*88*/, 88 );
    state.push_fn( branch_918124bffd412d50, 88 );
    return hc_javascript__binary_token_list_621( state, db, 0 )
} else {
    add_reduce( state, 2, 12 );
    return 88
};
    return - 1
}

function branch_6a092cdad151693f(state, db, prod){
    scan( state.lexer, 104, 11 );
    if( ( state.lexer._type  == 128 ) ){
    state.push_fn( branch_8dabf91e039dcfda, 143 );
    return hc_javascript__case_clause( state, db, 0 )
};
    return - 1
}

function branch_6a7516e57187d00c(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_html__ATTRIBUTES_goto( state, db, 19 )
}

function branch_6a785f89ee375b00(state, db, prod){
    add_reduce( state, 4, 42 );
    add_reduce( state, 1, 41 );
    return 0
}

function branch_6ab24f20dbdbfa84(state, db, prod){
    add_reduce( state, 2, 279 );
    return 0
}

function branch_6b6bbb456d65602e(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 3, 278 );
    return 0
};
    return - 1
}

function branch_6bdab82a0e6358f8(state, db, prod){
    state.push_fn( branch_c8d2a666286307a2, 149 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_6c4223fa35ba71e7(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 3, 158 );
    return 0
};
    return - 1
}

function branch_6cace078782c5618(state, db, prod){
    state.push_fn( branch_428e0d9b97f7997f, 75 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_6cb776736fe88463(state, db, prod){
    add_reduce( state, 6, 198 );
    return 0
}

function branch_6cd1f1bf1a0c6078(state, db, prod){
    add_reduce( state, 3, 214 );
    return 0
}

function branch_6d47b92cb0b4983a(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return hc_css__media_condition_goto( state, db, 240 )
};
    return - 1
}

function branch_6d5fe25590047b65(state, db, prod){
    add_reduce( state, 8, 186 );
    return 0
}

function branch_6d7c1f0e910cdf98(state, db, prod){
    state.push_fn( branch_3ae99e428f1e6724, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1242_0_( state, db, 0 )
}

function branch_6de138e30c35efa8(state, db, prod){
    state.push_fn( branch_895aa123fa566ad1, 11 );
    return hc_html__BODY( state, db, 0 )
}

function branch_6df555e4b1a24c66(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_1289d97c0883dcfa, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_6e2c267667c82014(state, db, prod){
    add_reduce( state, 1, 280 );
    return 0
}

function branch_6e379e9d883eb96f(state, db, prod){
    {
    return hc_COMPONENT_goto( state, db, 195 )
};
    return - 1
}

function branch_6ec7604dbe3bea89(state, db, prod){
    scan( state.lexer, 49, 9 );
    if( state.lexer._type  == 27 ){
    consume( state );
    scan( state.lexer, 50, 9 );
    if( state.lexer._type  == 10 ){
        consume( state );
        scan( state.lexer, 51, 9 );
        if( state.lexer._type  == 37 || state.lexer._type  == 39 ){
            consume( state );
            scan( state.lexer, 8, 9 );
            if( ( state.lexer._type  == 11 ) ){
                consume( state );
                add_reduce( state, 8, 34 );
                return 27
            }
        }
    }
};
    return - 1
}

function branch_6ecaae111f21bbc9(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 290 );
    return 0
};
    return - 1
}

function branch_6f90f9be26052111(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 131 );
    return 0
};
    return - 1
}

function branch_7056a44b19c04c51(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 173 );
    return 0
};
    return - 1
}

function branch_70d9326e6c9dc217(state, db, prod){
    add_reduce( state, 3, 28 );
    return 0
}

function branch_713b2f8bd118627a(state, db, prod){
    add_reduce( state, 3, 142 );
    return 0
}

function branch_71808420606e87a2(state, db, prod){
    scan( state.lexer, 105, 9 );
    if( state.lexer._type  == 98 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 106, 11 );
    if( pk._type  == 5 ){
        state.lexer._type  = 98;
        state.push_fn( set_production /*83*/, 83 );
        state.push_fn( branch_60d1f22634e1d8d8, 83 );
        return hc_javascript__float_token_group_597_0_( state, db, 0 )
    }
} else {
    add_reduce( state, 1, 14 );
    return 83
};
    return - 1
}

function branch_71c00b5275f03638(state, db, prod){
    add_reduce( state, 2, 353 );
    return 318
}

function branch_72a90fe47ea2dd7d(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 5, 153 );
    return 0
};
    return - 1
}

function branch_73260214906574e0(state, db, prod){
    {
    return hc_javascript__statement_list_item_goto( state, db, 195 )
};
    return - 1
}

function branch_746fc3b29eef739d(state, db, prod){
    scan( state.lexer, 16, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_4aea69899aef47c7, 57 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function branch_7483bdc374ca764a(state, db, prod){
    state.push_fn( branch_4e73c85e3b71fd44, 15 );
    return hc_html__GOAL_TAG( state, db, 0 )
}

function branch_74d2fe4bbc3769d8(state, db, prod){
    {
    add_reduce( state, 6, 230 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_76299b8f840122e3(state, db, prod){
    state.push_fn( branch_a61249f19ae4f80e, 191 );
    return hc_javascript__arguments( state, db, 0 )
}

function branch_763fccf57c935b99(state, db, prod){
    add_reduce( state, 1, 241 );
    return hc_javascript__optional_expression_goto( state, db, 75 )
}

function branch_76555673d7c8ae6c(state, db, prod){
    add_reduce( state, 2, 320 );
    return 239
}

function branch_771b37a26d9f2dd6(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 255 );
    return 0
};
    return - 1
}

function branch_7784d38100a538d6(state, db, prod){
    scan( state.lexer, 107, 11 );
    if( state.lexer._type  == 14 ){
    state.push_fn( set_production /*54*/, 54 );
    state.push_fn( branch_174a4749802a5aed, 54 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    return 54
};
    return - 1
}

function branch_77cd17e0992d27d4(state, db, prod){
    add_reduce( state, 3, 64 );
    return 52
}

function branch_787ecfd87813a9e3(state, db, prod){
    scan( state.lexer, 108, 11 );
    state.push_fn( branch_d540f5297b6ec400, 0 );
    return hc_javascript__element_list( state, db, 0 )
}

function branch_78cef2abd3f1c873(state, db, prod){
    scan( state.lexer, 46, 9 );
    if( ( state.lexer._type  == 28 ) ){
    consume( state );
    state.push_fn( branch_0c8cb59ae1d05865, 17 );
    return hc_html__TAGNAME( state, db, 0 )
};
    return - 1
}

function branch_795ed673449dea5c(state, db, prod){
    scan( state.lexer, 52, 11 );
    if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 109, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        scan( state.lexer, 110, 11 );
        state.push_fn( branch_17836977a30611f6, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        consume( state );
        scan( state.lexer, 53, 9 );
        if( isTokenActive( state.lexer._type, 54 ) ){
            state.push_fn( set_production /*134*/, 134 );
            state.push_fn( branch_7f34f27ddc9747e8, 134 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            state.push_fn( set_production /*134*/, 134 );
            consume( state );
            state.push_fn( branch_e7ca26ec7501a7a9, 134 );
            return hc_javascript__statement( state, db, 0 )
        }
    }
};
    return - 1
}

function branch_7963971efdf766ce(state, db, prod){
    add_reduce( state, 1, 98 );
    return hc_javascript__optional_expression_goto( state, db, 75 )
}

function branch_79647dcfa8fc7924(state, db, prod){
    add_reduce( state, 2, 83 );
    return 0
}

function branch_797254658f698e96(state, db, prod){
    scan( state.lexer, 111, 21 );
    if( state.lexer._type  == 17 ){
    state.push_fn( set_production /*254*/, 254 );
    consume( state );
    add_reduce( state, 2, 14 );
    return 0
} else {
    add_reduce( state, 1, 14 );
    return 254
};
    return - 1
}

function branch_7a323df1e2786f03(state, db, prod){
    scan( state.lexer, 112, 9 );
    if( state.lexer._type  == 14 ){
    consume( state );
    scan( state.lexer, 113, 9 );
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
        state.push_fn( set_production /*20*/, 20 );
        state.push_fn( branch_f7de3da658dea4ce, 20 );
        return hc_WICK_BINDING( state, db, 0 )
    } else if( state.lexer._type  == 3073 || state.lexer._type  == 34 || state.lexer._type  == 33 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_160ff32f93ae8805, 20 );
        state.push_fn( branch_2e15b3f2cf883bd6, 20 );
        return 0
    } else {
        state.push_fn( set_production /*20*/, 20 );
        state.push_fn( branch_70d9326e6c9dc217, 20 );
        return hc_html__ATTRIBUTE_BODY( state, db, 0 )
    }
} else {
    add_reduce( state, 1, 29 );
    return 20
};
    return - 1
}

function branch_7a558e274ba16720(state, db, prod){
    add_reduce( state, 2, 117 );
    return 96
}

function branch_7b14d74b485bfded(state, db, prod){
    add_reduce( state, 3, 251 );
    return hc_javascript__template_spans_goto( state, db, 178 )
}

function branch_7b5623845e6c2474(state, db, prod){
    {
    return hc_javascript__labeled_item_goto( state, db, 195 )
};
    return - 1
}

function branch_7b74e4f5b1724881(state, db, prod){
    add_reduce( state, 7, 183 );
    return 0
}

function branch_7c43277f5623fa13(state, db, prod){
    add_reduce( state, 2, 289 );
    return 249
}

function branch_7d28866a17c37517(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 178 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_7e2c9888b89422c4(state, db, prod){
    {
    return hc_javascript__short_circuit_expression_goto( state, db, 195 )
};
    return - 1
}

function branch_7e54beac23d51662(state, db, prod){
    state.push_fn( branch_1df29885fc317625, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_7e54fb8dccbd647b(state, db, prod){
    add_reduce( state, 2, 238 );
    return 0
}

function branch_7e6a700dad877a24(state, db, prod){
    {
    add_reduce( state, 5, 231 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_7ea803938e050e09(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 3, 321 );
    return hc_css__media_condition_without_or_goto( state, db, 240 )
};
    return - 1
}

function branch_7f34f27ddc9747e8(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_9a0c7ff089e4c72a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_807c7eb891f7c8ec(state, db, prod){
    scan( state.lexer, 71, 21 );
    if( state.lexer._type  == 17 ){
    state.push_fn( set_production /*260*/, 260 );
    consume( state );
    scan( state.lexer, 82, 21 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 5, 339 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*260*/, 260 );
    consume( state );
    add_reduce( state, 4, 339 );
    return 0
};
    return - 1
}

function branch_80e56d99ad54996d(state, db, prod){
    {
    return hc_javascript__assignment_expression_goto( state, db, 61 )
};
    return - 1
}

function branch_81e00d8aae69616b(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 3, 139 );
    return 101
};
    return - 1
}

function branch_8242424279821ad4(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_36e005b0df7c2673, 121 );
        state.push_fn( branch_7e6a700dad877a24, 75 );
        return 0
    } else {
        add_reduce( state, 5, 231 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_84ce0da9cbca5ccc(state, db, prod){
    state.push_fn( branch_174a4749802a5aed, 54 );
    return hc_javascript__initializer( state, db, 0 )
}

function branch_851df6ecabe5ccf2(state, db, prod){
    state.push_fn( branch_1444c31aded2e42c, 240 );
    return hc_css__mf_range( state, db, 0 )
}

function branch_8556e88bbf7a4064(state, db, prod){
    add_reduce( state, 3, 322 );
    return 242
}

function branch_855ab17a1cca1393(state, db, prod){
    scan( state.lexer, 114, 9 );
    if( ( state.lexer._type  == 32 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_85ada9cf18b84407(state, db, prod){
    add_reduce( state, 1, 241 );
    return hc_javascript__left_hand_side_expression_goto( state, db, 75 )
}

function branch_85ba82d417382647(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 205 );
    return 0
};
    return - 1
}

function branch_86327d30b3850c08(state, db, prod){
    scan( state.lexer, 61, 11 );
    if( state.lexer._type  == 58 ){
    state.push_fn( set_production /*93*/, 93 );
    consume( state );
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 4, 113 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*93*/, 93 );
    consume( state );
    add_reduce( state, 3, 113 );
    return 0
};
    return - 1
}

function branch_872f3f397a1482c8(state, db, prod){
    scan( state.lexer, 109, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
    scan( state.lexer, 110, 11 );
    state.push_fn( branch_a58ae455fd5afde4, 0 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 53, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        state.push_fn( set_production /*134*/, 134 );
        state.push_fn( branch_0bd7f6bd9ca86d44, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*134*/, 134 );
        consume( state );
        state.push_fn( branch_6cb776736fe88463, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_873755940ab62737(state, db, prod){
    add_reduce( state, 5, 227 );
    return 153
}

function branch_87b3679504a7f0fb(state, db, prod){
    state.push_fn( branch_d5b82c84f6a87a6a, 115 );
    return hc_javascript__binding_element( state, db, 0 )
}

function branch_888504487d720e0e(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 171 );
    return 0
};
    return - 1
}

function branch_893277c7cc35ec31(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 6, 151 );
    return 0
};
    return - 1
}

function branch_89510338e8c94764(state, db, prod){
    scan( state.lexer, 115, 11 );
    state.push_fn( branch_471fe0324dcbb53e, 0 );
    return hc_javascript__for_declaration( state, db, 0 )
}

function branch_895aa123fa566ad1(state, db, prod){
    add_reduce( state, 2, 13 );
    return 0
}

function branch_89ea6217e293f3ca(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__export_clause_list_399_goto( state, db, 274 )
}

function branch_8a3be2ecdcf47a07(state, db, prod){
    state.push_fn( branch_38d7ec245d2d4794, 241 );
    return hc_css__mf_plain( state, db, 0 )
}

function branch_8a46feb918366532(state, db, prod){
    scan( state.lexer, 116, 9 );
    if( state.lexer._type  == 60 ){
    state.push_fn( set_production /*87*/, 87 );
    state.push_fn( branch_918124bffd412d50, 87 );
    return hc_javascript__octal_token_list_614( state, db, 0 )
} else {
    add_reduce( state, 2, 12 );
    return 87
};
    return - 1
}

function branch_8ab4c4fcc8a8c8cd(state, db, prod){
    state.push_fn( branch_551ee1767d3b4951, 140 );
    return hc_javascript__for_binding( state, db, 0 )
}

function branch_8b10a97864118e81(state, db, prod){
    {
    return hc_javascript__module_item_goto( state, db, 61 )
};
    return - 1
}

function branch_8b7f6cc58ff0fe5a(state, db, prod){
    scan( state.lexer, 117, 9 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 348 );
    return 0
};
    return - 1
}

function branch_8be81d01f471225f(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_e759b49925136b70, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_8caf9eb72f1af5a9(state, db, prod){
    add_reduce( state, 2, 84 );
    return 71
}

function branch_8ce4b8c35b5b4bb1(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 120 );
    return 0
};
    return - 1
}

function branch_8cfd40537685bdce(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 172 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_8dabf91e039dcfda(state, db, prod){
    add_reduce( state, 2, 2 );
    return hc_javascript__case_clauses_goto( state, db, 143 )
}

function branch_8e14cc5b254736d6(state, db, prod){
    add_reduce( state, 3, 72 );
    return 0
}

function branch_8ea6cf05133375eb(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 10, 164 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_8ebd046b57c11c2d(state, db, prod){
    scan( state.lexer, 118, 9 );
    if( state.lexer._type  == 119 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 119, 9 );
    if( isTokenActive( pk._type, 120 ) ){
        state.lexer._type  = 119;
        state.push_fn( set_production /*132*/, 132 );
        consume( state );
        state.push_fn( branch_98b1ff31cb22f280, 132 );
        return hc_javascript__statement( state, db, 0 )
    }
} else {
    add_reduce( state, 5, 182 );
    return 132
};
    return - 1
}

function branch_903716b58564713c(state, db, prod){
    add_reduce( state, 3, 43 );
    add_reduce( state, 1, 41 );
    return 0
}

function branch_9049aebd8b9ab60d(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        scan( state.lexer, 121, 11 );
        state.push_fn( branch_57c28651e57cc9cb, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        consume( state );
        scan( state.lexer, 12, 11 );
        if( state.lexer._type  == 16 ){
            consume( state );
            scan( state.lexer, 13, 9 );
            if( isTokenActive( state.lexer._type, 14 ) ){
                state.push_fn( set_production /*98*/, 98 );
                state.push_fn( branch_6f90f9be26052111, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                state.push_fn( set_production /*98*/, 98 );
                consume( state );
                add_reduce( state, 6, 137 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_918124bffd412d50(state, db, prod){
    add_reduce( state, 3, 100 );
    return 0
}

function branch_922993291d964a30(state, db, prod){
    state.push_fn( branch_233769891365127b, 35 );
    return hc_javascript__from_clause( state, db, 0 )
}

function branch_935f2ead417d82f8(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 34, 11 );
    if( state.lexer._type  == 1 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_ef84bb8c1c5193f5, 121 );
        state.push_fn( branch_74d2fe4bbc3769d8, 75 );
        return 0
    } else {
        add_reduce( state, 6, 230 );
        return hc_javascript__statement_list_item_goto( state, db, 75 )
    }
};
    return - 1
}

function branch_936eabcf3bf6dbab(state, db, prod){
    scan( state.lexer, 82, 21 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 335 );
    return 0
};
    return - 1
}

function branch_9381712543ead955(state, db, prod){
    scan( state.lexer, 61, 11 );
    if( state.lexer._type  == 58 ){
    state.push_fn( set_production /*50*/, 50 );
    consume( state );
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 4, 62 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*50*/, 50 );
    consume( state );
    add_reduce( state, 3, 62 );
    return 0
};
    return - 1
}

function branch_93f48f717eb1e79d(state, db, prod){
    state.push_fn( branch_7ea803938e050e09, 240 );
    return hc_css__mf_range( state, db, 0 )
}

function branch_941b0a954c649456(state, db, prod){
    add_reduce( state, 3, 5 );
    return 4
}

function branch_943029143eb62c01(state, db, prod){
    add_reduce( state, 3, 78 );
    return 0
}

function branch_94a544eec5b284ed(state, db, prod){
    scan( state.lexer, 122, 11 );
    state.push_fn( branch_471fe0324dcbb53e, 0 );
    return hc_javascript__left_hand_side_expression( state, db, 0 )
}

function branch_94d210f5e537e2f9(state, db, prod){
    scan( state.lexer, 123, 9 );
    if( ( state.lexer._type  == 26 ) ){
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 6, 15 );
        return 0
    }
};
    return - 1
}

function branch_950c41dd46277dca(state, db, prod){
    state.push_fn( branch_7a558e274ba16720, 96 );
    return hc_javascript__initializer( state, db, 0 )
}

function branch_954c56e02bee4682(state, db, prod){
    add_reduce( state, 2, 312 );
    return 226
}

function branch_9577149070d44530(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 13, 9 );
        if( isTokenActive( state.lexer._type, 14 ) ){
            state.push_fn( set_production /*98*/, 98 );
            state.push_fn( branch_3c4f01ef2afc29d8, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*98*/, 98 );
            consume( state );
            add_reduce( state, 7, 127 );
            return 0
        }
    }
};
    return - 1
}

function branch_961fad18f3f0a5a7(state, db, prod){
    add_reduce( state, 1, 316 );
    return 0
}

function branch_968d2bd6f0ff599a(state, db, prod){
    add_reduce( state, 3, 254 );
    return 0
}

function branch_96b4a920ae326c1f(state, db, prod){
    add_reduce( state, 3, 273 );
    return hc_javascript__assignment_expression_goto( state, db, 57 )
}

function branch_96cd7ea0bcc998f9(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 232 );
    return 0
};
    return - 1
}

function branch_96d8bd77c73a6285(state, db, prod){
    state.push_fn( branch_77cd17e0992d27d4, 52 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_973f7e6fc7a51266(state, db, prod){
    scan( state.lexer, 124, 11 );
    if( ( state.lexer._type  == 83 ) ){
    consume( state );
    state.push_fn( branch_b68265317f93cd7a, 134 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_9742cc9ec480e36c(state, db, prod){
    add_reduce( state, 2, 54 );
    return 44
}

function branch_9769a0b3dc78a42b(state, db, prod){
    scan( state.lexer, 125, 11 );
    if( state.lexer._type  == 14 ){
    state.push_fn( set_production /*111*/, 111 );
    state.push_fn( branch_a7de5534b43714bf, 111 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    add_reduce( state, 1, 148 );
    return 111
};
    return - 1
}

function branch_97bfec73b617eeaa(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 173 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_97e43eab108ae67e(state, db, prod){
    state.push_fn( branch_7b14d74b485bfded, 178 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_97f2f316d8c39806(state, db, prod){
    add_reduce( state, 8, 191 );
    return 0
}

function branch_98212c09b27e8df2(state, db, prod){
    scan( state.lexer, 126, 21 );
    if( state.lexer._type  == 174 || state.lexer._type  == 175 ){
    state.push_fn( set_production /*221*/, 221 );
    state.push_fn( branch_17a3282d8d9c8a2d, 221 );
    return hc_css__ATTR_MODIFIER( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    state.push_fn( set_production /*221*/, 221 );
    consume( state );
    add_reduce( state, 5, 310 );
    return 0
};
    return - 1
}

function branch_989668520b64d0f9(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 234 );
    return 0
};
    return - 1
}

function branch_98b1ff31cb22f280(state, db, prod){
    add_reduce( state, 7, 181 );
    return 0
}

function branch_9973f3ad6c8ed6f4(state, db, prod){
    scan( state.lexer, 105, 9 );
    if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
    state.push_fn( set_production /*82*/, 82 );
    state.push_fn( branch_60d1f22634e1d8d8, 82 );
    return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
} else {
    add_reduce( state, 1, 14 );
    return 82
};
    return - 1
}

function branch_9976eef7d11d601b(state, db, prod){
    {
    add_reduce( state, 3, 237 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_9a0c7ff089e4c72a(state, db, prod){
    add_reduce( state, 8, 190 );
    return 0
}

function branch_9a39513815f7708a(state, db, prod){
    state.push_fn( branch_bc512fc854baa5fc, 252 );
    return hc_css__STYLE_RULE_list_1608( state, db, 0 )
}

function branch_9a7cc4888d76f221(state, db, prod){
    scan( state.lexer, 87, 21 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 127, 21 );
    if( isTokenActive( state.lexer._type, 128 ) ){
        state.push_fn( set_production /*255*/, 255 );
        state.push_fn( branch_936eabcf3bf6dbab, 255 );
        return hc_css__GROUP_RULE_BODY( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*255*/, 255 );
        consume( state );
        add_reduce( state, 4, 336 );
        return 0
    }
};
    return - 1
}

function branch_9aea9847880627fd(state, db, prod){
    add_reduce( state, 2, 334 );
    return hc_css__declaration_list_goto( state, db, 253 )
}

function branch_9aef3ffcd31bc96d(state, db, prod){
    scan( state.lexer, 25, 11 );
    if( state.lexer._type  == 36 ){
    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    add_reduce( state, 2, 92 );
    return hc_javascript__short_circuit_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_9af93c66ec6f1e19(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__named_imports_list_331_goto( state, db, 271 )
}

function branch_9afea872a2de7233(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_597965bbd31b89f6, 141 );
    return hc_javascript__case_block( state, db, 0 )
};
    return - 1
}

function branch_9b524494e1babaea(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_e651b2015f0826be, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_9b60da2eca0fe01f(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 206 );
    return 0
};
    return - 1
}

function branch_9bfc0ad41c3aa2bc(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        state.push_fn( set_production /*165*/, 165 );
        state.push_fn( branch_1ab9bb0b1d889bbd, 165 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*165*/, 165 );
        consume( state );
        add_reduce( state, 5, 233 );
        return 0
    }
};
    return - 1
}

function branch_9cf639610c3537f3(state, db, prod){
    scan( state.lexer, 129, 11 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 55 );
    return 0
};
    return - 1
}

function branch_9d49a885d0286153(state, db, prod){
    state.push_fn( branch_0984293846c4da1e, 240 );
    return hc_css__media_condition( state, db, 0 )
}

function branch_9d4a6fee7f15f833(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__STYLE_SHEET_list_1280_goto( state, db, 292 )
}

function branch_9d55e0f9b7f96271(state, db, prod){
    {
    add_reduce( state, 4, 236 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_9d5a7eab51c37cb0(state, db, prod){
    add_reduce( state, 3, 311 );
    return 0
}

function branch_9d871c26cf31d6ba(state, db, prod){
    add_reduce( state, 2, 354 );
    add_reduce( state, 1, 1 );
    return 0
}

function branch_9d87f58cd61f2e04(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 6, 134 );
    return 0
};
    return - 1
}

function branch_9db3115235becfe6(state, db, prod){
    state.push_fn( branch_34ba99cd8ae03d85, 174 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_9e01aab23a7c11c1(state, db, prod){
    add_reduce( state, 3, 243 );
    return 0
}

function branch_9e534ae5b4265198(state, db, prod){
    add_reduce( state, 5, 329 );
    return hc_css__mf_range_goto( state, db, 248 )
}

function branch_9e986e4e875bdfda(state, db, prod){
    add_reduce( state, 2, 346 );
    return 285
}

function branch_9ea8d8de93214b70(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 3, 144 );
    return 0
};
    return - 1
}

function branch_9ee06ffeff941d98(state, db, prod){
    scan( state.lexer, 61, 11 );
    if( state.lexer._type  == 58 ){
    state.push_fn( set_production /*42*/, 42 );
    consume( state );
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
        consume( state );
        add_reduce( state, 4, 50 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*42*/, 42 );
    consume( state );
    add_reduce( state, 3, 50 );
    return 0
};
    return - 1
}

function branch_9f4d101a511d592f(state, db, prod){
    scan( state.lexer, 85, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_a8fbaf0f87323457, 197 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_9ff54e7282ef1152(state, db, prod){
    add_reduce( state, 1, 115 );
    return 0
}

function branch_a005474daa359bc2(state, db, prod){
    scan( state.lexer, 130, 11 );
    state.push_fn( branch_690ccf52e0bef75b, 0 );
    return hc_javascript__binding_element_list( state, db, 0 )
}

function branch_a0085d90d349dd4e(state, db, prod){
    scan( state.lexer, 131, 9 );
    if( state.lexer._type  == 136 ){
    state.push_fn( set_production /*152*/, 152 );
    state.push_fn( branch_fdf4ee78aee4220e, 152 );
    return hc_javascript__finally( state, db, 0 )
} else {
    add_reduce( state, 3, 224 );
    return 152
};
    return - 1
}

function branch_a0197a3296fdfafb(state, db, prod){
    add_reduce( state, 3, 311 );
    add_reduce( state, 1, 1 );
    return 0
}

function branch_a0bae73ea4e09ad5(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( set_production /*130*/, 130 );
        state.push_fn( branch_26e4f8c956bf63bf, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*130*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_888504487d720e0e, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_a169b04d3f9ac2e8(state, db, prod){
    {
    add_reduce( state, 1, 241 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_a16e2d388972d681(state, db, prod){
    add_reduce( state, 1, 98 );
    return hc_javascript__exponentiation_expression_goto( state, db, 75 )
}

function branch_a172f1ead2e33677(state, db, prod){
    add_reduce( state, 2, 221 );
    return 0
}

function branch_a20c02ef4298dc95(state, db, prod){
    scan( state.lexer, 63, 9 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 31 );
    return 0
};
    return - 1
}

function branch_a21bd1c476de366a(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 314 );
    return 0
};
    return - 1
}

function branch_a2852cbcab80f24b(state, db, prod){
    add_reduce( state, 2, 117 );
    return 0
}

function branch_a2a5aae2305d8568(state, db, prod){
    add_reduce( state, 3, 162 );
    return 127
}

function branch_a2f849b5d3499ce1(state, db, prod){
    scan( state.lexer, 132, 9 );
    if( state.lexer._type  == 209 ){
    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
    state.push_fn( branch_323543e55199868c, 236 );
    return hc_css__media_query_group_1471_0_( state, db, 0 )
} else {
    add_reduce( state, 2, 319 );
    return hc_css__media_query_goto( state, db, 236 )
};
    return - 1
}

function branch_a2fd6626671e74a9(state, db, prod){
    add_reduce( state, 1, 98 );
    return hc_javascript__short_circuit_expression_goto( state, db, 75 )
}

function branch_a3239a69d266627d(state, db, prod){
    add_reduce( state, 4, 57 );
    return 0
}

function branch_a3a69df1c3ac2beb(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        scan( state.lexer, 121, 11 );
        state.push_fn( branch_00a95b716fd904b5, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        consume( state );
        scan( state.lexer, 12, 11 );
        if( state.lexer._type  == 16 ){
            consume( state );
            scan( state.lexer, 13, 9 );
            if( isTokenActive( state.lexer._type, 14 ) ){
                state.push_fn( set_production /*98*/, 98 );
                state.push_fn( branch_2b2d85e5be5c1335, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                state.push_fn( set_production /*98*/, 98 );
                consume( state );
                add_reduce( state, 7, 133 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_a3e83d9faaa61cfd(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__case_clauses_goto( state, db, 143 )
}

function branch_a4087d8b8c9a386b(state, db, prod){
    scan( state.lexer, 85, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_a8fbaf0f87323457, 57 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_a473dd18c6f44f50(state, db, prod){
    add_reduce( state, 3, 43 );
    return 0
}

function branch_a482dbda69dcd2d2(state, db, prod){
    state.push_fn( branch_625784590dfb6990, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1238_0_( state, db, 0 )
}

function branch_a502f360faf489e2(state, db, prod){
    scan( state.lexer, 87, 21 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 88, 21 );
    state.push_fn( branch_807c7eb891f7c8ec, 0 );
    return hc_css__declaration_list( state, db, 0 )
};
    return - 1
}

function branch_a5769ed2032de710(state, db, prod){
    {
    add_reduce( state, 5, 233 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_a58ae455fd5afde4(state, db, prod){
    scan( state.lexer, 52, 11 );
    if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 53, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        state.push_fn( set_production /*134*/, 134 );
        state.push_fn( branch_b64731a444ee13c0, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*134*/, 134 );
        consume( state );
        state.push_fn( branch_40d86a772abb43fb, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_a611ed844340118b(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__int_token_list_601_goto( state, db, 277 )
}

function branch_a61249f19ae4f80e(state, db, prod){
    add_reduce( state, 2, 264 );
    return 191
}

function branch_a6259fc3edd7737c(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 10, 164 );
    return 0
};
    return - 1
}

function branch_a63db2704b3d0c43(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 119 );
    return 0
};
    return - 1
}

function branch_a6d0b1e7faa284e7(state, db, prod){
    {
    add_reduce( state, 3, 237 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_a757f61f66d496ad(state, db, prod){
    add_reduce( state, 8, 189 );
    return 0
}

function branch_a7de5534b43714bf(state, db, prod){
    add_reduce( state, 2, 147 );
    return 0
}

function branch_a800b67648cdbb27(state, db, prod){
    scan( state.lexer, 91, 11 );
    if( state.lexer._type  == 128 ){
    state.push_fn( set_production /*142*/, 142 );
    state.push_fn( branch_85ba82d417382647, 142 );
    return hc_javascript__case_clauses( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*142*/, 142 );
    consume( state );
    add_reduce( state, 4, 208 );
    return 0
};
    return - 1
}

function branch_a8022d582004ce02(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_IMPORT_TAG_LIST_goto( state, db, 2 )
}

function branch_a8064f294e1d80de(state, db, prod){
    add_reduce( state, 3, 49 );
    return 41
}

function branch_a81f0e5c9b1bb065(state, db, prod){
    add_reduce( state, 3, 61 );
    return 0
}

function branch_a8a183021bdf42d7(state, db, prod){
    state.push_fn( branch_7c43277f5623fa13, 249 );
    return hc_css__media_and_list_1601( state, db, 0 )
}

function branch_a8b069c903e9e56e(state, db, prod){
    add_reduce( state, 3, 65 );
    return 0
}

function branch_a8b263dabb540262(state, db, prod){
    add_reduce( state, 1, 11 );
    return 0
}

function branch_a8b99bb69233a624(state, db, prod){
    add_reduce( state, 4, 42 );
    return 0
}

function branch_a8fbaf0f87323457(state, db, prod){
    add_reduce( state, 4, 272 );
    return 0
}

function branch_a999f6308f78bcf5(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 123 );
    return 0
};
    return - 1
}

function branch_aa4745b1da93291c(state, db, prod){
    scan( state.lexer, 133, 11 );
    if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 134, 11 );
    if( state.lexer._type  == 111 ){
        state.push_fn( set_production /*103*/, 103 );
        state.push_fn( branch_713b2f8bd118627a, 103 );
        return hc_javascript__function_rest_parameter( state, db, 0 )
    } else {
        add_reduce( state, 2, 141 );
        return 103
    }
} else {
    add_reduce( state, 1, 141 );
    return 103
};
    return - 1
}

function branch_aa62b7909b6e6fe4(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    state.push_fn( branch_e4f552616f32e443, 178 );
    return hc_javascript__template_middle( state, db, 0 )
};
    return - 1
}

function branch_aa8ebb943fbd1a48(state, db, prod){
    state.push_fn( branch_a3239a69d266627d, 49 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_aac552bd4d464f90(state, db, prod){
    state.push_fn( branch_973f7e6fc7a51266, 134 );
    return hc_javascript__iteration_statement_group_887_1_( state, db, 0 )
}

function branch_ab56e3a1140561c2(state, db, prod){
    scan( state.lexer, 135, 11 );
    state.push_fn( branch_795ed673449dea5c, 0 );
    return hc_javascript__iteration_statement_group_869_1_( state, db, 0 )
}

function branch_ab73a31103e1c044(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        scan( state.lexer, 121, 11 );
        state.push_fn( branch_de65128a22e5eca5, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        consume( state );
        scan( state.lexer, 12, 11 );
        if( state.lexer._type  == 16 ){
            consume( state );
            scan( state.lexer, 13, 9 );
            if( isTokenActive( state.lexer._type, 14 ) ){
                state.push_fn( set_production /*98*/, 98 );
                state.push_fn( branch_9d87f58cd61f2e04, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                state.push_fn( set_production /*98*/, 98 );
                consume( state );
                add_reduce( state, 5, 138 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_ac617a53e59f94ba(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_b8f84665b89c9897, 75 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_97bfec73b617eeaa, 75 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_ac65142cabad4c5e(state, db, prod){
    scan( state.lexer, 136, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    state.push_fn( branch_c1fba707ab2be2a5, 91 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    state.push_fn( branch_c1fba707ab2be2a5, 91 );
    return hc_javascript__spread_element( state, db, 0 )
};
    return - 1
}

function branch_acd9ffcdb9473c40(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_bed0d628da1f06c1, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_ad4609bb9493c93b(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        state.push_fn( branch_fbbc8cca8d1bd3a4, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_7056a44b19c04c51, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_ad7dad5f3826f56b(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 5, 277 );
    return 199
};
    return - 1
}

function branch_adb349d37dbc5acd(state, db, prod){
    add_reduce( state, 2, 354 );
    return 0
}

function branch_adeb7e32a8f96ac6(state, db, prod){
    scan( state.lexer, 137, 21 );
    if( isTokenActive( state.lexer._type, 138 ) ){
    scan( state.lexer, 139, 21 );
    state.push_fn( branch_c2a99f9b69c956d2, 0 );
    return hc_css__ATTR_MATCHER( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    state.push_fn( set_production /*221*/, 221 );
    consume( state );
    add_reduce( state, 3, 308 );
    return 0
};
    return - 1
}

function branch_ae070c57f7da2b64(state, db, prod){
    add_reduce( state, 1, 337 );
    return 256
}

function branch_ae8236592c487c8c(state, db, prod){
    {
    return hc_javascript__statement_list_item_goto( state, db, 61 )
};
    return - 1
}

function branch_aea5465f0a146c0f(state, db, prod){
    add_reduce( state, 3, 110 );
    return 0
}

function branch_af29ef54a1233fb1(state, db, prod){
    scan( state.lexer, 26, 21 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 0 );
    return 0
};
    return - 1
}

function branch_af679ef3125e0c9b(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__GROUP_RULE_BODY_goto( state, db, 257 )
}

function branch_b012b520653300b0(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__keyframes_blocks_list_1639_goto( state, db, 310 )
}

function branch_b041fe474b9cda5b(state, db, prod){
    scan( state.lexer, 140, 9 );
    if( isTokenActive( state.lexer._type, 74 ) ){
    scan( state.lexer, 75, 9 );
    state.push_fn( branch_083a58ff2488f082, 0 );
    return hc_html__ATTRIBUTES( state, db, 0 )
} else if( state.lexer._type  == 10 ){
    state.push_fn( set_production /*17*/, 17 );
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 4, 24 );
        return 0
    };
    return - 1
} else if( state.lexer._type  == 11 ){
    state.push_fn( set_production /*17*/, 17 );
    consume( state );
    add_reduce( state, 3, 24 );
    return 0
};
    return - 1
}

function branch_b112e8475b047eb1(state, db, prod){
    scan( state.lexer, 16, 11 );
    if( state.lexer._type  == 70 ){
    consume( state );
    scan( state.lexer, 141, 9 );
    if( isTokenActive( state.lexer._type, 18 ) ){
        state.push_fn( set_production /*144*/, 144 );
        state.push_fn( branch_f7a940ecc3b3f5b6, 144 );
        return hc_javascript__statement_list( state, db, 0 )
    } else {
        add_reduce( state, 3, 213 );
        return 144
    }
};
    return - 1
}

function branch_b50fc96168a5492e(state, db, prod){
    scan( state.lexer, 56, 9 );
    if( state.lexer._type  == 17 ){
    state.push_fn( set_production /*6*/, 6 );
    consume( state );
    state.push_fn( branch_bde3f53b296f2151, 6 );
    return hc_javascript__expression( state, db, 0 )
} else if( state.lexer._type  == 18 ){
    state.push_fn( set_production /*6*/, 6 );
    consume( state );
    add_reduce( state, 3, 8 );
    return 0
};
    return - 1
}

function branch_b5128f33401d69de(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        state.push_fn( branch_695fb15b8fbd4b08, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_b6b33baa71b23679, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_b5b9637d18ae7c84(state, db, prod){
    add_reduce( state, 5, 328 );
    return hc_css__mf_range_goto( state, db, 248 )
}

function branch_b5fdd6aabf77a7a5(state, db, prod){
    add_reduce( state, 3, 71 );
    return 0
}

function branch_b64731a444ee13c0(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_6d5fe25590047b65, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_b68265317f93cd7a(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_06baf88f7890c41a, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_b6b33baa71b23679(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 168 );
    return 0
};
    return - 1
}

function branch_b746cdddf9c0321b(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 207 );
    return 0
};
    return - 1
}

function branch_b7566901c02e5371(state, db, prod){
    {
    return hc_javascript__assignment_expression_goto( state, db, 195 )
};
    return - 1
}

function branch_b783b5cb51598712(state, db, prod){
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    state.push_fn( branch_3292a050f79b7f65, 0 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function branch_b83e3d5a44bbe4a5(state, db, prod){
    add_reduce( state, 2, 260 );
    return 0
}

function branch_b84b8efa7845113b(state, db, prod){
    add_reduce( state, 2, 111 );
    return 92
}

function branch_b8ac3131d3a3e021(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_html__TAG_BODY_goto( state, db, 26 )
}

function branch_b8f84665b89c9897(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_4f71a16bc828273c, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_b90d0bc4f53c5817(state, db, prod){
    scan( state.lexer, 85, 11 );
    if( ( state.lexer._type  == 150 ) ){
    consume( state );
    state.push_fn( branch_647439ca9e7ea686, 197 );
    return hc_javascript__concise_body( state, db, 0 )
};
    return - 1
}

function branch_b98464b55f6f88b7(state, db, prod){
    state.push_fn( branch_6a785f89ee375b00, 34 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_b9a558fcfb21ffa9(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        scan( state.lexer, 33, 11 );
        state.push_fn( branch_935f2ead417d82f8, 0 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        consume( state );
        scan( state.lexer, 34, 11 );
        if( state.lexer._type  == 1 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_32fa069ae31013c7, 75 );
            state.push_fn( branch_a5769ed2032de710, 121 );
            return 0
        } else {
            add_reduce( state, 5, 233 );
            return hc_javascript__statement_list_item_goto( state, db, 75 )
        }
    }
};
    return - 1
}

function branch_b9bf377dde48a035(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_e2e87c4cabd27c76, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_bb0cb59facb2821a(state, db, prod){
    state.push_fn( branch_b98464b55f6f88b7, 34 );
    return hc_javascript__from_clause( state, db, 0 )
}

function branch_bb129fcd84bd27b6(state, db, prod){
    scan( state.lexer, 142, 11 );
    if( ( state.lexer._type  == 104 ) ){
    consume( state );
    add_reduce( state, 2, 14 );
    return 85
};
    return - 1
}

function branch_bb4f5446f0577f53(state, db, prod){
    add_reduce( state, 2, 271 );
    return 0
}

function branch_bbdf222a52f0a3f4(state, db, prod){
    scan( state.lexer, 143, 9 );
    if( ( state.lexer._type  == 17 ) ){
    consume( state );
    add_reduce( state, 2, 14 );
    return 316
};
    return - 1
}

function branch_bc231d7404cbc712(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 3, 101 );
    return 89
};
    return - 1
}

function branch_bc512fc854baa5fc(state, db, prod){
    scan( state.lexer, 82, 21 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 4, 332 );
    return 252
};
    return - 1
}

function branch_bcb98db56ff78ef6(state, db, prod){
    scan( state.lexer, 72, 11 );
    state.push_fn( branch_ecbacbbbb7647511, 0 );
    return hc_javascript__elision( state, db, 0 )
}

function branch_bcc295c748e8c268(state, db, prod){
    {
    add_reduce( state, 4, 235 );
    return hc_javascript__statement_list_item_goto( state, db, 75 )
};
    return - 1
}

function branch_bdae3a69a56879e0(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 31, 11 );
    if( isTokenActive( state.lexer._type, 32 ) ){
        state.push_fn( set_production /*158*/, 158 );
        state.push_fn( branch_1ab9bb0b1d889bbd, 158 );
        return hc_javascript__class_body( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*158*/, 158 );
        consume( state );
        add_reduce( state, 5, 233 );
        return 0
    }
};
    return - 1
}

function branch_bde3f53b296f2151(state, db, prod){
    scan( state.lexer, 58, 9 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 7 );
    return 0
};
    return - 1
}

function branch_be9017ee1fa4e6ba(state, db, prod){
    add_reduce( state, 1, 140 );
    return 0
}

function branch_bed0d628da1f06c1(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 167 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_bfb14cc6e794403e(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 144, 9 );
    if( isTokenActive( state.lexer._type, 145 ) ){
        scan( state.lexer, 144, 9 );
        state.push_fn( branch_167a9fad43e803f3, 0 );
        return hc_javascript__script( state, db, 0 )
    } else if( state.lexer._type  == 27 ){
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 146, 9 );
        if( isTokenActive( pk._type, 147 ) ){
            scan( state.lexer, 144, 9 );
            state.push_fn( branch_167a9fad43e803f3, 0 );
            return hc_javascript__script( state, db, 0 )
        } else {
            consume( state );
            scan( state.lexer, 50, 9 );
            if( state.lexer._type  == 10 ){
                consume( state );
                scan( state.lexer, 51, 9 );
                if( state.lexer._type  == 37 || state.lexer._type  == 39 ){
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 8, 35 );
                        return 27
                    }
                }
            }
        }
    }
};
    return - 1
}

function branch_bfe024a32ddac392(state, db, prod){
    add_reduce( state, 2, 289 );
    add_reduce( state, 1, 316 );
    return 0
}

function branch_c01b7e540a0470ae(state, db, prod){
    add_reduce( state, 2, 12 );
    return 315
}

function branch_c02448e2673e27f3(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__octal_token_list_614_goto( state, db, 281 )
}

function branch_c04d6aedfb4a9a16(state, db, prod){
    state.push_fn( branch_625784590dfb6990, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1242_0_( state, db, 0 )
}

function branch_c091602b1228e77d(state, db, prod){
    scan( state.lexer, 148, 9 );
    if( state.lexer._type  == 11 ){
    consume( state );
    scan( state.lexer, 76, 0 );
    if( isTokenActive( state.lexer._type, 77 ) ){
        state.push_fn( set_production /*17*/, 17 );
        state.push_fn( branch_78cef2abd3f1c873, 17 );
        return hc_html__TAG_BODY( state, db, 0 )
    } else if( state.lexer._type  == 28 ){
        state.push_fn( set_production /*17*/, 17 );
        consume( state );
        state.push_fn( branch_0072fd18d3aeca7c, 17 );
        return hc_html__TAGNAME( state, db, 0 )
    }
} else if( state.lexer._type  == 29 ){
    state.push_fn( set_production /*17*/, 17 );
    consume( state );
    add_reduce( state, 4, 19 );
    return 0
};
    return - 1
}

function branch_c1851f0a1e44b8ad(state, db, prod){
    add_reduce( state, 2, 349 );
    return 322
}

function branch_c1a499f5c2fa42c7(state, db, prod){
    scan( state.lexer, 136, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    state.push_fn( branch_d5b82c84f6a87a6a, 91 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    state.push_fn( branch_d5b82c84f6a87a6a, 91 );
    return hc_javascript__spread_element( state, db, 0 )
};
    return - 1
}

function branch_c1fba707ab2be2a5(state, db, prod){
    add_reduce( state, 4, 109 );
    return 0
}

function branch_c2a99f9b69c956d2(state, db, prod){
    scan( state.lexer, 149, 21 );
    if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
    scan( state.lexer, 150, 21 );
    state.push_fn( branch_98212c09b27e8df2, 0 );
    return hc_css__string( state, db, 0 )
} else if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 126, 21 );
    if( state.lexer._type  == 174 || state.lexer._type  == 175 ){
        state.push_fn( set_production /*221*/, 221 );
        state.push_fn( branch_17a3282d8d9c8a2d, 221 );
        return hc_css__ATTR_MODIFIER( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        state.push_fn( set_production /*221*/, 221 );
        consume( state );
        add_reduce( state, 5, 310 );
        return 0
    }
};
    return - 1
}

function branch_c2c3998afc2615b5(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 168 );
    add_reduce( state, 1, 241 );
    return 0
};
    return - 1
}

function branch_c2fa8a79625117ac(state, db, prod){
    scan( state.lexer, 151, 11 );
    if( state.lexer._type  == 64 ){
    state.push_fn( set_production /*49*/, 49 );
    state.push_fn( branch_7e54beac23d51662, 49 );
    return hc_javascript__from_clause( state, db, 0 )
} else {
    state.push_fn( set_production /*49*/, 49 );
    state.push_fn( branch_a81f0e5c9b1bb065, 49 );
    return hc_javascript__asi( state, db, 0 )
};
    return - 1
}

function branch_c33aa562df599c33(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__hex_token_list_607_goto( state, db, 279 )
}

function branch_c342c3a3a0f47eb9(state, db, prod){
    add_reduce( state, 2, 333 );
    return 0
}

function branch_c34374128f2f73d0(state, db, prod){
    scan( state.lexer, 16, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_4aea69899aef47c7, 58 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function branch_c35d3f2b796beb1b(state, db, prod){
    scan( state.lexer, 16, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_4aea69899aef47c7, 126 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function branch_c36ec8b885763224(state, db, prod){
    add_reduce( state, 3, 218 );
    return 0
}

function branch_c3841a874700c4e0(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_873755940ab62737, 153 );
    return hc_javascript__block( state, db, 0 )
};
    return - 1
}

function branch_c417a0113f98071e(state, db, prod){
    add_reduce( state, 2, 0 );
    return 0
}

function branch_c4799025e7c55b46(state, db, prod){
    add_reduce( state, 2, 349 );
    return 321
}

function branch_c5145e9e61ff30dc(state, db, prod){
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
    consume( state );
    add_reduce( state, 7, 22 );
    return 0
};
    return - 1
}

function branch_c51cb31e873d5c0f(state, db, prod){
    add_reduce( state, 2, 81 );
    return 0
}

function branch_c53f49c2a43a87e6(state, db, prod){
    scan( state.lexer, 152, 11 );
    if( ( state.lexer._type  == 32 ) ){
    consume( state );
    add_reduce( state, 3, 55 );
    return 0
};
    return - 1
}

function branch_c5bd86106a93e50c(state, db, prod){
    add_reduce( state, 2, 157 );
    return 0
}

function branch_c66e19ecaf1d3204(state, db, prod){
    state.push_fn( branch_3ff64859598e5222, 250 );
    return hc_css__media_or_list_1603( state, db, 0 )
}

function branch_c672daf1948e48fe(state, db, prod){
    add_reduce( state, 2, 59 );
    return 0
}

function branch_c6f3389fe847ba79(state, db, prod){
    scan( state.lexer, 153, 11 );
    if( ( state.lexer._type  == 121 ) ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_62371e09d07c7934, 134 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function branch_c72e6f9542bb18eb(state, db, prod){
    add_reduce( state, 2, 349 );
    return 303
}

function branch_c80d25956108cfaf(state, db, prod){
    add_reduce( state, 3, 200 );
    return 135
}

function branch_c8830dd754f07f35(state, db, prod){
    scan( state.lexer, 115, 11 );
    state.push_fn( branch_872f3f397a1482c8, 0 );
    return hc_javascript__lexical_declaration( state, db, 0 )
}

function branch_c89e5cb4a82e5385(state, db, prod){
    scan( state.lexer, 82, 21 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 338 );
    return 258
};
    return - 1
}

function branch_c8d2a666286307a2(state, db, prod){
    add_reduce( state, 3, 220 );
    return 0
}

function branch_c9aa0f04d222f980(state, db, prod){
    add_reduce( state, 1, 98 );
    return 0
}

function branch_c9c4b70f1f36587f(state, db, prod){
    add_reduce( state, 2, 292 );
    return 0
}

function branch_ca532a3862fc90d3(state, db, prod){
    add_reduce( state, 3, 284 );
    return 0
}

function branch_ca8976e3dc7da8de(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    state.push_fn( branch_a757f61f66d496ad, 134 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_cab60453de89f99f(state, db, prod){
    scan( state.lexer, 110, 11 );
    state.push_fn( branch_795ed673449dea5c, 0 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_cb7783a52cbd15f2(state, db, prod){
    scan( state.lexer, 27, 9 );
    if( isTokenActive( state.lexer._type, 154 ) ){
    state.push_fn( set_production /*211*/, 211 );
    state.push_fn( branch_c9c4b70f1f36587f, 211 );
    return hc_css__COMPLEX_SELECTOR_list_1325( state, db, 0 )
} else {
    add_reduce( state, 1, 293 );
    return 211
};
    return - 1
}

function branch_cbe43ee9520e0e8e(state, db, prod){
    state.push_fn( branch_0f4b91c57196f73b, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1242_0_( state, db, 0 )
}

function branch_ccb7e21bf7959db5(state, db, prod){
    add_reduce( state, 2, 262 );
    return 0
}

function branch_cdf7eba05b87dc47(state, db, prod){
    add_reduce( state, 1, 11 );
    return hc_javascript__template_string_list_1088_goto( state, db, 288 )
}

function branch_ce80462dccaa7cd6(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPOUND_SELECTOR_list_1327_goto( state, db, 299 )
}

function branch_cf57f35b88c87e49(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__media_and_list_1601_goto( state, db, 304 )
}

function branch_cf5f2b7a242c50fd(state, db, prod){
    add_reduce( state, 1, 241 );
    return 0
}

function branch_cff5c6dc70998e82(state, db, prod){
    add_reduce( state, 1, 347 );
    return 294
}

function branch_d014c8f4264bc25f(state, db, prod){
    {
    return hc_COMPONENT_goto( state, db, 75 )
};
    return - 1
}

function branch_d0393a2bdcb724db(state, db, prod){
    state.push_fn( branch_4e2e39620f32f239, 135 );
    return hc_javascript__binding_list( state, db, 0 )
}

function branch_d039753938d9cd05(state, db, prod){
    scan( state.lexer, 82, 21 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 5, 331 );
    return 0
};
    return - 1
}

function branch_d066281b5241e9c3(state, db, prod){
    scan( state.lexer, 96, 21 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_8556e88bbf7a4064, 242 );
    return hc_css__mf_value( state, db, 0 )
};
    return - 1
}

function branch_d0840c0e861d040c(state, db, prod){
    scan( state.lexer, 25, 11 );
    if( state.lexer._type  == 36 ){
    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    add_reduce( state, 2, 92 );
    return hc_javascript__exponentiation_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_d16c2bdba3d67072(state, db, prod){
    scan( state.lexer, 155, 9 );
    if( isTokenActive( state.lexer._type, 156 ) ){
    state.push_fn( set_production /*203*/, 203 );
    state.push_fn( branch_6ab24f20dbdbfa84, 203 );
    return hc_css__STYLE_SHEET_list_1281( state, db, 0 )
} else {
    add_reduce( state, 1, 281 );
    return 203
};
    return - 1
}

function branch_d18964d3767ceec7(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 13, 9 );
        if( isTokenActive( state.lexer._type, 14 ) ){
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            state.push_fn( branch_d76e07f28ea9f453, 95 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            consume( state );
            add_reduce( state, 6, 135 );
            return 0
        }
    }
};
    return - 1
}

function branch_d200be569993924b(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( set_production /*130*/, 130 );
        state.push_fn( branch_fbbc8cca8d1bd3a4, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*130*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_7056a44b19c04c51, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_d24507c3da9f329b(state, db, prod){
    scan( state.lexer, 123, 9 );
    if( ( state.lexer._type  == 26 ) ){
    consume( state );
    scan( state.lexer, 8, 9 );
    if( ( state.lexer._type  == 11 ) ){
        consume( state );
        add_reduce( state, 5, 16 );
        return 0
    }
};
    return - 1
}

function branch_d28d9a934b3fc105(state, db, prod){
    scan( state.lexer, 70, 30 );
    if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    consume( state );
    add_reduce( state, 4, 294 );
    return 0
} else {
    add_reduce( state, 3, 294 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_d2b62bf302df98f0(state, db, prod){
    scan( state.lexer, 87, 21 );
    if( ( state.lexer._type  == 16 ) ){
    consume( state );
    state.push_fn( branch_c89e5cb4a82e5385, 258 );
    return hc_css__keyframes_list_1635( state, db, 0 )
};
    return - 1
}

function branch_d2f9c0255f04782b(state, db, prod){
    scan( state.lexer, 59, 11 );
    if( ( state.lexer._type  == 97 ) ){
    consume( state );
    add_reduce( state, 4, 266 );
    return 0
};
    return - 1
}

function branch_d32e8fd6d43e3b7a(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__import_list_1287_goto( state, db, 296 )
}

function branch_d3c83c6593b0d214(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_8ea6cf05133375eb, 75 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_d447fb493a7a981a(state, db, prod){
    scan( state.lexer, 157, 11 );
    if( state.lexer._type  == 144 || state.lexer._type  == 142 ){
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 171
};
    return - 1
}

function branch_d540f5297b6ec400(state, db, prod){
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 97 ){
    state.push_fn( set_production /*89*/, 89 );
    consume( state );
    add_reduce( state, 3, 102 );
    return 0
} else if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 58 ){
        state.push_fn( set_production /*89*/, 89 );
        state.push_fn( branch_43618494a708de03, 89 );
        return hc_javascript__elision( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        state.push_fn( set_production /*89*/, 89 );
        consume( state );
        add_reduce( state, 4, 105 );
        return 0
    }
};
    return - 1
}

function branch_d554d2768b30da15(state, db, prod){
    add_reduce( state, 1, 47 );
    return 38
}

function branch_d5b82c84f6a87a6a(state, db, prod){
    add_reduce( state, 2, 108 );
    return 0
}

function branch_d5ffc0a9c64c6b02(state, db, prod){
    state.push_fn( branch_1444c31aded2e42c, 240 );
    return hc_css__mf_plain( state, db, 0 )
}

function branch_d67a8a460d48d673(state, db, prod){
    add_reduce( state, 3, 89 );
    return 0
}

function branch_d689e0319550fcad(state, db, prod){
    add_reduce( state, 3, 114 );
    return 0
}

function branch_d76e07f28ea9f453(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 7, 128 );
    return 0
};
    return - 1
}

function branch_d7a8d4b3d5a505e9(state, db, prod){
    add_reduce( state, 3, 73 );
    return 0
}

function branch_d811c5db4df2c97b(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062_goto( state, db, 324 )
}

function branch_da4c9bd7a10f970a(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    add_reduce( state, 4, 263 );
    return 190
};
    return - 1
}

function branch_db3303a9e9717b61(state, db, prod){
    add_reduce( state, 2, 31 );
    return 56
}

function branch_dbcadac18e62d166(state, db, prod){
    add_reduce( state, 4, 242 );
    return 0
}

function branch_dc0291532e902549(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 166 );
    return 0
};
    return - 1
}

function branch_dc03aeac2b86612a(state, db, prod){
    add_reduce( state, 5, 184 );
    return 0
}

function branch_dc1ad3cf7cb1d2ad(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 158, 11 );
    state.push_fn( branch_8ebd046b57c11c2d, 0 );
    return hc_javascript__statement( state, db, 0 )
};
    return - 1
}

function branch_dc7c5993763c3f24(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 9, 165 );
    return 0
};
    return - 1
}

function branch_dcf01c8a65c1453d(state, db, prod){
    {
    return hc_COMPONENT_goto( state, db, 61 )
};
    return - 1
}

function branch_dd035c0853172ce3(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        state.push_fn( branch_695fb15b8fbd4b08, 130 );
        return hc_javascript__formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        consume( state );
        scan( state.lexer, 12, 11 );
        if( ( state.lexer._type  == 16 ) ){
            consume( state );
            state.push_fn( branch_b6b33baa71b23679, 130 );
            return hc_javascript__function_body( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function branch_de65128a22e5eca5(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 13, 9 );
        if( isTokenActive( state.lexer._type, 14 ) ){
            state.push_fn( set_production /*98*/, 98 );
            state.push_fn( branch_d76e07f28ea9f453, 98 );
            return hc_javascript__function_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*98*/, 98 );
            consume( state );
            add_reduce( state, 6, 135 );
            return 0
        }
    }
};
    return - 1
}

function branch_df3ac9fd932b099a(state, db, prod){
    state.push_fn( branch_174a4749802a5aed, 138 );
    return hc_javascript__initializer( state, db, 0 )
}

function branch_df9525e73970d08d(state, db, prod){
    add_reduce( state, 2, 111 );
    return 0
}

function branch_dfafe7212cf80741(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_css__keyframes_list_1635_goto( state, db, 309 )
}

function branch_e06154576db868ed(state, db, prod){
    add_reduce( state, 1, 39 );
    return 0
}

function branch_e11dfbf600bc335f(state, db, prod){
    scan( state.lexer, 159, 9 );
    if( state.lexer._type  == 179 || state.lexer._type  == 168 || state.lexer._type  == 170 || state.lexer._type  == 36 ){
    state.push_fn( set_production /*204*/, 204 );
    state.push_fn( branch_ca532a3862fc90d3, 204 );
    return hc_css__import_list_1287( state, db, 0 )
} else if( state.lexer._type  == 207 ){
    scan( state.lexer, 99, 21 );
    state.push_fn( branch_4fd3a991a1b9ed16, 0 );
    return hc_css__import_group_1285_0_( state, db, 0 )
} else {
    add_reduce( state, 2, 286 );
    return 204
};
    return - 1
}

function branch_e1f39354fa05cc4a(state, db, prod){
    add_reduce( state, 7, 195 );
    return 0
}

function branch_e1f935025afbcbdf(state, db, prod){
    state.push_fn( branch_370e1e2004e6751a, 134 );
    return hc_javascript__iteration_statement_group_896_1_( state, db, 0 )
}

function branch_e22618f1debe6a89(state, db, prod){
    {
    return hc_javascript__module_item_goto( state, db, 195 )
};
    return - 1
}

function branch_e2e87c4cabd27c76(state, db, prod){
    add_reduce( state, 7, 187 );
    return 0
}

function branch_e31d5d0e35a0686d(state, db, prod){
    scan( state.lexer, 27, 28 );
    if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 29, 30 );
    if( pk._type  == 170 ){
        scan( state.lexer, 160, 21 );
        state.push_fn( branch_618e7a9e413278fa, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1327( state, db, 0 )
    }
} else if( state.lexer._type  == 70 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 161, 30 );
    if( pk._type  == 70 ){
        scan( state.lexer, 96, 21 );
        state.push_fn( branch_5ded9ad43fb0bdaf, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1328( state, db, 0 )
    } else {
        scan( state.lexer, 160, 21 );
        state.push_fn( branch_618e7a9e413278fa, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1327( state, db, 0 )
    }
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    consume( state );
    add_reduce( state, 2, 300 );
    return 0
} else {
    add_reduce( state, 1, 300 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_e33a81b49710a4c7(state, db, prod){
    add_reduce( state, 2, 346 );
    return 286
}

function branch_e37260b0e4ace2a1(state, db, prod){
    scan( state.lexer, 162, 9 );
    if( state.lexer._type  == 210 || state.lexer._type  == 209 ){
    state.push_fn( set_production /*207*/, 207 );
    state.push_fn( branch_ee257523538089b2, 207 );
    return hc_css__supports_condition_list_1312( state, db, 0 )
} else {
    add_reduce( state, 1, 1 );
    return 207
};
    return - 1
}

function branch_e43eb34a5f9a8782(state, db, prod){
    add_reduce( state, 3, 247 );
    return 174
}

function branch_e48bfd912460c186(state, db, prod){
    add_reduce( state, 2, 0 );
    return 290
}

function branch_e4e74e80d0822d9e(state, db, prod){
    state.push_fn( branch_e68bd9c8db095f84, 125 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_e4f552616f32e443(state, db, prod){
    state.push_fn( branch_2fe8a09a6a152881, 178 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_e511fcca6aef4275(state, db, prod){
    scan( state.lexer, 163, 11 );
    if( ( state.lexer._type  == 21 ) ){
    consume( state );
    add_reduce( state, 3, 0 );
    return 0
};
    return - 1
}

function branch_e52a91bfee8af692(state, db, prod){
    add_reduce( state, 3, 273 );
    return hc_javascript__statement_goto( state, db, 126 )
}

function branch_e58fb523d7e39a7a(state, db, prod){
    state.push_fn( branch_29b5d1c37ed65e28, 169 );
    return hc_javascript__template_spans( state, db, 0 )
}

function branch_e5a644df6613b5fc(state, db, prod){
    add_reduce( state, 3, 30 );
    return 20
}

function branch_e60bdf27a3422a85(state, db, prod){
    scan( state.lexer, 52, 11 );
    if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 53, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        state.push_fn( set_production /*134*/, 134 );
        state.push_fn( branch_ca8976e3dc7da8de, 134 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*134*/, 134 );
        consume( state );
        state.push_fn( branch_f57e2266ef16c397, 134 );
        return hc_javascript__statement( state, db, 0 )
    }
};
    return - 1
}

function branch_e6265ced089e418d(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 42, 11 );
    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        scan( state.lexer, 121, 11 );
        state.push_fn( branch_019c7374ac20dbc0, 0 );
        return hc_javascript__unique_formal_parameters( state, db, 0 )
    } else if( state.lexer._type  == 113 ){
        consume( state );
        scan( state.lexer, 12, 11 );
        if( state.lexer._type  == 16 ){
            consume( state );
            scan( state.lexer, 13, 9 );
            if( isTokenActive( state.lexer._type, 14 ) ){
                state.push_fn( set_production /*98*/, 98 );
                state.push_fn( branch_18f83925f4c80938, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                state.push_fn( set_production /*98*/, 98 );
                consume( state );
                add_reduce( state, 6, 136 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_e64f3615854135b9(state, db, prod){
    add_reduce( state, 2, 249 );
    return hc_javascript__template_spans_goto( state, db, 176 )
}

function branch_e651b2015f0826be(state, db, prod){
    add_reduce( state, 9, 185 );
    return 0
}

function branch_e6708846c9d22f70(state, db, prod){
    add_reduce( state, 2, 350 );
    return 0
}

function branch_e68bd9c8db095f84(state, db, prod){
    add_reduce( state, 2, 160 );
    return 125
}

function branch_e6b6b9b166ca4bf8(state, db, prod){
    add_reduce( state, 3, 162 );
    return hc_javascript__statement_goto( state, db, 122 )
}

function branch_e74b9eea64be430f(state, db, prod){
    add_reduce( state, 2, 82 );
    return 0
}

function branch_e759b49925136b70(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( ( state.lexer._type  == 18 ) ){
    consume( state );
    add_reduce( state, 8, 172 );
    return 0
};
    return - 1
}

function branch_e7b8aedf7573fc09(state, db, prod){
    state.push_fn( branch_3aa15af582de1f9d, 57 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function branch_e7ca26ec7501a7a9(state, db, prod){
    add_reduce( state, 7, 197 );
    return 0
}

function branch_e8ee1ba7c85eedaa(state, db, prod){
    add_reduce( state, 1, 46 );
    return 37
}

function branch_e9a85b6810b0e90a(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( ( state.lexer._type  == 170 ) ){
    consume( state );
    add_reduce( state, 2, 304 );
    return 0
};
    return - 1
}

function branch_ea57b111064bfbfa(state, db, prod){
    add_reduce( state, 3, 74 );
    return 0
}

function branch_eb243dbfad70f5ba(state, db, prod){
    add_reduce( state, 3, 247 );
    return hc_javascript__optional_expression_goto( state, db, 75 )
}

function branch_eb884692c177d1ca(state, db, prod){
    state.push_fn( branch_ad7dad5f3826f56b, 199 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1242_0_( state, db, 0 )
}

function branch_ebe29aecfc6c6055(state, db, prod){
    state.push_fn( branch_1543b2803f9b2557, 178 );
    return hc_javascript__expression( state, db, 0 )
}

function branch_ebe4eb780050d256(state, db, prod){
    add_reduce( state, 8, 188 );
    return 0
}

function branch_ecbacbbbb7647511(state, db, prod){
    scan( state.lexer, 66, 11 );
    if( state.lexer._type  == 111 ){
    state.push_fn( set_production /*113*/, 113 );
    state.push_fn( branch_1d78657759a3522f, 113 );
    return hc_javascript__binding_rest_element( state, db, 0 )
} else if( state.lexer._type  == 97 ){
    state.push_fn( set_production /*113*/, 113 );
    consume( state );
    add_reduce( state, 3, 152 );
    return 0
};
    return - 1
}

function branch_ede0f885ef9d3d87(state, db, prod){
    add_reduce( state, 3, 216 );
    return 0
}

function branch_ee257523538089b2(state, db, prod){
    add_reduce( state, 2, 289 );
    return 0
}

function branch_ee466a99e81a0795(state, db, prod){
    add_reduce( state, 3, 268 );
    return 0
}

function branch_ef2493182c2ee6b7(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__statement_list_goto( state, db, 120 )
}

function branch_ef84bb8c1c5193f5(state, db, prod){
    {
    add_reduce( state, 6, 230 );
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_f0268b1a856fc592(state, db, prod){
    add_reduce( state, 1, 115 );
    return hc_javascript__property_definition_goto( state, db, 99 )
}

function branch_f0f31abf50b81bc6(state, db, prod){
    scan( state.lexer, 25, 11 );
    if( state.lexer._type  == 36 ){
    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( branch_33df3cbb370be24b, 75 );
    return hc_javascript__arguments( state, db, 0 )
} else {
    add_reduce( state, 2, 92 );
    return hc_javascript__left_hand_side_expression_goto( state, db, 75 )
};
    return - 1
}

function branch_f172959d5fcf825b(state, db, prod){
    add_reduce( state, 1, 241 );
    return hc_javascript__exponentiation_expression_goto( state, db, 75 )
}

function branch_f1ff063f87b0360a(state, db, prod){
    add_reduce( state, 3, 116 );
    return hc_javascript__binding_property_goto( state, db, 110 )
}

function branch_f224a880018b9ca0(state, db, prod){
    add_reduce( state, 2, 267 );
    return 194
}

function branch_f2c33b59dc0a63ff(state, db, prod){
    {
    return hc_javascript__statement_list_item_goto( state, db, 121 )
};
    return - 1
}

function branch_f34d00b31819322d(state, db, prod){
    scan( state.lexer, 164, 9 );
    if( state.lexer._type  == 95 || state.lexer._type  == 26 ){
    consume( state );
    add_reduce( state, 2, 86 );
    return 72
} else {
    return 72
};
    return - 1
}

function branch_f35d7e4ef9d5bd98(state, db, prod){
    add_reduce( state, 3, 116 );
    return 0
}

function branch_f3b2e02e29fc4964(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_javascript__binding_property_list_goto( state, db, 109 )
}

function branch_f4f0ca37d730ca54(state, db, prod){
    scan( state.lexer, 16, 11 );
    if( ( state.lexer._type  == 70 ) ){
    consume( state );
    state.push_fn( branch_a2a5aae2305d8568, 127 );
    return hc_javascript__labeled_item( state, db, 0 )
};
    return - 1
}

function branch_f52bf2af079f0e6c(state, db, prod){
    scan( state.lexer, 165, 11 );
    if( state.lexer._type  == 10 ){
    consume( state );
    scan( state.lexer, 166, 9 );
    if( state.lexer._type  == 141 ){
        state.push_fn( set_production /*166*/, 166 );
        state.push_fn( branch_dbcadac18e62d166, 166 );
        return hc_default_productions__js_identifier( state, db, 0 )
    } else {
        add_reduce( state, 3, 244 );
        return 166
    }
};
    return - 1
}

function branch_f52f125c2a796e7b(state, db, prod){
    state.push_fn( branch_d5b82c84f6a87a6a, 319 );
    return hc_css__COMPOUND_SELECTOR( state, db, 0 )
}

function branch_f5618efb775b60fd(state, db, prod){
    scan( state.lexer, 87, 21 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 127, 21 );
    if( isTokenActive( state.lexer._type, 128 ) ){
        state.push_fn( set_production /*263*/, 263 );
        state.push_fn( branch_3a9a122a9b11f3b5, 263 );
        return hc_css__GROUP_RULE_BODY( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*263*/, 263 );
        consume( state );
        add_reduce( state, 4, 342 );
        return 0
    }
};
    return - 1
}

function branch_f57e2266ef16c397(state, db, prod){
    add_reduce( state, 7, 196 );
    return 0
}

function branch_f7a940ecc3b3f5b6(state, db, prod){
    add_reduce( state, 4, 212 );
    return 0
}

function branch_f7de3da658dea4ce(state, db, prod){
    add_reduce( state, 3, 30 );
    return 0
}

function branch_f7f9a108d1dea7e0(state, db, prod){
    add_reduce( state, 2, 111 );
    return 108
}

function branch_f83ee429565b03c0(state, db, prod){
    state.push_fn( branch_15ec4d96e9777cff, 49 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function branch_f8a3663a4a4d8c1f(state, db, prod){
    add_reduce( state, 3, 45 );
    return 0
}

function branch_f8caa5d0bfd04c67(state, db, prod){
    add_reduce( state, 2, 288 );
    return 0
}

function branch_f9175d9ff9da1d77(state, db, prod){
    add_reduce( state, 2, 261 );
    return 0
}

function branch_f9728395ba7dac96(state, db, prod){
    add_reduce( state, 3, 60 );
    return 0
}

function branch_fa5c868104ec5da9(state, db, prod){
    scan( state.lexer, 107, 11 );
    if( state.lexer._type  == 14 ){
    state.push_fn( set_production /*138*/, 138 );
    state.push_fn( branch_174a4749802a5aed, 138 );
    return hc_javascript__initializer( state, db, 0 )
} else {
    return 138
};
    return - 1
}

function branch_fab5b28464651fa3(state, db, prod){
    state.push_fn( branch_234c298a886b6207, 151 );
    return hc_javascript__asi( state, db, 0 )
}

function branch_fac6e057d819742e(state, db, prod){
    add_reduce( state, 1, 1 );
    return hc_html__RESULT_list_72_goto( state, db, 268 )
}

function branch_fad90ab6aaf2a88c(state, db, prod){
    add_reduce( state, 1, 41 );
    return 0
}

function branch_fae774c3d18a8f61(state, db, prod){
    add_reduce( state, 2, 160 );
    add_reduce( state, 1, 1 );
    return 0
}

function branch_fb8401b9afc524e1(state, db, prod){
    add_reduce( state, 2, 0 );
    return 289
}

function branch_fbbc8cca8d1bd3a4(state, db, prod){
    scan( state.lexer, 10, 11 );
    if( ( state.lexer._type  == 113 ) ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        consume( state );
        state.push_fn( branch_dc0291532e902549, 130 );
        return hc_javascript__function_body( state, db, 0 )
    }
};
    return - 1
}

function branch_fc2d026dcaaf1c2c(state, db, prod){
    add_reduce( state, 2, 12 );
    return 276
}

function branch_fc6c3c68168bfd69(state, db, prod){
    scan( state.lexer, 167, 21 );
    if( ( state.lexer._type  == 33 ) ){
    consume( state );
    add_reduce( state, 3, 31 );
    return 0
};
    return - 1
}

function branch_fca38fb270220ae5(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 10, 11 );
    if( state.lexer._type  == 113 ){
        consume( state );
        scan( state.lexer, 12, 11 );
        if( state.lexer._type  == 16 ){
            consume( state );
            scan( state.lexer, 13, 9 );
            if( isTokenActive( state.lexer._type, 14 ) ){
                state.push_fn( set_production /*98*/, 98 );
                state.push_fn( branch_8ce4b8c35b5b4bb1, 98 );
                return hc_javascript__function_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                state.push_fn( set_production /*98*/, 98 );
                consume( state );
                add_reduce( state, 6, 126 );
                return 0
            }
        }
    }
};
    return - 1
}

function branch_fd8f81791ec2ac30(state, db, prod){
    add_reduce( state, 2, 12 );
    add_reduce( state, 1, 98 );
    return 0
}

function branch_fdebd0ba367c373d(state, db, prod){
    add_reduce( state, 3, 6 );
    return 5
}

function branch_fdf4ee78aee4220e(state, db, prod){
    add_reduce( state, 4, 226 );
    return 0
}

function branch_fe20d18918c58e78(state, db, prod){
    scan( state.lexer, 88, 21 );
    state.push_fn( branch_1805f48b1dee4d53, 0 );
    return hc_css__declaration_list( state, db, 0 )
}

function branch_fe3588a9418becd1(state, db, prod){
    scan( state.lexer, 27, 28 );
    if( state.lexer._type  == 70 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 96, 21 );
    if( pk._type  == 70 ){
        scan( state.lexer, 96, 21 );
        state.push_fn( branch_30123d859b6fc832, 0 );
        return hc_css__COMPOUND_SELECTOR_list_1328( state, db, 0 )
    }
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
    consume( state );
    add_reduce( state, 2, 299 );
    return 0
} else {
    add_reduce( state, 1, 299 );
    return hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )
};
    return - 1
}

function branch_fe39a0e2a0c7b399(state, db, prod){
    scan( state.lexer, 46, 9 );
    if( state.lexer._type  == 28 ){
    consume( state );
    scan( state.lexer, 83, 9 );
    if( state.lexer._type  == 30 || state.lexer._type  == 31 ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( ( state.lexer._type  == 11 ) ){
            consume( state );
            add_reduce( state, 7, 25 );
            return 17
        }
    }
};
    return - 1
}

function branch_fe54af1b3098ac8a(state, db, prod){
    add_reduce( state, 2, 90 );
    return 0
}

function nocap_lb_6725b1140c2474a9(lexer){
    if( ( lexer._type ) == 66 )return true;;
    var pk = lexer.copy_in_place(  );;
    pk.byte_offset  = lexer.prev_byte_offset;
    pk.byte_length  = 0;
    while( ( pk.byte_offset  < lexer.byte_offset ) ) {
        scan( pk, 28, 0 );
        if( pk._type  == 7 ){
            lexer.setToken( 66, 0, 0 );
            return true
        };
        pk.next(  )
    };
    return false
}

function hc_WICK(state, db, prod){
    state.push_fn( set_production /*0*/, 0 );
    return hc_COMPONENT( state, db, 0 )
}

function hc_COMPONENT(state, db, prod){
    scan( state.lexer, 168, 9 );
    if( isTokenActive( state.lexer._type, 169 ) ){
    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 1 )*/, 1 );
    state.push_fn( set_production /*0*/, 1 );
    return hc_javascript__javascript( state, db, 0 )
} else if( state.lexer._type  == 27 ){
    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 17 )*/, 17 );
    state.push_fn( set_production /*0*/, 17 );
    return hc_html__TAG( state, db, prod )
} else if( state.lexer._type  == 24 || state.lexer._type  == 9 ){
    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 1 )*/, 1 );
    state.push_fn( set_production /*0*/, 1 );
    return hc_html__HTML( state, db, 0 )
};
    return - 1
}

function hc_COMPONENT_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 17: 
            {
                scan( state.lexer, 170, 9 );
                if( state.lexer._type  == 1 ){
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_0fe66212a51c45d8, 1 );
                    state.push_fn( branch_d014c8f4264bc25f, 75 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 33: 
            {
                scan( state.lexer, 171, 9 );
                if( isTokenActive( state.lexer._type, 172 ) ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 33 )*/, 33 );
                    scan( state.lexer, 173, 11 );
                    if( ( isTokenActive( state.lexer._type, 172 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 33 );
                        return hc_javascript__module_item( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 39 );
                    add_reduce( state, 1, 38 );
                    prod = 1;
                    continue
                };
                break
            }
            break;
            case 59: 
            {
                scan( state.lexer, 174, 11 );
                if( state.lexer._type  == 69 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 175, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                scan( state.lexer, 176, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 178, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( isTokenActive( state.lexer._type, 182 ) ){
                    scan( state.lexer, 183, 11 );
                    if( isTokenActive( state.lexer._type, 182 ) ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_dcf01c8a65c1453d, 61 );
                        state.push_fn( branch_6e379e9d883eb96f, 195 );
                        return 0
                    } else if( state.lexer._type  == 72 || state.lexer._type  == 71 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 184 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 211, 9 );
                if( isTokenActive( state.lexer._type, 212 ) ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 213, 11 );
                    if( ( isTokenActive( state.lexer._type, 212 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 72, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 33 )*/, 33 );
                    scan( state.lexer, 222, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_fae774c3d18a8f61, 33 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 223, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 224, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_COMPONENT_goto /*hc_COMPONENT_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 1 ) ? prod  : - 1
}

function hc_IMPORT_TAG_LIST(state, db, prod){
    state.push_fn( branch_a8022d582004ce02, 2 );
    return hc_IMPORT_TAG( state, db, 0 )
}

function hc_IMPORT_TAG_LIST_goto(state, db, prod){
    scan( state.lexer, 226, 9 );
    if( state.lexer._type  == 9 ){
    state.push_fn( hc_IMPORT_TAG_LIST_goto /*hc_IMPORT_TAG_LIST_goto( state, db, 2 )*/, 2 );
    scan( state.lexer, 227, 9 );
    if( ( state.lexer._type  == 9 ) ){
        state.push_fn( branch_449740ceb8df7fb1, 2 );
        return hc_IMPORT_TAG( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 2 ) ? prod  : - 1
}

function hc_IMPORT_TAG(state, db, prod){
    scan( state.lexer, 227, 9 );
    if( state.lexer._type  == 9 ){
    consume( state );
    scan( state.lexer, 140, 9 );
    if( isTokenActive( state.lexer._type, 74 ) ){
        scan( state.lexer, 75, 9 );
        state.push_fn( branch_3a137a7af15d1e96, 0 );
        return hc_html__ATTRIBUTES( state, db, 0 )
    } else if( state.lexer._type  == 10 ){
        consume( state );
        scan( state.lexer, 8, 9 );
        if( state.lexer._type  == 11 ){
            consume( state );
            scan( state.lexer, 80, 9 );
            if( state.lexer._type  == 12 ){
                state.push_fn( set_production /*3*/, 3 );
                consume( state );
                add_reduce( state, 4, 4 );
                return 0
            } else {
                add_reduce( state, 3, 4 );
                return 3
            }
        }
    } else if( state.lexer._type  == 11 ){
        consume( state );
        scan( state.lexer, 80, 9 );
        if( state.lexer._type  == 12 ){
            state.push_fn( set_production /*3*/, 3 );
            consume( state );
            add_reduce( state, 3, 4 );
            return 0
        } else {
            add_reduce( state, 2, 4 );
            return 3
        }
    }
};
    return - 1
}

function hc_IMPORT_ATTRIBUTE(state, db, prod){
    scan( state.lexer, 228, 9 );
    if( state.lexer._type  == 13 ){
    consume( state );
    scan( state.lexer, 229, 9 );
    if( ( state.lexer._type  == 14 ) ){
        consume( state );
        state.push_fn( branch_941b0a954c649456, 4 );
        return hc_javascript__named_imports( state, db, 0 )
    }
};
    return - 1
}

function hc_EXPORT_ATTRIBUTE(state, db, prod){
    scan( state.lexer, 230, 9 );
    if( state.lexer._type  == 15 ){
    consume( state );
    scan( state.lexer, 229, 9 );
    if( ( state.lexer._type  == 14 ) ){
        consume( state );
        state.push_fn( branch_fdebd0ba367c373d, 5 );
        return hc_javascript__named_imports( state, db, 0 )
    }
};
    return - 1
}

function hc_WICK_BINDING(state, db, prod){
    scan( state.lexer, 231, 9 );
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
    consume( state );
    scan( state.lexer, 232, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        scan( state.lexer, 233, 9 );
        state.push_fn( branch_b50fc96168a5492e, 0 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 17 ){
        state.push_fn( set_production /*6*/, 6 );
        consume( state );
        state.push_fn( branch_1ca21e19d7b5554b, 6 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*6*/, 6 );
        consume( state );
        add_reduce( state, 2, 10 );
        return 0
    }
};
    return - 1
}

function hc_javascript__comment(state, db, prod){
    scan( state.lexer, 234, 11 );
    if( state.lexer._type  == 20 ){
    consume( state );
    scan( state.lexer, 235, 0 );
    if( state.lexer._type  == 21 ){
        state.push_fn( set_production /*7*/, 7 );
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    } else {
        state.push_fn( set_production /*7*/, 7 );
        state.push_fn( branch_e511fcca6aef4275, 7 );
        return hc_javascript__comment_list_48( state, db, 0 )
    }
} else if( state.lexer._type  == 22 ){
    consume( state );
    scan( state.lexer, 236, 0 );
    if( state.lexer._type  == 2 || state.lexer._type  == 8 || state.lexer._type  == 3 || state.lexer._type  == 5 ){
        state.push_fn( set_production /*7*/, 7 );
        state.push_fn( branch_2d45a6a494c79015, 7 );
        return hc_javascript__comment_list_51( state, db, 0 )
    } else if( state.lexer._type  == 7 ){
        state.push_fn( set_production /*7*/, 7 );
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    }
};
    return - 1
}

function hc_css__comment(state, db, prod){
    scan( state.lexer, 237, 21 );
    if( state.lexer._type  == 20 ){
    consume( state );
    scan( state.lexer, 238, 21 );
    if( ( state.lexer._type  == 23 ) ){
        consume( state );
        scan( state.lexer, 239, 21 );
        if( ( state.lexer._type  == 21 ) ){
            consume( state );
            add_reduce( state, 3, 0 );
            return 8
        }
    }
};
    return - 1
}

function hc_css__string_value(state, db, prod){
    scan( state.lexer, 240, 30 );
    if( state.lexer._type  == 8 || state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_css__string_value_goto( state, db, 9 )
};
    return - 1
}

function hc_css__string_value_goto(state, db, prod){
    scan( state.lexer, 241, 30 );
    if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    scan( state.lexer, 21, 30 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    scan( state.lexer, 242, 21 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    scan( state.lexer, 243, 21 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_css__string_value_goto /*hc_css__string_value_goto( state, db, 9 )*/, 9 );
    scan( state.lexer, 244, 21 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 9 ) ? prod  : - 1
}

function hc_html__HTML(state, db, prod){
    state.push_fn( set_production /*10*/, 10 );
    return hc_html__RESULT( state, db, 0 )
}

function hc_html__RESULT(state, db, prod){
    scan( state.lexer, 245, 9 );
    if( state.lexer._type  == 27 || state.lexer._type  == 9 ){
    state.push_fn( set_production /*11*/, 11 );
    state.push_fn( branch_152680e8cb3da748, 11 );
    return hc_html__BODY( state, db, 0 )
} else {
    state.push_fn( set_production /*11*/, 11 );
    state.push_fn( branch_6de138e30c35efa8, 11 );
    return hc_html__RESULT_list_72( state, db, 0 )
};
    return - 1
}

function hc_html__DTD(state, db, prod){
    scan( state.lexer, 246, 9 );
    if( state.lexer._type  == 24 ){
    consume( state );
    scan( state.lexer, 247, 9 );
    if( state.lexer._type  == 26 ){
        state.push_fn( set_production /*12*/, 12 );
        consume( state );
        state.push_fn( branch_d24507c3da9f329b, 12 );
        return hc_html__TEXT_NODE_DATA( state, db, 0 )
    } else if( state.lexer._type  == 25 ){
        state.push_fn( set_production /*12*/, 12 );
        consume( state );
        scan( state.lexer, 123, 9 );
        if( ( state.lexer._type  == 26 ) ){
            consume( state );
            state.push_fn( branch_94d210f5e537e2f9, 12 );
            return hc_html__TEXT_NODE_DATA( state, db, 0 )
        };
        return - 1
    }
};
    return - 1
}

function hc_html__identifier(state, db, prod){
    scan( state.lexer, 248, 9 );
    if( state.lexer._type  == 3 ){
    consume( state );
    scan( state.lexer, 249, 28 );
    if( state.lexer._type  == 5 || state.lexer._type  == 3 || state.lexer._type  == 88 || state.lexer._type  == 70 ){
        state.push_fn( set_production /*13*/, 13 );
        state.push_fn( branch_c417a0113f98071e, 13 );
        return hc_html__identifier_list_83( state, db, 0 )
    } else {
        return 13
    }
};
    return - 1
}

function hc_html__TEXT_NODE_DATA(state, db, prod){
    scan( state.lexer, 236, 0 );
    if( isTokenActive( state.lexer._type, 236 ) ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_html__TEXT_NODE_DATA_goto( state, db, 14 )
};
    return - 1
}

function hc_html__TEXT_NODE_DATA_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 14: 
            {
                scan( state.lexer, 250, 0 );
                if( state.lexer._type  == 26 ){
                    return 14
                } else if( state.lexer._type  == 5 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 250, 0 );
                    if( isTokenActive( pk._type, 250 ) ){
                        state.lexer._type  = 5;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        scan( state.lexer, 251, 9 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 3 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 250, 0 );
                    if( isTokenActive( pk._type, 250 ) ){
                        state.lexer._type  = 3;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        scan( state.lexer, 248, 9 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 2 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 250, 0 );
                    if( isTokenActive( pk._type, 250 ) ){
                        state.lexer._type  = 2;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        scan( state.lexer, 252, 9 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 8 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 250, 0 );
                    if( isTokenActive( pk._type, 250 ) ){
                        state.lexer._type  = 8;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        scan( state.lexer, 9, 28 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                } else if( state.lexer._type  == 7 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 250, 0 );
                    if( isTokenActive( pk._type, 250 ) ){
                        state.lexer._type  = 7;
                        state.push_fn( hc_html__TEXT_NODE_DATA_goto /*hc_html__TEXT_NODE_DATA_goto( state, db, 14 )*/, 14 );
                        scan( state.lexer, 9, 253 );
                        consume( state );
                        add_reduce( state, 2, 12 );
                        return 0
                    }
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 14 ) ? prod  : - 1
}

function hc_html__BODY(state, db, prod){
    scan( state.lexer, 226, 9 );
    if( state.lexer._type  == 27 ){
    state.push_fn( set_production /*15*/, 15 );
    state.push_fn( set_production /*0*/, 15 );
    return hc_html__GOAL_TAG( state, db, 0 )
} else {
    state.push_fn( set_production /*15*/, 15 );
    state.push_fn( branch_7483bdc374ca764a, 15 );
    return hc_IMPORT_TAG_LIST( state, db, 0 )
};
    return - 1
}

function hc_html__GOAL_TAG(state, db, prod){
    state.push_fn( set_production /*16*/, 16 );
    return hc_html__TAG( state, db, 0 )
}

function hc_html__TAG(state, db, prod){
    scan( state.lexer, 49, 9 );
    if( state.lexer._type  == 27 ){
    consume( state );
    scan( state.lexer, 254, 9 );
    if( isTokenActive( state.lexer._type, 255 ) ){
        scan( state.lexer, 256, 9 );
        state.push_fn( branch_b041fe474b9cda5b, 0 );
        return hc_html__VOID_NAME( state, db, 0 )
    } else if( state.lexer._type  == 30 || state.lexer._type  == 31 ){
        consume( state );
        scan( state.lexer, 257, 9 );
        if( isTokenActive( state.lexer._type, 74 ) ){
            scan( state.lexer, 75, 9 );
            state.push_fn( branch_5c7a571f043390ca, 0 );
            return hc_html__ATTRIBUTES( state, db, 0 )
        } else if( state.lexer._type  == 11 ){
            consume( state );
            scan( state.lexer, 93, 9 );
            if( isTokenActive( state.lexer._type, 94 ) ){
                scan( state.lexer, 95, 9 );
                state.push_fn( branch_fe39a0e2a0c7b399, 0 );
                return hc_css__CSS( state, db, 0 )
            } else if( state.lexer._type  == 28 ){
                consume( state );
                scan( state.lexer, 83, 9 );
                if( state.lexer._type  == 30 || state.lexer._type  == 31 ){
                    consume( state );
                    scan( state.lexer, 8, 9 );
                    if( ( state.lexer._type  == 11 ) ){
                        consume( state );
                        add_reduce( state, 6, 27 );
                        return 17
                    }
                }
            }
        }
    } else {
        scan( state.lexer, 258, 9 );
        state.push_fn( branch_3538fbaecdb8c233, 0 );
        return hc_html__TAGNAME( state, db, 0 )
    }
};
    return - 1
}

function hc_html__TAGNAME(state, db, prod){
    scan( state.lexer, 258, 9 );
    if( state.lexer._type  == 25 ){
    consume( state );
    scan( state.lexer, 9, 9 );
    return 18
};
    return - 1
}

function hc_html__ATTRIBUTES(state, db, prod){
    state.push_fn( branch_6a7516e57187d00c, 19 );
    return hc_html__ATTRIBUTE( state, db, 0 )
}

function hc_html__ATTRIBUTES_goto(state, db, prod){
    scan( state.lexer, 259, 9 );
    if( isTokenActive( state.lexer._type, 74 ) ){
    state.push_fn( hc_html__ATTRIBUTES_goto /*hc_html__ATTRIBUTES_goto( state, db, 19 )*/, 19 );
    scan( state.lexer, 75, 9 );
    if( ( isTokenActive( state.lexer._type, 74 ) ) ){
        state.push_fn( branch_449740ceb8df7fb1, 19 );
        return hc_html__ATTRIBUTE( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 10 || state.lexer._type  == 11 ){
    return 19
};
    return ( prod  == 19 ) ? prod  : - 1
}

function hc_html__ATTRIBUTE(state, db, prod){
    scan( state.lexer, 75, 9 );
    if( state.lexer._type  == 13 ){
    state.push_fn( set_production /*20*/, 20 );
    state.push_fn( set_production /*0*/, 20 );
    return hc_IMPORT_ATTRIBUTE( state, db, 0 )
} else if( state.lexer._type  == 15 ){
    state.push_fn( set_production /*20*/, 20 );
    state.push_fn( set_production /*0*/, 20 );
    return hc_EXPORT_ATTRIBUTE( state, db, 0 )
} else {
    scan( state.lexer, 260, 9 );
    state.push_fn( branch_7a323df1e2786f03, 0 );
    return hc_html__ATTRIBUTE_HEAD( state, db, 0 )
};
    return - 1
}

function hc_html__ATTRIBUTE_HEAD(state, db, prod){
    scan( state.lexer, 260, 9 );
    if( state.lexer._type  == 32 ){
    state.push_fn( set_production /*21*/, 21 );
    consume( state );
    scan( state.lexer, 258, 9 );
    if( ( state.lexer._type  == 25 ) ){
        consume( state );
        scan( state.lexer, 114, 9 );
        if( ( state.lexer._type  == 32 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 0
        }
    };
    return - 1
} else if( state.lexer._type  == 33 ){
    state.push_fn( set_production /*21*/, 21 );
    consume( state );
    scan( state.lexer, 258, 9 );
    if( ( state.lexer._type  == 25 ) ){
        consume( state );
        scan( state.lexer, 63, 9 );
        if( ( state.lexer._type  == 33 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 0
        }
    };
    return - 1
} else if( state.lexer._type  == 25 ){
    state.push_fn( set_production /*21*/, 21 );
    consume( state );
    return 0
};
    return - 1
}

function hc_html__ATTRIBUTE_BODY(state, db, prod){
    scan( state.lexer, 261, 9 );
    if( state.lexer._type  == 34 ){
    state.push_fn( set_production /*22*/, 22 );
    consume( state );
    add_reduce( state, 1, 32 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( set_production /*22*/, 22 );
    state.push_fn( set_production /*0*/, 22 );
    return hc_html__identifier( state, db, 0 )
} else if( state.lexer._type  == 5 ){
    state.push_fn( set_production /*22*/, 22 );
    consume( state );
    return 0
};
    return - 1
}

function hc_html__ATTRIBUTE_STRING_VALUE(state, db, prod){
    scan( state.lexer, 262, 9 );
    if( state.lexer._type  == 33 ){
    consume( state );
    scan( state.lexer, 263, 0 );
    if( state.lexer._type  == 33 ){
        state.push_fn( set_production /*23*/, 23 );
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    } else {
        state.push_fn( set_production /*23*/, 23 );
        state.push_fn( branch_27bc4029a4df3225, 23 );
        return hc_html__BODY_SYMBOLS( state, db, 0 )
    }
} else if( state.lexer._type  == 32 ){
    consume( state );
    scan( state.lexer, 264, 0 );
    if( state.lexer._type  == 32 ){
        state.push_fn( set_production /*23*/, 23 );
        consume( state );
        add_reduce( state, 2, 0 );
        return 0
    } else {
        state.push_fn( set_production /*23*/, 23 );
        state.push_fn( branch_855ab17a1cca1393, 23 );
        return hc_html__BODY_SYMBOLS( state, db, 0 )
    }
};
    return - 1
}

function hc_html__BODY_SYMBOLS(state, db, prod){
    state.push_fn( hc_html__BODY_SYMBOLS_goto /*hc_html__BODY_SYMBOLS_goto( state, db, 24 )*/, 24 );
    return hc_html__BODY_SYMBOL( state, db, 0 )
}

function hc_html__BODY_SYMBOLS_goto(state, db, prod){
    scan( state.lexer, 265, 0 );
    if( isTokenActive( state.lexer._type, 266 ) ){
    state.push_fn( hc_html__BODY_SYMBOLS_goto /*hc_html__BODY_SYMBOLS_goto( state, db, 24 )*/, 24 );
    scan( state.lexer, 266, 0 );
    if( ( isTokenActive( state.lexer._type, 266 ) ) ){
        state.push_fn( branch_c417a0113f98071e, 24 );
        return hc_html__BODY_SYMBOL( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 24 ) ? prod  : - 1
}

function hc_html__BODY_SYMBOL(state, db, prod){
    scan( state.lexer, 266, 0 );
    if( isTokenActive( state.lexer._type, 266 ) ){
    consume( state );
    return 25
};
    return - 1
}

function hc_html__TAG_BODY(state, db, prod){
    state.push_fn( branch_b8ac3131d3a3e021, 26 );
    return hc_html__TAG_BODY_ITEM( state, db, 0 )
}

function hc_html__TAG_BODY_goto(state, db, prod){
    scan( state.lexer, 76, 0 );
    if( isTokenActive( state.lexer._type, 77 ) ){
    state.push_fn( hc_html__TAG_BODY_goto /*hc_html__TAG_BODY_goto( state, db, 26 )*/, 26 );
    scan( state.lexer, 77, 0 );
    if( ( isTokenActive( state.lexer._type, 77 ) ) ){
        state.push_fn( branch_449740ceb8df7fb1, 26 );
        return hc_html__TAG_BODY_ITEM( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 28 ){
    return 26
};
    return ( prod  == 26 ) ? prod  : - 1
}

function hc_html__TAG_BODY_ITEM(state, db, prod){
    scan( state.lexer, 77, 0 );
    if( state.lexer._type  == 27 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 267, 9 );
    if( isTokenActive( pk._type, 147 ) ){
        state.lexer._type  = 27;
        state.push_fn( set_production /*27*/, 27 );
        state.push_fn( set_production /*0*/, 27 );
        return hc_html__TAG( state, db, 0 )
    } else if( pk._type  == 37 ){
        consume( state );
        scan( state.lexer, 268, 9 );
        if( state.lexer._type  == 37 ){
            consume( state );
            scan( state.lexer, 257, 9 );
            if( isTokenActive( state.lexer._type, 74 ) ){
                scan( state.lexer, 75, 9 );
                state.push_fn( branch_bfb14cc6e794403e, 0 );
                return hc_html__ATTRIBUTES( state, db, 0 )
            } else if( state.lexer._type  == 11 ){
                consume( state );
                scan( state.lexer, 144, 9 );
                if( isTokenActive( state.lexer._type, 145 ) ){
                    scan( state.lexer, 144, 9 );
                    state.push_fn( branch_6ec7604dbe3bea89, 0 );
                    return hc_javascript__script( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 146, 9 );
                    if( isTokenActive( pk._type, 147 ) ){
                        scan( state.lexer, 144, 9 );
                        state.push_fn( branch_6ec7604dbe3bea89, 0 );
                        return hc_javascript__script( state, db, 0 )
                    } else {
                        consume( state );
                        scan( state.lexer, 50, 9 );
                        if( state.lexer._type  == 10 ){
                            consume( state );
                            scan( state.lexer, 51, 9 );
                            if( state.lexer._type  == 37 || state.lexer._type  == 39 ){
                                consume( state );
                                scan( state.lexer, 8, 9 );
                                if( ( state.lexer._type  == 11 ) ){
                                    consume( state );
                                    add_reduce( state, 7, 36 );
                                    return 27
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if( pk._type  == 38 ){
        consume( state );
        scan( state.lexer, 19, 9 );
        if( state.lexer._type  == 38 ){
            consume( state );
            scan( state.lexer, 257, 9 );
            if( isTokenActive( state.lexer._type, 74 ) ){
                scan( state.lexer, 75, 9 );
                state.push_fn( branch_05a7b2d72e7bffc5, 0 );
                return hc_html__ATTRIBUTES( state, db, 0 )
            } else if( state.lexer._type  == 11 ){
                consume( state );
                scan( state.lexer, 17, 9 );
                if( isTokenActive( state.lexer._type, 18 ) ){
                    state.push_fn( set_production /*27*/, 27 );
                    state.push_fn( branch_31efc3d71dadfd9b, 27 );
                    return hc_javascript__script( state, db, 0 )
                } else if( state.lexer._type  == 28 ){
                    state.push_fn( set_production /*27*/, 27 );
                    consume( state );
                    scan( state.lexer, 19, 9 );
                    if( ( state.lexer._type  == 38 ) ){
                        consume( state );
                        scan( state.lexer, 8, 9 );
                        if( ( state.lexer._type  == 11 ) ){
                            consume( state );
                            add_reduce( state, 6, 36 );
                            return 0
                        }
                    };
                    return - 1
                }
            }
        }
    } else {
        consume( state );
        scan( state.lexer, 269, 9 );
        if( state.lexer._type  == 39 ){
            consume( state );
            scan( state.lexer, 257, 9 );
            if( isTokenActive( state.lexer._type, 74 ) ){
                scan( state.lexer, 75, 9 );
                state.push_fn( branch_bfb14cc6e794403e, 0 );
                return hc_html__ATTRIBUTES( state, db, 0 )
            } else if( state.lexer._type  == 11 ){
                consume( state );
                scan( state.lexer, 144, 9 );
                if( isTokenActive( state.lexer._type, 145 ) ){
                    scan( state.lexer, 144, 9 );
                    state.push_fn( branch_6ec7604dbe3bea89, 0 );
                    return hc_javascript__script( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 146, 9 );
                    if( isTokenActive( pk._type, 147 ) ){
                        scan( state.lexer, 144, 9 );
                        state.push_fn( branch_6ec7604dbe3bea89, 0 );
                        return hc_javascript__script( state, db, 0 )
                    } else {
                        consume( state );
                        scan( state.lexer, 50, 9 );
                        if( state.lexer._type  == 10 ){
                            consume( state );
                            scan( state.lexer, 51, 9 );
                            if( state.lexer._type  == 37 || state.lexer._type  == 39 ){
                                consume( state );
                                scan( state.lexer, 8, 9 );
                                if( ( state.lexer._type  == 11 ) ){
                                    consume( state );
                                    add_reduce( state, 7, 36 );
                                    return 27
                                }
                            }
                        }
                    }
                }
            }
        }
    }
} else if( state.lexer._type  == 24 ){
    state.push_fn( set_production /*27*/, 27 );
    state.push_fn( set_production /*0*/, 27 );
    return hc_html__DTD( state, db, 0 )
} else {
    state.push_fn( set_production /*27*/, 27 );
    state.push_fn( set_production /*0*/, 27 );
    return hc_html__TEXT_NODE( state, db, 0 )
};
    return - 1
}

function hc_html__TEXT_NODE(state, db, prod){
    scan( state.lexer, 270, 0 );
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
    state.push_fn( set_production /*28*/, 28 );
    state.push_fn( set_production /*0*/, 28 );
    return hc_WICK_BINDING( state, db, 0 )
} else {
    state.push_fn( set_production /*28*/, 28 );
    state.push_fn( branch_0c91deeca65ee5a0, 28 );
    return hc_html__TEXT_NODE_DATA( state, db, 0 )
};
    return - 1
}

function hc_html__VOID_NAME(state, db, prod){
    scan( state.lexer, 256, 9 );
    if( isTokenActive( state.lexer._type, 255 ) ){
    consume( state );
    return 29
};
    return - 1
}

function hc_javascript__javascript(state, db, prod){
    state.push_fn( branch_3c13403716c5bcac, 30 );
    return hc_javascript__start( state, db, 0 )
}

function hc_javascript__start(state, db, prod){
    scan( state.lexer, 271, 11 );
    if( state.lexer._type  == 57 ){
    state.push_fn( set_production /*31*/, 31 );
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 0
} else if( isTokenActive( state.lexer._type, 172 ) ){
    state.push_fn( set_production /*31*/, 31 );
    state.push_fn( branch_e06154576db868ed, 31 );
    return hc_javascript__module( state, db, 0 )
};
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 31
}

function hc_javascript__module(state, db, prod){
    state.push_fn( set_production /*32*/, 32 );
    return hc_javascript__module_body( state, db, 0 )
}

function hc_javascript__module_body(state, db, prod){
    state.push_fn( branch_56eb0ca60d23ff70, 33 );
    return hc_javascript__module_item( state, db, 0 )
}

function hc_javascript__module_body_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 33: 
            {
                scan( state.lexer, 171, 9 );
                if( isTokenActive( state.lexer._type, 172 ) ){
                    state.push_fn( hc_javascript__module_body_goto /*hc_javascript__module_body_goto( state, db, 33 )*/, 33 );
                    scan( state.lexer, 173, 11 );
                    if( ( isTokenActive( state.lexer._type, 172 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 33 );
                        return hc_javascript__module_item( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 33 ) ? prod  : - 1
}

function hc_javascript__module_item(state, db, prod){
    scan( state.lexer, 173, 11 );
    if( isTokenActive( state.lexer._type, 272 ) ){
    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
    state.push_fn( set_production /*0*/, 34 );
    return hc_javascript__statement_list_item( state, db, 0 )
} else if( state.lexer._type  == 13 ){
    consume( state );
    scan( state.lexer, 273, 11 );
    if( state.lexer._type  == 62 || state.lexer._type  == 16 || state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
        state.push_fn( branch_bb0cb59facb2821a, 34 );
        return hc_javascript__import_clause( state, db, 0 )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
        state.push_fn( branch_257bb8351529e8a4, 34 );
        return hc_javascript__module_specifier( state, db, 0 )
    } else if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
        consume( state );
        state.push_fn( branch_21ae27b721c01292, 188 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 98 ){
        state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
        consume( state );
        scan( state.lexer, 274, 11 );
        if( ( state.lexer._type  == 51 ) ){
            consume( state );
            add_reduce( state, 3, 257 );
            return 0
        };
        return - 1
    }
} else {
    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
    state.push_fn( branch_fad90ab6aaf2a88c, 34 );
    return hc_javascript__export_declaration( state, db, 0 )
};
    return - 1
}

function hc_javascript__module_item_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                scan( state.lexer, 174, 11 );
                if( state.lexer._type  == 69 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 175, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                scan( state.lexer, 176, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 178, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( isTokenActive( state.lexer._type, 182 ) ){
                    scan( state.lexer, 183, 11 );
                    if( isTokenActive( state.lexer._type, 182 ) ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_e22618f1debe6a89, 195 );
                        state.push_fn( branch_8b10a97864118e81, 61 );
                        return 0
                    } else if( state.lexer._type  == 71 || state.lexer._type  == 72 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 184 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 211, 9 );
                if( isTokenActive( state.lexer._type, 212 ) ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 213, 11 );
                    if( ( isTokenActive( state.lexer._type, 212 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 72, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 34 )*/, 34 );
                    scan( state.lexer, 222, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 34 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 223, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 224, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__module_item_goto /*hc_javascript__module_item_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 34 ) ? prod  : - 1
}

function hc_javascript__import_declaration(state, db, prod){
    scan( state.lexer, 275, 11 );
    if( state.lexer._type  == 13 ){
    consume( state );
    scan( state.lexer, 276, 11 );
    if( state.lexer._type  == 62 || state.lexer._type  == 16 || state.lexer._type  == 59 ){
        state.push_fn( set_production /*35*/, 35 );
        state.push_fn( branch_922993291d964a30, 35 );
        return hc_javascript__import_clause( state, db, 0 )
    } else {
        state.push_fn( set_production /*35*/, 35 );
        state.push_fn( branch_04913e5fc0e0ed8b, 35 );
        return hc_javascript__module_specifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__import_clause(state, db, prod){
    scan( state.lexer, 277, 11 );
    if( state.lexer._type  == 62 ){
    state.push_fn( set_production /*36*/, 36 );
    state.push_fn( branch_37f6b15929b1ba63, 36 );
    return hc_javascript__name_space_import( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    state.push_fn( set_production /*36*/, 36 );
    state.push_fn( branch_37f6b15929b1ba63, 36 );
    return hc_javascript__named_imports( state, db, 0 )
} else {
    scan( state.lexer, 278, 11 );
    state.push_fn( branch_1584ff69a4f940b9, 0 );
    return hc_javascript__imported_default_binding( state, db, 0 )
};
    return - 1
}

function hc_javascript__imported_default_binding(state, db, prod){
    state.push_fn( branch_e8ee1ba7c85eedaa, 37 );
    return hc_javascript__imported_binding( state, db, 0 )
}

function hc_javascript__imported_binding(state, db, prod){
    state.push_fn( branch_d554d2768b30da15, 38 );
    return hc_javascript__identifier( state, db, 0 )
}

function hc_javascript__identifier(state, db, prod){
    scan( state.lexer, 278, 11 );
    if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 48 );
    return 39
};
    return - 1
}

function hc_javascript__composite_identifier(state, db, prod){
    scan( state.lexer, 279, 11 );
    if( state.lexer._type  == 60 || state.lexer._type  == 61 || state.lexer._type  == 3 ){
    consume( state );
    return hc_javascript__composite_identifier_goto( state, db, 40 )
};
    return - 1
}

function hc_javascript__composite_identifier_goto(state, db, prod){
    scan( state.lexer, 280, 281 );
    if( state.lexer._type  == 60 ){
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    scan( state.lexer, 282, 281 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 61 ){
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    scan( state.lexer, 283, 281 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    scan( state.lexer, 284, 281 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_javascript__composite_identifier_goto /*hc_javascript__composite_identifier_goto( state, db, 40 )*/, 40 );
    scan( state.lexer, 285, 281 );
    consume( state );
    add_reduce( state, 2, 0 );
    return 0
};
    return ( prod  == 40 ) ? prod  : - 1
}

function hc_javascript__name_space_import(state, db, prod){
    scan( state.lexer, 207, 11 );
    if( state.lexer._type  == 62 ){
    consume( state );
    scan( state.lexer, 286, 11 );
    if( ( state.lexer._type  == 63 ) ){
        consume( state );
        state.push_fn( branch_a8064f294e1d80de, 41 );
        return hc_javascript__imported_binding( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__named_imports(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 287, 11 );
    if( state.lexer._type  == 58 ){
        state.push_fn( set_production /*42*/, 42 );
        consume( state );
        scan( state.lexer, 15, 11 );
        if( ( state.lexer._type  == 18 ) ){
            consume( state );
            add_reduce( state, 3, 51 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*42*/, 42 );
        consume( state );
        add_reduce( state, 2, 51 );
        return 0
    } else {
        scan( state.lexer, 278, 11 );
        state.push_fn( branch_9ee06ffeff941d98, 0 );
        return hc_javascript__named_imports_list_331( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__import_specifier(state, db, prod){
    state.push_fn( hc_javascript__import_specifier_goto /*hc_javascript__import_specifier_goto( state, db, 39 )*/, 39 );
    return hc_javascript__identifier( state, db, prod )
}

function hc_javascript__import_specifier_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 39: 
            {
                scan( state.lexer, 288, 9 );
                if( state.lexer._type  == 63 ){
                    state.push_fn( hc_javascript__import_specifier_goto /*hc_javascript__import_specifier_goto( state, db, 43 )*/, 43 );
                    scan( state.lexer, 286, 11 );
                    consume( state );
                    state.push_fn( branch_0912092e7d3508ca, 43 );
                    return hc_javascript__imported_binding( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 47 );
                    add_reduce( state, 1, 52 );
                    prod = 43;
                    continue
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 43 ) ? prod  : - 1
}

function hc_javascript__from_clause(state, db, prod){
    scan( state.lexer, 289, 11 );
    if( state.lexer._type  == 64 ){
    consume( state );
    scan( state.lexer, 290, 11 );
    if( ( state.lexer._type  == 33 || state.lexer._type  == 32 ) ){
        state.push_fn( branch_9742cc9ec480e36c, 44 );
        return hc_javascript__module_specifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__module_specifier(state, db, prod){
    state.push_fn( set_production /*45*/, 45 );
    return hc_javascript__string_literal( state, db, 0 )
}

function hc_javascript__string_literal(state, db, prod){
    scan( state.lexer, 290, 11 );
    if( state.lexer._type  == 33 ){
    consume( state );
    scan( state.lexer, 291, 0 );
    if( state.lexer._type  == 33 ){
        state.push_fn( set_production /*46*/, 46 );
        consume( state );
        add_reduce( state, 2, 56 );
        return 0
    } else {
        state.push_fn( set_production /*46*/, 46 );
        state.push_fn( branch_9cf639610c3537f3, 46 );
        return hc_javascript__string_literal_list_342( state, db, 0 )
    }
} else if( state.lexer._type  == 32 ){
    consume( state );
    scan( state.lexer, 292, 0 );
    if( state.lexer._type  == 32 ){
        state.push_fn( set_production /*46*/, 46 );
        consume( state );
        add_reduce( state, 2, 56 );
        return 0
    } else {
        state.push_fn( set_production /*46*/, 46 );
        state.push_fn( branch_c53f49c2a43a87e6, 46 );
        return hc_javascript__string_literal_list_345( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__escaped_sequence(state, db, prod){
    scan( state.lexer, 293, 11 );
    if( state.lexer._type  == 65 ){
    consume( state );
    scan( state.lexer, 294, 281 );
    if( isTokenActive( state.lexer._type, 236 ) ){
        consume( state );
        add_reduce( state, 2, 12 );
        return 47
    }
};
    return - 1
}

function hc_javascript__asi(state, db, prod){
    scan( state.lexer, 222, 11 );
    if( state.lexer._type  == 17 ){
    state.push_fn( set_production /*48*/, 48 );
    consume( state );
    return 0
} else if( state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 48
};
    return - 1
}

function hc_javascript__export_declaration(state, db, prod){
    scan( state.lexer, 295, 11 );
    if( state.lexer._type  == 15 ){
    consume( state );
    scan( state.lexer, 296, 11 );
    if( isTokenActive( state.lexer._type, 297 ) ){
        state.push_fn( set_production /*49*/, 49 );
        state.push_fn( branch_c672daf1948e48fe, 49 );
        return hc_javascript__declaration( state, db, 0 )
    } else if( state.lexer._type  == 68 ){
        state.push_fn( set_production /*49*/, 49 );
        state.push_fn( branch_c672daf1948e48fe, 49 );
        return hc_javascript__variable_statement( state, db, 0 )
    } else if( state.lexer._type  == 67 ){
        consume( state );
        scan( state.lexer, 233, 9 );
        if( isTokenActive( state.lexer._type, 298 ) ){
            state.push_fn( set_production /*49*/, 49 );
            state.push_fn( branch_21507767bc1ef64d, 49 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 116 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_f83ee429565b03c0, 49 );
            state.push_fn( branch_37850b65e7b52769, 49 );
            return 0
        } else if( state.lexer._type  == 117 ){
            state.push_fn( set_production /*49*/, 49 );
            state.push_fn( branch_f9728395ba7dac96, 49 );
            return hc_javascript__hoistable_declaration( state, db, 0 )
        } else {
            state.push_fn( set_production /*49*/, 49 );
            state.push_fn( branch_f9728395ba7dac96, 49 );
            return hc_javascript__class_declaration( state, db, 0 )
        }
    } else if( state.lexer._type  == 62 ){
        state.push_fn( set_production /*49*/, 49 );
        consume( state );
        state.push_fn( branch_aa8ebb943fbd1a48, 49 );
        return hc_javascript__from_clause( state, db, 0 )
    } else {
        scan( state.lexer, 12, 11 );
        state.push_fn( branch_c2fa8a79625117ac, 0 );
        return hc_javascript__export_clause( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__export_clause(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 287, 11 );
    if( state.lexer._type  == 58 ){
        state.push_fn( set_production /*50*/, 50 );
        consume( state );
        scan( state.lexer, 15, 11 );
        if( ( state.lexer._type  == 18 ) ){
            consume( state );
            add_reduce( state, 3, 63 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*50*/, 50 );
        consume( state );
        add_reduce( state, 2, 63 );
        return 0
    } else {
        scan( state.lexer, 278, 11 );
        state.push_fn( branch_9381712543ead955, 0 );
        return hc_javascript__export_clause_list_399( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__export_specifier(state, db, prod){
    state.push_fn( branch_631d27ed95564d12, 0 );
    return hc_javascript__identifier( state, db, 0 )
}

function hc_javascript__variable_statement(state, db, prod){
    scan( state.lexer, 135, 11 );
    if( state.lexer._type  == 68 ){
    consume( state );
    scan( state.lexer, 92, 11 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_96d8bd77c73a6285, 52 );
        return hc_javascript__variable_declaration_list( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__variable_declaration_list(state, db, prod){
    state.push_fn( branch_5ca1d17079e9fcd0, 53 );
    return hc_javascript__variable_declaration( state, db, 0 )
}

function hc_javascript__variable_declaration_list_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 53: 
            {
                scan( state.lexer, 299, 9 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_javascript__variable_declaration_list_goto /*hc_javascript__variable_declaration_list_goto( state, db, 53 )*/, 53 );
                    scan( state.lexer, 72, 11 );
                    consume( state );
                    state.push_fn( branch_a8b069c903e9e56e, 53 );
                    return hc_javascript__variable_declaration( state, db, 0 )
                } else if( state.lexer._type  == 17 ){
                    return 53
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 53 ) ? prod  : - 1
}

function hc_javascript__variable_declaration(state, db, prod){
    scan( state.lexer, 92, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    state.push_fn( set_production /*54*/, 54 );
    state.push_fn( branch_84ce0da9cbca5ccc, 54 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    scan( state.lexer, 278, 11 );
    state.push_fn( branch_7784d38100a538d6, 0 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__binding_identifier(state, db, prod){
    scan( state.lexer, 278, 11 );
    if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 67 );
    return 55
};
    return - 1
}

function hc_javascript__initializer(state, db, prod){
    scan( state.lexer, 214, 11 );
    if( state.lexer._type  == 14 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
        state.push_fn( branch_db3303a9e9717b61, 56 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__assignment_expression(state, db, prod){
    scan( state.lexer, 110, 11 );
    if( isTokenActive( state.lexer._type, 300 ) ){
    scan( state.lexer, 301, 9 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 99 ){
        consume( state );
        scan( state.lexer, 302, 9 );
        if( isTokenActive( state.lexer._type, 303 ) ){
            scan( state.lexer, 122, 11 );
            state.push_fn( branch_089788feedc77437, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 304, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 145 ){
        consume( state );
        scan( state.lexer, 305, 11 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 13 ){
        consume( state );
        scan( state.lexer, 306, 11 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 274, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 138 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 117 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_cf5f2b7a242c50fd, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
        state.push_fn( branch_4472010bc24c98af, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
        state.push_fn( branch_4472010bc24c98af, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
        state.push_fn( branch_4472010bc24c98af, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        consume( state );
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 143 ){
            consume( state );
            scan( state.lexer, 157, 11 );
            if( state.lexer._type  == 142 ){
                state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 175 )*/, 175 );
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else {
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 84 )*/, 84 );
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
} else if( isTokenActive( state.lexer._type, 308 ) ){
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
    state.push_fn( set_production /*0*/, 57 );
    return hc_javascript__conditional_expression( state, db, 0 )
} else if( state.lexer._type  == 59 || state.lexer._type  == 36 || state.lexer._type  == 116 ){
    scan( state.lexer, 309, 11 );
    if( state.lexer._type  == 116 ){
        consume( state );
        scan( state.lexer, 310, 11 );
        if( state.lexer._type  == 117 ){
            consume( state );
            scan( state.lexer, 311, 11 );
            if( state.lexer._type  == 62 ){
                consume( state );
                scan( state.lexer, 312, 11 );
                if( state.lexer._type  == 36 ){
                    consume( state );
                    scan( state.lexer, 42, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                        state.push_fn( branch_acd9ffcdb9473c40, 75 );
                        return hc_javascript__formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                        consume( state );
                        scan( state.lexer, 12, 11 );
                        if( ( state.lexer._type  == 16 ) ){
                            consume( state );
                            state.push_fn( branch_49d53a19b4f867c5, 75 );
                            return hc_javascript__function_body( state, db, 0 )
                        };
                        return - 1
                    }
                } else {
                    scan( state.lexer, 278, 11 );
                    state.push_fn( branch_4612958bc6c06ac0, 0 );
                    return hc_javascript__binding_identifier( state, db, 0 )
                }
            } else if( state.lexer._type  == 36 ){
                consume( state );
                scan( state.lexer, 42, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    state.push_fn( branch_0f32ea116410b4fe, 75 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    consume( state );
                    scan( state.lexer, 12, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_7d28866a17c37517, 75 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                scan( state.lexer, 278, 11 );
                state.push_fn( branch_ac617a53e59f94ba, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else {
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
            state.push_fn( branch_a4087d8b8c9a386b, 57 );
            return hc_javascript__arrow_parameters( state, db, 0 )
        }
    } else if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 313, 9 );
        if( isTokenActive( state.lexer._type, 54 ) ){
            scan( state.lexer, 110, 11 );
            state.push_fn( branch_2a2f4d3afa13bdfd, 0 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 198 )*/, 198 );
            consume( state );
            add_reduce( state, 2, 276 );
            add_reduce( state, 1, 275 );
            return 0
        } else {
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_33ee13500b9e8885, 198 );
            state.push_fn( branch_6d7c1f0e910cdf98, 198 );
            return 0
        }
    } else if( state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 77 )*/, 77 );
        state.push_fn( set_production /*0*/, 77 );
        return hc_javascript__identifier_reference( state, db, prod )
    }
} else {
    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
    state.push_fn( set_production /*0*/, 57 );
    return hc_javascript__yield_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__assignment_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                scan( state.lexer, 314, 11 );
                if( state.lexer._type  == 69 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
                    scan( state.lexer, 175, 11 );
                    consume( state );
                    state.push_fn( branch_746fc3b29eef739d, 57 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 57;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                scan( state.lexer, 315, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 316, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( state.lexer._type  == - 1 || state.lexer._type  == 69 || state.lexer._type  == 1 ){
                    scan( state.lexer, 317, 11 );
                    if( state.lexer._type  == 69 || state.lexer._type  == 1 ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_80e56d99ad54996d, 61 );
                        state.push_fn( branch_b7566901c02e5371, 195 );
                        return 0
                    } else if( state.lexer._type  == 72 || state.lexer._type  == 71 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 184 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 211, 9 );
                if( isTokenActive( state.lexer._type, 212 ) ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
                    scan( state.lexer, 213, 11 );
                    if( ( isTokenActive( state.lexer._type, 212 ) ) ){
                        state.push_fn( branch_e7b8aedf7573fc09, 57 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 57 )*/, 57 );
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 57 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 77: 
            {
                scan( state.lexer, 319, 11 );
                if( state.lexer._type  == 150 ){
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 274 );
                    prod = 198;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 323, 11 );
                    if( pk._type  == 5 ){
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 83 )*/, 83 );
                        scan( state.lexer, 219, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                scan( state.lexer, 110, 11 );
                if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                    state.push_fn( branch_0d1d3f19019f1922, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 180: 
            {
                scan( state.lexer, 319, 11 );
                if( state.lexer._type  == 150 ){
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 275 );
                    prod = 198;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 94 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 324, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 325, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__assignment_expression_goto /*hc_javascript__assignment_expression_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 198: 
            {
                scan( state.lexer, 326, 0 );
                if( state.lexer._type  == 150 ){
                    consume( state );
                    scan( state.lexer, 110, 11 );
                    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                        state.push_fn( branch_96b4a920ae326c1f, 57 );
                        return hc_javascript__concise_body( state, db, 0 )
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 57 ) ? prod  : - 1
}

function hc_javascript__conditional_expression(state, db, prod){
    state.push_fn( branch_3a1afcc89656b700, 0 );
    return hc_javascript__short_circuit_expression( state, db, 0 )
}

function hc_javascript__short_circuit_expression(state, db, prod){
    scan( state.lexer, 327, 11 );
    if( isTokenActive( state.lexer._type, 328 ) ){
    scan( state.lexer, 329, 9 );
    if( isTokenActive( state.lexer._type, 330 ) ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        return hc_javascript__unary_expression( state, db, prod )
    } else if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
        state.push_fn( branch_5e58e2b817f7eaa6, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 123 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
        state.push_fn( set_production /*0*/, 69 );
        return hc_javascript__await_expression( state, db, prod )
    } else if( state.lexer._type  == 99 ){
        consume( state );
        scan( state.lexer, 302, 9 );
        if( isTokenActive( state.lexer._type, 303 ) ){
            scan( state.lexer, 122, 11 );
            state.push_fn( branch_9aef3ffcd31bc96d, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 304, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 145 ){
        consume( state );
        scan( state.lexer, 305, 11 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 13 ){
        consume( state );
        scan( state.lexer, 306, 11 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 274, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 138 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 95 || state.lexer._type  == 26 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
        return hc_javascript__update_expression( state, db, prod )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
        state.push_fn( branch_a2fd6626671e74a9, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
        state.push_fn( branch_a2fd6626671e74a9, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
        state.push_fn( branch_a2fd6626671e74a9, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        consume( state );
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 143 ){
            consume( state );
            scan( state.lexer, 157, 11 );
            if( state.lexer._type  == 142 ){
                state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 175 )*/, 175 );
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 84 )*/, 84 );
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__short_circuit_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 60: 
            {
                scan( state.lexer, 331, 9 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 316, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( state.lexer._type  == - 1 || state.lexer._type  == 1 ){
                    scan( state.lexer, 332, 11 );
                    if( state.lexer._type  == 1 ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_7e2c9888b89422c4, 195 );
                        state.push_fn( branch_6828526c58499fc5, 61 );
                        return 0
                    } else if( state.lexer._type  == 72 || state.lexer._type  == 71 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 333 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 334, 11 );
                if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 323, 11 );
                    if( pk._type  == 5 ){
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 83 )*/, 83 );
                        scan( state.lexer, 219, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                scan( state.lexer, 110, 11 );
                if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                    state.push_fn( branch_63673f200ce997a5, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 324, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 335, 9 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__short_circuit_expression_goto /*hc_javascript__short_circuit_expression_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 59 ) ? prod  : - 1
}

function hc_javascript__logical_or_expression(state, db, prod){
    state.push_fn( hc_javascript__logical_or_expression_goto /*hc_javascript__logical_or_expression_goto( state, db, 60 )*/, 60 );
    return hc_javascript__logical_and_expression( state, db, 0 )
}

function hc_javascript__logical_or_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 60: 
            {
                scan( state.lexer, 336, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__logical_or_expression_goto /*hc_javascript__logical_or_expression_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 60 ) ? prod  : - 1
}

function hc_javascript__logical_and_expression(state, db, prod){
    state.push_fn( hc_javascript__logical_and_expression_goto /*hc_javascript__logical_and_expression_goto( state, db, 61 )*/, 61 );
    return hc_javascript__bitwise_or_expression( state, db, 0 )
}

function hc_javascript__logical_and_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 61: 
            {
                scan( state.lexer, 337, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__logical_and_expression_goto /*hc_javascript__logical_and_expression_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    return 61
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 61 ) ? prod  : - 1
}

function hc_javascript__bitwise_or_expression(state, db, prod){
    state.push_fn( hc_javascript__bitwise_or_expression_goto /*hc_javascript__bitwise_or_expression_goto( state, db, 62 )*/, 62 );
    return hc_javascript__bitwise_xor_expression( state, db, 0 )
}

function hc_javascript__bitwise_or_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 62: 
            {
                scan( state.lexer, 338, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__bitwise_or_expression_goto /*hc_javascript__bitwise_or_expression_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else {
                    return 62
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 62 ) ? prod  : - 1
}

function hc_javascript__bitwise_xor_expression(state, db, prod){
    state.push_fn( hc_javascript__bitwise_xor_expression_goto /*hc_javascript__bitwise_xor_expression_goto( state, db, 63 )*/, 63 );
    return hc_javascript__bitwise_and_expression( state, db, 0 )
}

function hc_javascript__bitwise_xor_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 63: 
            {
                scan( state.lexer, 339, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__bitwise_xor_expression_goto /*hc_javascript__bitwise_xor_expression_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    return 63
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 63 ) ? prod  : - 1
}

function hc_javascript__bitwise_and_expression(state, db, prod){
    state.push_fn( hc_javascript__bitwise_and_expression_goto /*hc_javascript__bitwise_and_expression_goto( state, db, 64 )*/, 64 );
    return hc_javascript__equality_expression( state, db, 0 )
}

function hc_javascript__bitwise_and_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 64: 
            {
                scan( state.lexer, 340, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__bitwise_and_expression_goto /*hc_javascript__bitwise_and_expression_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    return 64
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 64 ) ? prod  : - 1
}

function hc_javascript__equality_expression(state, db, prod){
    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
    return hc_javascript__relational_expression( state, db, 0 )
}

function hc_javascript__equality_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 65: 
            {
                scan( state.lexer, 341, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__equality_expression_goto /*hc_javascript__equality_expression_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    return 65
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 65 ) ? prod  : - 1
}

function hc_javascript__relational_expression(state, db, prod){
    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
    return hc_javascript__shift_expression( state, db, 0 )
}

function hc_javascript__relational_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 66: 
            {
                scan( state.lexer, 342, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__relational_expression_goto /*hc_javascript__relational_expression_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    return 66
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 66 ) ? prod  : - 1
}

function hc_javascript__shift_expression(state, db, prod){
    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
    return hc_javascript__additive_expression( state, db, 0 )
}

function hc_javascript__shift_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 67: 
            {
                scan( state.lexer, 343, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__shift_expression_goto /*hc_javascript__shift_expression_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    return 67
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 67 ) ? prod  : - 1
}

function hc_javascript__additive_expression(state, db, prod){
    state.push_fn( hc_javascript__additive_expression_goto /*hc_javascript__additive_expression_goto( state, db, 68 )*/, 68 );
    return hc_javascript__multiplicative_expression( state, db, 0 )
}

function hc_javascript__additive_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 68: 
            {
                scan( state.lexer, 344, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__additive_expression_goto /*hc_javascript__additive_expression_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__additive_expression_goto /*hc_javascript__additive_expression_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    return 68
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 68 ) ? prod  : - 1
}

function hc_javascript__multiplicative_expression(state, db, prod){
    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
    return hc_javascript__exponentiation_expression( state, db, 0 )
}

function hc_javascript__multiplicative_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 69: 
            {
                scan( state.lexer, 345, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__multiplicative_expression_goto /*hc_javascript__multiplicative_expression_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    return 69
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 69 ) ? prod  : - 1
}

function hc_javascript__exponentiation_expression(state, db, prod){
    scan( state.lexer, 327, 11 );
    if( isTokenActive( state.lexer._type, 346 ) ){
    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 70 )*/, 70 );
    state.push_fn( set_production /*0*/, 70 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 347 ) ){
    scan( state.lexer, 348, 9 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
        state.push_fn( branch_f172959d5fcf825b, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 99 ){
        consume( state );
        scan( state.lexer, 302, 9 );
        if( isTokenActive( state.lexer._type, 303 ) ){
            scan( state.lexer, 122, 11 );
            state.push_fn( branch_d0840c0e861d040c, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 304, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 145 ){
        consume( state );
        scan( state.lexer, 305, 11 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 13 ){
        consume( state );
        scan( state.lexer, 306, 11 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 274, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 138 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 103 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 95 || state.lexer._type  == 26 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
        return hc_javascript__update_expression( state, db, prod )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
        state.push_fn( branch_a16e2d388972d681, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
        state.push_fn( branch_a16e2d388972d681, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
        state.push_fn( branch_a16e2d388972d681, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        consume( state );
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 143 ){
            consume( state );
            scan( state.lexer, 157, 11 );
            if( state.lexer._type  == 142 ){
                state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 175 )*/, 175 );
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 84 )*/, 84 );
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__exponentiation_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 72: 
            {
                scan( state.lexer, 164, 9 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 70 )*/, 70 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 70 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 70;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 334, 11 );
                if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 323, 11 );
                    if( pk._type  == 5 ){
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 83 )*/, 83 );
                        scan( state.lexer, 219, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                scan( state.lexer, 110, 11 );
                if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                    state.push_fn( branch_1258f37abbcc16f9, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 324, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__exponentiation_expression_goto /*hc_javascript__exponentiation_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 70 ) ? prod  : - 1
}

function hc_javascript__unary_expression(state, db, prod){
    scan( state.lexer, 327, 11 );
    if( isTokenActive( state.lexer._type, 347 ) ){
    state.push_fn( set_production /*71*/, 71 );
    state.push_fn( set_production /*0*/, 71 );
    return hc_javascript__update_expression( state, db, 0 )
} else if( state.lexer._type  == 91 ){
    state.push_fn( set_production /*71*/, 71 );
    consume( state );
    state.push_fn( branch_c51cb31e873d5c0f, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 92 ){
    state.push_fn( set_production /*71*/, 71 );
    consume( state );
    state.push_fn( branch_e74b9eea64be430f, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 93 ){
    state.push_fn( set_production /*71*/, 71 );
    consume( state );
    state.push_fn( branch_79647dcfa8fc7924, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 123 ){
    state.push_fn( set_production /*71*/, 71 );
    state.push_fn( set_production /*0*/, 71 );
    return hc_javascript__await_expression( state, db, 0 )
} else if( state.lexer._type  == 87 || state.lexer._type  == 94 || state.lexer._type  == 35 ){
    consume( state );
    state.push_fn( branch_8caf9eb72f1af5a9, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
} else if( state.lexer._type  == 88 ){
    state.push_fn( set_production /*71*/, 71 );
    consume( state );
    state.push_fn( branch_33357b08811d62f2, 71 );
    return hc_javascript__unary_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__update_expression(state, db, prod){
    scan( state.lexer, 349, 11 );
    if( isTokenActive( state.lexer._type, 303 ) ){
    scan( state.lexer, 122, 11 );
    state.push_fn( branch_f34d00b31819322d, 0 );
    return hc_javascript__left_hand_side_expression( state, db, 0 )
} else if( state.lexer._type  == 95 || state.lexer._type  == 26 ){
    consume( state );
    state.push_fn( branch_21d5feaed1391ad3, 72 );
    return hc_javascript__unary_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__left_hand_side_expression(state, db, prod){
    scan( state.lexer, 122, 11 );
    if( isTokenActive( state.lexer._type, 303 ) ){
    scan( state.lexer, 350, 9 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
        state.push_fn( branch_85ada9cf18b84407, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 99 ){
        consume( state );
        scan( state.lexer, 302, 9 );
        if( isTokenActive( state.lexer._type, 303 ) ){
            scan( state.lexer, 122, 11 );
            state.push_fn( branch_f0f31abf50b81bc6, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 304, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 145 ){
        consume( state );
        scan( state.lexer, 305, 11 );
        if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        } else {
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        }
    } else if( state.lexer._type  == 138 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 13 ){
        consume( state );
        scan( state.lexer, 306, 11 );
        if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 274, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 103 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
        state.push_fn( branch_461c4abd2b84d737, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
        state.push_fn( branch_461c4abd2b84d737, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
        state.push_fn( branch_461c4abd2b84d737, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        consume( state );
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 143 ){
            consume( state );
            scan( state.lexer, 157, 11 );
            if( state.lexer._type  == 142 ){
                state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 175 )*/, 175 );
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 84 )*/, 84 );
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__left_hand_side_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                scan( state.lexer, 318, 11 );
                if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 323, 11 );
                    if( pk._type  == 5 ){
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 83 )*/, 83 );
                        scan( state.lexer, 219, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                scan( state.lexer, 110, 11 );
                if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                    state.push_fn( branch_6cace078782c5618, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 43, 9 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 351, 9 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__left_hand_side_expression_goto /*hc_javascript__left_hand_side_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 73 ) ? prod  : - 1
}

function hc_javascript__new_expression(state, db, prod){
    state.push_fn( set_production /*74*/, 74 );
    return hc_javascript__member_expression( state, db, 0 )
}

function hc_javascript__member_expression(state, db, prod){
    scan( state.lexer, 122, 11 );
    if( isTokenActive( state.lexer._type, 352 ) ){
    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( set_production /*0*/, 75 );
    return hc_javascript__primary_expression( state, db, 0 )
} else if( state.lexer._type  == 145 ){
    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( set_production /*0*/, 75 );
    return hc_javascript__super_property( state, db, 0 )
} else if( state.lexer._type  == 99 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 302, 9 );
    if( isTokenActive( pk._type, 303 ) ){
        consume( state );
        scan( state.lexer, 122, 11 );
        state.push_fn( branch_14f14dd858272b3f, 0 );
        return hc_javascript__member_expression( state, db, 0 )
    } else {
        state.lexer._type  = 99;
        state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__meta_property( state, db, 0 )
    }
} else {
    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
    state.push_fn( set_production /*0*/, 75 );
    return hc_javascript__meta_property( state, db, 0 )
};
    return - 1
}

function hc_javascript__member_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                scan( state.lexer, 353, 11 );
                if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__member_expression_goto /*hc_javascript__member_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 75 ) ? prod  : - 1
}

function hc_javascript__primary_expression(state, db, prod){
    scan( state.lexer, 354, 11 );
    if( isTokenActive( state.lexer._type, 355 ) ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__literal( state, db, 0 )
} else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__function_expression( state, db, 0 )
} else if( state.lexer._type  == 100 ){
    state.push_fn( set_production /*76*/, 76 );
    consume( state );
    add_reduce( state, 1, 93 );
    return 0
} else if( state.lexer._type  == 138 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__class_expression( state, db, 0 )
} else if( state.lexer._type  == 96 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__array_literal( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__object_literal( state, db, 0 )
} else if( state.lexer._type  == 10 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__regular_expression_literal( state, db, 0 )
} else if( state.lexer._type  == 142 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__template_literal( state, db, 0 )
} else if( state.lexer._type  == 36 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( branch_0420b34e5168643c, 76 );
    return hc_javascript__parenthesized( state, db, 0 )
} else if( state.lexer._type  == 27 ){
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_html__TAG( state, db, 0 )
} else {
    state.push_fn( set_production /*76*/, 76 );
    state.push_fn( set_production /*0*/, 76 );
    return hc_javascript__identifier_reference( state, db, 0 )
};
    return - 1
}

function hc_javascript__identifier_reference(state, db, prod){
    scan( state.lexer, 278, 11 );
    if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 95 );
    return 77
};
    return - 1
}

function hc_javascript__literal(state, db, prod){
    scan( state.lexer, 356, 11 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
    state.push_fn( set_production /*78*/, 78 );
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__boolean_literal( state, db, 0 )
} else if( state.lexer._type  == 103 ){
    state.push_fn( set_production /*78*/, 78 );
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__null_literal( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 357 ) ){
    state.push_fn( set_production /*78*/, 78 );
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__numeric_literal( state, db, 0 )
} else {
    state.push_fn( set_production /*78*/, 78 );
    state.push_fn( set_production /*0*/, 78 );
    return hc_javascript__string_literal( state, db, 0 )
};
    return - 1
}

function hc_javascript__boolean_literal(state, db, prod){
    scan( state.lexer, 358, 11 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
    consume( state );
    add_reduce( state, 1, 96 );
    return 79
};
    return - 1
}

function hc_javascript__null_literal(state, db, prod){
    scan( state.lexer, 359, 11 );
    if( state.lexer._type  == 103 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 97 );
    return 80
};
    return - 1
}

function hc_javascript__numeric_literal(state, db, prod){
    scan( state.lexer, 360, 11 );
    if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
    state.push_fn( branch_c9aa0f04d222f980, 81 );
    return hc_javascript__hex_token( state, db, 0 )
} else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
    state.push_fn( branch_c9aa0f04d222f980, 81 );
    return hc_javascript__octal_token( state, db, 0 )
} else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
    state.push_fn( branch_c9aa0f04d222f980, 81 );
    return hc_javascript__binary_token( state, db, 0 )
} else {
    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 84 )*/, 84 );
    state.push_fn( set_production /*0*/, 84 );
    return hc_javascript__int_token( state, db, prod )
};
    return - 1
}

function hc_javascript__numeric_literal_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 81 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 81;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 81 )*/, 81 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__numeric_literal_goto /*hc_javascript__numeric_literal_goto( state, db, 83 )*/, 83 );
                    scan( state.lexer, 219, 11 );
                    if( ( state.lexer._type  == 98 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 83 );
                        return hc_javascript__float_token_group_597_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 81 ) ? prod  : - 1
}

function hc_javascript__scientific_token(state, db, prod){
    state.push_fn( branch_9973f3ad6c8ed6f4, 0 );
    return hc_javascript__float_token( state, db, 0 )
}

function hc_javascript__float_token(state, db, prod){
    state.push_fn( branch_71808420606e87a2, 0 );
    return hc_javascript__int_token( state, db, 0 )
}

function hc_javascript__int_token(state, db, prod){
    scan( state.lexer, 106, 11 );
    if( state.lexer._type  == 5 ){
    consume( state );
    scan( state.lexer, 361, 9 );
    if( state.lexer._type  == 60 ){
        state.push_fn( set_production /*84*/, 84 );
        state.push_fn( branch_60d1f22634e1d8d8, 84 );
        return hc_javascript__int_token_list_601( state, db, 0 )
    } else {
        add_reduce( state, 1, 14 );
        return 84
    }
};
    return - 1
}

function hc_javascript__big_token(state, db, prod){
    state.push_fn( branch_bb129fcd84bd27b6, 85 );
    return hc_javascript__int_token( state, db, 0 )
}

function hc_javascript__hex_token(state, db, prod){
    scan( state.lexer, 362, 11 );
    if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
    consume( state );
    scan( state.lexer, 363, 11 );
    state.push_fn( branch_46565819d563ece2, 0 );
    return hc_javascript__hex_token_list_606( state, db, 0 )
};
    return - 1
}

function hc_javascript__octal_token(state, db, prod){
    scan( state.lexer, 364, 11 );
    if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
    consume( state );
    scan( state.lexer, 365, 11 );
    state.push_fn( branch_8a46feb918366532, 0 );
    return hc_javascript__octal_token_list_613( state, db, 0 )
};
    return - 1
}

function hc_javascript__binary_token(state, db, prod){
    scan( state.lexer, 366, 11 );
    if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
    consume( state );
    scan( state.lexer, 367, 11 );
    state.push_fn( branch_69f0baed6b66626f, 0 );
    return hc_javascript__binary_token_list_620( state, db, 0 )
};
    return - 1
}

function hc_javascript__array_literal(state, db, prod){
    scan( state.lexer, 218, 11 );
    if( state.lexer._type  == 96 ){
    consume( state );
    scan( state.lexer, 368, 9 );
    if( isTokenActive( state.lexer._type, 369 ) ){
        scan( state.lexer, 108, 11 );
        state.push_fn( branch_d540f5297b6ec400, 0 );
        return hc_javascript__element_list( state, db, 0 )
    } else if( state.lexer._type  == 58 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_787ecfd87813a9e3, 89 );
        state.push_fn( branch_57e41fefd1828c85, 89 );
        return 0
    } else if( state.lexer._type  == 97 ){
        state.push_fn( set_production /*89*/, 89 );
        consume( state );
        add_reduce( state, 2, 104 );
        return 0
    }
};
    return - 1
}

function hc_javascript__elision(state, db, prod){
    scan( state.lexer, 72, 11 );
    if( state.lexer._type  == 58 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 106 );
    return hc_javascript__elision_goto( state, db, 90 )
};
    return - 1
}

function hc_javascript__elision_goto(state, db, prod){
    scan( state.lexer, 368, 9 );
    if( isTokenActive( state.lexer._type, 370 ) ){
    return 90
} else if( state.lexer._type  == 59 || state.lexer._type  == 96 || state.lexer._type  == 16 || state.lexer._type  == 111 ){
    var fk1 = state.fork( db );;
    fk1.push_fn( set_production /*90*/, 90 );
    state.push_fn( set_production /*90*/, 90 );
    return 0
} else if( state.lexer._type  == 58 ){
    state.push_fn( hc_javascript__elision_goto /*hc_javascript__elision_goto( state, db, 90 )*/, 90 );
    scan( state.lexer, 72, 11 );
    consume( state );
    add_reduce( state, 2, 107 );
    return 0
};
    return ( prod  == 90 ) ? prod  : - 1
}

function hc_javascript__element_list(state, db, prod){
    scan( state.lexer, 108, 11 );
    if( isTokenActive( state.lexer._type, 54 ) ){
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    state.push_fn( branch_5cb267bf74038e65, 91 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else if( state.lexer._type  == 58 ){
    scan( state.lexer, 72, 11 );
    state.push_fn( branch_c1a499f5c2fa42c7, 0 );
    return hc_javascript__elision( state, db, 0 )
} else {
    state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
    state.push_fn( branch_5cb267bf74038e65, 91 );
    return hc_javascript__spread_element( state, db, 0 )
};
    return - 1
}

function hc_javascript__element_list_goto(state, db, prod){
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 368, 9 );
    if( isTokenActive( pk._type, 54 ) ){
        state.lexer._type  = 149;
        state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
        consume( state );
        state.push_fn( branch_aea5465f0a146c0f, 91 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( pk._type  == 58 ){
        consume( state );
        scan( state.lexer, 72, 11 );
        state.push_fn( branch_ac65142cabad4c5e, 0 );
        return hc_javascript__elision( state, db, 0 )
    } else {
        state.lexer._type  = 111;
        state.push_fn( hc_javascript__element_list_goto /*hc_javascript__element_list_goto( state, db, 91 )*/, 91 );
        consume( state );
        state.push_fn( branch_aea5465f0a146c0f, 91 );
        return hc_javascript__spread_element( state, db, 0 )
    }
};
    return ( prod  == 91 ) ? prod  : - 1
}

function hc_javascript__spread_element(state, db, prod){
    scan( state.lexer, 371, 11 );
    if( state.lexer._type  == 111 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
        state.push_fn( branch_b84b8efa7845113b, 92 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__object_literal(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 372, 11 );
    if( isTokenActive( state.lexer._type, 373 ) ){
        scan( state.lexer, 374, 11 );
        state.push_fn( branch_86327d30b3850c08, 0 );
        return hc_javascript__property_definition_list( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*93*/, 93 );
        consume( state );
        add_reduce( state, 2, 112 );
        return 0
    }
};
    return - 1
}

function hc_javascript__property_definition_list(state, db, prod){
    state.push_fn( branch_272a792aedf83485, 94 );
    return hc_javascript__property_definition( state, db, 0 )
}

function hc_javascript__property_definition_list_goto(state, db, prod){
    scan( state.lexer, 61, 11 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 372, 11 );
    if( isTokenActive( pk._type, 373 ) ){
        state.lexer._type  = 111;
        state.push_fn( hc_javascript__property_definition_list_goto /*hc_javascript__property_definition_list_goto( state, db, 94 )*/, 94 );
        consume( state );
        state.push_fn( branch_d689e0319550fcad, 94 );
        return hc_javascript__property_definition( state, db, 0 )
    }
};
    return ( prod  == 94 ) ? prod  : - 1
}

function hc_javascript__property_definition(state, db, prod){
    scan( state.lexer, 374, 11 );
    if( isTokenActive( state.lexer._type, 375 ) ){
    scan( state.lexer, 376, 11 );
    if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( branch_f0268b1a856fc592, 99 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
        state.push_fn( branch_58bf8b08e6ecc2ff, 99 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
        state.push_fn( branch_58bf8b08e6ecc2ff, 99 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
        state.push_fn( branch_58bf8b08e6ecc2ff, 99 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
        state.push_fn( branch_9ff54e7282ef1152, 99 );
        return hc_javascript__computed_property_name( state, db, prod )
    } else {
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 84 )*/, 84 );
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
} else if( isTokenActive( state.lexer._type, 377 ) ){
    scan( state.lexer, 378, 11 );
    if( state.lexer._type  == 76801 || state.lexer._type  == 112 || state.lexer._type  == 59 ){
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 379, 11 );
        if( isTokenActive( pk._type, 380 ) ){
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else {
            state.lexer._type  = 59;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
            state.push_fn( set_production /*0*/, 97 );
            return hc_javascript__identifier_property_name( state, db, prod )
        }
    } else if( state.lexer._type  == 74753 || state.lexer._type  == 114 || state.lexer._type  == 59 ){
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 381, 11 );
        if( isTokenActive( pk._type, 382 ) ){
            state.lexer._type  = 114;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            state.push_fn( set_production /*0*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else {
            state.lexer._type  = 59;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
            state.push_fn( set_production /*0*/, 97 );
            return hc_javascript__identifier_property_name( state, db, prod )
        }
    } else if( state.lexer._type  == 73729 || state.lexer._type  == 115 || state.lexer._type  == 59 ){
        var pk = state.lexer.copy_in_place(  );;
        pk.next(  );
        scan( pk, 381, 11 );
        if( isTokenActive( pk._type, 382 ) ){
            state.lexer._type  = 115;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
            state.push_fn( set_production /*0*/, 95 );
            return hc_javascript__method_definition( state, db, prod )
        } else {
            state.lexer._type  = 59;
            state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
            state.push_fn( set_production /*0*/, 97 );
            return hc_javascript__identifier_property_name( state, db, prod )
        }
    } else if( state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 97 )*/, 97 );
        state.push_fn( set_production /*0*/, 97 );
        return hc_javascript__identifier_property_name( state, db, prod )
    }
} else if( state.lexer._type  == 62 ){
    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
    state.push_fn( set_production /*0*/, 95 );
    return hc_javascript__method_definition( state, db, 0 )
} else if( state.lexer._type  == 111 ){
    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
    consume( state );
    state.push_fn( branch_df9525e73970d08d, 95 );
    return hc_javascript__assignment_expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__property_definition_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_08ae789b89d7d863, 99 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    add_reduce( state, 1, 115 );
                    prod = 99;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 99 )*/, 99 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    add_reduce( state, 1, 115 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 83 )*/, 83 );
                    scan( state.lexer, 219, 11 );
                    if( ( state.lexer._type  == 98 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 83 );
                        return hc_javascript__float_token_group_597_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 97: 
            {
                scan( state.lexer, 383, 11 );
                if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                    scan( state.lexer, 214, 11 );
                    if( ( state.lexer._type  == 14 ) ){
                        state.push_fn( branch_a2852cbcab80f24b, 95 );
                        return hc_javascript__initializer( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 58 || state.lexer._type  == 18 || state.lexer._type  == - 1 ){
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 115 );
                    prod = 95;
                    continue
                } else if( state.lexer._type  == - 1 ){
                    scan( state.lexer, 384, 11 );
                    if( state.lexer._type  == 36 || state.lexer._type  == 70 ){
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 115 );
                        prod = 99;
                        continue
                    } else {
                        add_reduce( state, 1, 115 );
                        prod = 95;
                        continue
                    }
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 115 );
                    prod = 99;
                    continue
                };
                break
            }
            break;
            case 99: 
            {
                scan( state.lexer, 385, 11 );
                if( state.lexer._type  == 36 ){
                    consume( state );
                    scan( state.lexer, 42, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        scan( state.lexer, 121, 11 );
                        state.push_fn( branch_d18964d3767ceec7, 0 );
                        return hc_javascript__unique_formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        consume( state );
                        scan( state.lexer, 12, 11 );
                        if( state.lexer._type  == 16 ){
                            consume( state );
                            scan( state.lexer, 13, 9 );
                            if( isTokenActive( state.lexer._type, 14 ) ){
                                state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                                state.push_fn( branch_9d87f58cd61f2e04, 95 );
                                return hc_javascript__function_body( state, db, 0 )
                            } else if( state.lexer._type  == 18 ){
                                state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                                consume( state );
                                add_reduce( state, 5, 138 );
                                return 0
                            }
                        }
                    }
                } else if( state.lexer._type  == 70 ){
                    state.push_fn( hc_javascript__property_definition_goto /*hc_javascript__property_definition_goto( state, db, 95 )*/, 95 );
                    scan( state.lexer, 16, 11 );
                    consume( state );
                    state.push_fn( branch_f35d7e4ef9d5bd98, 95 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 95 ) ? prod  : - 1
}

function hc_javascript__cover_initialized_name(state, db, prod){
    state.push_fn( branch_950c41dd46277dca, 96 );
    return hc_javascript__identifier_property_name( state, db, 0 )
}

function hc_javascript__identifier_property_name(state, db, prod){
    scan( state.lexer, 278, 11 );
    if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 118 );
    return 97
};
    return - 1
}

function hc_javascript__method_definition(state, db, prod){
    scan( state.lexer, 386, 11 );
    if( isTokenActive( state.lexer._type, 382 ) ){
    scan( state.lexer, 387, 11 );
    state.push_fn( branch_ab73a31103e1c044, 0 );
    return hc_javascript__property_name( state, db, 0 )
} else if( state.lexer._type  == 76801 || state.lexer._type  == 112 || state.lexer._type  == 59 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 388, 11 );
    if( isTokenActive( pk._type, 382 ) ){
        consume( state );
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_9049aebd8b9ab60d, 0 );
        return hc_javascript__property_name( state, db, 0 )
    } else if( pk._type  == 62 ){
        consume( state );
        scan( state.lexer, 207, 11 );
        if( state.lexer._type  == 62 ){
            consume( state );
            scan( state.lexer, 387, 11 );
            state.push_fn( branch_a3a69df1c3ac2beb, 0 );
            return hc_javascript__property_name( state, db, 0 )
        }
    } else {
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_ab73a31103e1c044, 0 );
        return hc_javascript__property_name( state, db, 0 )
    }
} else if( state.lexer._type  == 74753 || state.lexer._type  == 114 || state.lexer._type  == 59 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 389, 11 );
    if( isTokenActive( pk._type, 382 ) ){
        consume( state );
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_fca38fb270220ae5, 0 );
        return hc_javascript__property_name( state, db, 0 )
    } else {
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_ab73a31103e1c044, 0 );
        return hc_javascript__property_name( state, db, 0 )
    }
} else if( state.lexer._type  == 73729 || state.lexer._type  == 115 || state.lexer._type  == 59 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 389, 11 );
    if( isTokenActive( pk._type, 382 ) ){
        consume( state );
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_58d6e17b00f4e677, 0 );
        return hc_javascript__property_name( state, db, 0 )
    } else {
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_ab73a31103e1c044, 0 );
        return hc_javascript__property_name( state, db, 0 )
    }
} else if( state.lexer._type  == 62 ){
    consume( state );
    scan( state.lexer, 387, 11 );
    state.push_fn( branch_e6265ced089e418d, 0 );
    return hc_javascript__property_name( state, db, 0 )
};
    return - 1
}

function hc_javascript__property_name(state, db, prod){
    scan( state.lexer, 387, 11 );
    if( isTokenActive( state.lexer._type, 390 ) ){
    state.push_fn( set_production /*99*/, 99 );
    state.push_fn( branch_9ff54e7282ef1152, 99 );
    return hc_javascript__literal_property_name( state, db, 0 )
} else {
    state.push_fn( set_production /*99*/, 99 );
    state.push_fn( branch_9ff54e7282ef1152, 99 );
    return hc_javascript__computed_property_name( state, db, 0 )
};
    return - 1
}

function hc_javascript__literal_property_name(state, db, prod){
    scan( state.lexer, 391, 11 );
    if( isTokenActive( state.lexer._type, 357 ) ){
    state.push_fn( set_production /*100*/, 100 );
    state.push_fn( set_production /*0*/, 100 );
    return hc_javascript__numeric_literal( state, db, 0 )
} else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
    state.push_fn( set_production /*100*/, 100 );
    state.push_fn( set_production /*0*/, 100 );
    return hc_javascript__string_literal( state, db, 0 )
} else {
    state.push_fn( set_production /*100*/, 100 );
    state.push_fn( set_production /*0*/, 100 );
    return hc_javascript__identifier_property_name( state, db, 0 )
};
    return - 1
}

function hc_javascript__computed_property_name(state, db, prod){
    scan( state.lexer, 218, 11 );
    if( state.lexer._type  == 96 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
        state.push_fn( branch_81e00d8aae69616b, 101 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__unique_formal_parameters(state, db, prod){
    state.push_fn( set_production /*102*/, 102 );
    return hc_javascript__formal_parameters( state, db, 0 )
}

function hc_javascript__formal_parameters(state, db, prod){
    scan( state.lexer, 121, 11 );
    if( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
    scan( state.lexer, 92, 11 );
    state.push_fn( branch_aa4745b1da93291c, 0 );
    return hc_javascript__formal_parameter_list( state, db, 0 )
} else {
    state.push_fn( set_production /*103*/, 103 );
    state.push_fn( branch_be9017ee1fa4e6ba, 103 );
    return hc_javascript__function_rest_parameter( state, db, 0 )
};
    return - 1
}

function hc_javascript__function_rest_parameter(state, db, prod){
    state.push_fn( set_production /*104*/, 104 );
    return hc_javascript__binding_rest_element( state, db, 0 )
}

function hc_javascript__binding_rest_element(state, db, prod){
    scan( state.lexer, 371, 11 );
    if( state.lexer._type  == 111 ){
    consume( state );
    scan( state.lexer, 92, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
        state.push_fn( set_production /*105*/, 105 );
        state.push_fn( branch_df9525e73970d08d, 105 );
        return hc_javascript__binding_pattern( state, db, 0 )
    } else {
        state.push_fn( set_production /*105*/, 105 );
        state.push_fn( branch_df9525e73970d08d, 105 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binding_pattern(state, db, prod){
    scan( state.lexer, 392, 11 );
    if( state.lexer._type  == 16 ){
    state.push_fn( set_production /*106*/, 106 );
    state.push_fn( set_production /*0*/, 106 );
    return hc_javascript__object_binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*106*/, 106 );
    state.push_fn( set_production /*0*/, 106 );
    return hc_javascript__array_binding_pattern( state, db, 0 )
};
    return - 1
}

function hc_javascript__object_binding_pattern(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 393, 11 );
    if( isTokenActive( state.lexer._type, 382 ) ){
        scan( state.lexer, 387, 11 );
        state.push_fn( branch_1f6913935f69fbcf, 0 );
        return hc_javascript__binding_property_list( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*107*/, 107 );
        consume( state );
        add_reduce( state, 2, 143 );
        return 0
    } else {
        state.push_fn( set_production /*107*/, 107 );
        state.push_fn( branch_9ea8d8de93214b70, 107 );
        return hc_javascript__binding_rest_property( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binding_rest_property(state, db, prod){
    scan( state.lexer, 371, 11 );
    if( state.lexer._type  == 111 ){
    consume( state );
    scan( state.lexer, 278, 11 );
    if( ( state.lexer._type  == 59 ) ){
        state.push_fn( branch_f7f9a108d1dea7e0, 108 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binding_property_list(state, db, prod){
    state.push_fn( branch_f3b2e02e29fc4964, 109 );
    return hc_javascript__binding_property( state, db, 0 )
}

function hc_javascript__binding_property_list_goto(state, db, prod){
    scan( state.lexer, 61, 11 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 393, 11 );
    if( isTokenActive( pk._type, 382 ) ){
        state.lexer._type  = 59;
        state.push_fn( hc_javascript__binding_property_list_goto /*hc_javascript__binding_property_list_goto( state, db, 109 )*/, 109 );
        consume( state );
        state.push_fn( branch_aea5465f0a146c0f, 109 );
        return hc_javascript__binding_property( state, db, 0 )
    }
};
    return ( prod  == 109 ) ? prod  : - 1
}

function hc_javascript__binding_property(state, db, prod){
    scan( state.lexer, 387, 11 );
    if( isTokenActive( state.lexer._type, 375 ) ){
    state.push_fn( hc_javascript__binding_property_goto /*hc_javascript__binding_property_goto( state, db, 110 )*/, 110 );
    state.push_fn( branch_029533987ebaf81f, 110 );
    return hc_javascript__property_name( state, db, 0 )
} else if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 394, 11 );
    if( state.lexer._type  == 70 ){
        add_reduce( state, 1, 118 );
        add_reduce( state, 1, 115 );
        return hc_javascript__binding_property_goto( state, db, 99 )
    } else {
        add_reduce( state, 1, 67 );
        return hc_javascript__binding_property_goto( state, db, 55 )
    }
};
    return - 1
}

function hc_javascript__binding_property_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 55: 
            {
                scan( state.lexer, 125, 11 );
                if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__binding_property_goto /*hc_javascript__binding_property_goto( state, db, 110 )*/, 110 );
                    scan( state.lexer, 214, 11 );
                    if( ( state.lexer._type  == 14 ) ){
                        state.push_fn( branch_a7de5534b43714bf, 110 );
                        return hc_javascript__initializer( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 148 );
                    prod = 110;
                    continue
                };
                break
            }
            break;
            case 99: 
            {
                scan( state.lexer, 395, 0 );
                if( state.lexer._type  == 70 ){
                    consume( state );
                    scan( state.lexer, 92, 11 );
                    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
                        state.push_fn( branch_f1ff063f87b0360a, 110 );
                        return hc_javascript__binding_element( state, db, 0 )
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 110 ) ? prod  : - 1
}

function hc_javascript__single_name_binding(state, db, prod){
    state.push_fn( branch_9769a0b3dc78a42b, 0 );
    return hc_javascript__binding_identifier( state, db, 0 )
}

function hc_javascript__binding_element(state, db, prod){
    scan( state.lexer, 92, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    scan( state.lexer, 392, 11 );
    state.push_fn( branch_682f1129d3fa40db, 0 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*112*/, 112 );
    state.push_fn( set_production /*0*/, 112 );
    return hc_javascript__single_name_binding( state, db, 0 )
};
    return - 1
}

function hc_javascript__array_binding_pattern(state, db, prod){
    scan( state.lexer, 218, 11 );
    if( state.lexer._type  == 96 ){
    consume( state );
    scan( state.lexer, 396, 11 );
    if( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
        scan( state.lexer, 130, 11 );
        state.push_fn( branch_690ccf52e0bef75b, 0 );
        return hc_javascript__binding_element_list( state, db, 0 )
    } else if( state.lexer._type  == 58 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_a005474daa359bc2, 113 );
        state.push_fn( branch_bcb98db56ff78ef6, 113 );
        return 0
    } else if( state.lexer._type  == 111 ){
        state.push_fn( set_production /*113*/, 113 );
        state.push_fn( branch_659029be4454979b, 113 );
        return hc_javascript__binding_rest_element( state, db, 0 )
    } else if( state.lexer._type  == 97 ){
        state.push_fn( set_production /*113*/, 113 );
        consume( state );
        add_reduce( state, 2, 154 );
        return 0
    }
};
    return - 1
}

function hc_javascript__binding_element_list(state, db, prod){
    state.push_fn( hc_javascript__binding_element_list_goto /*hc_javascript__binding_element_list_goto( state, db, 114 )*/, 114 );
    return hc_javascript__binding_elision_element( state, db, 0 )
}

function hc_javascript__binding_element_list_goto(state, db, prod){
    scan( state.lexer, 101, 11 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 396, 11 );
    if( pk._type  == 58 || pk._type  == 59 || pk._type  == 16 || pk._type  == 96 ){
        state.lexer._type  = 58;
        state.push_fn( hc_javascript__binding_element_list_goto /*hc_javascript__binding_element_list_goto( state, db, 114 )*/, 114 );
        consume( state );
        state.push_fn( branch_333c57caa5474a61, 114 );
        return hc_javascript__binding_elision_element( state, db, 0 )
    }
};
    return ( prod  == 114 ) ? prod  : - 1
}

function hc_javascript__binding_elision_element(state, db, prod){
    scan( state.lexer, 130, 11 );
    if( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
    state.push_fn( set_production /*115*/, 115 );
    state.push_fn( branch_5cb267bf74038e65, 115 );
    return hc_javascript__binding_element( state, db, 0 )
} else {
    state.push_fn( set_production /*115*/, 115 );
    state.push_fn( branch_87b3679504a7f0fb, 115 );
    return hc_javascript__elision( state, db, 0 )
};
    return - 1
}

function hc_javascript__formal_parameter_list(state, db, prod){
    state.push_fn( branch_10b1b41c67b5a780, 116 );
    return hc_javascript__formal_parameter( state, db, 0 )
}

function hc_javascript__formal_parameter_list_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 116: 
            {
                scan( state.lexer, 64, 11 );
                if( state.lexer._type  == 58 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 397, 11 );
                    if( pk._type  == 59 || pk._type  == 16 || pk._type  == 96 ){
                        state.lexer._type  = 59;
                        state.push_fn( hc_javascript__formal_parameter_list_goto /*hc_javascript__formal_parameter_list_goto( state, db, 116 )*/, 116 );
                        consume( state );
                        state.push_fn( branch_a8b069c903e9e56e, 116 );
                        return hc_javascript__formal_parameter( state, db, 0 )
                    }
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 116 ) ? prod  : - 1
}

function hc_javascript__formal_parameter(state, db, prod){
    state.push_fn( set_production /*117*/, 117 );
    return hc_javascript__binding_element( state, db, 0 )
}

function hc_javascript__function_body(state, db, prod){
    state.push_fn( branch_0e8dacddd33b72aa, 118 );
    return hc_javascript__function_statement_list( state, db, 0 )
}

function hc_javascript__function_statement_list(state, db, prod){
    scan( state.lexer, 398, 11 );
    if( state.lexer._type  == 57 ){
    state.push_fn( set_production /*119*/, 119 );
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 0
} else if( isTokenActive( state.lexer._type, 18 ) ){
    state.push_fn( set_production /*119*/, 119 );
    state.push_fn( set_production /*0*/, 119 );
    return hc_javascript__statement_list( state, db, 0 )
};
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 119
}

function hc_javascript__statement_list(state, db, prod){
    state.push_fn( branch_ef2493182c2ee6b7, 120 );
    return hc_javascript__statement_list_item( state, db, 0 )
}

function hc_javascript__statement_list_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 120: 
            {
                scan( state.lexer, 399, 9 );
                if( isTokenActive( state.lexer._type, 145 ) ){
                    state.push_fn( hc_javascript__statement_list_goto /*hc_javascript__statement_list_goto( state, db, 120 )*/, 120 );
                    scan( state.lexer, 400, 11 );
                    if( ( isTokenActive( state.lexer._type, 18 ) ) ){
                        state.push_fn( branch_c5bd86106a93e50c, 120 );
                        return hc_javascript__statement_list_item( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 27 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 254, 9 );
                    if( isTokenActive( pk._type, 147 ) ){
                        state.lexer._type  = 27;
                        state.push_fn( hc_javascript__statement_list_goto /*hc_javascript__statement_list_goto( state, db, 120 )*/, 120 );
                        scan( state.lexer, 400, 11 );
                        if( ( isTokenActive( state.lexer._type, 18 ) ) ){
                            state.push_fn( branch_c5bd86106a93e50c, 120 );
                            return hc_javascript__statement_list_item( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 18 || state.lexer._type  == - 1 || state.lexer._type  == 128 ){
                    return 120
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 120 ) ? prod  : - 1
}

function hc_javascript__statement_list_item(state, db, prod){
    scan( state.lexer, 400, 11 );
    if( isTokenActive( state.lexer._type, 401 ) ){
    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 121 )*/, 121 );
    state.push_fn( set_production /*0*/, 121 );
    return hc_javascript__statement( state, db, 0 )
} else if( state.lexer._type  == 116 || state.lexer._type  == 138 || state.lexer._type  == 117 ){
    scan( state.lexer, 402, 11 );
    if( state.lexer._type  == 116 ){
        consume( state );
        scan( state.lexer, 310, 11 );
        if( state.lexer._type  == 117 ){
            consume( state );
            scan( state.lexer, 311, 11 );
            if( state.lexer._type  == 62 ){
                consume( state );
                scan( state.lexer, 312, 11 );
                if( state.lexer._type  == 36 ){
                    consume( state );
                    scan( state.lexer, 42, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                        state.push_fn( branch_344f60932931ec0d, 130 );
                        return hc_javascript__formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                        consume( state );
                        scan( state.lexer, 12, 11 );
                        if( ( state.lexer._type  == 16 ) ){
                            consume( state );
                            state.push_fn( branch_0197a94536844bcf, 130 );
                            return hc_javascript__function_body( state, db, 0 )
                        };
                        return - 1
                    }
                } else {
                    scan( state.lexer, 278, 11 );
                    state.push_fn( branch_b5128f33401d69de, 0 );
                    return hc_javascript__binding_identifier( state, db, 0 )
                }
            } else if( state.lexer._type  == 36 ){
                consume( state );
                scan( state.lexer, 42, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                    state.push_fn( branch_8be81d01f471225f, 130 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
                    consume( state );
                    scan( state.lexer, 12, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_2a1990963919bde5, 130 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                scan( state.lexer, 278, 11 );
                state.push_fn( branch_164819ffed8dd429, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else {
            state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
            state.push_fn( branch_4656c4977caeeecb, 126 );
            return hc_javascript__arrow_parameters( state, db, 0 )
        }
    } else if( state.lexer._type  == 138 ){
        consume( state );
        scan( state.lexer, 403, 11 );
        if( state.lexer._type  == 139 ){
            scan( state.lexer, 39, 11 );
            state.push_fn( branch_0e5bfd99d33a90b9, 0 );
            return hc_javascript__class_heritage( state, db, 0 )
        } else if( state.lexer._type  == 16 ){
            consume( state );
            scan( state.lexer, 31, 11 );
            if( isTokenActive( state.lexer._type, 32 ) ){
                scan( state.lexer, 33, 11 );
                state.push_fn( branch_2b04bb2753137935, 0 );
                return hc_javascript__class_body( state, db, 0 )
            } else if( state.lexer._type  == 18 ){
                consume( state );
                scan( state.lexer, 34, 11 );
                if( state.lexer._type  == 1 ){
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_9976eef7d11d601b, 75 );
                    state.push_fn( branch_a6d0b1e7faa284e7, 121 );
                    return 0
                } else {
                    add_reduce( state, 3, 237 );
                    return hc_javascript__statement_list_item_goto( state, db, 75 )
                }
            }
        } else {
            scan( state.lexer, 278, 11 );
            state.push_fn( branch_125f0d21f938f9b8, 0 );
            return hc_javascript__binding_identifier( state, db, 0 )
        }
    } else {
        state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 130 )*/, 130 );
        state.push_fn( set_production /*0*/, 130 );
        return hc_javascript__function_declaration( state, db, prod )
    }
} else {
    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 121 )*/, 121 );
    state.push_fn( set_production /*0*/, 121 );
    return hc_javascript__declaration( state, db, 0 )
};
    return - 1
}

function hc_javascript__statement_list_item_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                scan( state.lexer, 174, 11 );
                if( state.lexer._type  == 69 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 175, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                scan( state.lexer, 176, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 178, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( isTokenActive( state.lexer._type, 182 ) ){
                    scan( state.lexer, 183, 11 );
                    if( isTokenActive( state.lexer._type, 182 ) ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_73260214906574e0, 195 );
                        state.push_fn( branch_ae8236592c487c8c, 61 );
                        return 0
                    } else if( state.lexer._type  == 71 || state.lexer._type  == 72 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 184 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 211, 9 );
                if( isTokenActive( state.lexer._type, 212 ) ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 213, 11 );
                    if( ( isTokenActive( state.lexer._type, 212 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 72, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 121 )*/, 121 );
                    scan( state.lexer, 222, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 121 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 130: 
            {
                scan( state.lexer, 404, 11 );
                if( state.lexer._type  == 1 ){
                    var fk1 = state.fork( db );;
                    fk1.push_fn( branch_f2c33b59dc0a63ff, 121 );
                    state.push_fn( branch_a169b04d3f9ac2e8, 75 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 241 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 223, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 224, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__statement_list_item_goto /*hc_javascript__statement_list_item_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 121 ) ? prod  : - 1
}

function hc_javascript__statement(state, db, prod){
    scan( state.lexer, 405, 11 );
    if( isTokenActive( state.lexer._type, 406 ) ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__expression_statement( state, db, 0 )
} else if( state.lexer._type  == 120 || state.lexer._type  == 121 || state.lexer._type  == 122 || state.lexer._type  == 127 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__breakable_statement( state, db, 0 )
} else if( state.lexer._type  == 68 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__variable_statement( state, db, 0 )
} else if( state.lexer._type  == 118 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__if_statement( state, db, 0 )
} else if( state.lexer._type  == 129 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__continue_statement( state, db, 0 )
} else if( state.lexer._type  == 130 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__break_statement( state, db, 0 )
} else if( state.lexer._type  == 131 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__return_statement( state, db, 0 )
} else if( state.lexer._type  == 132 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__with_statement( state, db, 0 )
} else if( state.lexer._type  == 133 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__throw_statement( state, db, 0 )
} else if( state.lexer._type  == 134 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__try_statement( state, db, 0 )
} else if( state.lexer._type  == 137 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__debugger_statement( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__block_statement( state, db, 0 )
} else if( state.lexer._type  == 17 ){
    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
    state.push_fn( set_production /*0*/, 122 );
    return hc_javascript__empty_statement( state, db, 0 )
} else if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 407, 11 );
    if( state.lexer._type  == 70 ){
        add_reduce( state, 1, 163 );
        return hc_javascript__statement_goto( state, db, 128 )
    } else {
        add_reduce( state, 1, 95 );
        return hc_javascript__statement_goto( state, db, 77 )
    }
};
    return - 1
}

function hc_javascript__statement_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                scan( state.lexer, 174, 11 );
                if( state.lexer._type  == 69 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 175, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                scan( state.lexer, 176, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 178, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( isTokenActive( state.lexer._type, 182 ) ){
                    scan( state.lexer, 183, 11 );
                    if( isTokenActive( state.lexer._type, 182 ) ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_33e252200ed2fecc, 195 );
                        state.push_fn( branch_269f6a16e9c5b940, 61 );
                        return 0
                    } else if( state.lexer._type  == 71 || state.lexer._type  == 72 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 184 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 211, 9 );
                if( isTokenActive( state.lexer._type, 212 ) ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 213, 11 );
                    if( ( isTokenActive( state.lexer._type, 212 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 77: 
            {
                scan( state.lexer, 408, 11 );
                if( state.lexer._type  == 150 ){
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 274 );
                    prod = 198;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 72, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 122 )*/, 122 );
                    scan( state.lexer, 222, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 122 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 128: 
            {
                scan( state.lexer, 395, 0 );
                if( state.lexer._type  == 70 ){
                    consume( state );
                    scan( state.lexer, 158, 11 );
                    if( ( isTokenActive( state.lexer._type, 120 ) ) ){
                        state.push_fn( branch_e6b6b9b166ca4bf8, 122 );
                        return hc_javascript__labeled_item( state, db, 0 )
                    }
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 223, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 224, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__statement_goto /*hc_javascript__statement_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 198: 
            {
                scan( state.lexer, 326, 0 );
                if( state.lexer._type  == 150 ){
                    consume( state );
                    scan( state.lexer, 110, 11 );
                    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                        state.push_fn( branch_e52a91bfee8af692, 126 );
                        return hc_javascript__concise_body( state, db, 0 )
                    }
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 122 ) ? prod  : - 1
}

function hc_javascript__block_statement(state, db, prod){
    state.push_fn( set_production /*123*/, 123 );
    return hc_javascript__block( state, db, 0 )
}

function hc_javascript__block(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 409, 9 );
    if( isTokenActive( state.lexer._type, 18 ) ){
        state.push_fn( set_production /*124*/, 124 );
        state.push_fn( branch_6c4223fa35ba71e7, 124 );
        return hc_javascript__statement_list( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*124*/, 124 );
        consume( state );
        add_reduce( state, 2, 159 );
        return 0
    }
};
    return - 1
}

function hc_javascript__expression_statement(state, db, prod){
    state.push_fn( branch_e4e74e80d0822d9e, 125 );
    return hc_javascript__expression( state, db, 0 )
}

function hc_javascript__expression(state, db, prod){
    state.push_fn( hc_javascript__expression_goto /*hc_javascript__expression_goto( state, db, 126 )*/, 126 );
    return hc_javascript__assignment_expression( state, db, 0 )
}

function hc_javascript__expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 126: 
            {
                scan( state.lexer, 410, 9 );
                if( state.lexer._type  == 58 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 313, 9 );
                    if( isTokenActive( pk._type, 54 ) ){
                        state.lexer._type  = 149;
                        state.push_fn( hc_javascript__expression_goto /*hc_javascript__expression_goto( state, db, 126 )*/, 126 );
                        consume( state );
                        state.push_fn( branch_5e04f36dc03b5f73, 126 );
                        return hc_javascript__assignment_expression( state, db, 0 )
                    }
                } else if( state.lexer._type  == 18 ){
                    var fk1 = state.fork( db );;
                    fk1.push_fn( set_production /*126*/, 126 );
                    var fk2 = state.fork( db );;
                    fk2.push_fn( set_production /*126*/, 126 );
                    state.push_fn( set_production /*126*/, 126 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 411 ) ){
                    return 126
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 126 ) ? prod  : - 1
}

function hc_javascript__labeled_statement(state, db, prod){
    state.push_fn( branch_f4f0ca37d730ca54, 127 );
    return hc_javascript__label_identifier( state, db, 0 )
}

function hc_javascript__label_identifier(state, db, prod){
    scan( state.lexer, 278, 11 );
    if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 163 );
    return 128
};
    return - 1
}

function hc_javascript__labeled_item(state, db, prod){
    scan( state.lexer, 158, 11 );
    if( isTokenActive( state.lexer._type, 412 ) ){
    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 129 )*/, 129 );
    state.push_fn( set_production /*0*/, 129 );
    return hc_javascript__statement( state, db, 0 )
} else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
    scan( state.lexer, 413, 11 );
    if( state.lexer._type  == 116 ){
        consume( state );
        scan( state.lexer, 310, 11 );
        if( state.lexer._type  == 117 ){
            consume( state );
            scan( state.lexer, 311, 11 );
            if( state.lexer._type  == 62 ){
                consume( state );
                scan( state.lexer, 312, 11 );
                if( state.lexer._type  == 36 ){
                    consume( state );
                    scan( state.lexer, 42, 11 );
                    if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                        state.push_fn( branch_344f60932931ec0d, 130 );
                        return hc_javascript__formal_parameters( state, db, 0 )
                    } else if( state.lexer._type  == 113 ){
                        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                        consume( state );
                        scan( state.lexer, 12, 11 );
                        if( ( state.lexer._type  == 16 ) ){
                            consume( state );
                            state.push_fn( branch_0197a94536844bcf, 130 );
                            return hc_javascript__function_body( state, db, 0 )
                        };
                        return - 1
                    }
                } else {
                    scan( state.lexer, 278, 11 );
                    state.push_fn( branch_dd035c0853172ce3, 0 );
                    return hc_javascript__binding_identifier( state, db, 0 )
                }
            } else if( state.lexer._type  == 36 ){
                consume( state );
                scan( state.lexer, 42, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                    state.push_fn( branch_8be81d01f471225f, 130 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
                    consume( state );
                    scan( state.lexer, 12, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_2a1990963919bde5, 130 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                scan( state.lexer, 278, 11 );
                state.push_fn( branch_ad4609bb9493c93b, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else {
            state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
            state.push_fn( branch_4656c4977caeeecb, 126 );
            return hc_javascript__arrow_parameters( state, db, 0 )
        }
    } else {
        state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 130 )*/, 130 );
        state.push_fn( set_production /*0*/, 130 );
        return hc_javascript__function_declaration( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__labeled_item_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 59: 
            {
                scan( state.lexer, 174, 11 );
                if( state.lexer._type  == 69 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 175, 11 );
                    consume( state );
                    state.push_fn( branch_c35d3f2b796beb1b, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 126;
                    continue
                };
                break
            }
            break;
            case 60: 
            {
                scan( state.lexer, 176, 11 );
                if( state.lexer._type  == 71 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 60 )*/, 60 );
                    scan( state.lexer, 177, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 60 );
                    return hc_javascript__logical_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            case 61: 
            {
                scan( state.lexer, 178, 11 );
                if( state.lexer._type  == 72 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 61 )*/, 61 );
                    scan( state.lexer, 179, 11 );
                    consume( state );
                    state.push_fn( branch_b5fdd6aabf77a7a5, 61 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 60;
                    continue
                };
                break
            }
            break;
            case 62: 
            {
                scan( state.lexer, 180, 11 );
                if( state.lexer._type  == 73 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 62 )*/, 62 );
                    scan( state.lexer, 181, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 62 );
                    return hc_javascript__bitwise_xor_expression( state, db, 0 )
                } else if( isTokenActive( state.lexer._type, 182 ) ){
                    scan( state.lexer, 183, 11 );
                    if( isTokenActive( state.lexer._type, 182 ) ){
                        var fk1 = state.fork( db );;
                        fk1.push_fn( branch_1834f1484cdf99dd, 61 );
                        state.push_fn( branch_7b5623845e6c2474, 195 );
                        return 0
                    } else if( state.lexer._type  == 72 || state.lexer._type  == 71 ){
                        scan( state.lexer, 11, 11 );
                        prod = 61;
                        continue
                    } else {
                        scan( state.lexer, 11, 11 );
                        prod = 195;
                        continue
                    }
                } else if( isTokenActive( state.lexer._type, 184 ) ){
                    scan( state.lexer, 11, 11 );
                    prod = 195;
                    continue
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 61;
                    continue
                };
                break
            }
            break;
            case 63: 
            {
                scan( state.lexer, 185, 11 );
                if( state.lexer._type  == 74 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 63 )*/, 63 );
                    scan( state.lexer, 186, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 63 );
                    return hc_javascript__bitwise_and_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 62;
                    continue
                };
                break
            }
            break;
            case 64: 
            {
                scan( state.lexer, 187, 11 );
                if( state.lexer._type  == 75 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 64 )*/, 64 );
                    scan( state.lexer, 188, 11 );
                    consume( state );
                    state.push_fn( branch_8e14cc5b254736d6, 64 );
                    return hc_javascript__equality_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 63;
                    continue
                };
                break
            }
            break;
            case 65: 
            {
                scan( state.lexer, 189, 11 );
                if( state.lexer._type  == 76 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 190, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 77 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 191, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 78 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 192, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else if( state.lexer._type  == 79 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 65 )*/, 65 );
                    scan( state.lexer, 193, 11 );
                    consume( state );
                    state.push_fn( branch_d7a8d4b3d5a505e9, 65 );
                    return hc_javascript__relational_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 64;
                    continue
                };
                break
            }
            break;
            case 66: 
            {
                scan( state.lexer, 194, 11 );
                if( state.lexer._type  == 83 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 124, 11 );
                    consume( state );
                    state.push_fn( branch_38e4b0517223c47e, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 82 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 195, 11 );
                    consume( state );
                    state.push_fn( branch_28e677e707d79ecf, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 27 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 196, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 197, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 198, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 66 )*/, 66 );
                    scan( state.lexer, 199, 11 );
                    consume( state );
                    state.push_fn( branch_ea57b111064bfbfa, 66 );
                    return hc_javascript__shift_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 65;
                    continue
                };
                break
            }
            break;
            case 67: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 84 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 201, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 85 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 202, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else if( state.lexer._type  == 86 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 67 )*/, 67 );
                    scan( state.lexer, 203, 11 );
                    consume( state );
                    state.push_fn( branch_235fb58f233a87be, 67 );
                    return hc_javascript__additive_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 66;
                    continue
                };
                break
            }
            break;
            case 68: 
            {
                scan( state.lexer, 200, 11 );
                if( state.lexer._type  == 87 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 204, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 68 )*/, 68 );
                    scan( state.lexer, 205, 11 );
                    consume( state );
                    state.push_fn( branch_943029143eb62c01, 68 );
                    return hc_javascript__multiplicative_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 67;
                    continue
                };
                break
            }
            break;
            case 69: 
            {
                scan( state.lexer, 206, 11 );
                if( state.lexer._type  == 62 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 207, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 10 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 165, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else if( state.lexer._type  == 89 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 208, 11 );
                    consume( state );
                    state.push_fn( branch_3804e081362f1c98, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 68;
                    continue
                };
                break
            }
            break;
            case 72: 
            {
                scan( state.lexer, 209, 11 );
                if( state.lexer._type  == 90 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 69 )*/, 69 );
                    scan( state.lexer, 210, 11 );
                    consume( state );
                    state.push_fn( branch_5a2f701a2fefa730, 69 );
                    return hc_javascript__exponentiation_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 69;
                    continue
                };
                break
            }
            break;
            case 73: 
            {
                scan( state.lexer, 211, 9 );
                if( isTokenActive( state.lexer._type, 212 ) ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 213, 11 );
                    if( ( isTokenActive( state.lexer._type, 212 ) ) ){
                        state.push_fn( branch_1b53e170eb324054, 126 );
                        return hc_javascript__assignment_operator( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 214, 11 );
                    consume( state );
                    state.push_fn( branch_61e634f78d764fd5, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 95 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 215, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else if( state.lexer._type  == 26 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 72 )*/, 72 );
                    scan( state.lexer, 216, 11 );
                    consume( state );
                    add_reduce( state, 2, 86 );
                    return 0
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 72;
                    continue
                };
                break
            }
            break;
            case 75: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 126: 
            {
                scan( state.lexer, 221, 11 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 126 )*/, 126 );
                    scan( state.lexer, 72, 11 );
                    consume( state );
                    state.push_fn( branch_5e04f36dc03b5f73, 126 );
                    return hc_javascript__assignment_expression( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 129 )*/, 129 );
                    scan( state.lexer, 222, 11 );
                    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
                        state.push_fn( branch_0f00c7498fddac84, 129 );
                        return hc_javascript__asi( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 130: 
            {
                scan( state.lexer, 414, 11 );
                if( isTokenActive( state.lexer._type, 415 ) ){
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 241 );
                    prod = 75;
                    continue
                } else {
                    prod = 129;
                    continue
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 25, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 223, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 73;
                    continue
                };
                break
            }
            break;
            case 195: 
            {
                scan( state.lexer, 224, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__labeled_item_goto /*hc_javascript__labeled_item_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                } else {
                    scan( state.lexer, 11, 11 );
                    prod = 59;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 129 ) ? prod  : - 1
}

function hc_javascript__function_declaration(state, db, prod){
    scan( state.lexer, 413, 11 );
    if( state.lexer._type  == 116 ){
    consume( state );
    scan( state.lexer, 416, 11 );
    if( state.lexer._type  == 117 ){
        consume( state );
        scan( state.lexer, 311, 11 );
        if( state.lexer._type  == 62 ){
            consume( state );
            scan( state.lexer, 312, 11 );
            if( state.lexer._type  == 36 ){
                consume( state );
                scan( state.lexer, 42, 11 );
                if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                    state.push_fn( set_production /*130*/, 130 );
                    state.push_fn( branch_344f60932931ec0d, 130 );
                    return hc_javascript__formal_parameters( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    state.push_fn( set_production /*130*/, 130 );
                    consume( state );
                    scan( state.lexer, 12, 11 );
                    if( ( state.lexer._type  == 16 ) ){
                        consume( state );
                        state.push_fn( branch_0197a94536844bcf, 130 );
                        return hc_javascript__function_body( state, db, 0 )
                    };
                    return - 1
                }
            } else {
                scan( state.lexer, 278, 11 );
                state.push_fn( branch_2ecbe230ba67bdbb, 0 );
                return hc_javascript__binding_identifier( state, db, 0 )
            }
        } else if( state.lexer._type  == 36 ){
            consume( state );
            scan( state.lexer, 42, 11 );
            if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                state.push_fn( set_production /*130*/, 130 );
                state.push_fn( branch_8be81d01f471225f, 130 );
                return hc_javascript__formal_parameters( state, db, 0 )
            } else if( state.lexer._type  == 113 ){
                state.push_fn( set_production /*130*/, 130 );
                consume( state );
                scan( state.lexer, 12, 11 );
                if( ( state.lexer._type  == 16 ) ){
                    consume( state );
                    state.push_fn( branch_2a1990963919bde5, 130 );
                    return hc_javascript__function_body( state, db, 0 )
                };
                return - 1
            }
        } else {
            scan( state.lexer, 278, 11 );
            state.push_fn( branch_d200be569993924b, 0 );
            return hc_javascript__binding_identifier( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 117 ){
    consume( state );
    scan( state.lexer, 311, 11 );
    if( state.lexer._type  == 62 ){
        consume( state );
        scan( state.lexer, 312, 11 );
        if( state.lexer._type  == 36 ){
            consume( state );
            scan( state.lexer, 42, 11 );
            if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
                state.push_fn( set_production /*130*/, 130 );
                state.push_fn( branch_6329a1fb9c53c5ab, 130 );
                return hc_javascript__formal_parameters( state, db, 0 )
            } else if( state.lexer._type  == 113 ){
                state.push_fn( set_production /*130*/, 130 );
                consume( state );
                scan( state.lexer, 12, 11 );
                if( ( state.lexer._type  == 16 ) ){
                    consume( state );
                    state.push_fn( branch_385bdfd293a09ccb, 130 );
                    return hc_javascript__function_body( state, db, 0 )
                };
                return - 1
            }
        } else {
            scan( state.lexer, 278, 11 );
            state.push_fn( branch_a0bae73ea4e09ad5, 0 );
            return hc_javascript__binding_identifier( state, db, 0 )
        }
    } else if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 42, 11 );
        if( state.lexer._type  == 111 || state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ){
            state.push_fn( set_production /*130*/, 130 );
            state.push_fn( branch_6df555e4b1a24c66, 130 );
            return hc_javascript__formal_parameters( state, db, 0 )
        } else if( state.lexer._type  == 113 ){
            state.push_fn( set_production /*130*/, 130 );
            consume( state );
            scan( state.lexer, 12, 11 );
            if( ( state.lexer._type  == 16 ) ){
                consume( state );
                state.push_fn( branch_23dcfc00944b531f, 130 );
                return hc_javascript__function_body( state, db, 0 )
            };
            return - 1
        }
    } else {
        scan( state.lexer, 278, 11 );
        state.push_fn( branch_14ab177b06cc4386, 0 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__empty_statement(state, db, prod){
    scan( state.lexer, 52, 11 );
    if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 180 );
    return 131
};
    return - 1
}

function hc_javascript__if_statement(state, db, prod){
    scan( state.lexer, 417, 11 );
    if( state.lexer._type  == 118 ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 110, 11 );
        state.push_fn( branch_dc1ad3cf7cb1d2ad, 0 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__breakable_statement(state, db, prod){
    scan( state.lexer, 418, 11 );
    if( state.lexer._type  == 120 || state.lexer._type  == 121 || state.lexer._type  == 122 ){
    state.push_fn( set_production /*133*/, 133 );
    state.push_fn( set_production /*0*/, 133 );
    return hc_javascript__iteration_statement( state, db, 0 )
} else {
    state.push_fn( set_production /*133*/, 133 );
    state.push_fn( set_production /*0*/, 133 );
    return hc_javascript__switch_statement( state, db, 0 )
};
    return - 1
}

function hc_javascript__iteration_statement(state, db, prod){
    scan( state.lexer, 419, 11 );
    if( state.lexer._type  == 120 ){
    state.push_fn( set_production /*134*/, 134 );
    consume( state );
    state.push_fn( branch_c6f3389fe847ba79, 134 );
    return hc_javascript__statement( state, db, 0 )
} else if( state.lexer._type  == 121 ){
    state.push_fn( set_production /*134*/, 134 );
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_54734802f26697db, 134 );
        return hc_javascript__expression( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 122 ){
    consume( state );
    scan( state.lexer, 420, 11 );
    if( state.lexer._type  == 123 ){
        consume( state );
        scan( state.lexer, 41, 11 );
        if( state.lexer._type  == 36 ){
            consume( state );
            scan( state.lexer, 421, 9 );
            if( isTokenActive( state.lexer._type, 303 ) ){
                state.push_fn( set_production /*134*/, 134 );
                state.push_fn( branch_4437a2dc118308df, 134 );
                return hc_javascript__left_hand_side_expression( state, db, 0 )
            } else if( state.lexer._type  == 125 || state.lexer._type  == 126 ){
                state.push_fn( set_production /*134*/, 134 );
                state.push_fn( branch_4437a2dc118308df, 134 );
                return hc_javascript__for_declaration( state, db, 0 )
            } else {
                state.push_fn( set_production /*134*/, 134 );
                state.push_fn( branch_4437a2dc118308df, 134 );
                return hc_javascript__iteration_statement_group_896_1_( state, db, 0 )
            }
        }
    } else if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 422, 9 );
        if( isTokenActive( state.lexer._type, 303 ) ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_cab60453de89f99f, 134 );
            state.push_fn( branch_94a544eec5b284ed, 134 );
            return 0
        } else if( isTokenActive( state.lexer._type, 423 ) ){
            scan( state.lexer, 110, 11 );
            state.push_fn( branch_795ed673449dea5c, 0 );
            return hc_javascript__expression( state, db, 0 )
        } else if( state.lexer._type  == 125 || state.lexer._type  == 126 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_c8830dd754f07f35, 134 );
            state.push_fn( branch_89510338e8c94764, 134 );
            return 0
        } else if( state.lexer._type  == 68 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_ab56e3a1140561c2, 134 );
            var fk2 = state.fork( db );;
            fk2.push_fn( branch_aac552bd4d464f90, 134 );
            state.push_fn( branch_e1f935025afbcbdf, 134 );
            return 0
        } else if( state.lexer._type  == 17 ){
            consume( state );
            scan( state.lexer, 109, 9 );
            if( isTokenActive( state.lexer._type, 54 ) ){
                scan( state.lexer, 110, 11 );
                state.push_fn( branch_e60bdf27a3422a85, 0 );
                return hc_javascript__expression( state, db, 0 )
            } else if( state.lexer._type  == 17 ){
                consume( state );
                scan( state.lexer, 53, 9 );
                if( isTokenActive( state.lexer._type, 54 ) ){
                    state.push_fn( set_production /*134*/, 134 );
                    state.push_fn( branch_16833eb5dd17ab3b, 134 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 113 ){
                    state.push_fn( set_production /*134*/, 134 );
                    consume( state );
                    state.push_fn( branch_469783ee4b10f5a3, 134 );
                    return hc_javascript__statement( state, db, 0 )
                }
            }
        }
    }
};
    return - 1
}

function hc_javascript__lexical_declaration(state, db, prod){
    state.push_fn( branch_d0393a2bdcb724db, 135 );
    return hc_javascript__let_or_const( state, db, 0 )
}

function hc_javascript__let_or_const(state, db, prod){
    scan( state.lexer, 115, 11 );
    if( state.lexer._type  == 125 ){
    state.push_fn( set_production /*136*/, 136 );
    consume( state );
    add_reduce( state, 1, 201 );
    return 0
} else if( state.lexer._type  == 126 ){
    state.push_fn( set_production /*136*/, 136 );
    consume( state );
    add_reduce( state, 1, 202 );
    return 0
};
    return - 1
}

function hc_javascript__binding_list(state, db, prod){
    state.push_fn( branch_48d2171bb0e25a48, 137 );
    return hc_javascript__lexical_binding( state, db, 0 )
}

function hc_javascript__binding_list_goto(state, db, prod){
    scan( state.lexer, 221, 11 );
    if( state.lexer._type  == 58 ){
    state.push_fn( hc_javascript__binding_list_goto /*hc_javascript__binding_list_goto( state, db, 137 )*/, 137 );
    scan( state.lexer, 72, 11 );
    consume( state );
    state.push_fn( branch_a8b069c903e9e56e, 137 );
    return hc_javascript__lexical_binding( state, db, 0 )
};
    return ( prod  == 137 ) ? prod  : - 1
}

function hc_javascript__lexical_binding(state, db, prod){
    scan( state.lexer, 92, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    state.push_fn( set_production /*138*/, 138 );
    state.push_fn( branch_df3ac9fd932b099a, 138 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    scan( state.lexer, 278, 11 );
    state.push_fn( branch_fa5c868104ec5da9, 0 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__for_binding(state, db, prod){
    scan( state.lexer, 92, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    state.push_fn( set_production /*139*/, 139 );
    state.push_fn( set_production /*0*/, 139 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*139*/, 139 );
    state.push_fn( set_production /*0*/, 139 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__for_declaration(state, db, prod){
    state.push_fn( branch_8ab4c4fcc8a8c8cd, 140 );
    return hc_javascript__let_or_const( state, db, 0 )
}

function hc_javascript__switch_statement(state, db, prod){
    scan( state.lexer, 424, 11 );
    if( state.lexer._type  == 127 ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_9afea872a2de7233, 141 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__case_block(state, db, prod){
    scan( state.lexer, 12, 11 );
    if( state.lexer._type  == 16 ){
    consume( state );
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 128 ){
        scan( state.lexer, 104, 11 );
        state.push_fn( branch_1076c04cb306ccfd, 0 );
        return hc_javascript__case_clauses( state, db, 0 )
    } else if( state.lexer._type  == 67 ){
        scan( state.lexer, 37, 11 );
        state.push_fn( branch_544e1b40f4ff560c, 0 );
        return hc_javascript__default_clause( state, db, 0 )
    } else if( state.lexer._type  == 18 ){
        state.push_fn( set_production /*142*/, 142 );
        consume( state );
        add_reduce( state, 2, 211 );
        return 0
    }
};
    return - 1
}

function hc_javascript__case_clauses(state, db, prod){
    state.push_fn( branch_a3e83d9faaa61cfd, 143 );
    return hc_javascript__case_clause( state, db, 0 )
}

function hc_javascript__case_clauses_goto(state, db, prod){
    scan( state.lexer, 36, 11 );
    if( state.lexer._type  == 67 || state.lexer._type  == 18 ){
    return 143
} else if( state.lexer._type  == 128 ){
    var fk1 = state.fork( db );;
    fk1.push_fn( set_production /*143*/, 143 );
    state.push_fn( branch_6a092cdad151693f, 143 );
    return 0
};
    return ( prod  == 143 ) ? prod  : - 1
}

function hc_javascript__case_clause(state, db, prod){
    scan( state.lexer, 104, 11 );
    if( state.lexer._type  == 128 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    state.push_fn( branch_b112e8475b047eb1, 0 );
    return hc_javascript__expression( state, db, 0 )
};
    return - 1
}

function hc_javascript__default_clause(state, db, prod){
    scan( state.lexer, 37, 11 );
    if( state.lexer._type  == 67 ){
    consume( state );
    scan( state.lexer, 16, 11 );
    if( state.lexer._type  == 70 ){
        consume( state );
        scan( state.lexer, 425, 9 );
        if( isTokenActive( state.lexer._type, 18 ) ){
            state.push_fn( set_production /*145*/, 145 );
            state.push_fn( branch_6cd1f1bf1a0c6078, 145 );
            return hc_javascript__statement_list( state, db, 0 )
        } else {
            add_reduce( state, 2, 215 );
            return 145
        }
    }
};
    return - 1
}

function hc_javascript__continue_statement(state, db, prod){
    scan( state.lexer, 426, 11 );
    if( state.lexer._type  == 129 ){
    consume( state );
    scan( state.lexer, 427, 11 );
    if( state.lexer._type  == 59 ){
        state.push_fn( set_production /*146*/, 146 );
        state.push_fn( branch_628f19130835c1c3, 146 );
        return hc_javascript__goto_label_identifier( state, db, 0 )
    } else {
        state.push_fn( set_production /*146*/, 146 );
        state.push_fn( branch_213773c8f0ea25fb, 146 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__goto_label_identifier(state, db, prod){
    state.push_fn( branch_10f84fa89e47280d, 147 );
    return hc_javascript__label_identifier( state, db, 0 )
}

function hc_javascript__break_statement(state, db, prod){
    scan( state.lexer, 428, 11 );
    if( state.lexer._type  == 130 ){
    consume( state );
    scan( state.lexer, 427, 11 );
    if( state.lexer._type  == 59 ){
        state.push_fn( set_production /*148*/, 148 );
        state.push_fn( branch_6384e8ff46f7fb04, 148 );
        return hc_javascript__goto_label_identifier( state, db, 0 )
    } else {
        state.push_fn( set_production /*148*/, 148 );
        state.push_fn( branch_1aef6b45df2168e6, 148 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__return_statement(state, db, prod){
    scan( state.lexer, 429, 11 );
    if( state.lexer._type  == 131 ){
    consume( state );
    scan( state.lexer, 430, 9 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        state.push_fn( set_production /*149*/, 149 );
        state.push_fn( branch_6bdab82a0e6358f8, 149 );
        return hc_javascript__expression( state, db, 0 )
    } else {
        state.push_fn( set_production /*149*/, 149 );
        state.push_fn( branch_a172f1ead2e33677, 149 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__with_statement(state, db, prod){
    scan( state.lexer, 431, 11 );
    if( state.lexer._type  == 132 ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_3e4fb794d2fb933c, 150 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__throw_statement(state, db, prod){
    scan( state.lexer, 432, 11 );
    if( state.lexer._type  == 133 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
        state.push_fn( branch_fab5b28464651fa3, 151 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__try_statement(state, db, prod){
    scan( state.lexer, 433, 11 );
    if( state.lexer._type  == 134 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    state.push_fn( branch_2fc67da1a9340210, 0 );
    return hc_javascript__block( state, db, 0 )
};
    return - 1
}

function hc_javascript__catch(state, db, prod){
    scan( state.lexer, 69, 11 );
    if( state.lexer._type  == 135 ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_c3841a874700c4e0, 153 );
        return hc_javascript__catch_parameter( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__catch_parameter(state, db, prod){
    scan( state.lexer, 92, 11 );
    if( state.lexer._type  == 16 || state.lexer._type  == 96 ){
    state.push_fn( set_production /*154*/, 154 );
    state.push_fn( set_production /*0*/, 154 );
    return hc_javascript__binding_pattern( state, db, 0 )
} else {
    state.push_fn( set_production /*154*/, 154 );
    state.push_fn( set_production /*0*/, 154 );
    return hc_javascript__binding_identifier( state, db, 0 )
};
    return - 1
}

function hc_javascript__finally(state, db, prod){
    scan( state.lexer, 434, 11 );
    if( state.lexer._type  == 136 ){
    consume( state );
    scan( state.lexer, 12, 11 );
    if( ( state.lexer._type  == 16 ) ){
        state.push_fn( branch_06693284d683e088, 155 );
        return hc_javascript__block( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__debugger_statement(state, db, prod){
    scan( state.lexer, 435, 11 );
    if( state.lexer._type  == 137 ){
    consume( state );
    scan( state.lexer, 222, 11 );
    if( ( state.lexer._type  == 17 || state.lexer._type  == 18 || state.lexer._type  == 66 || state.lexer._type  == 1 ) ){
        state.push_fn( branch_2cf39bda1bef37de, 156 );
        return hc_javascript__asi( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__declaration(state, db, prod){
    scan( state.lexer, 436, 11 );
    if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
    state.push_fn( set_production /*157*/, 157 );
    state.push_fn( set_production /*0*/, 157 );
    return hc_javascript__hoistable_declaration( state, db, 0 )
} else if( state.lexer._type  == 125 || state.lexer._type  == 126 ){
    state.push_fn( set_production /*157*/, 157 );
    state.push_fn( set_production /*0*/, 157 );
    return hc_javascript__lexical_declaration( state, db, 0 )
} else {
    state.push_fn( set_production /*157*/, 157 );
    state.push_fn( set_production /*0*/, 157 );
    return hc_javascript__class_declaration( state, db, 0 )
};
    return - 1
}

function hc_javascript__class_declaration(state, db, prod){
    scan( state.lexer, 437, 11 );
    if( state.lexer._type  == 138 ){
    consume( state );
    scan( state.lexer, 403, 11 );
    if( state.lexer._type  == 139 ){
        scan( state.lexer, 39, 11 );
        state.push_fn( branch_3e04b31bb2428b1a, 0 );
        return hc_javascript__class_heritage( state, db, 0 )
    } else if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 31, 11 );
        if( isTokenActive( state.lexer._type, 32 ) ){
            state.push_fn( set_production /*158*/, 158 );
            state.push_fn( branch_989668520b64d0f9, 158 );
            return hc_javascript__class_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*158*/, 158 );
            consume( state );
            add_reduce( state, 3, 237 );
            return 0
        }
    } else {
        scan( state.lexer, 278, 11 );
        state.push_fn( branch_31cbf1fc4243461f, 0 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__class_heritage(state, db, prod){
    scan( state.lexer, 39, 11 );
    if( state.lexer._type  == 139 ){
    consume( state );
    scan( state.lexer, 122, 11 );
    if( ( isTokenActive( state.lexer._type, 303 ) ) ){
        state.push_fn( branch_021e47c347f3394c, 159 );
        return hc_javascript__left_hand_side_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__class_body(state, db, prod){
    scan( state.lexer, 33, 11 );
    if( isTokenActive( state.lexer._type, 438 ) ){
    state.push_fn( hc_javascript__class_body_goto /*hc_javascript__class_body_goto( state, db, 160 )*/, 160 );
    state.push_fn( branch_5cb267bf74038e65, 160 );
    return hc_javascript__class_element( state, db, 0 )
} else if( state.lexer._type  == 17 ){
    state.push_fn( hc_javascript__class_body_goto /*hc_javascript__class_body_goto( state, db, 160 )*/, 160 );
    consume( state );
    add_reduce( state, 1, 239 );
    return 0
};
    return - 1
}

function hc_javascript__class_body_goto(state, db, prod){
    scan( state.lexer, 439, 11 );
    if( isTokenActive( state.lexer._type, 438 ) ){
    state.push_fn( hc_javascript__class_body_goto /*hc_javascript__class_body_goto( state, db, 160 )*/, 160 );
    scan( state.lexer, 440, 11 );
    if( ( isTokenActive( state.lexer._type, 438 ) ) ){
        state.push_fn( branch_7e54fb8dccbd647b, 160 );
        return hc_javascript__class_element( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    return 160
};
    return ( prod  == 160 ) ? prod  : - 1
}

function hc_javascript__class_element(state, db, prod){
    scan( state.lexer, 440, 11 );
    if( isTokenActive( state.lexer._type, 441 ) ){
    state.push_fn( set_production /*161*/, 161 );
    state.push_fn( set_production /*0*/, 161 );
    return hc_javascript__method_definition( state, db, 0 )
} else if( state.lexer._type  == 187393 || state.lexer._type  == 140 || state.lexer._type  == 59 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 442, 11 );
    if( isTokenActive( pk._type, 441 ) ){
        state.lexer._type  = 140;
        state.push_fn( set_production /*161*/, 161 );
        consume( state );
        state.push_fn( branch_4a3561aa31a801e8, 161 );
        return hc_javascript__method_definition( state, db, 0 )
    } else {
        state.lexer._type  = 59;
        state.push_fn( set_production /*161*/, 161 );
        state.push_fn( set_production /*0*/, 161 );
        return hc_javascript__method_definition( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__hoistable_declaration(state, db, prod){
    state.push_fn( set_production /*162*/, 162 );
    return hc_javascript__function_declaration( state, db, 0 )
}

function hc_javascript__property_set_parameter_list(state, db, prod){
    state.push_fn( set_production /*163*/, 163 );
    return hc_javascript__formal_parameter( state, db, 0 )
}

function hc_javascript__function_expression(state, db, prod){
    state.push_fn( branch_36d0fe3e2ce63a99, 164 );
    return hc_javascript__function_declaration( state, db, 0 )
}

function hc_javascript__class_expression(state, db, prod){
    scan( state.lexer, 437, 11 );
    if( state.lexer._type  == 138 ){
    consume( state );
    scan( state.lexer, 403, 11 );
    if( state.lexer._type  == 139 ){
        scan( state.lexer, 39, 11 );
        state.push_fn( branch_54fddfcde161dfcd, 0 );
        return hc_javascript__class_heritage( state, db, 0 )
    } else if( state.lexer._type  == 16 ){
        consume( state );
        scan( state.lexer, 31, 11 );
        if( isTokenActive( state.lexer._type, 32 ) ){
            state.push_fn( set_production /*165*/, 165 );
            state.push_fn( branch_989668520b64d0f9, 165 );
            return hc_javascript__class_body( state, db, 0 )
        } else if( state.lexer._type  == 18 ){
            state.push_fn( set_production /*165*/, 165 );
            consume( state );
            add_reduce( state, 3, 237 );
            return 0
        }
    } else {
        scan( state.lexer, 278, 11 );
        state.push_fn( branch_362fd4881d3ad593, 0 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__regular_expression_literal(state, db, prod){
    scan( state.lexer, 165, 11 );
    if( state.lexer._type  == 10 ){
    consume( state );
    scan( state.lexer, 443, 0 );
    if( state.lexer._type  == 10 ){
        consume( state );
        scan( state.lexer, 166, 9 );
        if( state.lexer._type  == 141 ){
            state.push_fn( set_production /*166*/, 166 );
            state.push_fn( branch_9e01aab23a7c11c1, 166 );
            return hc_default_productions__js_identifier( state, db, 0 )
        } else {
            add_reduce( state, 2, 245 );
            return 166
        }
    } else {
        scan( state.lexer, 444, 281 );
        state.push_fn( branch_f52bf2af079f0e6c, 0 );
        return hc_javascript__regular_expression_literal_list_1056( state, db, 0 )
    }
};
    return - 1
}

function hc_default_productions__js_identifier(state, db, prod){
    scan( state.lexer, 445, 9 );
    if( state.lexer._type  == 141 ){
    consume( state );
    scan( state.lexer, 9, 9 );
    return 167
};
    return - 1
}

function hc_default_productions__js_id_symbols(state, db, prod){
    scan( state.lexer, 446, 9 );
    if( state.lexer._type  == 60 || state.lexer._type  == 61 || state.lexer._type  == 3 ){
    consume( state );
    return hc_default_productions__js_id_symbols_goto( state, db, 168 )
};
    return - 1
}

function hc_default_productions__js_id_symbols_goto(state, db, prod){
    scan( state.lexer, 447, 0 );
    if( state.lexer._type  == 60 ){
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    scan( state.lexer, 448, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 61 ){
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    scan( state.lexer, 449, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    scan( state.lexer, 1, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_default_productions__js_id_symbols_goto /*hc_default_productions__js_id_symbols_goto( state, db, 168 )*/, 168 );
    scan( state.lexer, 450, 0 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 168 ) ? prod  : - 1
}

function hc_javascript__template_literal(state, db, prod){
    scan( state.lexer, 220, 11 );
    if( state.lexer._type  == 142 ){
    consume( state );
    scan( state.lexer, 307, 11 );
    if( state.lexer._type  == 143 ){
        consume( state );
        scan( state.lexer, 157, 11 );
        if( state.lexer._type  == 142 ){
            state.push_fn( hc_javascript__template_literal_goto /*hc_javascript__template_literal_goto( state, db, 169 )*/, 169 );
            consume( state );
            add_reduce( state, 3, 246 );
            return 0
        } else if( state.lexer._type  == 144 ){
            state.push_fn( hc_javascript__template_literal_goto /*hc_javascript__template_literal_goto( state, db, 175 )*/, 175 );
            consume( state );
            add_reduce( state, 3, 248 );
            return 0
        }
    }
};
    return - 1
}

function hc_javascript__template_literal_goto(state, db, prod){
    scan( state.lexer, 110, 11 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
    state.push_fn( branch_e58fb523d7e39a7a, 169 );
    return hc_javascript__expression( state, db, 0 )
};
    return ( prod  == 169 ) ? prod  : - 1
}

function hc_javascript__no_substitute_template(state, db, prod){
    scan( state.lexer, 220, 11 );
    if( state.lexer._type  == 142 ){
    consume( state );
    scan( state.lexer, 307, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 220, 11 );
        if( ( state.lexer._type  == 142 ) ){
            consume( state );
            add_reduce( state, 3, 246 );
            return 170
        }
    }
};
    return - 1
}

function hc_javascript__template_string(state, db, prod){
    scan( state.lexer, 451, 281 );
    if( state.lexer._type  == 144 || state.lexer._type  == 142 ){
    state.lexer.setToken( state.lexer._type, 0, 0 );
    consume( state );
    return 171
} else {
    scan( state.lexer, 452, 281 );
    state.push_fn( branch_d447fb493a7a981a, 0 );
    return hc_javascript__template_string_list_1088( state, db, 0 )
};
    return - 1
}

function hc_javascript__template_string_data(state, db, prod){
    scan( state.lexer, 452, 281 );
    if( state.lexer._type  == 65 ){
    state.push_fn( set_production /*172*/, 172 );
    state.push_fn( set_production /*0*/, 172 );
    return hc_javascript__template_escaped_sequence( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 236 ) ){
    consume( state );
    return 172
};
    return - 1
}

function hc_javascript__template_escaped_sequence(state, db, prod){
    scan( state.lexer, 293, 11 );
    if( state.lexer._type  == 65 ){
    consume( state );
    scan( state.lexer, 294, 453 );
    if( state.lexer._type  == 3 || state.lexer._type  == 8 || state.lexer._type  == 2 || state.lexer._type  == 5 ){
        consume( state );
        add_reduce( state, 2, 12 );
        return 173
    }
};
    return - 1
}

function hc_javascript__substitute_template(state, db, prod){
    state.push_fn( branch_9db3115235becfe6, 174 );
    return hc_javascript__template_head( state, db, 0 )
}

function hc_javascript__template_head(state, db, prod){
    scan( state.lexer, 220, 11 );
    if( state.lexer._type  == 142 ){
    consume( state );
    scan( state.lexer, 307, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 454, 11 );
        if( ( state.lexer._type  == 144 ) ){
            consume( state );
            add_reduce( state, 3, 248 );
            return 175
        }
    }
};
    return - 1
}

function hc_javascript__template_spans(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 307, 11 );
    if( state.lexer._type  == 143 ){
        consume( state );
        scan( state.lexer, 157, 11 );
        if( state.lexer._type  == 142 ){
            state.push_fn( hc_javascript__template_spans_goto /*hc_javascript__template_spans_goto( state, db, 176 )*/, 176 );
            consume( state );
            add_reduce( state, 3, 250 );
            add_reduce( state, 1, 1 );
            return 0
        } else if( state.lexer._type  == 144 ){
            state.push_fn( hc_javascript__template_spans_goto /*hc_javascript__template_spans_goto( state, db, 179 )*/, 179 );
            consume( state );
            add_reduce( state, 3, 252 );
            return 0
        }
    }
};
    return - 1
}

function hc_javascript__template_spans_goto(state, db, prod){
    switch(prod){
    case 178: 
    {
        scan( state.lexer, 15, 11 );
        if( state.lexer._type  == 18 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_4b0c1b846c575618, 178 );
            state.push_fn( branch_336b56052286e267, 176 );
            return 0
        };
        break
    }
    break;
    case 179: 
    {
        scan( state.lexer, 110, 11 );
        if( ( isTokenActive( state.lexer._type, 54 ) ) ){
            state.push_fn( branch_55aa503dfc5a7a4e, 178 );
            return hc_javascript__expression( state, db, 0 )
        };
        break
    }
    break;
    default: 
    break
};
    return ( prod  == 176 ) ? prod  : - 1
}

function hc_javascript__template_tail(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 307, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 220, 11 );
        if( ( state.lexer._type  == 142 ) ){
            consume( state );
            add_reduce( state, 3, 250 );
            return 177
        }
    }
};
    return - 1
}

function hc_javascript__template_middle_list(state, db, prod){
    state.push_fn( branch_ebe29aecfc6c6055, 178 );
    return hc_javascript__template_middle( state, db, 0 )
}

function hc_javascript__template_middle_list_goto(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    var fk1 = state.fork( db );;
    fk1.push_fn( branch_aa62b7909b6e6fe4, 178 );
    state.push_fn( set_production /*178*/, 178 );
    return 0
};
    return ( prod  == 178 ) ? prod  : - 1
}

function hc_javascript__template_middle(state, db, prod){
    scan( state.lexer, 15, 11 );
    if( state.lexer._type  == 18 ){
    consume( state );
    scan( state.lexer, 307, 11 );
    if( ( state.lexer._type  == 143 ) ){
        consume( state );
        scan( state.lexer, 454, 11 );
        if( ( state.lexer._type  == 144 ) ){
            consume( state );
            add_reduce( state, 3, 252 );
            return 179
        }
    }
};
    return - 1
}

function hc_javascript__parenthesized(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 110, 11 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
        state.push_fn( branch_38a5d88cc49859fa, 180 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__identifier_name(state, db, prod){
    scan( state.lexer, 278, 11 );
    if( state.lexer._type  == 59 ){
    consume( state );
    scan( state.lexer, 11, 11 );
    add_reduce( state, 1, 118 );
    return 181
};
    return - 1
}

function hc_javascript__super_property(state, db, prod){
    scan( state.lexer, 455, 11 );
    if( state.lexer._type  == 145 ){
    consume( state );
    scan( state.lexer, 456, 11 );
    if( state.lexer._type  == 98 ){
        state.push_fn( set_production /*182*/, 182 );
        consume( state );
        state.push_fn( branch_968d2bd6f0ff599a, 182 );
        return hc_javascript__identifier_name( state, db, 0 )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( set_production /*182*/, 182 );
        consume( state );
        state.push_fn( branch_771b37a26d9f2dd6, 182 );
        return hc_javascript__expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__meta_property(state, db, prod){
    scan( state.lexer, 457, 11 );
    if( state.lexer._type  == 99 ){
    state.push_fn( set_production /*183*/, 183 );
    state.push_fn( set_production /*0*/, 183 );
    return hc_javascript__new_target( state, db, 0 )
} else {
    state.push_fn( set_production /*183*/, 183 );
    state.push_fn( set_production /*0*/, 183 );
    return hc_javascript__import_meta( state, db, 0 )
};
    return - 1
}

function hc_javascript__new_target(state, db, prod){
    scan( state.lexer, 458, 11 );
    if( state.lexer._type  == 99 ){
    consume( state );
    scan( state.lexer, 219, 11 );
    if( ( state.lexer._type  == 98 ) ){
        consume( state );
        scan( state.lexer, 304, 11 );
        if( ( state.lexer._type  == 146 ) ){
            consume( state );
            add_reduce( state, 3, 256 );
            return 184
        }
    }
};
    return - 1
}

function hc_javascript__import_meta(state, db, prod){
    scan( state.lexer, 275, 11 );
    if( state.lexer._type  == 13 ){
    consume( state );
    scan( state.lexer, 219, 11 );
    if( ( state.lexer._type  == 98 ) ){
        consume( state );
        scan( state.lexer, 274, 11 );
        if( ( state.lexer._type  == 51 ) ){
            consume( state );
            add_reduce( state, 3, 257 );
            return 185
        }
    }
};
    return - 1
}

function hc_javascript__arguments(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 44, 9 );
    if( isTokenActive( state.lexer._type, 369 ) ){
        scan( state.lexer, 459, 11 );
        state.push_fn( branch_40ae507d79a220a3, 0 );
        return hc_javascript__argument_list( state, db, 0 )
    } else if( state.lexer._type  == 58 ){
        state.push_fn( set_production /*186*/, 186 );
        consume( state );
        scan( state.lexer, 10, 11 );
        if( ( state.lexer._type  == 113 ) ){
            consume( state );
            add_reduce( state, 3, 259 );
            return 0
        };
        return - 1
    } else if( state.lexer._type  == 113 ){
        state.push_fn( set_production /*186*/, 186 );
        consume( state );
        add_reduce( state, 2, 259 );
        return 0
    }
};
    return - 1
}

function hc_javascript__argument_list(state, db, prod){
    scan( state.lexer, 459, 11 );
    if( isTokenActive( state.lexer._type, 54 ) ){
    state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
    state.push_fn( branch_5cb267bf74038e65, 187 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else {
    state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
    state.push_fn( branch_5cb267bf74038e65, 187 );
    return hc_javascript__argument_list_group_1152_1_( state, db, 0 )
};
    return - 1
}

function hc_javascript__argument_list_goto(state, db, prod){
    scan( state.lexer, 64, 11 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 313, 9 );
    if( isTokenActive( pk._type, 54 ) ){
        state.lexer._type  = 149;
        state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 187 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else {
        state.lexer._type  = 111;
        state.push_fn( hc_javascript__argument_list_goto /*hc_javascript__argument_list_goto( state, db, 187 )*/, 187 );
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 187 );
        return hc_javascript__argument_list_group_1152_1_( state, db, 0 )
    }
};
    return ( prod  == 187 ) ? prod  : - 1
}

function hc_javascript__call_expression(state, db, prod){
    scan( state.lexer, 122, 11 );
    if( isTokenActive( state.lexer._type, 460 ) ){
    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
    state.push_fn( set_production /*0*/, 188 );
    return hc_javascript__cover_call_expression_and_async_arrow_head( state, db, 0 )
} else if( state.lexer._type  == 145 ){
    consume( state );
    scan( state.lexer, 305, 11 );
    if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
        state.push_fn( branch_ccb7e21bf7959db5, 188 );
        return hc_javascript__arguments( state, db, 0 )
    } else if( state.lexer._type  == 98 ){
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
        consume( state );
        state.push_fn( branch_968d2bd6f0ff599a, 75 );
        return hc_javascript__identifier_name( state, db, 0 )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
        consume( state );
        state.push_fn( branch_771b37a26d9f2dd6, 75 );
        return hc_javascript__expression( state, db, 0 )
    }
} else if( state.lexer._type  == 13 ){
    consume( state );
    scan( state.lexer, 306, 11 );
    if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
        consume( state );
        state.push_fn( branch_21ae27b721c01292, 188 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 98 ){
        state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
        consume( state );
        scan( state.lexer, 274, 11 );
        if( ( state.lexer._type  == 51 ) ){
            consume( state );
            add_reduce( state, 3, 257 );
            return 0
        };
        return - 1
    }
};
    return - 1
}

function hc_javascript__call_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                scan( state.lexer, 461, 11 );
                if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 462, 11 );
                if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__call_expression_goto /*hc_javascript__call_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 188 ) ? prod  : - 1
}

function hc_javascript__super_call(state, db, prod){
    scan( state.lexer, 455, 11 );
    if( state.lexer._type  == 145 ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        state.push_fn( branch_2b488808e04475e7, 189 );
        return hc_javascript__arguments( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__import_call(state, db, prod){
    scan( state.lexer, 275, 11 );
    if( state.lexer._type  == 13 ){
    consume( state );
    scan( state.lexer, 41, 11 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_da4c9bd7a10f970a, 190 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__cover_call_expression_and_async_arrow_head(state, db, prod){
    state.push_fn( branch_76299b8f840122e3, 191 );
    return hc_javascript__member_expression( state, db, 0 )
}

function hc_javascript__optional_expression(state, db, prod){
    scan( state.lexer, 122, 11 );
    if( isTokenActive( state.lexer._type, 303 ) ){
    scan( state.lexer, 350, 9 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__boolean_literal( state, db, prod )
    } else if( state.lexer._type  == 116 || state.lexer._type  == 117 ){
        state.push_fn( branch_763fccf57c935b99, 75 );
        return hc_javascript__function_declaration( state, db, prod )
    } else if( state.lexer._type  == 99 ){
        consume( state );
        scan( state.lexer, 302, 9 );
        if( isTokenActive( state.lexer._type, 303 ) ){
            scan( state.lexer, 122, 11 );
            state.push_fn( branch_301ee0f2b94f32bf, 0 );
            return hc_javascript__member_expression( state, db, 0 )
        } else if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 304, 11 );
            if( ( state.lexer._type  == 146 ) ){
                consume( state );
                add_reduce( state, 3, 256 );
                return 0
            };
            return - 1
        }
    } else if( state.lexer._type  == 100 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__primary_expression( state, db, prod )
    } else if( state.lexer._type  == 145 ){
        consume( state );
        scan( state.lexer, 305, 11 );
        if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_968d2bd6f0ff599a, 75 );
            return hc_javascript__identifier_name( state, db, 0 )
        } else if( state.lexer._type  == 96 ){
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            state.push_fn( branch_771b37a26d9f2dd6, 75 );
            return hc_javascript__expression( state, db, 0 )
        } else {
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
            state.push_fn( branch_ccb7e21bf7959db5, 188 );
            return hc_javascript__arguments( state, db, 0 )
        }
    } else if( state.lexer._type  == 138 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__class_expression( state, db, prod )
    } else if( state.lexer._type  == 13 ){
        consume( state );
        scan( state.lexer, 306, 11 );
        if( state.lexer._type  == 98 ){
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
            consume( state );
            scan( state.lexer, 274, 11 );
            if( ( state.lexer._type  == 51 ) ){
                consume( state );
                add_reduce( state, 3, 257 );
                return 0
            };
            return - 1
        } else if( state.lexer._type  == 36 ){
            state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
            consume( state );
            state.push_fn( branch_21ae27b721c01292, 188 );
            return hc_javascript__assignment_expression( state, db, 0 )
        }
    } else if( state.lexer._type  == 103 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__null_literal( state, db, prod )
    } else if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        return hc_javascript__string_literal( state, db, prod )
    } else if( state.lexer._type  == 105 || state.lexer._type  == 106 ){
        state.push_fn( branch_7963971efdf766ce, 75 );
        return hc_javascript__hex_token( state, db, prod )
    } else if( state.lexer._type  == 107 || state.lexer._type  == 108 ){
        state.push_fn( branch_7963971efdf766ce, 75 );
        return hc_javascript__octal_token( state, db, prod )
    } else if( state.lexer._type  == 109 || state.lexer._type  == 110 ){
        state.push_fn( branch_7963971efdf766ce, 75 );
        return hc_javascript__binary_token( state, db, prod )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__array_literal( state, db, prod )
    } else if( state.lexer._type  == 16 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__object_literal( state, db, prod )
    } else if( state.lexer._type  == 10 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__regular_expression_literal( state, db, prod )
    } else if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( branch_0420b34e5168643c, 75 );
        return hc_javascript__parenthesized( state, db, prod )
    } else if( state.lexer._type  == 27 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_html__TAG( state, db, prod )
    } else if( state.lexer._type  == 142 ){
        consume( state );
        scan( state.lexer, 307, 11 );
        if( state.lexer._type  == 143 ){
            consume( state );
            scan( state.lexer, 157, 11 );
            if( state.lexer._type  == 142 ){
                state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                consume( state );
                add_reduce( state, 3, 246 );
                return 0
            } else if( state.lexer._type  == 144 ){
                state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 175 )*/, 175 );
                consume( state );
                add_reduce( state, 3, 248 );
                return 0
            }
        }
    } else if( state.lexer._type  == 59 ){
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
        state.push_fn( set_production /*0*/, 75 );
        return hc_javascript__identifier_reference( state, db, prod )
    } else {
        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 84 )*/, 84 );
        state.push_fn( set_production /*0*/, 84 );
        return hc_javascript__int_token( state, db, prod )
    }
};
    return - 1
}

function hc_javascript__optional_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 75: 
            {
                scan( state.lexer, 463, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 75 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 75 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 75 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_388c23e0a1f966be, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 83: 
            {
                scan( state.lexer, 320, 9 );
                if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 321, 11 );
                    if( ( state.lexer._type  == 186 || state.lexer._type  == 187 ) ){
                        state.push_fn( branch_fd8f81791ec2ac30, 75 );
                        return hc_javascript__scientific_token_group_593_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    add_reduce( state, 1, 98 );
                    prod = 75;
                    continue
                };
                break
            }
            break;
            case 84: 
            {
                scan( state.lexer, 322, 9 );
                if( state.lexer._type  == 104 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 75 )*/, 75 );
                    scan( state.lexer, 142, 11 );
                    consume( state );
                    add_reduce( state, 2, 14 );
                    add_reduce( state, 1, 99 );
                    return 0
                } else if( state.lexer._type  == 98 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 323, 11 );
                    if( pk._type  == 5 ){
                        state.lexer._type  = 98;
                        state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 83 )*/, 83 );
                        scan( state.lexer, 219, 11 );
                        if( ( state.lexer._type  == 98 ) ){
                            state.push_fn( branch_60d1f22634e1d8d8, 83 );
                            return hc_javascript__float_token_group_597_0_( state, db, 0 )
                        };
                        return - 1
                    } else {
                        scan( state.lexer, 11, 11 );
                        add_reduce( state, 1, 14 );
                        prod = 83;
                        continue
                    }
                } else {
                    scan( state.lexer, 11, 11 );
                    add_reduce( state, 1, 14 );
                    prod = 83;
                    continue
                };
                break
            }
            break;
            case 175: 
            {
                scan( state.lexer, 110, 11 );
                if( ( isTokenActive( state.lexer._type, 54 ) ) ){
                    state.push_fn( branch_517ebbc64d1522d8, 75 );
                    return hc_javascript__expression( state, db, 0 )
                };
                break
            }
            break;
            case 188: 
            {
                scan( state.lexer, 463, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 188 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 188 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 188 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 188 )*/, 188 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_f9175d9ff9da1d77, 188 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            case 192: 
            {
                scan( state.lexer, 464, 11 );
                if( state.lexer._type  == 147 ){
                    state.push_fn( hc_javascript__optional_expression_goto /*hc_javascript__optional_expression_goto( state, db, 192 )*/, 192 );
                    scan( state.lexer, 217, 11 );
                    if( ( state.lexer._type  == 147 ) ){
                        state.push_fn( branch_15fb703721f556f9, 192 );
                        return hc_javascript__optional_chain( state, db, 0 )
                    };
                    return - 1
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 192 ) ? prod  : - 1
}

function hc_javascript__optional_chain(state, db, prod){
    scan( state.lexer, 217, 11 );
    if( state.lexer._type  == 147 ){
    consume( state );
    scan( state.lexer, 465, 11 );
    if( state.lexer._type  == 36 ){
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        state.push_fn( branch_c417a0113f98071e, 193 );
        return hc_javascript__arguments( state, db, 0 )
    } else if( state.lexer._type  == 96 ){
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        consume( state );
        state.push_fn( branch_d2f9c0255f04782b, 193 );
        return hc_javascript__expression( state, db, 0 )
    } else if( state.lexer._type  == 142 ){
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        state.push_fn( branch_c417a0113f98071e, 193 );
        return hc_javascript__template_literal( state, db, 0 )
    } else {
        state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
        state.push_fn( branch_c417a0113f98071e, 193 );
        return hc_javascript__identifier_name( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__optional_chain_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 193: 
            {
                scan( state.lexer, 353, 11 );
                if( state.lexer._type  == 36 ){
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    scan( state.lexer, 41, 11 );
                    if( ( state.lexer._type  == 36 ) ){
                        state.push_fn( branch_b83e3d5a44bbe4a5, 193 );
                        return hc_javascript__arguments( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 96 ){
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    scan( state.lexer, 218, 11 );
                    consume( state );
                    state.push_fn( branch_2ec447559632659b, 193 );
                    return hc_javascript__expression( state, db, 0 )
                } else if( state.lexer._type  == 98 ){
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    scan( state.lexer, 219, 11 );
                    consume( state );
                    state.push_fn( branch_d67a8a460d48d673, 193 );
                    return hc_javascript__identifier_name( state, db, 0 )
                } else if( state.lexer._type  == 142 ){
                    state.push_fn( hc_javascript__optional_chain_goto /*hc_javascript__optional_chain_goto( state, db, 193 )*/, 193 );
                    scan( state.lexer, 220, 11 );
                    if( ( state.lexer._type  == 142 ) ){
                        state.push_fn( branch_fe54af1b3098ac8a, 193 );
                        return hc_javascript__template_literal( state, db, 0 )
                    };
                    return - 1
                } else {
                    return 193
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 193 ) ? prod  : - 1
}

function hc_javascript__await_expression(state, db, prod){
    scan( state.lexer, 466, 11 );
    if( state.lexer._type  == 123 ){
    consume( state );
    scan( state.lexer, 327, 11 );
    if( ( isTokenActive( state.lexer._type, 328 ) ) ){
        state.push_fn( branch_f224a880018b9ca0, 194 );
        return hc_javascript__unary_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__coalesce_expression(state, db, prod){
    state.push_fn( hc_javascript__coalesce_expression_goto /*hc_javascript__coalesce_expression_goto( state, db, 195 )*/, 195 );
    return hc_javascript__bitwise_or_expression( state, db, 0 )
}

function hc_javascript__coalesce_expression_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 195: 
            {
                scan( state.lexer, 467, 11 );
                if( state.lexer._type  == 148 ){
                    state.push_fn( hc_javascript__coalesce_expression_goto /*hc_javascript__coalesce_expression_goto( state, db, 195 )*/, 195 );
                    scan( state.lexer, 225, 11 );
                    consume( state );
                    state.push_fn( branch_ee466a99e81a0795, 195 );
                    return hc_javascript__bitwise_or_expression( state, db, 0 )
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 195 ) ? prod  : - 1
}

function hc_javascript__yield_expression(state, db, prod){
    scan( state.lexer, 468, 11 );
    if( state.lexer._type  == 149 ){
    consume( state );
    scan( state.lexer, 469, 67 );
    if( isTokenActive( state.lexer._type, 54 ) ){
        state.push_fn( set_production /*196*/, 196 );
        state.push_fn( branch_bb4f5446f0577f53, 196 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 62 ){
        state.push_fn( set_production /*196*/, 196 );
        consume( state );
        state.push_fn( branch_1e127a48a1672c9c, 196 );
        return hc_javascript__assignment_expression( state, db, 0 )
    } else if( state.lexer._type  == 7 ){
        state.push_fn( set_production /*196*/, 196 );
        consume( state );
        add_reduce( state, 2, 269 );
        return 0
    }
};
    return - 1
}

function hc_javascript__arrow_function(state, db, prod){
    scan( state.lexer, 309, 11 );
    if( state.lexer._type  == 116 ){
    state.push_fn( set_production /*197*/, 197 );
    consume( state );
    state.push_fn( branch_9f4d101a511d592f, 197 );
    return hc_javascript__arrow_parameters( state, db, 0 )
} else {
    state.push_fn( set_production /*197*/, 197 );
    state.push_fn( branch_b90d0bc4f53c5817, 197 );
    return hc_javascript__arrow_parameters( state, db, 0 )
};
    return - 1
}

function hc_javascript__arrow_parameters(state, db, prod){
    scan( state.lexer, 312, 11 );
    if( state.lexer._type  == 36 ){
    state.push_fn( set_production /*198*/, 198 );
    state.push_fn( branch_3e004bbc82c6990d, 198 );
    return hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list( state, db, 0 )
} else {
    state.push_fn( set_production /*198*/, 198 );
    state.push_fn( branch_355e2ba0fc376e37, 198 );
    return hc_javascript__identifier_reference( state, db, 0 )
};
    return - 1
}

function hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list(state, db, prod){
    scan( state.lexer, 41, 11 );
    if( state.lexer._type  == 36 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 313, 9 );
    if( isTokenActive( pk._type, 54 ) ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_b783b5cb51598712, 199 );
        state.push_fn( branch_29b41779382392c1, 199 );
        return 0
    } else if( pk._type  == 113 ){
        state.lexer._type  = 36;
        state.push_fn( set_production /*199*/, 199 );
        consume( state );
        scan( state.lexer, 10, 11 );
        if( ( state.lexer._type  == 113 ) ){
            consume( state );
            add_reduce( state, 2, 276 );
            return 0
        };
        return - 1
    } else {
        consume( state );
        scan( state.lexer, 470, 9 );
        if( state.lexer._type  == 111 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_a482dbda69dcd2d2, 199 );
            state.push_fn( branch_c04d6aedfb4a9a16, 199 );
            return 0
        }
    }
};
    return - 1
}

function hc_javascript__concise_body(state, db, prod){
    scan( state.lexer, 110, 11 );
    if( isTokenActive( state.lexer._type, 471 ) ){
    state.push_fn( set_production /*200*/, 200 );
    state.push_fn( set_production /*0*/, 200 );
    return hc_javascript__assignment_expression( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    state.push_fn( set_production /*200*/, 200 );
    consume( state );
    state.push_fn( branch_6b6bbb456d65602e, 200 );
    return hc_javascript__function_statement_list( state, db, 0 )
};
    return - 1
}

function hc_javascript__assignment_operator(state, db, prod){
    scan( state.lexer, 213, 11 );
    if( isTokenActive( state.lexer._type, 212 ) ){
    consume( state );
    return 201
};
    return - 1
}

function hc_css__CSS(state, db, prod){
    state.push_fn( set_production /*202*/, 202 );
    return hc_css__STYLE_SHEET( state, db, 0 )
}

function hc_css__STYLE_SHEET(state, db, prod){
    scan( state.lexer, 472, 21 );
    if( state.lexer._type  == 57 ){
    state.push_fn( set_production /*203*/, 203 );
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 0
} else if( isTokenActive( state.lexer._type, 156 ) ){
    state.push_fn( set_production /*203*/, 203 );
    state.push_fn( branch_6e2c267667c82014, 203 );
    return hc_css__STYLE_SHEET_list_1281( state, db, 0 )
} else if( state.lexer._type  == 166 ){
    scan( state.lexer, 473, 21 );
    state.push_fn( branch_d16c2bdba3d67072, 0 );
    return hc_css__STYLE_SHEET_list_1280( state, db, 0 )
};
    state.lexer.setToken( 2, 0, 0 );
    consume( state );
    return 203
}

function hc_css__import(state, db, prod){
    scan( state.lexer, 473, 21 );
    if( state.lexer._type  == 166 ){
    consume( state );
    scan( state.lexer, 474, 21 );
    if( state.lexer._type  == 167 ){
        scan( state.lexer, 475, 21 );
        state.push_fn( branch_e11dfbf600bc335f, 0 );
        return hc_css__url( state, db, 0 )
    } else {
        scan( state.lexer, 150, 21 );
        state.push_fn( branch_65677324ec109fc4, 0 );
        return hc_css__import_group_1283_0_( state, db, 0 )
    }
};
    return - 1
}

function hc_css__string(state, db, prod){
    scan( state.lexer, 150, 21 );
    if( state.lexer._type  == 33 ){
    state.push_fn( set_production /*205*/, 205 );
    consume( state );
    state.push_fn( branch_fc6c3c68168bfd69, 205 );
    return hc_css__string_value( state, db, 0 )
} else if( state.lexer._type  == 32 ){
    state.push_fn( set_production /*205*/, 205 );
    consume( state );
    scan( state.lexer, 238, 21 );
    if( ( state.lexer._type  == 23 ) ){
        consume( state );
        scan( state.lexer, 476, 21 );
        if( ( state.lexer._type  == 32 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 0
        }
    };
    return - 1
};
    return - 1
}

function hc_css__url(state, db, prod){
    scan( state.lexer, 475, 21 );
    if( state.lexer._type  == 167 ){
    consume( state );
    scan( state.lexer, 477, 21 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_22ce1f363dc8b465, 206 );
        return hc_css__string( state, db, 0 )
    }
};
    return - 1
}

function hc_css__supports_condition(state, db, prod){
    scan( state.lexer, 478, 21 );
    if( state.lexer._type  == 168 ){
    state.push_fn( set_production /*207*/, 207 );
    consume( state );
    state.push_fn( branch_f8caa5d0bfd04c67, 207 );
    return hc_css__supports_in_parens( state, db, 0 )
} else {
    scan( state.lexer, 479, 21 );
    state.push_fn( branch_e37260b0e4ace2a1, 0 );
    return hc_css__supports_in_parens( state, db, 0 )
};
    return - 1
}

function hc_css__supports_in_parens(state, db, prod){
    scan( state.lexer, 479, 21 );
    if( state.lexer._type  == 36 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 480, 21 );
    if( pk._type  == 168 || pk._type  == 36 || pk._type  == 170 || pk._type  == 169 ){
        state.lexer._type  = 36;
        state.push_fn( set_production /*208*/, 208 );
        consume( state );
        state.push_fn( branch_6ecaae111f21bbc9, 208 );
        return hc_css__supports_condition( state, db, 0 )
    } else {
        state.lexer._type  = 36;
        state.push_fn( set_production /*208*/, 208 );
        state.push_fn( set_production /*0*/, 208 );
        return hc_css__supports_feature( state, db, 0 )
    }
} else if( state.lexer._type  == 169 ){
    state.push_fn( set_production /*208*/, 208 );
    state.push_fn( set_production /*0*/, 208 );
    return hc_css__supports_feature( state, db, 0 )
} else {
    state.push_fn( set_production /*208*/, 208 );
    state.push_fn( set_production /*0*/, 208 );
    return hc_css__general_enclosed( state, db, 0 )
};
    return - 1
}

function hc_css__supports_feature(state, db, prod){
    scan( state.lexer, 481, 21 );
    if( state.lexer._type  == 36 ){
    state.push_fn( set_production /*209*/, 209 );
    state.push_fn( set_production /*0*/, 209 );
    return hc_css__supports_decl( state, db, 0 )
} else {
    state.push_fn( set_production /*209*/, 209 );
    state.push_fn( set_production /*0*/, 209 );
    return hc_css__supports_feature_fn( state, db, 0 )
};
    return - 1
}

function hc_css__supports_feature_fn(state, db, prod){
    scan( state.lexer, 482, 21 );
    if( state.lexer._type  == 169 ){
    consume( state );
    scan( state.lexer, 477, 21 );
    if( ( state.lexer._type  == 36 ) ){
        consume( state );
        state.push_fn( branch_31b9023a720b5a97, 210 );
        return hc_css__COMPLEX_SELECTOR( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMPLEX_SELECTOR(state, db, prod){
    state.push_fn( branch_cb7783a52cbd15f2, 0 );
    return hc_css__COMPOUND_SELECTOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR(state, db, prod){
    scan( state.lexer, 483, 21 );
    if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
    scan( state.lexer, 160, 21 );
    state.push_fn( branch_fe3588a9418becd1, 0 );
    return hc_css__COMPOUND_SELECTOR_list_1327( state, db, 0 )
} else if( state.lexer._type  == 62 || state.lexer._type  == 170 ){
    scan( state.lexer, 484, 21 );
    state.push_fn( branch_e31d5d0e35a0686d, 0 );
    return hc_css__TYPE_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 70 ){
    consume( state );
    scan( state.lexer, 161, 30 );
    if( state.lexer._type  == 70 ){
        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 226 )*/, 226 );
        state.push_fn( branch_234af3a3ace7a700, 226 );
        return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
    } else if( state.lexer._type  == 170 ){
        consume( state );
        scan( state.lexer, 485, 28 );
        if( state.lexer._type  == 36 ){
            state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )*/, 299 );
            state.push_fn( branch_a0197a3296fdfafb, 299 );
            return hc_css__PSEUDO_CLASS_SELECTOR_group_1403_0_( state, db, 0 )
        } else {
            add_reduce( state, 2, 311 );
            add_reduce( state, 1, 1 );
            return hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )
        }
    }
};
    return - 1
}

function hc_css__COMPOUND_SELECTOR_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 226: 
            {
                scan( state.lexer, 27, 28 );
                if( state.lexer._type  == 70 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 70, 30 );
                    if( pk._type  == 170 ){
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 300 )*/, 300 );
                        scan( state.lexer, 486, 9 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_9d871c26cf31d6ba, 300 );
                            return hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062( state, db, 0 )
                        };
                        return - 1
                    } else {
                        scan( state.lexer, 28, 28 );
                        add_reduce( state, 1, 355 );
                        add_reduce( state, 1, 1 );
                        prod = 300;
                        continue
                    }
                } else {
                    scan( state.lexer, 28, 28 );
                    add_reduce( state, 1, 355 );
                    add_reduce( state, 1, 1 );
                    prod = 300;
                    continue
                };
                break
            }
            break;
            case 299: 
            {
                scan( state.lexer, 27, 28 );
                if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 29, 30 );
                    if( pk._type  == 170 ){
                        state.lexer._type  = 171;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )*/, 299 );
                        scan( state.lexer, 487, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 70 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 161, 30 );
                    if( pk._type  == 70 ){
                        scan( state.lexer, 96, 21 );
                        state.push_fn( branch_30123d859b6fc832, 0 );
                        return hc_css__COMPOUND_SELECTOR_list_1328( state, db, 0 )
                    } else if( pk._type  == 170 ){
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 299 )*/, 299 );
                        scan( state.lexer, 487, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 8 ){
                    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
                    scan( state.lexer, 21, 30 );
                    consume( state );
                    add_reduce( state, 2, 299 );
                    return 0
                } else {
                    scan( state.lexer, 21, 21 );
                    add_reduce( state, 1, 299 );
                    prod = 212;
                    continue
                };
                break
            }
            break;
            case 300: 
            {
                scan( state.lexer, 27, 28 );
                if( state.lexer._type  == 70 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 96, 21 );
                    if( pk._type  == 70 ){
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 300 )*/, 300 );
                        scan( state.lexer, 486, 9 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 300 );
                            return hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0_( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 8 ){
                    state.push_fn( hc_css__COMPOUND_SELECTOR_goto /*hc_css__COMPOUND_SELECTOR_goto( state, db, 212 )*/, 212 );
                    scan( state.lexer, 21, 30 );
                    consume( state );
                    add_reduce( state, 2, 298 );
                    return 0
                } else {
                    scan( state.lexer, 21, 21 );
                    add_reduce( state, 1, 298 );
                    prod = 212;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 212 ) ? prod  : - 1
}

function hc_css__TYPE_SELECTOR(state, db, prod){
    scan( state.lexer, 484, 21 );
    if( state.lexer._type  == 62 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 488, 28 );
    if( pk._type  == 73 ){
        state.lexer._type  = 62;
        state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 215 )*/, 215 );
        state.push_fn( set_production /*0*/, 215 );
        return hc_css__NS_PREFIX( state, db, prod )
    } else {
        state.lexer._type  = 62;
        state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 213 )*/, 213 );
        consume( state );
        add_reduce( state, 1, 303 );
        return 0
    }
} else if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 489, 30 );
    if( state.lexer._type  == 73 ){
        state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 215 )*/, 215 );
        consume( state );
        add_reduce( state, 2, 14 );
        return 0
    } else {
        add_reduce( state, 1, 305 );
        add_reduce( state, 1, 301 );
        return hc_css__TYPE_SELECTOR_goto( state, db, 213 )
    }
};
    return - 1
}

function hc_css__TYPE_SELECTOR_goto(state, db, prod){
    scan( state.lexer, 484, 21 );
    if( state.lexer._type  == 62 ){
    state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 213 )*/, 213 );
    scan( state.lexer, 490, 21 );
    consume( state );
    add_reduce( state, 2, 302 );
    return 0
} else if( state.lexer._type  == 170 ){
    state.push_fn( hc_css__TYPE_SELECTOR_goto /*hc_css__TYPE_SELECTOR_goto( state, db, 213 )*/, 213 );
    scan( state.lexer, 22, 21 );
    consume( state );
    add_reduce( state, 2, 304 );
    add_reduce( state, 1, 301 );
    return 0
};
    return ( prod  == 213 ) ? prod  : - 1
}

function hc_css__WQ_NAME(state, db, prod){
    scan( state.lexer, 484, 21 );
    if( state.lexer._type  == 62 ){
    state.push_fn( set_production /*214*/, 214 );
    state.push_fn( branch_e9a85b6810b0e90a, 214 );
    return hc_css__NS_PREFIX( state, db, 0 )
} else if( state.lexer._type  == 170 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 491, 28 );
    if( pk._type  == 73 ){
        state.lexer._type  = 170;
        state.push_fn( set_production /*214*/, 214 );
        state.push_fn( branch_e9a85b6810b0e90a, 214 );
        return hc_css__NS_PREFIX( state, db, 0 )
    } else {
        state.lexer._type  = 170;
        state.push_fn( set_production /*214*/, 214 );
        consume( state );
        add_reduce( state, 1, 305 );
        return 0
    }
};
    return - 1
}

function hc_css__NS_PREFIX(state, db, prod){
    scan( state.lexer, 484, 21 );
    if( state.lexer._type  == 62 || state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 492, 21 );
    if( ( state.lexer._type  == 73 ) ){
        consume( state );
        add_reduce( state, 2, 14 );
        return 215
    }
};
    return - 1
}

function hc_css__identifier(state, db, prod){
    state.push_fn( set_production /*216*/, 216 );
    return hc_css__css_id_symbols( state, db, 0 )
}

function hc_css__css_id_symbols(state, db, prod){
    scan( state.lexer, 493, 21 );
    if( state.lexer._type  == 61 || state.lexer._type  == 3 || state.lexer._type  == 88 ){
    consume( state );
    return hc_css__css_id_symbols_goto( state, db, 217 )
};
    return - 1
}

function hc_css__css_id_symbols_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 217: 
            {
                scan( state.lexer, 494, 30 );
                if( state.lexer._type  == 60 ){
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    scan( state.lexer, 495, 30 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 88 ){
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    scan( state.lexer, 496, 30 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 61 ){
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    scan( state.lexer, 497, 30 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 3 ){
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    scan( state.lexer, 498, 30 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else if( state.lexer._type  == 5 ){
                    state.push_fn( hc_css__css_id_symbols_goto /*hc_css__css_id_symbols_goto( state, db, 217 )*/, 217 );
                    scan( state.lexer, 499, 30 );
                    consume( state );
                    add_reduce( state, 2, 0 );
                    return 0
                } else {
                    return 217
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 217 ) ? prod  : - 1
}

function hc_css__SUBCLASS_SELECTOR(state, db, prod){
    scan( state.lexer, 160, 21 );
    if( state.lexer._type  == 171 ){
    state.push_fn( set_production /*218*/, 218 );
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__ID_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 98 ){
    state.push_fn( set_production /*218*/, 218 );
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__CLASS_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 96 ){
    state.push_fn( set_production /*218*/, 218 );
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__ATTRIBUTE_SELECTOR( state, db, 0 )
} else {
    state.push_fn( set_production /*218*/, 218 );
    state.push_fn( set_production /*0*/, 218 );
    return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
};
    return - 1
}

function hc_css__ID_SELECTOR(state, db, prod){
    scan( state.lexer, 500, 21 );
    if( state.lexer._type  == 171 ){
    consume( state );
    scan( state.lexer, 29, 30 );
    if( ( state.lexer._type  == 170 ) ){
        consume( state );
        add_reduce( state, 2, 306 );
        return 219
    }
};
    return - 1
}

function hc_css__CLASS_SELECTOR(state, db, prod){
    scan( state.lexer, 501, 21 );
    if( state.lexer._type  == 98 ){
    consume( state );
    scan( state.lexer, 29, 30 );
    if( ( state.lexer._type  == 170 ) ){
        consume( state );
        add_reduce( state, 2, 307 );
        return 220
    }
};
    return - 1
}

function hc_css__ATTRIBUTE_SELECTOR(state, db, prod){
    scan( state.lexer, 502, 21 );
    if( state.lexer._type  == 96 ){
    consume( state );
    scan( state.lexer, 484, 21 );
    state.push_fn( branch_adeb7e32a8f96ac6, 0 );
    return hc_css__WQ_NAME( state, db, 0 )
};
    return - 1
}

function hc_css__ATTR_MATCHER(state, db, prod){
    scan( state.lexer, 139, 21 );
    if( isTokenActive( state.lexer._type, 138 ) ){
    consume( state );
    return 222
};
    return - 1
}

function hc_css__ATTR_MODIFIER(state, db, prod){
    scan( state.lexer, 503, 21 );
    if( state.lexer._type  == 174 || state.lexer._type  == 175 ){
    consume( state );
    return 223
};
    return - 1
}

function hc_css__PSEUDO_CLASS_SELECTOR(state, db, prod){
    scan( state.lexer, 96, 21 );
    if( state.lexer._type  == 70 ){
    consume( state );
    scan( state.lexer, 29, 30 );
    if( state.lexer._type  == 170 ){
        consume( state );
        scan( state.lexer, 485, 28 );
        if( state.lexer._type  == 36 ){
            state.push_fn( set_production /*224*/, 224 );
            state.push_fn( branch_9d5a7eab51c37cb0, 224 );
            return hc_css__PSEUDO_CLASS_SELECTOR_group_1403_0_( state, db, 0 )
        } else {
            add_reduce( state, 2, 311 );
            return 224
        }
    }
};
    return - 1
}

function hc_css__psuedo_class_value(state, db, prod){
    scan( state.lexer, 240, 30 );
    if( state.lexer._type  == 8 || state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_css__psuedo_class_value_goto( state, db, 225 )
};
    return - 1
}

function hc_css__psuedo_class_value_goto(state, db, prod){
    scan( state.lexer, 240, 30 );
    if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    scan( state.lexer, 21, 30 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    scan( state.lexer, 242, 21 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    scan( state.lexer, 243, 21 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_css__psuedo_class_value_goto /*hc_css__psuedo_class_value_goto( state, db, 225 )*/, 225 );
    scan( state.lexer, 244, 21 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 225 ) ? prod  : - 1
}

function hc_css__PSEUDO_ELEMENT_SELECTOR(state, db, prod){
    scan( state.lexer, 96, 21 );
    if( state.lexer._type  == 70 ){
    consume( state );
    scan( state.lexer, 504, 30 );
    if( ( state.lexer._type  == 70 ) ){
        state.push_fn( branch_954c56e02bee4682, 226 );
        return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMBINATOR(state, db, prod){
    scan( state.lexer, 505, 21 );
    if( state.lexer._type  == 11 || state.lexer._type  == 87 || state.lexer._type  == 94 || state.lexer._type  == 71 ){
    consume( state );
    return 227
};
    return - 1
}

function hc_css__supports_decl(state, db, prod){
    scan( state.lexer, 477, 21 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 506, 21 );
    if( ( state.lexer._type  == 176 ) ){
        state.push_fn( branch_46b2d3dfd3619fb7, 228 );
        return hc_css__declaration( state, db, 0 )
    }
};
    return - 1
}

function hc_css__declaration(state, db, prod){
    scan( state.lexer, 506, 21 );
    if( state.lexer._type  == 176 ){
    consume( state );
    scan( state.lexer, 96, 21 );
    if( state.lexer._type  == 70 ){
        consume( state );
        scan( state.lexer, 507, 21 );
        if( state.lexer._type  == 177 ){
            consume( state );
            scan( state.lexer, 508, 21 );
            if( state.lexer._type  == 35 ){
                state.push_fn( set_production /*229*/, 229 );
                consume( state );
                scan( state.lexer, 509, 21 );
                if( ( state.lexer._type  == 178 ) ){
                    consume( state );
                    add_reduce( state, 5, 313 );
                    return 0
                };
                return - 1
            } else {
                add_reduce( state, 3, 313 );
                return 229
            }
        }
    }
};
    return - 1
}

function hc_css__declaration_id(state, db, prod){
    state.push_fn( set_production /*230*/, 230 );
    return hc_css__css_id_symbols( state, db, 0 )
}

function hc_css__declaration_values_sentineled(state, db, prod){
    state.push_fn( branch_31f56a86ab029b21, 0 );
    return hc_css__declaration_values( state, db, 0 )
}

function hc_css__declaration_values(state, db, prod){
    state.push_fn( hc_css__declaration_values_goto /*hc_css__declaration_values_goto( state, db, 232 )*/, 232 );
    return hc_css__declaration_value( state, db, 0 )
}

function hc_css__declaration_values_goto(state, db, prod){
    scan( state.lexer, 510, 30 );
    if( state.lexer._type  == 36 ){
    state.push_fn( hc_css__declaration_values_goto /*hc_css__declaration_values_goto( state, db, 232 )*/, 232 );
    scan( state.lexer, 477, 21 );
    consume( state );
    state.push_fn( branch_af29ef54a1233fb1, 232 );
    return hc_css__declaration_values( state, db, 0 )
} else if( state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 || state.lexer._type  == 8 ){
    state.push_fn( hc_css__declaration_values_goto /*hc_css__declaration_values_goto( state, db, 232 )*/, 232 );
    scan( state.lexer, 240, 30 );
    if( ( state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 || state.lexer._type  == 8 ) ){
        state.push_fn( branch_c417a0113f98071e, 232 );
        return hc_css__declaration_value( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 232 ) ? prod  : - 1
}

function hc_css__declaration_value(state, db, prod){
    scan( state.lexer, 240, 30 );
    if( state.lexer._type  == 3 || state.lexer._type  == 2 || state.lexer._type  == 5 || state.lexer._type  == 8 ){
    consume( state );
    return 233
};
    return - 1
}

function hc_css__general_enclosed(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 477, 21 );
    if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 511, 28 );
        if( state.lexer._type  == 113 ){
            state.push_fn( set_production /*234*/, 234 );
            consume( state );
            add_reduce( state, 3, 315 );
            return 0
        } else {
            state.push_fn( set_production /*234*/, 234 );
            state.push_fn( branch_a21bd1c476de366a, 234 );
            return hc_css__general_enclosed_list_1464( state, db, 0 )
        }
    }
};
    return - 1
}

function hc_css__import_declaration(state, db, prod){
    state.push_fn( set_production /*235*/, 235 );
    return hc_css__declaration( state, db, 0 )
}

function hc_css__media_query(state, db, prod){
    scan( state.lexer, 512, 21 );
    if( state.lexer._type  == 168 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 513, 21 );
    if( pk._type  == 36 ){
        state.lexer._type  = 168;
        state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
        state.push_fn( branch_961fad18f3f0a5a7, 236 );
        return hc_css__media_condition( state, db, 0 )
    } else {
        pk.next(  );
        scan( pk, 514, 9 );
        if( pk._type  == 36 ){
            state.lexer._type  = 168;
            state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
            state.push_fn( branch_961fad18f3f0a5a7, 236 );
            return hc_css__media_condition( state, db, 0 )
        } else {
            consume( state );
            scan( state.lexer, 22, 21 );
            state.push_fn( branch_a2f849b5d3499ce1, 0 );
            return hc_css__media_type( state, db, 0 )
        }
    }
} else if( state.lexer._type  == 179 ){
    consume( state );
    scan( state.lexer, 22, 21 );
    state.push_fn( branch_a2f849b5d3499ce1, 0 );
    return hc_css__media_type( state, db, 0 )
} else if( state.lexer._type  == 36 ){
    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
    state.push_fn( branch_961fad18f3f0a5a7, 236 );
    return hc_css__media_condition( state, db, 0 )
} else if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 514, 9 );
    if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 511, 28 );
        if( state.lexer._type  == 113 ){
            state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 240 )*/, 240 );
            consume( state );
            add_reduce( state, 3, 315 );
            return 0
        } else {
            state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_a21bd1c476de366a, 240 );
            return hc_css__general_enclosed_list_1464( state, db, 0 )
        }
    } else {
        add_reduce( state, 1, 330 );
        return hc_css__media_query_goto( state, db, 251 )
    }
};
    return - 1
}

function hc_css__media_query_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 240: 
            {
                scan( state.lexer, 515, 9 );
                if( state.lexer._type  == 210 ){
                    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
                    scan( state.lexer, 516, 21 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_bfe024a32ddac392, 236 );
                        return hc_css__media_or_list_1603( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 209 ){
                    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
                    scan( state.lexer, 517, 21 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_bfe024a32ddac392, 236 );
                        return hc_css__media_and_list_1601( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 21, 21 );
                    add_reduce( state, 1, 316 );
                    prod = 236;
                    continue
                };
                break
            }
            break;
            case 251: 
            {
                scan( state.lexer, 132, 9 );
                if( state.lexer._type  == 209 ){
                    state.push_fn( hc_css__media_query_goto /*hc_css__media_query_goto( state, db, 236 )*/, 236 );
                    scan( state.lexer, 517, 21 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_269c43f199e42297, 236 );
                        return hc_css__media_query_group_1471_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 21, 21 );
                    add_reduce( state, 1, 316 );
                    prod = 236;
                    continue
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 236 ) ? prod  : - 1
}

function hc_css__media_condition(state, db, prod){
    scan( state.lexer, 518, 21 );
    if( state.lexer._type  == 168 ){
    state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 237 )*/, 237 );
    state.push_fn( set_production /*0*/, 237 );
    return hc_css__media_condition_without_or( state, db, 0 )
} else if( state.lexer._type  == 36 || state.lexer._type  == 170 ){
    scan( state.lexer, 513, 21 );
    if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 519, 21 );
        if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
            state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_boolean( state, db, 0 )
        } else if( state.lexer._type  == 168 || state.lexer._type  == 36 ){
            state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_6ecaae111f21bbc9, 240 );
            return hc_css__media_condition( state, db, 0 )
        } else if( state.lexer._type  == 170 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_2e80393084f100d8, 240 );
            var fk2 = state.fork( db );;
            fk2.push_fn( branch_851df6ecabe5ccf2, 240 );
            state.push_fn( branch_d5ffc0a9c64c6b02, 240 );
            return 0
        } else {
            state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_range( state, db, 0 )
        }
    } else {
        state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 240 )*/, 240 );
        state.push_fn( set_production /*0*/, 240 );
        return hc_css__general_enclosed( state, db, prod )
    }
};
    return - 1
}

function hc_css__media_condition_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 240: 
            {
                scan( state.lexer, 515, 9 );
                if( state.lexer._type  == 209 ){
                    state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 237 )*/, 237 );
                    scan( state.lexer, 517, 21 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_ee257523538089b2, 237 );
                        return hc_css__media_and_list_1601( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 210 ){
                    state.push_fn( hc_css__media_condition_goto /*hc_css__media_condition_goto( state, db, 237 )*/, 237 );
                    scan( state.lexer, 516, 21 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_ee257523538089b2, 237 );
                        return hc_css__media_or_list_1603( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 21, 21 );
                    prod = 237;
                    continue
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 237 ) ? prod  : - 1
}

function hc_css__media_condition_without_or(state, db, prod){
    scan( state.lexer, 518, 21 );
    if( state.lexer._type  == 168 ){
    state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 238 )*/, 238 );
    state.push_fn( set_production /*0*/, 238 );
    return hc_css__media_not( state, db, 0 )
} else if( state.lexer._type  == 36 || state.lexer._type  == 170 ){
    scan( state.lexer, 513, 21 );
    if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 519, 21 );
        if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
            state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_boolean( state, db, 0 )
        } else if( state.lexer._type  == 168 || state.lexer._type  == 36 ){
            state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_6ecaae111f21bbc9, 240 );
            return hc_css__media_condition( state, db, 0 )
        } else if( state.lexer._type  == 170 ){
            var fk1 = state.fork( db );;
            fk1.push_fn( branch_9d49a885d0286153, 240 );
            var fk2 = state.fork( db );;
            fk2.push_fn( branch_93f48f717eb1e79d, 240 );
            state.push_fn( branch_4d7fd88348267c40, 240 );
            return 0
        } else {
            state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
            state.push_fn( branch_40e83532064d58de, 240 );
            return hc_css__mf_range( state, db, 0 )
        }
    } else {
        state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 240 )*/, 240 );
        state.push_fn( set_production /*0*/, 240 );
        return hc_css__general_enclosed( state, db, prod )
    }
};
    return - 1
}

function hc_css__media_condition_without_or_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 240: 
            {
                scan( state.lexer, 520, 9 );
                if( state.lexer._type  == 209 ){
                    state.push_fn( hc_css__media_condition_without_or_goto /*hc_css__media_condition_without_or_goto( state, db, 238 )*/, 238 );
                    scan( state.lexer, 517, 21 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_ee257523538089b2, 238 );
                        return hc_css__media_and_list_1601( state, db, 0 )
                    };
                    return - 1
                } else {
                    scan( state.lexer, 21, 21 );
                    prod = 238;
                    continue
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 238 ) ? prod  : - 1
}

function hc_css__media_not(state, db, prod){
    scan( state.lexer, 521, 21 );
    if( state.lexer._type  == 168 ){
    consume( state );
    scan( state.lexer, 513, 21 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_76555673d7c8ae6c, 239 );
        return hc_css__media_in_parenths( state, db, 0 )
    }
};
    return - 1
}

function hc_css__media_in_parenths(state, db, prod){
    scan( state.lexer, 513, 21 );
    if( state.lexer._type  == 36 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 519, 21 );
    if( pk._type  == 5 || pk._type  == 101 || pk._type  == 102 ){
        state.lexer._type  = 36;
        state.push_fn( set_production /*240*/, 240 );
        state.push_fn( set_production /*0*/, 240 );
        return hc_css__media_feature( state, db, 0 )
    } else if( pk._type  == 168 || pk._type  == 36 ){
        state.lexer._type  = 36;
        state.push_fn( set_production /*240*/, 240 );
        consume( state );
        state.push_fn( branch_6ecaae111f21bbc9, 240 );
        return hc_css__media_condition( state, db, 0 )
    } else {
        pk.next(  );
        scan( pk, 522, 21 );
        if( isTokenActive( pk._type, 523 ) ){
            state.lexer._type  = 36;
            state.push_fn( set_production /*240*/, 240 );
            state.push_fn( set_production /*0*/, 240 );
            return hc_css__media_feature( state, db, 0 )
        } else {
            state.lexer._type  = 36;
            state.push_fn( set_production /*240*/, 240 );
            consume( state );
            state.push_fn( branch_6ecaae111f21bbc9, 240 );
            return hc_css__media_condition( state, db, 0 )
        }
    }
} else {
    state.push_fn( set_production /*240*/, 240 );
    state.push_fn( set_production /*0*/, 240 );
    return hc_css__general_enclosed( state, db, 0 )
};
    return - 1
}

function hc_css__media_feature(state, db, prod){
    scan( state.lexer, 477, 21 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 524, 21 );
    if( state.lexer._type  == 101 || state.lexer._type  == 102 ){
        state.push_fn( set_production /*241*/, 241 );
        state.push_fn( branch_40e83532064d58de, 241 );
        return hc_css__mf_boolean( state, db, 0 )
    } else if( state.lexer._type  == 170 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( branch_02c2da985a5a312a, 241 );
        state.push_fn( branch_8a3be2ecdcf47a07, 241 );
        return 0
    } else {
        state.push_fn( set_production /*241*/, 241 );
        state.push_fn( branch_40e83532064d58de, 241 );
        return hc_css__mf_range( state, db, 0 )
    }
};
    return - 1
}

function hc_css__mf_plain(state, db, prod){
    state.push_fn( branch_d066281b5241e9c3, 242 );
    return hc_css__mf_name( state, db, 0 )
}

function hc_css__mf_name(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 21, 21 );
    return 243
};
    return - 1
}

function hc_css__mf_value(state, db, prod){
    scan( state.lexer, 525, 21 );
    if( state.lexer._type  == 5 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 526, 21 );
    if( pk._type  == 10 ){
        state.lexer._type  = 5;
        state.push_fn( set_production /*244*/, 244 );
        state.push_fn( set_production /*0*/, 244 );
        return hc_css__ratio( state, db, 0 )
    } else if( isTokenActive( pk._type, 527 ) ){
        state.lexer._type  = 5;
        state.push_fn( set_production /*244*/, 244 );
        consume( state );
        return 0
    } else {
        state.lexer._type  = 5;
        state.push_fn( set_production /*244*/, 244 );
        state.push_fn( set_production /*0*/, 244 );
        return hc_css__dimension( state, db, 0 )
    }
} else {
    state.push_fn( set_production /*244*/, 244 );
    state.push_fn( set_production /*0*/, 244 );
    return hc_css__mf_name( state, db, 0 )
};
    return - 1
}

function hc_css__dimension(state, db, prod){
    scan( state.lexer, 244, 21 );
    if( state.lexer._type  == 5 ){
    consume( state );
    scan( state.lexer, 242, 21 );
    if( ( state.lexer._type  == 3 ) ){
        consume( state );
        add_reduce( state, 2, 323 );
        return 245
    }
};
    return - 1
}

function hc_css__ratio(state, db, prod){
    scan( state.lexer, 244, 21 );
    if( state.lexer._type  == 5 ){
    consume( state );
    scan( state.lexer, 528, 21 );
    if( ( state.lexer._type  == 10 ) ){
        consume( state );
        scan( state.lexer, 244, 21 );
        if( ( state.lexer._type  == 5 ) ){
            consume( state );
            add_reduce( state, 3, 324 );
            return 246
        }
    }
};
    return - 1
}

function hc_css__mf_boolean(state, db, prod){
    scan( state.lexer, 529, 21 );
    if( state.lexer._type  == 101 ){
    state.push_fn( set_production /*247*/, 247 );
    consume( state );
    add_reduce( state, 1, 325 );
    return 0
} else if( state.lexer._type  == 102 ){
    state.push_fn( set_production /*247*/, 247 );
    consume( state );
    add_reduce( state, 1, 326 );
    return 0
};
    return - 1
}

function hc_css__mf_range(state, db, prod){
    scan( state.lexer, 525, 21 );
    if( state.lexer._type  == 170 ){
    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 243 )*/, 243 );
    state.push_fn( set_production /*0*/, 243 );
    return hc_css__mf_name( state, db, prod )
} else {
    scan( state.lexer, 525, 21 );
    state.push_fn( branch_0649ffc971b3f0f3, 0 );
    return hc_css__mf_value( state, db, 0 )
};
    return - 1
}

function hc_css__mf_range_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 243: 
            {
                scan( state.lexer, 23, 21 );
                if( state.lexer._type  == 14 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 525, 21 );
                    if( pk._type  == 5 ){
                        state.lexer._type  = 14;
                        state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                        scan( state.lexer, 530, 21 );
                        consume( state );
                        state.push_fn( branch_0d049e4db4484b03, 248 );
                        return hc_css__mf_value( state, db, 0 )
                    } else if( pk._type  == 170 ){
                        pk.next(  );
                        scan( pk, 23, 21 );
                        if( isTokenActive( pk._type, 531 ) ){
                            pk.next(  );
                            scan( pk, 525, 21 );
                            if( pk._type  == 5 || pk._type  == 170 ){
                                pk.next(  );
                                scan( pk, 526, 21 );
                                if( pk._type  == 113 || pk._type  == - 1 ){
                                    state.lexer._type  = 14;
                                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                                    scan( state.lexer, 530, 21 );
                                    consume( state );
                                    state.push_fn( branch_0d049e4db4484b03, 248 );
                                    return hc_css__mf_value( state, db, 0 )
                                } else if( isTokenActive( pk._type, 532 ) ){
                                    pk.next(  );
                                    scan( pk, 22, 21 );
                                    if( pk._type  == 170 ){
                                        state.lexer._type  = 14;
                                        state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                                        scan( state.lexer, 530, 21 );
                                        consume( state );
                                        state.push_fn( branch_0d049e4db4484b03, 248 );
                                        return hc_css__mf_value( state, db, 0 )
                                    }
                                }
                            }
                        } else if( pk._type  == 113 || pk._type  == - 1 ){
                            state.lexer._type  = 14;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            scan( state.lexer, 530, 21 );
                            consume( state );
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_value( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 27 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 525, 21 );
                    if( pk._type  == 170 || pk._type  == 5 ){
                        state.lexer._type  = 27;
                        state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                        scan( state.lexer, 35, 21 );
                        consume( state );
                        state.push_fn( branch_0d049e4db4484b03, 248 );
                        return hc_css__mf_value( state, db, 0 )
                    }
                } else if( state.lexer._type  == 11 ){
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    scan( state.lexer, 57, 21 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_value( state, db, 0 )
                } else if( state.lexer._type  == 80 ){
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    scan( state.lexer, 60, 21 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_value( state, db, 0 )
                } else if( state.lexer._type  == 81 ){
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    scan( state.lexer, 40, 21 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_value( state, db, 0 )
                } else {
                    scan( state.lexer, 21, 21 );
                    prod = 244;
                    continue
                };
                break
            }
            break;
            case 244: 
            {
                scan( state.lexer, 20, 21 );
                if( state.lexer._type  == 81 || state.lexer._type  == 11 ){
                    consume( state );
                    scan( state.lexer, 22, 21 );
                    if( state.lexer._type  == 170 ){
                        var pk = state.lexer.copy_in_place(  );;
                        pk.next(  );
                        scan( pk, 23, 21 );
                        if( pk._type  == 11 ){
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_1aea634484900352, 248 );
                            state.push_fn( branch_4cee85cd83034401, 248 );
                            return 0
                        } else if( pk._type  == 81 ){
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_1296864446b6a526, 248 );
                            state.push_fn( branch_4cee85cd83034401, 248 );
                            return 0
                        } else {
                            state.lexer._type  = 170;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_name( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 80 || state.lexer._type  == 27 ){
                    consume( state );
                    scan( state.lexer, 22, 21 );
                    if( state.lexer._type  == 170 ){
                        var pk = state.lexer.copy_in_place(  );;
                        pk.next(  );
                        scan( pk, 23, 21 );
                        if( pk._type  == 27 ){
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_0f3d729daf7f4bfc, 248 );
                            state.push_fn( branch_4cee85cd83034401, 248 );
                            return 0
                        } else if( pk._type  == 80 ){
                            var fk1 = state.fork( db );;
                            fk1.push_fn( branch_1d92407f51f88ac9, 248 );
                            state.push_fn( branch_4cee85cd83034401, 248 );
                            return 0
                        } else {
                            state.lexer._type  = 170;
                            state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                            state.push_fn( branch_0d049e4db4484b03, 248 );
                            return hc_css__mf_name( state, db, 0 )
                        }
                    }
                } else if( state.lexer._type  == 14 ){
                    state.push_fn( hc_css__mf_range_goto /*hc_css__mf_range_goto( state, db, 248 )*/, 248 );
                    scan( state.lexer, 530, 21 );
                    consume( state );
                    state.push_fn( branch_0d049e4db4484b03, 248 );
                    return hc_css__mf_name( state, db, 0 )
                };
                break
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 248 ) ? prod  : - 1
}

function hc_css__media_and(state, db, prod){
    state.push_fn( branch_a8a183021bdf42d7, 249 );
    return hc_css__media_in_parenths( state, db, 0 )
}

function hc_css__media_or(state, db, prod){
    state.push_fn( branch_c66e19ecaf1d3204, 250 );
    return hc_css__media_in_parenths( state, db, 0 )
}

function hc_css__media_type(state, db, prod){
    scan( state.lexer, 22, 21 );
    if( state.lexer._type  == 170 ){
    consume( state );
    scan( state.lexer, 21, 21 );
    add_reduce( state, 1, 330 );
    return 251
};
    return - 1
}

function hc_css__STYLE_RULE(state, db, prod){
    state.push_fn( branch_49909cbad1e3be1b, 0 );
    return hc_css__STYLE_RULE_list_1605( state, db, 0 )
}

function hc_css__declaration_list(state, db, prod){
    scan( state.lexer, 88, 21 );
    if( state.lexer._type  == 17 ){
    state.push_fn( hc_css__declaration_list_goto /*hc_css__declaration_list_goto( state, db, 253 )*/, 253 );
    state.push_fn( branch_18f55b22f3445351, 253 );
    return hc_css__STYLE_RULE_list_1608( state, db, 0 )
} else {
    state.push_fn( hc_css__declaration_list_goto /*hc_css__declaration_list_goto( state, db, 253 )*/, 253 );
    state.push_fn( branch_5cb267bf74038e65, 253 );
    return hc_css__declaration( state, db, 0 )
};
    return - 1
}

function hc_css__declaration_list_goto(state, db, prod){
    scan( state.lexer, 56, 9 );
    if( state.lexer._type  == 17 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 79, 9 );
    if( pk._type  == 18 ){
        return 253
    } else if( pk._type  == 17 || pk._type  == 176 ){
        var fk1 = state.fork( db );;
        fk1.push_fn( set_production /*253*/, 253 );
        state.push_fn( branch_4ac208c842f53bc8, 253 );
        return 0
    } else if( pk._type  == - 1 ){
        state.lexer._type  = 17;
        state.push_fn( hc_css__declaration_list_goto /*hc_css__declaration_list_goto( state, db, 253 )*/, 253 );
        scan( state.lexer, 89, 21 );
        if( ( state.lexer._type  == 17 ) ){
            state.push_fn( branch_0eccb3f60187246e, 253 );
            return hc_css__declaration_list_group_1613_0_( state, db, 0 )
        };
        return - 1
    }
} else if( state.lexer._type  == 18 ){
    return 253
};
    return ( prod  == 253 ) ? prod  : - 1
}

function hc_css__AT_RULE(state, db, prod){
    scan( state.lexer, 533, 21 );
    if( state.lexer._type  == 180 ){
    scan( state.lexer, 534, 21 );
    state.push_fn( branch_797254658f698e96, 0 );
    return hc_css__media( state, db, 0 )
} else if( state.lexer._type  == 181 ){
    scan( state.lexer, 535, 21 );
    state.push_fn( branch_797254658f698e96, 0 );
    return hc_css__keyframes( state, db, 0 )
} else {
    scan( state.lexer, 536, 21 );
    state.push_fn( branch_797254658f698e96, 0 );
    return hc_css__supports( state, db, 0 )
};
    return - 1
}

function hc_css__media(state, db, prod){
    scan( state.lexer, 534, 21 );
    if( state.lexer._type  == 180 ){
    consume( state );
    scan( state.lexer, 512, 21 );
    state.push_fn( branch_9a7cc4888d76f221, 0 );
    return hc_css__media_queries( state, db, 0 )
};
    return - 1
}

function hc_css__media_queries(state, db, prod){
    state.push_fn( branch_ae070c57f7da2b64, 256 );
    return hc_css__import_list_1287( state, db, 0 )
}

function hc_css__GROUP_RULE_BODY(state, db, prod){
    state.push_fn( branch_af679ef3125e0c9b, 257 );
    return hc_css__STYLE_RULE( state, db, 0 )
}

function hc_css__GROUP_RULE_BODY_goto(state, db, prod){
    scan( state.lexer, 537, 9 );
    if( isTokenActive( state.lexer._type, 128 ) ){
    state.push_fn( hc_css__GROUP_RULE_BODY_goto /*hc_css__GROUP_RULE_BODY_goto( state, db, 257 )*/, 257 );
    scan( state.lexer, 483, 21 );
    if( ( isTokenActive( state.lexer._type, 128 ) ) ){
        state.push_fn( branch_449740ceb8df7fb1, 257 );
        return hc_css__STYLE_RULE( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 18 ){
    return 257
};
    return ( prod  == 257 ) ? prod  : - 1
}

function hc_css__keyframes(state, db, prod){
    scan( state.lexer, 535, 21 );
    if( state.lexer._type  == 181 ){
    consume( state );
    scan( state.lexer, 538, 21 );
    if( ( state.lexer._type  == 3 || state.lexer._type  == 33 || state.lexer._type  == 32 ) ){
        state.push_fn( branch_d2b62bf302df98f0, 258 );
        return hc_css__keyframes_name( state, db, 0 )
    }
};
    return - 1
}

function hc_css__keyframes_name(state, db, prod){
    scan( state.lexer, 538, 21 );
    if( state.lexer._type  == 33 || state.lexer._type  == 32 ){
    state.push_fn( set_production /*259*/, 259 );
    state.push_fn( set_production /*0*/, 259 );
    return hc_css__string( state, db, 0 )
} else if( state.lexer._type  == 3 ){
    state.push_fn( set_production /*259*/, 259 );
    consume( state );
    return 0
};
    return - 1
}

function hc_css__keyframes_blocks(state, db, prod){
    state.push_fn( branch_a502f360faf489e2, 0 );
    return hc_css__keyframes_blocks_list_1639( state, db, 0 )
}

function hc_css__keyframe_selector(state, db, prod){
    scan( state.lexer, 539, 21 );
    if( state.lexer._type  == 64 || state.lexer._type  == 182 ){
    consume( state );
    add_reduce( state, 1, 340 );
    return 261
} else {
    state.push_fn( set_production /*261*/, 261 );
    state.push_fn( branch_5c88b2f13f5585e4, 261 );
    return hc_css__percentage( state, db, 0 )
};
    return - 1
}

function hc_css__percentage(state, db, prod){
    scan( state.lexer, 244, 21 );
    if( state.lexer._type  == 5 ){
    consume( state );
    scan( state.lexer, 540, 21 );
    if( ( state.lexer._type  == 89 ) ){
        consume( state );
        add_reduce( state, 2, 341 );
        return 262
    }
};
    return - 1
}

function hc_css__supports(state, db, prod){
    scan( state.lexer, 536, 21 );
    if( state.lexer._type  == 183 ){
    consume( state );
    scan( state.lexer, 478, 21 );
    state.push_fn( branch_f5618efb775b60fd, 0 );
    return hc_css__supports_group_1650_0_( state, db, 0 )
};
    return - 1
}

function hc_javascript__script(state, db, prod){
    state.push_fn( branch_03197776794950c3, 264 );
    return hc_javascript__script_body( state, db, 0 )
}

function hc_javascript__script_body(state, db, prod){
    state.push_fn( set_production /*265*/, 265 );
    return hc_javascript__statement_list( state, db, 0 )
}

function hc_javascript__comment_list_48(state, db, prod){
    scan( state.lexer, 236, 0 );
    if( isTokenActive( state.lexer._type, 236 ) ){
    consume( state );
    add_reduce( state, 1, 1 );
    return hc_javascript__comment_list_48_goto( state, db, 266 )
};
    return - 1
}

function hc_javascript__comment_list_48_goto(state, db, prod){
    scan( state.lexer, 235, 0 );
    if( state.lexer._type  == 2 ){
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    scan( state.lexer, 252, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    scan( state.lexer, 9, 28 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 7 ){
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    scan( state.lexer, 9, 253 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_javascript__comment_list_48_goto /*hc_javascript__comment_list_48_goto( state, db, 266 )*/, 266 );
    scan( state.lexer, 251, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
};
    return ( prod  == 266 ) ? prod  : - 1
}

function hc_javascript__comment_list_51(state, db, prod){
    scan( state.lexer, 236, 28 );
    if( state.lexer._type  == 2 || state.lexer._type  == 8 || state.lexer._type  == 3 || state.lexer._type  == 5 ){
    consume( state );
    add_reduce( state, 1, 1 );
    return hc_javascript__comment_list_51_goto( state, db, 267 )
};
    return - 1
}

function hc_javascript__comment_list_51_goto(state, db, prod){
    scan( state.lexer, 236, 0 );
    if( state.lexer._type  == 2 ){
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    scan( state.lexer, 252, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    scan( state.lexer, 9, 28 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_javascript__comment_list_51_goto /*hc_javascript__comment_list_51_goto( state, db, 267 )*/, 267 );
    scan( state.lexer, 251, 9 );
    consume( state );
    add_reduce( state, 2, 2 );
    return 0
};
    return ( prod  == 267 ) ? prod  : - 1
}

function hc_html__RESULT_list_72(state, db, prod){
    state.push_fn( branch_fac6e057d819742e, 268 );
    return hc_html__DTD( state, db, 0 )
}

function hc_html__RESULT_list_72_goto(state, db, prod){
    scan( state.lexer, 245, 9 );
    if( state.lexer._type  == 24 ){
    state.push_fn( hc_html__RESULT_list_72_goto /*hc_html__RESULT_list_72_goto( state, db, 268 )*/, 268 );
    scan( state.lexer, 246, 9 );
    if( ( state.lexer._type  == 24 ) ){
        state.push_fn( branch_449740ceb8df7fb1, 268 );
        return hc_html__DTD( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 268 ) ? prod  : - 1
}

function hc_html__identifier_list_83(state, db, prod){
    scan( state.lexer, 541, 28 );
    if( state.lexer._type  == 5 || state.lexer._type  == 3 || state.lexer._type  == 88 || state.lexer._type  == 70 ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_html__identifier_list_83_goto( state, db, 269 )
};
    return - 1
}

function hc_html__identifier_list_83_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 269: 
            {
                scan( state.lexer, 249, 28 );
                if( state.lexer._type  == 88 ){
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    scan( state.lexer, 542, 28 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 70 ){
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    scan( state.lexer, 543, 28 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 5 ){
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    scan( state.lexer, 544, 28 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 3 ){
                    state.push_fn( hc_html__identifier_list_83_goto /*hc_html__identifier_list_83_goto( state, db, 269 )*/, 269 );
                    scan( state.lexer, 545, 28 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 269 ) ? prod  : - 1
}

function hc_html__ATTRIBUTE_group_169_0_(state, db, prod){
    scan( state.lexer, 63, 9 );
    if( state.lexer._type  == 33 ){
    consume( state );
    scan( state.lexer, 546, 9 );
    if( state.lexer._type  == 16 || state.lexer._type  == 19 ){
        state.push_fn( set_production /*270*/, 270 );
        state.push_fn( branch_a20c02ef4298dc95, 270 );
        return hc_WICK_BINDING( state, db, 0 )
    } else if( state.lexer._type  == 33 ){
        state.push_fn( set_production /*270*/, 270 );
        consume( state );
        add_reduce( state, 2, 344 );
        return 0
    }
};
    return - 1
}

function hc_javascript__named_imports_list_331(state, db, prod){
    state.push_fn( branch_9af93c66ec6f1e19, 271 );
    return hc_javascript__import_specifier( state, db, 0 )
}

function hc_javascript__named_imports_list_331_goto(state, db, prod){
    scan( state.lexer, 547, 9 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 548, 11 );
    if( pk._type  == 59 ){
        state.lexer._type  = 59;
        state.push_fn( hc_javascript__named_imports_list_331_goto /*hc_javascript__named_imports_list_331_goto( state, db, 271 )*/, 271 );
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 271 );
        return hc_javascript__import_specifier( state, db, 0 )
    }
};
    return ( prod  == 271 ) ? prod  : - 1
}

function hc_javascript__string_literal_list_342(state, db, prod){
    scan( state.lexer, 549, 0 );
    if( state.lexer._type  == 65 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    state.push_fn( branch_a8b263dabb540262, 272 );
    return hc_javascript__escaped_sequence( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 550 ) ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_javascript__string_literal_list_342_goto( state, db, 272 )
};
    return - 1
}

function hc_javascript__string_literal_list_342_goto(state, db, prod){
    scan( state.lexer, 291, 0 );
    if( state.lexer._type  == 65 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 551, 9 );
    if( ( state.lexer._type  == 65 ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 272 );
        return hc_javascript__escaped_sequence( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 184 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 552, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 7 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 9, 253 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 9, 28 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 252, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 251, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_javascript__string_literal_list_342_goto /*hc_javascript__string_literal_list_342_goto( state, db, 272 )*/, 272 );
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 272 ) ? prod  : - 1
}

function hc_javascript__string_literal_list_345(state, db, prod){
    scan( state.lexer, 553, 0 );
    if( state.lexer._type  == 65 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    state.push_fn( branch_a8b263dabb540262, 273 );
    return hc_javascript__escaped_sequence( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 554 ) ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_javascript__string_literal_list_345_goto( state, db, 273 )
};
    return - 1
}

function hc_javascript__string_literal_list_345_goto(state, db, prod){
    scan( state.lexer, 292, 0 );
    if( state.lexer._type  == 65 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 551, 9 );
    if( ( state.lexer._type  == 65 ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 273 );
        return hc_javascript__escaped_sequence( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 185 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 555, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 7 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 9, 253 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 9, 28 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 252, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 251, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_javascript__string_literal_list_345_goto /*hc_javascript__string_literal_list_345_goto( state, db, 273 )*/, 273 );
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 273 ) ? prod  : - 1
}

function hc_javascript__export_clause_list_399(state, db, prod){
    state.push_fn( branch_89ea6217e293f3ca, 274 );
    return hc_javascript__export_specifier( state, db, 0 )
}

function hc_javascript__export_clause_list_399_goto(state, db, prod){
    scan( state.lexer, 547, 9 );
    if( state.lexer._type  == 58 ){
    var pk = state.lexer.copy_in_place(  );;
    pk.next(  );
    scan( pk, 548, 11 );
    if( pk._type  == 59 ){
        state.lexer._type  = 59;
        state.push_fn( hc_javascript__export_clause_list_399_goto /*hc_javascript__export_clause_list_399_goto( state, db, 274 )*/, 274 );
        consume( state );
        state.push_fn( branch_a8b069c903e9e56e, 274 );
        return hc_javascript__export_specifier( state, db, 0 )
    }
};
    return ( prod  == 274 ) ? prod  : - 1
}

function hc_javascript__scientific_token_group_593_0_(state, db, prod){
    scan( state.lexer, 556, 9 );
    if( state.lexer._type  == 186 || state.lexer._type  == 187 ){
    consume( state );
    scan( state.lexer, 557, 9 );
    if( state.lexer._type  == 88 ){
        state.push_fn( set_production /*275*/, 275 );
        consume( state );
        state.push_fn( branch_918124bffd412d50, 275 );
        return hc_javascript__int_token( state, db, 0 )
    } else {
        state.push_fn( set_production /*275*/, 275 );
        state.push_fn( branch_60d1f22634e1d8d8, 275 );
        return hc_javascript__int_token( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__float_token_group_597_0_(state, db, prod){
    scan( state.lexer, 558, 9 );
    if( state.lexer._type  == 98 ){
    consume( state );
    scan( state.lexer, 251, 9 );
    if( ( state.lexer._type  == 5 ) ){
        state.push_fn( branch_fc2d026dcaaf1c2c, 276 );
        return hc_javascript__int_token( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__int_token_list_601(state, db, prod){
    state.push_fn( branch_a611ed844340118b, 277 );
    return hc_javascript__int_token_list_601_group_1797_0_( state, db, 0 )
}

function hc_javascript__int_token_list_601_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 277: 
            {
                scan( state.lexer, 559, 9 );
                if( state.lexer._type  == 60 ){
                    state.push_fn( hc_javascript__int_token_list_601_goto /*hc_javascript__int_token_list_601_goto( state, db, 277 )*/, 277 );
                    scan( state.lexer, 560, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 277 );
                        return hc_javascript__int_token_list_601_group_1797_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 277 ) ? prod  : - 1
}

function hc_javascript__hex_token_list_606(state, db, prod){
    scan( state.lexer, 561, 9 );
    if( isTokenActive( state.lexer._type, 562 ) ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_javascript__hex_token_list_606_goto( state, db, 278 )
};
    return - 1
}

function hc_javascript__hex_token_list_606_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 278: 
            {
                scan( state.lexer, 84, 9 );
                if( state.lexer._type  == 188 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 563, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 189 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 564, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 190 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 565, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 191 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 566, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 192 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 567, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 187 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 568, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 193 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 569, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 194 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 570, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 195 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 571, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 196 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 572, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 197 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 573, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 186 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 574, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 5 ){
                    state.push_fn( hc_javascript__hex_token_list_606_goto /*hc_javascript__hex_token_list_606_goto( state, db, 278 )*/, 278 );
                    scan( state.lexer, 251, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 575 ) ){
                    return 278
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 278 ) ? prod  : - 1
}

function hc_javascript__hex_token_list_607(state, db, prod){
    state.push_fn( branch_c33aa562df599c33, 279 );
    return hc_javascript__hex_token_list_607_group_1845_0_( state, db, 0 )
}

function hc_javascript__hex_token_list_607_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 279: 
            {
                scan( state.lexer, 576, 9 );
                if( state.lexer._type  == 60 ){
                    state.push_fn( hc_javascript__hex_token_list_607_goto /*hc_javascript__hex_token_list_607_goto( state, db, 279 )*/, 279 );
                    scan( state.lexer, 560, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 279 );
                        return hc_javascript__hex_token_list_607_group_1845_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    return 279
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 279 ) ? prod  : - 1
}

function hc_javascript__octal_token_list_613(state, db, prod){
    scan( state.lexer, 577, 9 );
    if( isTokenActive( state.lexer._type, 578 ) ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_javascript__octal_token_list_613_goto( state, db, 280 )
};
    return - 1
}

function hc_javascript__octal_token_list_613_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 280: 
            {
                scan( state.lexer, 116, 9 );
                if( state.lexer._type  == 198 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 579, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 199 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 580, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 200 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 581, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 201 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 582, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 202 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 583, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 203 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 584, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 204 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 585, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 205 ){
                    state.push_fn( hc_javascript__octal_token_list_613_goto /*hc_javascript__octal_token_list_613_goto( state, db, 280 )*/, 280 );
                    scan( state.lexer, 586, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 575 ) ){
                    return 280
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 280 ) ? prod  : - 1
}

function hc_javascript__octal_token_list_614(state, db, prod){
    state.push_fn( branch_c02448e2673e27f3, 281 );
    return hc_javascript__octal_token_list_614_group_1878_0_( state, db, 0 )
}

function hc_javascript__octal_token_list_614_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 281: 
            {
                scan( state.lexer, 576, 9 );
                if( state.lexer._type  == 60 ){
                    state.push_fn( hc_javascript__octal_token_list_614_goto /*hc_javascript__octal_token_list_614_goto( state, db, 281 )*/, 281 );
                    scan( state.lexer, 560, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 281 );
                        return hc_javascript__octal_token_list_614_group_1878_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    return 281
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 281 ) ? prod  : - 1
}

function hc_javascript__binary_token_list_620(state, db, prod){
    scan( state.lexer, 587, 9 );
    if( state.lexer._type  == 200 || state.lexer._type  == 199 ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_javascript__binary_token_list_620_goto( state, db, 282 )
};
    return - 1
}

function hc_javascript__binary_token_list_620_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 282: 
            {
                scan( state.lexer, 103, 9 );
                if( state.lexer._type  == 200 ){
                    state.push_fn( hc_javascript__binary_token_list_620_goto /*hc_javascript__binary_token_list_620_goto( state, db, 282 )*/, 282 );
                    scan( state.lexer, 581, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( state.lexer._type  == 199 ){
                    state.push_fn( hc_javascript__binary_token_list_620_goto /*hc_javascript__binary_token_list_620_goto( state, db, 282 )*/, 282 );
                    scan( state.lexer, 580, 9 );
                    consume( state );
                    add_reduce( state, 2, 12 );
                    return 0
                } else if( isTokenActive( state.lexer._type, 575 ) ){
                    return 282
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 282 ) ? prod  : - 1
}

function hc_javascript__binary_token_list_621(state, db, prod){
    state.push_fn( branch_471c9fa4798d33cf, 283 );
    return hc_javascript__binary_token_list_621_group_1893_0_( state, db, 0 )
}

function hc_javascript__binary_token_list_621_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 283: 
            {
                scan( state.lexer, 576, 9 );
                if( state.lexer._type  == 60 ){
                    state.push_fn( hc_javascript__binary_token_list_621_goto /*hc_javascript__binary_token_list_621_goto( state, db, 283 )*/, 283 );
                    scan( state.lexer, 560, 9 );
                    if( ( state.lexer._type  == 60 ) ){
                        state.push_fn( branch_60d1f22634e1d8d8, 283 );
                        return hc_javascript__binary_token_list_621_group_1893_0_( state, db, 0 )
                    };
                    return - 1
                } else {
                    return 283
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 283 ) ? prod  : - 1
}

function hc_javascript__iteration_statement_group_869_1_(state, db, prod){
    scan( state.lexer, 588, 9 );
    if( state.lexer._type  == 68 ){
    consume( state );
    scan( state.lexer, 589, 9 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_2df7000832ab9616, 284 );
        return hc_javascript__variable_declaration_list( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__iteration_statement_group_887_1_(state, db, prod){
    scan( state.lexer, 588, 9 );
    if( state.lexer._type  == 68 ){
    consume( state );
    scan( state.lexer, 589, 9 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_9e986e4e875bdfda, 285 );
        return hc_javascript__for_binding( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__iteration_statement_group_896_1_(state, db, prod){
    scan( state.lexer, 588, 9 );
    if( state.lexer._type  == 68 ){
    consume( state );
    scan( state.lexer, 589, 9 );
    if( ( state.lexer._type  == 59 || state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_e33a81b49710a4c7, 286 );
        return hc_javascript__for_binding( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__regular_expression_literal_list_1056(state, db, prod){
    scan( state.lexer, 590, 0 );
    if( state.lexer._type  == 65 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    state.push_fn( branch_a8b263dabb540262, 287 );
    return hc_javascript__escaped_sequence( state, db, 0 )
} else if( isTokenActive( state.lexer._type, 591 ) ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )
};
    return - 1
}

function hc_javascript__regular_expression_literal_list_1056_goto(state, db, prod){
    scan( state.lexer, 443, 0 );
    if( state.lexer._type  == 65 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 551, 9 );
    if( ( state.lexer._type  == 65 ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 287 );
        return hc_javascript__escaped_sequence( state, db, 0 )
    };
    return - 1
} else if( state.lexer._type  == 206 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 592, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 10 ){
    return 287
} else if( state.lexer._type  == 7 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 9, 253 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 8 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 9, 28 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 252, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 5 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 251, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_javascript__regular_expression_literal_list_1056_goto /*hc_javascript__regular_expression_literal_list_1056_goto( state, db, 287 )*/, 287 );
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 287 ) ? prod  : - 1
}

function hc_javascript__template_string_list_1088(state, db, prod){
    state.push_fn( branch_cdf7eba05b87dc47, 288 );
    return hc_javascript__template_string_data( state, db, 0 )
}

function hc_javascript__template_string_list_1088_goto(state, db, prod){
    scan( state.lexer, 4, 0 );
    if( isTokenActive( state.lexer._type, 593 ) ){
    state.push_fn( hc_javascript__template_string_list_1088_goto /*hc_javascript__template_string_list_1088_goto( state, db, 288 )*/, 288 );
    scan( state.lexer, 593, 0 );
    if( ( isTokenActive( state.lexer._type, 593 ) ) ){
        state.push_fn( branch_60d1f22634e1d8d8, 288 );
        return hc_javascript__template_string_data( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 288 ) ? prod  : - 1
}

function hc_javascript__argument_list_group_1152_1_(state, db, prod){
    scan( state.lexer, 470, 9 );
    if( state.lexer._type  == 111 ){
    consume( state );
    scan( state.lexer, 233, 9 );
    if( ( isTokenActive( state.lexer._type, 54 ) ) ){
        state.push_fn( branch_fb8401b9afc524e1, 289 );
        return hc_javascript__assignment_expression( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1238_0_(state, db, prod){
    scan( state.lexer, 470, 9 );
    if( state.lexer._type  == 111 ){
    consume( state );
    scan( state.lexer, 594, 9 );
    if( ( state.lexer._type  == 59 ) ){
        state.push_fn( branch_e48bfd912460c186, 290 );
        return hc_javascript__binding_identifier( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__cover_parenthesized_expression_and_arrow_parameter_list_group_1242_0_(state, db, prod){
    scan( state.lexer, 470, 9 );
    if( state.lexer._type  == 111 ){
    consume( state );
    scan( state.lexer, 595, 9 );
    if( ( state.lexer._type  == 16 || state.lexer._type  == 96 ) ){
        state.push_fn( branch_0aa85f4426bcd38c, 291 );
        return hc_javascript__binding_pattern( state, db, 0 )
    }
};
    return - 1
}

function hc_css__STYLE_SHEET_list_1280(state, db, prod){
    state.push_fn( branch_9d4a6fee7f15f833, 292 );
    return hc_css__STYLE_SHEET_list_1280_group_1939_0_( state, db, 0 )
}

function hc_css__STYLE_SHEET_list_1280_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 292: 
            {
                scan( state.lexer, 155, 9 );
                if( state.lexer._type  == 166 ){
                    state.push_fn( hc_css__STYLE_SHEET_list_1280_goto /*hc_css__STYLE_SHEET_list_1280_goto( state, db, 292 )*/, 292 );
                    scan( state.lexer, 596, 9 );
                    if( ( state.lexer._type  == 166 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 292 );
                        return hc_css__STYLE_SHEET_list_1280_group_1939_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 292 ) ? prod  : - 1
}

function hc_css__STYLE_SHEET_list_1281(state, db, prod){
    scan( state.lexer, 597, 9 );
    if( isTokenActive( state.lexer._type, 128 ) ){
    state.push_fn( hc_css__STYLE_SHEET_list_1281_goto /*hc_css__STYLE_SHEET_list_1281_goto( state, db, 293 )*/, 293 );
    state.push_fn( branch_5cb267bf74038e65, 293 );
    return hc_css__STYLE_RULE( state, db, 0 )
} else {
    state.push_fn( hc_css__STYLE_SHEET_list_1281_goto /*hc_css__STYLE_SHEET_list_1281_goto( state, db, 293 )*/, 293 );
    state.push_fn( branch_5cb267bf74038e65, 293 );
    return hc_css__AT_RULE( state, db, 0 )
};
    return - 1
}

function hc_css__STYLE_SHEET_list_1281_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 293: 
            {
                scan( state.lexer, 598, 9 );
                if( isTokenActive( state.lexer._type, 128 ) ){
                    state.push_fn( hc_css__STYLE_SHEET_list_1281_goto /*hc_css__STYLE_SHEET_list_1281_goto( state, db, 293 )*/, 293 );
                    scan( state.lexer, 599, 9 );
                    if( ( isTokenActive( state.lexer._type, 128 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 293 );
                        return hc_css__STYLE_RULE( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 180 || state.lexer._type  == 181 || state.lexer._type  == 183 ){
                    state.push_fn( hc_css__STYLE_SHEET_list_1281_goto /*hc_css__STYLE_SHEET_list_1281_goto( state, db, 293 )*/, 293 );
                    scan( state.lexer, 600, 9 );
                    if( ( state.lexer._type  == 180 || state.lexer._type  == 181 || state.lexer._type  == 183 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 293 );
                        return hc_css__AT_RULE( state, db, 0 )
                    };
                    return - 1
                } else {
                    return 293
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 293 ) ? prod  : - 1
}

function hc_css__import_group_1283_0_(state, db, prod){
    state.push_fn( branch_cff5c6dc70998e82, 294 );
    return hc_css__string( state, db, 0 )
}

function hc_css__import_group_1285_0_(state, db, prod){
    scan( state.lexer, 601, 9 );
    if( state.lexer._type  == 207 ){
    consume( state );
    scan( state.lexer, 602, 9 );
    if( state.lexer._type  == 36 ){
        consume( state );
        scan( state.lexer, 480, 21 );
        if( state.lexer._type  == 168 || state.lexer._type  == 36 || state.lexer._type  == 170 || state.lexer._type  == 169 ){
            state.push_fn( set_production /*295*/, 295 );
            state.push_fn( branch_8b7f6cc58ff0fe5a, 295 );
            return hc_css__supports_condition( state, db, 0 )
        } else {
            state.push_fn( set_production /*295*/, 295 );
            state.push_fn( branch_8b7f6cc58ff0fe5a, 295 );
            return hc_css__import_declaration( state, db, 0 )
        }
    }
};
    return - 1
}

function hc_css__import_list_1287(state, db, prod){
    state.push_fn( branch_d32e8fd6d43e3b7a, 296 );
    return hc_css__media_query( state, db, 0 )
}

function hc_css__import_list_1287_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 296: 
            {
                scan( state.lexer, 603, 9 );
                if( state.lexer._type  == 58 ){
                    state.push_fn( hc_css__import_list_1287_goto /*hc_css__import_list_1287_goto( state, db, 296 )*/, 296 );
                    scan( state.lexer, 604, 9 );
                    consume( state );
                    state.push_fn( branch_a8b069c903e9e56e, 296 );
                    return hc_css__media_query( state, db, 0 )
                } else if( state.lexer._type  == 17 || state.lexer._type  == - 1 ){
                    return 296
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 296 ) ? prod  : - 1
}

function hc_css__supports_condition_list_1312(state, db, prod){
    scan( state.lexer, 605, 9 );
    if( state.lexer._type  == 210 ){
    state.push_fn( hc_css__supports_condition_list_1312_goto /*hc_css__supports_condition_list_1312_goto( state, db, 297 )*/, 297 );
    state.push_fn( branch_5cb267bf74038e65, 297 );
    return hc_css__supports_condition_list_1312_group_1969_1_( state, db, 0 )
} else {
    state.push_fn( hc_css__supports_condition_list_1312_goto /*hc_css__supports_condition_list_1312_goto( state, db, 297 )*/, 297 );
    state.push_fn( branch_5cb267bf74038e65, 297 );
    return hc_css__supports_condition_list_1312_group_1969_0_( state, db, 0 )
};
    return - 1
}

function hc_css__supports_condition_list_1312_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 297: 
            {
                scan( state.lexer, 606, 9 );
                if( state.lexer._type  == 210 ){
                    state.push_fn( hc_css__supports_condition_list_1312_goto /*hc_css__supports_condition_list_1312_goto( state, db, 297 )*/, 297 );
                    scan( state.lexer, 607, 9 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 297 );
                        return hc_css__supports_condition_list_1312_group_1969_1_( state, db, 0 )
                    };
                    return - 1
                } else if( state.lexer._type  == 209 ){
                    state.push_fn( hc_css__supports_condition_list_1312_goto /*hc_css__supports_condition_list_1312_goto( state, db, 297 )*/, 297 );
                    scan( state.lexer, 608, 9 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 297 );
                        return hc_css__supports_condition_list_1312_group_1969_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 297 ) ? prod  : - 1
}

function hc_css__COMPLEX_SELECTOR_list_1325(state, db, prod){
    state.push_fn( branch_2a582097d07e1590, 298 );
    return hc_css__COMPLEX_SELECTOR_list_1325_group_1978_0_( state, db, 0 )
}

function hc_css__COMPLEX_SELECTOR_list_1325_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 298: 
            {
                scan( state.lexer, 27, 9 );
                if( isTokenActive( state.lexer._type, 154 ) ){
                    state.push_fn( hc_css__COMPLEX_SELECTOR_list_1325_goto /*hc_css__COMPLEX_SELECTOR_list_1325_goto( state, db, 298 )*/, 298 );
                    scan( state.lexer, 609, 9 );
                    if( ( isTokenActive( state.lexer._type, 154 ) ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 298 );
                        return hc_css__COMPLEX_SELECTOR_list_1325_group_1978_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 298 ) ? prod  : - 1
}

function hc_css__COMPOUND_SELECTOR_list_1327(state, db, prod){
    state.push_fn( branch_ce80462dccaa7cd6, 299 );
    return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1327_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 299: 
            {
                scan( state.lexer, 27, 28 );
                if( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 29, 30 );
                    if( pk._type  == 170 ){
                        state.lexer._type  = 171;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1327_goto /*hc_css__COMPOUND_SELECTOR_list_1327_goto( state, db, 299 )*/, 299 );
                        scan( state.lexer, 487, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( state.lexer._type  == 70 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 161, 30 );
                    if( pk._type  == 70 ){
                        return 299
                    } else if( pk._type  == 170 ){
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1327_goto /*hc_css__COMPOUND_SELECTOR_list_1327_goto( state, db, 299 )*/, 299 );
                        scan( state.lexer, 487, 9 );
                        if( ( state.lexer._type  == 171 || state.lexer._type  == 98 || state.lexer._type  == 96 || state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 299 );
                            return hc_css__SUBCLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( isTokenActive( state.lexer._type, 610 ) ){
                    return 299
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 299 ) ? prod  : - 1
}

function hc_css__COMPOUND_SELECTOR_list_1328(state, db, prod){
    state.push_fn( branch_3cad422980e6ab08, 300 );
    return hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0_( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1328_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 300: 
            {
                scan( state.lexer, 27, 28 );
                if( state.lexer._type  == 70 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 96, 21 );
                    if( pk._type  == 70 ){
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1328_goto /*hc_css__COMPOUND_SELECTOR_list_1328_goto( state, db, 300 )*/, 300 );
                        scan( state.lexer, 486, 9 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 300 );
                            return hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0_( state, db, 0 )
                        };
                        return - 1
                    }
                } else if( isTokenActive( state.lexer._type, 611 ) ){
                    return 300
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 300 ) ? prod  : - 1
}

function hc_css__PSEUDO_CLASS_SELECTOR_group_1403_0_(state, db, prod){
    scan( state.lexer, 602, 9 );
    if( state.lexer._type  == 36 ){
    consume( state );
    scan( state.lexer, 612, 9 );
    if( ( state.lexer._type  == 208 ) ){
        consume( state );
        scan( state.lexer, 117, 9 );
        if( ( state.lexer._type  == 113 ) ){
            consume( state );
            add_reduce( state, 3, 31 );
            return 301
        }
    }
};
    return - 1
}

function hc_css__general_enclosed_list_1464(state, db, prod){
    scan( state.lexer, 613, 28 );
    if( state.lexer._type  == 8 || state.lexer._type  == 2 || state.lexer._type  == 3 ){
    consume( state );
    add_reduce( state, 1, 11 );
    return hc_css__general_enclosed_list_1464_goto( state, db, 302 )
};
    return - 1
}

function hc_css__general_enclosed_list_1464_goto(state, db, prod){
    scan( state.lexer, 511, 28 );
    if( state.lexer._type  == 8 ){
    state.push_fn( hc_css__general_enclosed_list_1464_goto /*hc_css__general_enclosed_list_1464_goto( state, db, 302 )*/, 302 );
    scan( state.lexer, 9, 28 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 2 ){
    state.push_fn( hc_css__general_enclosed_list_1464_goto /*hc_css__general_enclosed_list_1464_goto( state, db, 302 )*/, 302 );
    scan( state.lexer, 252, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
} else if( state.lexer._type  == 3 ){
    state.push_fn( hc_css__general_enclosed_list_1464_goto /*hc_css__general_enclosed_list_1464_goto( state, db, 302 )*/, 302 );
    scan( state.lexer, 248, 9 );
    consume( state );
    add_reduce( state, 2, 12 );
    return 0
};
    return ( prod  == 302 ) ? prod  : - 1
}

function hc_css__media_query_group_1471_0_(state, db, prod){
    scan( state.lexer, 608, 9 );
    if( state.lexer._type  == 209 ){
    consume( state );
    scan( state.lexer, 614, 9 );
    if( ( state.lexer._type  == 168 || state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_c72e6f9542bb18eb, 303 );
        return hc_css__media_condition_without_or( state, db, 0 )
    }
};
    return - 1
}

function hc_css__media_and_list_1601(state, db, prod){
    state.push_fn( branch_cf57f35b88c87e49, 304 );
    return hc_css__media_and_list_1601_group_2011_0_( state, db, 0 )
}

function hc_css__media_and_list_1601_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 304: 
            {
                scan( state.lexer, 615, 9 );
                if( state.lexer._type  == 209 ){
                    state.push_fn( hc_css__media_and_list_1601_goto /*hc_css__media_and_list_1601_goto( state, db, 304 )*/, 304 );
                    scan( state.lexer, 608, 9 );
                    if( ( state.lexer._type  == 209 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 304 );
                        return hc_css__media_and_list_1601_group_2011_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 304 ) ? prod  : - 1
}

function hc_css__media_or_list_1603(state, db, prod){
    state.push_fn( branch_15d1336bfdd6ebd0, 305 );
    return hc_css__media_or_list_1603_group_2017_0_( state, db, 0 )
}

function hc_css__media_or_list_1603_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 305: 
            {
                scan( state.lexer, 616, 9 );
                if( state.lexer._type  == 210 ){
                    state.push_fn( hc_css__media_or_list_1603_goto /*hc_css__media_or_list_1603_goto( state, db, 305 )*/, 305 );
                    scan( state.lexer, 607, 9 );
                    if( ( state.lexer._type  == 210 ) ){
                        state.push_fn( branch_449740ceb8df7fb1, 305 );
                        return hc_css__media_or_list_1603_group_2017_0_( state, db, 0 )
                    };
                    return - 1
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 305 ) ? prod  : - 1
}

function hc_css__STYLE_RULE_list_1605(state, db, prod){
    state.push_fn( branch_633b21482b250800, 306 );
    return hc_css__COMPLEX_SELECTOR( state, db, 0 )
}

function hc_css__STYLE_RULE_list_1605_goto(state, db, prod){
    scan( state.lexer, 617, 9 );
    if( state.lexer._type  == 58 ){
    state.push_fn( hc_css__STYLE_RULE_list_1605_goto /*hc_css__STYLE_RULE_list_1605_goto( state, db, 306 )*/, 306 );
    scan( state.lexer, 604, 9 );
    consume( state );
    state.push_fn( branch_a8b069c903e9e56e, 306 );
    return hc_css__COMPLEX_SELECTOR( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    return 306
};
    return ( prod  == 306 ) ? prod  : - 1
}

function hc_css__STYLE_RULE_list_1608(state, db, prod){
    scan( state.lexer, 143, 9 );
    if( state.lexer._type  == 17 ){
    consume( state );
    scan( state.lexer, 9, 9 );
    add_reduce( state, 1, 1 );
    return hc_css__STYLE_RULE_list_1608_goto( state, db, 307 )
};
    return - 1
}

function hc_css__STYLE_RULE_list_1608_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 307: 
            {
                scan( state.lexer, 79, 9 );
                if( state.lexer._type  == 17 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 56, 9 );
                    if( pk._type  == 18 || pk._type  == 17 || pk._type  == - 1 ){
                        state.lexer._type  = 17;
                        state.push_fn( hc_css__STYLE_RULE_list_1608_goto /*hc_css__STYLE_RULE_list_1608_goto( state, db, 307 )*/, 307 );
                        scan( state.lexer, 143, 9 );
                        consume( state );
                        add_reduce( state, 2, 2 );
                        return 0
                    }
                } else if( state.lexer._type  == 18 || state.lexer._type  == 176 ){
                    return 307
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 307 ) ? prod  : - 1
}

function hc_css__declaration_list_group_1613_0_(state, db, prod){
    state.push_fn( branch_3769c897b0ea6e58, 0 );
    return hc_css__STYLE_RULE_list_1608( state, db, 0 )
}

function hc_css__keyframes_list_1635(state, db, prod){
    state.push_fn( branch_dfafe7212cf80741, 309 );
    return hc_css__keyframes_blocks( state, db, 0 )
}

function hc_css__keyframes_list_1635_goto(state, db, prod){
    scan( state.lexer, 618, 9 );
    if( state.lexer._type  == 64 || state.lexer._type  == 182 || state.lexer._type  == 5 ){
    state.push_fn( hc_css__keyframes_list_1635_goto /*hc_css__keyframes_list_1635_goto( state, db, 309 )*/, 309 );
    scan( state.lexer, 619, 9 );
    if( ( state.lexer._type  == 64 || state.lexer._type  == 182 || state.lexer._type  == 5 ) ){
        state.push_fn( branch_449740ceb8df7fb1, 309 );
        return hc_css__keyframes_blocks( state, db, 0 )
    };
    return - 1
};
    return ( prod  == 309 ) ? prod  : - 1
}

function hc_css__keyframes_blocks_list_1639(state, db, prod){
    state.push_fn( branch_b012b520653300b0, 310 );
    return hc_css__keyframe_selector( state, db, 0 )
}

function hc_css__keyframes_blocks_list_1639_goto(state, db, prod){
    scan( state.lexer, 617, 9 );
    if( state.lexer._type  == 58 ){
    state.push_fn( hc_css__keyframes_blocks_list_1639_goto /*hc_css__keyframes_blocks_list_1639_goto( state, db, 310 )*/, 310 );
    scan( state.lexer, 604, 9 );
    consume( state );
    state.push_fn( branch_a8b069c903e9e56e, 310 );
    return hc_css__keyframe_selector( state, db, 0 )
} else if( state.lexer._type  == 16 ){
    return 310
};
    return ( prod  == 310 ) ? prod  : - 1
}

function hc_css__supports_group_1650_0_(state, db, prod){
    state.push_fn( branch_017e32e2623dd334, 311 );
    return hc_css__supports_condition( state, db, 0 )
}

function hc_javascript__int_token_list_601_group_1797_0_(state, db, prod){
    scan( state.lexer, 560, 9 );
    if( state.lexer._type  == 60 ){
    consume( state );
    scan( state.lexer, 251, 9 );
    if( ( state.lexer._type  == 5 ) ){
        consume( state );
        add_reduce( state, 2, 12 );
        return 312
    }
};
    return - 1
}

function hc_javascript__hex_token_list_607_group_1845_0_(state, db, prod){
    scan( state.lexer, 560, 9 );
    if( state.lexer._type  == 60 ){
    consume( state );
    scan( state.lexer, 561, 9 );
    if( ( isTokenActive( state.lexer._type, 562 ) ) ){
        state.push_fn( branch_270cd6bea07a58a0, 313 );
        return hc_javascript__hex_token_list_606( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__octal_token_list_614_group_1878_0_(state, db, prod){
    scan( state.lexer, 560, 9 );
    if( state.lexer._type  == 60 ){
    consume( state );
    scan( state.lexer, 577, 9 );
    if( ( isTokenActive( state.lexer._type, 578 ) ) ){
        state.push_fn( branch_3f7f5076b38bcdae, 314 );
        return hc_javascript__octal_token_list_613( state, db, 0 )
    }
};
    return - 1
}

function hc_javascript__binary_token_list_621_group_1893_0_(state, db, prod){
    scan( state.lexer, 560, 9 );
    if( state.lexer._type  == 60 ){
    consume( state );
    scan( state.lexer, 587, 9 );
    if( ( state.lexer._type  == 200 || state.lexer._type  == 199 ) ){
        state.push_fn( branch_c01b7e540a0470ae, 315 );
        return hc_javascript__binary_token_list_620( state, db, 0 )
    }
};
    return - 1
}

function hc_css__STYLE_SHEET_list_1280_group_1939_0_(state, db, prod){
    state.push_fn( branch_bbdf222a52f0a3f4, 316 );
    return hc_css__import( state, db, 0 )
}

function hc_css__supports_condition_list_1312_group_1969_0_(state, db, prod){
    scan( state.lexer, 608, 9 );
    if( state.lexer._type  == 209 ){
    consume( state );
    scan( state.lexer, 620, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 || state.lexer._type  == 169 ) ){
        state.push_fn( branch_36d0702fdc0ac5ee, 317 );
        return hc_css__supports_in_parens( state, db, 0 )
    }
};
    return - 1
}

function hc_css__supports_condition_list_1312_group_1969_1_(state, db, prod){
    scan( state.lexer, 607, 9 );
    if( state.lexer._type  == 210 ){
    consume( state );
    scan( state.lexer, 620, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 || state.lexer._type  == 169 ) ){
        state.push_fn( branch_71c00b5275f03638, 318 );
        return hc_css__supports_in_parens( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMPLEX_SELECTOR_list_1325_group_1978_0_(state, db, prod){
    scan( state.lexer, 609, 9 );
    if( isTokenActive( state.lexer._type, 128 ) ){
    state.push_fn( set_production /*319*/, 319 );
    state.push_fn( branch_5cb267bf74038e65, 319 );
    return hc_css__COMPOUND_SELECTOR( state, db, 0 )
} else {
    state.push_fn( set_production /*319*/, 319 );
    state.push_fn( branch_f52f125c2a796e7b, 319 );
    return hc_css__COMPLEX_SELECTOR_list_1325_group_1978_0__group_2057_0_( state, db, 0 )
};
    return - 1
}

function hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0_(state, db, prod){
    state.push_fn( branch_0c1614bd99f02e4b, 0 );
    return hc_css__PSEUDO_ELEMENT_SELECTOR( state, db, 0 )
}

function hc_css__media_and_list_1601_group_2011_0_(state, db, prod){
    scan( state.lexer, 608, 9 );
    if( state.lexer._type  == 209 ){
    consume( state );
    scan( state.lexer, 621, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_c4799025e7c55b46, 321 );
        return hc_css__media_in_parenths( state, db, 0 )
    }
};
    return - 1
}

function hc_css__media_or_list_1603_group_2017_0_(state, db, prod){
    scan( state.lexer, 607, 9 );
    if( state.lexer._type  == 210 ){
    consume( state );
    scan( state.lexer, 621, 9 );
    if( ( state.lexer._type  == 36 || state.lexer._type  == 170 ) ){
        state.push_fn( branch_c1851f0a1e44b8ad, 322 );
        return hc_css__media_in_parenths( state, db, 0 )
    }
};
    return - 1
}

function hc_css__COMPLEX_SELECTOR_list_1325_group_1978_0__group_2057_0_(state, db, prod){
    state.push_fn( branch_36f22698b835f22a, 323 );
    return hc_css__COMBINATOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062(state, db, prod){
    state.push_fn( branch_d811c5db4df2c97b, 324 );
    return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
}

function hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062_goto(state, db, prod){
    while( true ) {
        switch(prod){
            case 324: 
            {
                scan( state.lexer, 27, 28 );
                if( state.lexer._type  == 70 ){
                    var pk = state.lexer.copy_in_place(  );;
                    pk.next(  );
                    scan( pk, 29, 30 );
                    if( pk._type  == 170 ){
                        state.lexer._type  = 70;
                        state.push_fn( hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062_goto /*hc_css__COMPOUND_SELECTOR_list_1328_group_1988_0__list_2062_goto( state, db, 324 )*/, 324 );
                        scan( state.lexer, 543, 28 );
                        if( ( state.lexer._type  == 70 ) ){
                            state.push_fn( branch_449740ceb8df7fb1, 324 );
                            return hc_css__PSEUDO_CLASS_SELECTOR( state, db, 0 )
                        };
                        return - 1
                    }
                }
            }
            break;
            default: 
            break
        };
        break
    };
    return ( prod  == 324 ) ? prod  : - 1
} 

        function recognize_primary( string, production){

            //create the input data buffer. 
            const temp_buffer = new Uint8Array(string.length * 4);
            
            const actual_length = fillByteBufferWithUTF8FromString(string, temp_buffer, temp_buffer.length);

            const resolved_buffer = new Uint8Array(temp_buffer.buffer, 0, actual_length);

            switch(production){
                case 0 : return recognize(resolved_buffer, actual_length, 1, hc_COMPONENT);
                case 1 : return recognize(resolved_buffer, actual_length, 17, hc_html__TAG);
                case 2 : return recognize(resolved_buffer, actual_length, 126, hc_javascript__expression);
                case 3 : return recognize(resolved_buffer, actual_length, 203, hc_css__STYLE_SHEET);
                case 4 : return recognize(resolved_buffer, actual_length, 211, hc_css__COMPLEX_SELECTOR);
            }
    
            return {invalid: {}, valid:{}};
        }

        return {
            init_table: ()=> {
                const table = new Uint8Array(382976);
                init_table(table);
                return table;
            },
            recognize: recognize_primary,
            create_iterator: data => new ParserStateIterator(data)
        };
    });

    const reduce_functions = [(_,s)=>s[s.length-1], (env, sym, pos)=> ([sym[0]]) /*0*/,
(env, sym, pos)=> ((sym[0].push(sym[1]),sym[0])) /*1*/,
(env, sym, pos)=> ({type:env.typ.HTML_IMPORT,tag:"IMPORT",attributes:sym[1]||[],nodes:[],VOID:true,pos}) /*2*/,
(env, sym, pos)=> ({type:env.typ.HTML_IMPORT,tag:"IMPORT",attributes:null||[],nodes:[],VOID:true,pos}) /*3*/,
(env, sym, pos)=> ({type:env.typ.HTMLImportAttribute,name:sym[0],value:sym[2],pos}) /*4*/,
(env, sym, pos)=> ({type:env.typ.HTMLExportAttribute,name:sym[0],value:sym[2],pos}) /*5*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:sym[1],secondary_ast:sym[3],DEBUG:sym[1].length==2,pos}) /*6*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:sym[1],secondary_ast:null,DEBUG:sym[1].length==2,pos}) /*7*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:null,secondary_ast:sym[2],DEBUG:null.length==2,pos}) /*8*/,
(env, sym, pos)=> ({type:env.typ.WickBinding,primary_ast:null,secondary_ast:null,DEBUG:null.length==2,pos}) /*9*/,
(env, sym, pos)=> (sym[0]+"") /*10*/,
(env, sym, pos)=> (sym[0]+sym[1]) /*11*/,
(env, sym, pos)=> (sym[1].DTD=sym[0],sym[1]) /*12*/,
(env, sym, pos)=> (sym[0]) /*13*/,
(env, sym, pos)=> ({type:"DTD",tag:sym[1]||"",value:sym[3]}) /*14*/,
(env, sym, pos)=> ({type:"DTD",tag:null||"",value:sym[2]}) /*15*/,
(env, sym, pos)=> ((sym[1].import_list=sym[0],sym[1])) /*16*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:sym[4]||[],VOID:false,pos}) /*17*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:[],VOID:false,pos}) /*18*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:sym[2]||[],nodes:[],VOID:true,pos}) /*19*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:sym[2]||[],nodes:[sym[4]],pos}) /*20*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:sym[3]||[],VOID:false,pos}) /*21*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:[],VOID:false,pos}) /*22*/,
(env, sym, pos)=> ({type:env.typ["HTML_"+sym[1].toUpperCase()]||env.typ.HTML_Element,tag:sym[1].toUpperCase(),attributes:null||[],nodes:[],VOID:true,pos}) /*23*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:null||[],nodes:[sym[3]],pos}) /*24*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:sym[2]||[],nodes:[null],pos}) /*25*/,
(env, sym, pos)=> ({type:env.typ.HTML_STYLE,attributes:null||[],nodes:[null],pos}) /*26*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:sym[2],IS_BINDING:false,pos}) /*27*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:"",IS_BINDING:false,pos}) /*28*/,
(env, sym, pos)=> ({type:env.typ.HTMLAttribute,name:sym[0],value:sym[2]||"",IS_BINDING:!!sym[2],pos}) /*29*/,
(env, sym, pos)=> (sym[1]) /*30*/,
(env, sym, pos)=> (sym[0].slice(1,-1)) /*31*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:sym[2]||[],nodes:[sym[4]],pos}) /*32*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:null||[],nodes:[sym[3]],pos}) /*33*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:sym[2]||[],nodes:[null],pos}) /*34*/,
(env, sym, pos)=> ({type:env.typ.HTML_SCRIPT,attributes:null||[],nodes:[null],pos}) /*35*/,
(env, sym, pos)=> ({type:env.typ.HTMLText,data:sym[0],IS_BINDING:false,pos}) /*36*/,
(env, sym, pos)=> (env.IS_MODULE=false,sym[0]) /*37*/,
(env, sym, pos)=> ({type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:sym[0]||[],pos}) /*38*/,
(env, sym, pos)=> ({type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:[],pos}) /*39*/,
(env, sym, pos)=> (env.IS_MODULE=true,sym[0]) /*40*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1],sym[2]],pos}) /*41*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1]],pos}) /*42*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0]],pos}) /*43*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0],sym[2]],pos}) /*44*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierDefault,sym[0]) /*45*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierModule,sym[0]) /*46*/,
(env, sym, pos)=> ({type:env.typ.Identifier,value:sym[0],pos}) /*47*/,
(env, sym, pos)=> ({type:env.typ.NameSpaceImport,nodes:[sym[2]],pos}) /*48*/,
(env, sym, pos)=> ({type:env.typ.NamedImports,nodes:sym[1]||[],pos}) /*49*/,
(env, sym, pos)=> ({type:env.typ.NamedImports,nodes:null||[],pos}) /*50*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0]],pos}) /*51*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0],sym[2]],pos}) /*52*/,
(env, sym, pos)=> ({type:env.typ.FromClause,nodes:[sym[1]],pos}) /*53*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:sym[1]||"",pos}) /*54*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:null||"",pos}) /*55*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[null,sym[2]],DEFAULT:false,pos}) /*56*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1],sym[2]],DEFAULT:false,pos}) /*57*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1]],DEFAULT:false,pos}) /*58*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[2]],DEFAULT:true,pos}) /*59*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1],null],DEFAULT:false,pos}) /*60*/,
(env, sym, pos)=> ({type:env.typ.ExportClause,nodes:sym[1]||[],pos}) /*61*/,
(env, sym, pos)=> ({type:env.typ.ExportClause,nodes:null||[],pos}) /*62*/,
(env, sym, pos)=> ({type:env.typ.VariableStatement,nodes:sym[1],pos}) /*63*/,
(env, sym, pos)=> ((sym[0].push(sym[2]),sym[0])) /*64*/,
(env, sym, pos)=> ({type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*65*/,
(env, sym, pos)=> ({type:env.typ.IdentifierBinding,value:sym[0]}) /*66*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:"=",nodes:[sym[0],sym[2]],pos}) /*67*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*68*/,
(env, sym, pos)=> ({type:env.typ.ConditionalExpression,nodes:[sym[0],sym[2],sym[4]],pos}) /*69*/,
(env, sym, pos)=> ({type:env.typ.LogicalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*70*/,
(env, sym, pos)=> ({type:env.typ.BitwiseExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*71*/,
(env, sym, pos)=> ({type:env.typ.EqualityExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*72*/,
(env, sym, pos)=> ({type:env.typ.RelationalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*73*/,
(env, sym, pos)=> ({type:env.typ.InstanceOfExpression,nodes:[sym[0],sym[2]],pos}) /*74*/,
(env, sym, pos)=> ({type:env.typ.InExpression,nodes:[sym[0],sym[2]],pos}) /*75*/,
(env, sym, pos)=> ({type:env.typ.ShiftExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*76*/,
(env, sym, pos)=> ({type:env.typ.AdditiveExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*77*/,
(env, sym, pos)=> ({type:env.typ.MultiplicativeExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*78*/,
(env, sym, pos)=> ({type:env.typ.ExponentiationExpression,nodes:[sym[0],sym[2]],pos}) /*79*/,
(env, sym, pos)=> ({type:env.typ.DeleteExpression,nodes:[sym[1]],pos}) /*80*/,
(env, sym, pos)=> ({type:env.typ.VoidExpression,nodes:[sym[1]],pos}) /*81*/,
(env, sym, pos)=> ({type:env.typ.TypeofExpression,nodes:[sym[1]],pos}) /*82*/,
(env, sym, pos)=> ({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*83*/,
(env, sym, pos)=> ((sym[1].type==env.typ.NumericLiteral||sym[1].type==env.typ.BigIntLiteral)?(sym[1].NEGATIVE=true,sym[1]):({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos})) /*84*/,
(env, sym, pos)=> ({type:env.typ.PostExpression,symbol:sym[1],nodes:[sym[0]],pos}) /*85*/,
(env, sym, pos)=> ({type:env.typ.PreExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*86*/,
(env, sym, pos)=> ({type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:true}) /*87*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:false})) /*88*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:true}) /*89*/,
(env, sym, pos)=> ({type:env.typ.NewInstanceExpression,nodes:[sym[1],sym[2]],pos}) /*90*/,
(env, sym, pos)=> ({type:env.typ.NewExpression,nodes:[sym[1]],pos}) /*91*/,
(env, sym, pos)=> ({type:env.typ.ThisLiteral,pos}) /*92*/,
(env, sym, pos)=> env.functions.reinterpretParenthesized (env, sym, pos)/*93*/,
(env, sym, pos)=> ({type:env.typ.IdentifierReference,value:sym[0]}) /*94*/,
(env, sym, pos)=> ({type:env.typ.BooleanLiteral,value:sym[0],pos}) /*95*/,
(env, sym, pos)=> ({type:env.typ.NullLiteral,pos}) /*96*/,
(env, sym, pos)=> ({type:env.typ.NumericLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*97*/,
(env, sym, pos)=> ({type:env.typ.BigIntLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*98*/,
(env, sym, pos)=> (sym[0]+sym[1]+sym[2]) /*99*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[sym[1]],pos}) /*100*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:sym[1],pos}) /*101*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1],sym[3]],pos}) /*102*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[],pos}) /*103*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1]],pos}) /*104*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:0,pos}) /*105*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:sym[0].count+1,pos}) /*106*/,
(env, sym, pos)=> ([sym[0],sym[1]]) /*107*/,
(env, sym, pos)=> ([...sym[0],sym[2],sym[3]]) /*108*/,
(env, sym, pos)=> ([...sym[0],sym[2]]) /*109*/,
(env, sym, pos)=> ({type:env.typ.Spread,nodes:[sym[1]],pos}) /*110*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:[],pos}) /*111*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:sym[1],pos}) /*112*/,
(env, sym, pos)=> (sym[0].push(sym[2]),sym[0]) /*113*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,sym[0]) /*114*/,
(env, sym, pos)=> ({type:env.typ.PropertyBinding,nodes:[sym[0],sym[2]],pos}) /*115*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*116*/,
(env, sym, pos)=> ({type:env.typ.IdentifierName,value:sym[0],pos}) /*117*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*118*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1],sym[5]],pos}) /*119*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3],sym[6]],pos}) /*120*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],sym[6]],pos}) /*121*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*122*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*123*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*124*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1]],pos}) /*125*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3]],pos}) /*126*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],sym[5]],pos}) /*127*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,sym[5]],pos}) /*128*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],null],pos}) /*129*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*130*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*131*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*132*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,sym[4]],pos}) /*133*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],null],pos}) /*134*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,null],pos}) /*135*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*136*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,null],pos}) /*137*/,
(env, sym, pos)=> ({type:env.typ.ComputedProperty,nodes:[sym[1]],pos}) /*138*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[sym[0]],pos}) /*139*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:sym[0],pos}) /*140*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[...sym[0],sym[2]],pos}) /*141*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[],pos}) /*142*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[sym[1]],pos}) /*143*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1]],pos}) /*144*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1],sym[3]],pos}) /*145*/,
(env, sym, pos)=> (sym[1]?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}:sym[0]) /*146*/,
(env, sym, pos)=> (null?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0]],pos}:sym[0]) /*147*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1],sym[2]],pos}) /*148*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1]],pos}) /*149*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3],sym[4]],pos}) /*150*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1]],pos}) /*151*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3]],pos}) /*152*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[],pos}) /*153*/,
(env, sym, pos)=> ([...sym[0],...sym[2]]) /*154*/,
(env, sym, pos)=> ({type:env.typ.FunctionBody,nodes:sym[0]||[],pos}) /*155*/,
(env, sym, pos)=> ([...sym[0],sym[1]]) /*156*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:sym[1]||[],pos}) /*157*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:null||[],pos}) /*158*/,
(env, sym, pos)=> ({type:env.typ.ExpressionStatement,nodes:[sym[0]],pos}) /*159*/,
(env, sym, pos)=> ((sym[0].type==env.typ.ExpressionList?(sym[0].nodes.push(sym[2]),sym[0]):{type:env.typ.ExpressionList,nodes:[sym[0],sym[2]],pos})) /*160*/,
(env, sym, pos)=> ({type:env.typ.LabeledStatement,nodes:[sym[0],sym[2]],pos}) /*161*/,
(env, sym, pos)=> ({type:env.typ.IdentifierLabel,value:sym[0]}) /*162*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos}) /*163*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*164*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos}) /*165*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],sym[7]],pos}) /*166*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos}) /*167*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*168*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],sym[6]],pos}) /*169*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*170*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],sym[6]],pos}) /*171*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos}) /*172*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,sym[6]],pos}) /*173*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],sym[5]],pos}) /*174*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*175*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,sym[5]],pos}) /*176*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,sym[5]],pos}) /*177*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,sym[4]],pos}) /*178*/,
(env, sym, pos)=> ({type:env.typ.EmptyStatement,pos}) /*179*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*180*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],null],pos}) /*181*/,
(env, sym, pos)=> ({type:env.typ.DoStatement,nodes:[sym[1],sym[4]],pos}) /*182*/,
(env, sym, pos)=> ({type:env.typ.WhileStatement,nodes:[sym[2],sym[4]],pos}) /*183*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],sym[6],sym[8]],LEX:false,pos}) /*184*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],sym[5],sym[7]],LEX:true,pos}) /*185*/,
(env, sym, pos)=> ({type:env.typ.ForInStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*186*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[3],sym[5],sym[7]],pos,AWAIT:!!sym[1]}) /*187*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],sym[5],sym[7]],LEX:false,pos}) /*188*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[5],sym[7]],LEX:false,pos}) /*189*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],null,sym[7]],LEX:false,pos}) /*190*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[4],sym[6]],LEX:true,pos}) /*191*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],null,sym[6]],LEX:true,pos}) /*192*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[2],sym[4],sym[6]],pos,AWAIT:!!null}) /*193*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,sym[4],sym[6]],LEX:false,pos}) /*194*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],null,sym[6]],LEX:false,pos}) /*195*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[6]],LEX:false,pos}) /*196*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[5]],LEX:true,pos}) /*197*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,null,sym[5]],LEX:false,pos}) /*198*/,
(env, sym, pos)=> ({type:env.typ.LexicalDeclaration,symbol:sym[0],nodes:sym[1],pos}) /*199*/,
(env, sym, pos)=> ("let") /*200*/,
(env, sym, pos)=> ("const") /*201*/,
(env, sym, pos)=> ({type:env.typ.LexicalBinding,nodes:[sym[1]],symbol:sym[0],pos}) /*202*/,
(env, sym, pos)=> ({type:env.typ.SwitchStatement,nodes:[sym[2],sym[4]],pos}) /*203*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2],...sym[3]],pos}) /*204*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1],...sym[2]],pos}) /*205*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],...sym[2]],pos}) /*206*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2]],pos}) /*207*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1]],pos}) /*208*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1]],pos}) /*209*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[],pos}) /*210*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1],...sym[3]],pos}) /*211*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1]],pos}) /*212*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[...sym[2]],pos}) /*213*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[],pos}) /*214*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:sym[1]?[sym[1]]:[],pos}) /*215*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:null?[null]:[],pos}) /*216*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[sym[1]],pos}) /*217*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[null],pos}) /*218*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[sym[1]],pos}) /*219*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[],pos}) /*220*/,
(env, sym, pos)=> ({type:env.typ.WithStatement,nodes:[sym[2],sym[4]],pos}) /*221*/,
(env, sym, pos)=> ({type:env.typ.ThrowStatement,nodes:[sym[1]],pos}) /*222*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],null],pos}) /*223*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],null,sym[2]],pos}) /*224*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],sym[3]],pos}) /*225*/,
(env, sym, pos)=> ({type:env.typ.CatchClause,nodes:[sym[2],sym[4]],pos}) /*226*/,
(env, sym, pos)=> ({type:env.typ.FinallyClause,nodes:[sym[1]],pos}) /*227*/,
(env, sym, pos)=> ({type:env.typ.DebuggerStatement,pos}) /*228*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2],...sym[4]],pos}) /*229*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1],...sym[3]],pos}) /*230*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null,...sym[3]],pos}) /*231*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2]],pos}) /*232*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null,...sym[2]],pos}) /*233*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1]],pos}) /*234*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null],pos}) /*235*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null],pos}) /*236*/,
(env, sym, pos)=> (sym[0].concat(sym[1])) /*237*/,
(env, sym, pos)=> ([]) /*238*/,
(env, sym, pos)=> ((sym[1].STATIC=true,sym[1])) /*239*/,
(env, sym, pos)=> ((sym[0].type=env.typ.FunctionExpression,sym[0])) /*240*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],flags:sym[3],pos}) /*241*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,flags:sym[2],pos}) /*242*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],pos}) /*243*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,pos}) /*244*/,
(env, sym, pos)=> ({type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,value:sym[1],pos}],NO_SUBSTITUTE:true,pos}) /*245*/,
(env, sym, pos)=> (sym[2].unshift(sym[0],sym[1]),{type:env.typ.Template,nodes:sym[2],pos}) /*246*/,
(env, sym, pos)=> ({type:env.typ.TemplateHead,value:sym[1],pos}) /*247*/,
(env, sym, pos)=> (sym[0].push(sym[1]),sym[0]) /*248*/,
(env, sym, pos)=> ({type:env.typ.TemplateTail,value:sym[1],pos}) /*249*/,
(env, sym, pos)=> (sym[0].push(sym[1],sym[2]),sym[0]) /*250*/,
(env, sym, pos)=> ({type:env.typ.TemplateMiddle,value:sym[1],pos}) /*251*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1]],pos}) /*252*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:false})) /*253*/,
(env, sym, pos)=> ({type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:true}) /*254*/,
(env, sym, pos)=> ({type:env.typ.NewTarget,pos}) /*255*/,
(env, sym, pos)=> ({type:env.typ.ImportMeta,pos}) /*256*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:sym[1]||[],pos}) /*257*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:null||[],pos}) /*258*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:false}) /*259*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[2]],pos,TEMPLATE:true}) /*260*/,
(env, sym, pos)=> ({type:env.typ.SuperCall,nodes:[sym[1]],pos}) /*261*/,
(env, sym, pos)=> ({type:env.typ.ImportCall,nodes:[sym[2]],pos}) /*262*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos}) /*263*/,
(env, sym, pos)=> ({type:env.typ.OptionalMemberExpression,nodes:[sym[0],sym[1].type=="computed"?sym[1].val:sym[1]],pos,COMPUTED:sym[1].type=="computed"}) /*264*/,
(env, sym, pos)=> ({type:"computed",val:sym[2]}) /*265*/,
(env, sym, pos)=> ({type:env.typ.AwaitExpression,nodes:[sym[1]],pos}) /*266*/,
(env, sym, pos)=> ({type:env.typ.CoalesceExpression,nodes:[sym[0],sym[2]],pos}) /*267*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[],pos}) /*268*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[2]],pos,GENERATOR:!!sym[1]}) /*269*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[1]],pos,GENERATOR:!!null}) /*270*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!sym[0],nodes:[sym[1],sym[3]],pos}) /*271*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!null,nodes:[sym[0],sym[2]],pos}) /*272*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierBinding,sym[0]) /*273*/,
(env, sym, pos)=> env.functions.reinterpretArrowParameters (env, sym, pos)/*274*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[],pos}) /*275*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1],sym[3]],pos}) /*276*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:sym[1],pos}) /*277*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:sym[0],nodes:sym[1],pos}) /*278*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:null,nodes:sym[0],pos}) /*279*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:sym[0],nodes:null,pos}) /*280*/,
(env, sym, pos)=> ({type:env.typ.Stylesheet,imports:null,nodes:null,pos}) /*281*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],sym[2],...(sym[3]||[])],pos}) /*282*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],null,...(sym[2]||[])],pos}) /*283*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],sym[2],...(null||[])],pos}) /*284*/,
(env, sym, pos)=> ({import:"@import",type:env.typ.Import,nodes:[sym[1],null,...(null||[])],pos}) /*285*/,
(env, sym, pos)=> (new env.fn.url(sym[2])) /*286*/,
(env, sym, pos)=> ([{type:env.typ.Not,nodes:[sym[1]],pos}]) /*287*/,
(env, sym, pos)=> ([sym[0],...sym[1]]) /*288*/,
(env, sym, pos)=> ({type:env.typ.Parenthesis,nodes:[sym[1]],pos}) /*289*/,
(env, sym, pos)=> ({type:env.typ.Function,nodes:[sym[2]],pos}) /*290*/,
(env, sym, pos)=> ((sym[0]&&sym[1])?{type:env.typ.ComplexSelector,nodes:[sym[0],...((sym[1]).flat(2))],pos}:sym[0]) /*291*/,
(env, sym, pos)=> ((sym[0]&&null)?{type:env.typ.ComplexSelector,nodes:[sym[0]],pos}:sym[0]) /*292*/,
(env, sym, pos)=> ((sym[0]&&!(sym[1]||sym[2]))?sym[0]:(sym[1]&&sym[1].length==1&&!(sym[0]||sym[2]))?sym[1][0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1],...sym[2]],pos}) /*293*/,
(env, sym, pos)=> ((null&&!(sym[0]||sym[1]))?null:(sym[0]&&sym[0].length==1&&!(null||sym[1]))?sym[0][0]:{type:env.typ.CompoundSelector,nodes:[...sym[0],...sym[1]],pos}) /*294*/,
(env, sym, pos)=> ((sym[0]&&!(null||sym[1]))?sym[0]:(null&&null.length==1&&!(sym[0]||sym[1]))?null[0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1]],pos}) /*295*/,
(env, sym, pos)=> ((sym[0]&&!(sym[1]||null))?sym[0]:(sym[1]&&sym[1].length==1&&!(sym[0]||null))?sym[1][0]:{type:env.typ.CompoundSelector,nodes:[sym[0],...sym[1]],pos}) /*296*/,
(env, sym, pos)=> ((null&&!(null||sym[0]))?null:(null&&null.length==1&&!(null||sym[0]))?null[0]:{type:env.typ.CompoundSelector,nodes:[...sym[0]],pos}) /*297*/,
(env, sym, pos)=> ((null&&!(sym[0]||null))?null:(sym[0]&&sym[0].length==1&&!(null||null))?sym[0][0]:{type:env.typ.CompoundSelector,nodes:[...sym[0]],pos}) /*298*/,
(env, sym, pos)=> ((sym[0]&&!(null||null))?sym[0]:(null&&null.length==1&&!(sym[0]||null))?null[0]:{type:env.typ.CompoundSelector,nodes:[sym[0]],pos}) /*299*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[sym[0]],pos,precedence:env.typ.D_SPECIFIER}) /*300*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[{type:env.typ.QualifiedName,ns:sym[0]||"",val:"*",pos,precedence:0}],pos}) /*301*/,
(env, sym, pos)=> ({type:env.typ.TypeSelector,nodes:[{type:env.typ.QualifiedName,ns:"",val:"*",pos,precedence:0}],pos}) /*302*/,
(env, sym, pos)=> ({type:env.typ.QualifiedName,ns:sym[0]||"",val:sym[1],pos}) /*303*/,
(env, sym, pos)=> ({type:env.typ.QualifiedName,ns:"",val:sym[0],pos}) /*304*/,
(env, sym, pos)=> ({type:env.typ.IdSelector,val:sym[1],pos,precedence:env.typ.B_SPECIFIER}) /*305*/,
(env, sym, pos)=> ({type:env.typ.ClassSelector,val:sym[1],pos,precedence:env.typ.C_SPECIFIER}) /*306*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],pos,precedence:env.typ.C_SPECIFIER}) /*307*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],match_type:sym[2],match_val:sym[3],mod:sym[4],pos,precedence:env.typ.C_SPECIFIER}) /*308*/,
(env, sym, pos)=> ({type:env.typ.AttributeSelector,nodes:[sym[1]],match_type:sym[2],match_val:sym[3],pos,precedence:env.typ.C_SPECIFIER}) /*309*/,
(env, sym, pos)=> ({type:env.typ.PseudoClassSelector,id:sym[1],val:sym[2],pos,precedence:env.typ.C_SPECIFIER}) /*310*/,
(env, sym, pos)=> (sym[1].type=env.typ.PseudoElementSelector,sym[1].precedence=env.typ.D_SPECIFIER,sym[1]) /*311*/,
(env, sym, pos)=> env.functions.parseDeclaration (env, sym, pos)/*312*/,
(env, sym, pos)=> ({type:env.typ.MediaFunction,nodes:[sym[2]],pos}) /*313*/,
(env, sym, pos)=> ({type:env.typ.MediaFunction,nodes:[],pos}) /*314*/,
(env, sym, pos)=> ({type:env.typ.Query,nodes:[sym[0]],pos}) /*315*/,
(env, sym, pos)=> ({type:env.typ.Query,condition:sym[0],nodes:[sym[1],sym[2]],pos}) /*316*/,
(env, sym, pos)=> ({type:env.typ.Query,nodes:[sym[0],sym[1]],pos}) /*317*/,
(env, sym, pos)=> ({type:env.typ.Query,condition:sym[0],nodes:[sym[1]],pos}) /*318*/,
(env, sym, pos)=> ({type:env.typ.Not,nodes:[sym[1]],pos}) /*319*/,
(env, sym, pos)=> ({type:env.typ.MediaFeature,nodes:[sym[1]],pos}) /*320*/,
(env, sym, pos)=> ({type:env.typ.MediaValue,key:sym[0],val:sym[2],pos}) /*321*/,
(env, sym, pos)=> (new env.fn.length(sym[0]+sym[1])) /*322*/,
(env, sym, pos)=> ({type:"ratio",num:sym[0],den:sym[2]}) /*323*/,
(env, sym, pos)=> ({type:env.typ.Boolean,val:true,pos}) /*324*/,
(env, sym, pos)=> ({type:env.typ.Boolean,val:false,pos}) /*325*/,
(env, sym, pos)=> ({type:env.typ.MediaEquality,sym:sym[1],left:sym[0],right:sym[2],pos}) /*326*/,
(env, sym, pos)=> ({type:env.typ.MediaRangeDescending,sym:sym[1],max:sym[0],id:sym[2],min:sym[4],pos}) /*327*/,
(env, sym, pos)=> ({type:env.typ.MediaRangeAscending,sym:sym[1],min:sym[0],id:sym[2],max:sym[4],pos}) /*328*/,
(env, sym, pos)=> ({type:env.typ.MediaType,val:sym[0],pos}) /*329*/,
(env, sym, pos)=> ({type:env.typ.Rule,selectors:sym[0],props:new Map((sym[2]||[]).map(s=>[s.name,s])),pos,precedence:0}) /*330*/,
(env, sym, pos)=> ({type:env.typ.Rule,selectors:sym[0],props:new Map((null||[]).map(s=>[s.name,s])),pos,precedence:0}) /*331*/,
(env, sym, pos)=> ([sym[1]]) /*332*/,
(env, sym, pos)=> (sym[1]?sym[0].concat(sym[1]):sym[0]) /*333*/,
(env, sym, pos)=> ({media:"@media",type:env.typ.Media,nodes:[sym[1],...sym[3]],pos}) /*334*/,
(env, sym, pos)=> ({media:"@media",type:env.typ.Media,nodes:[sym[1]],pos}) /*335*/,
(env, sym, pos)=> ({queries:true,type:env.typ.MediaQueries,nodes:sym[0],pos}) /*336*/,
(env, sym, pos)=> ({keyframes:"@keyframes",type:env.typ.Keyframes,name:sym[1],nodes:[sym[3]],pos}) /*337*/,
(env, sym, pos)=> ({type:env.typ.KeyframeBlock,nodes:[{type:env.type.KeyframeSelectors,nodes:sym[0],pos},sym[2]],pos}) /*338*/,
(env, sym, pos)=> ({type:env.typ.KeyframeSelector,val:sym[0],pos}) /*339*/,
(env, sym, pos)=> (new env.fn.percentage(sym[0]+sym[1])) /*340*/,
(env, sym, pos)=> ({type:env.typ.Supports,nodes:[sym[1],sym[2]],pos}) /*341*/,
(env, sym, pos)=> ({type:env.typ.Script,nodes:sym[0],pos}) /*342*/,
(env, sym, pos)=> (null) /*343*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:sym[1],pos}) /*344*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:[sym[1]],pos}) /*345*/,
(env, sym, pos)=> (new env.fn.url(sym[0])) /*346*/,
(env, sym, pos)=> (sym[2]) /*347*/,
(env, sym, pos)=> ({type:env.typ.And,nodes:[sym[1]],pos}) /*348*/,
(env, sym, pos)=> (sym[1]||null) /*349*/,
(env, sym, pos)=> (null||null) /*350*/,
(env, sym, pos)=> ({type:env.typ.SupportConditions,nodes:sym[0],pos}) /*351*/,
(env, sym, pos)=> ({type:env.typ.Or,nodes:[sym[1]],pos}) /*352*/,
(env, sym, pos)=> ({type:env.typ.PseudoSelector,nodes:[sym[0],...sym[1]],pos}) /*353*/,
(env, sym, pos)=> ({type:env.typ.PseudoSelector,nodes:[sym[0]],pos}) /*354*/,
(env, sym, pos)=> ({type:env.typ.Combinator,val:sym[0]}) /*355*/];

    export default ParserFactory
        (reduce_functions, undefined, recognizer_initializer, {COMPONENT:0,html__TAG:1,javascript__expression:2,css__STYLE_SHEET:3,css__COMPLEX_SELECTOR:4});